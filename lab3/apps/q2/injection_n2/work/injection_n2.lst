 line   address	contents
    1                      ; Linked by DLX-LD.
    2                      ; MemSize 24576
    3                      ; Data size: 222
    4                      ; Text size: 4492
    5                      ; Stack size: 8192
    6  00000000          	.text 0x1000
    7  00001000          	.data 0x3000
    8                      ; Compiled by GCC
    9  00003000          	.text
   10  00001000          	.align 2
   11  00001000          	.proc _isspace
   12  00001000          	.global _isspace
   13  00001000          	_isspace:
   14                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
   15  00001000  afbefffc	sw	-4(r29),r30; push fp
   16  00001004  001df020	add	r30,r0,r29; fp = sp
   17  00001008  afbffff8	sw	-8(r29),r31; push ret addr
   18  0000100c  2fbd0010	subui	r29,r29,#16; alloc local storage
   19  00001010  afa20000	sw	0(r29),r2
   20  00001014  83c20003	lb	r2,3(r30)
   21  00001018  201f0000	addi	r31,r0,#0
   22  0000101c  304100ff	andi	r1,r2,#0x00ff
   23  00001020  60210020	seqi	r1,r1,#32
   24  00001024  14200018	bnez	r1,L6_LF0
   25  00001028  54000000	nop; not filled.
   26  0000102c  2041fff7	addi	r1,r2,#-9
   27  00001030  302100ff	andi	r1,r1,#0x00ff
   28  00001034  70210001	sleui	r1,r1,#1
   29  00001038  10200008	beqz	r1,L5_LF0
   30  0000103c  54000000	nop; not filled.
   31  00001040          	L6_LF0:
   32  00001040  201f0001	addi	r31,r0,#1
   33  00001044          	L5_LF0:
   34  00001044  001f0820	add	r1,r0,r31
   35  00001048  8fa20000	lw	r2,0(r29)
   36  0000104c  8fdffff8	lw	r31,-8(r30)
   37  00001050  001ee820	add	r29,r0,r30
   38  00001054  8fdefffc	lw	r30,-4(r30)
   39  00001058  4be00000	jr	r31
   40  0000105c  54000000	nop
   41  00001060          	.endproc _isspace
   42  00001060          	.align 2
   43  00001060          	.proc _isxdigit
   44  00001060          	.global _isxdigit
   45  00001060          	_isxdigit:
   46                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
   47  00001060  afbefffc	sw	-4(r29),r30; push fp
   48  00001064  001df020	add	r30,r0,r29; fp = sp
   49  00001068  afbffff8	sw	-8(r29),r31; push ret addr
   50  0000106c  2fbd0010	subui	r29,r29,#16; alloc local storage
   51  00001070  afa20000	sw	0(r29),r2
   52  00001074  83df0003	lb	r31,3(r30)
   53  00001078  20020000	addi	r2,r0,#0
   54  0000107c  23e1ffd0	addi	r1,r31,#-48
   55  00001080  302100ff	andi	r1,r1,#0x00ff
   56  00001084  70210009	sleui	r1,r1,#9
   57  00001088  14200028	bnez	r1,L12_LF0
   58  0000108c  54000000	nop; not filled.
   59  00001090  23e1ff9f	addi	r1,r31,#-97
   60  00001094  302100ff	andi	r1,r1,#0x00ff
   61  00001098  70210005	sleui	r1,r1,#5
   62  0000109c  14200014	bnez	r1,L12_LF0
   63  000010a0  54000000	nop; not filled.
   64  000010a4  33e100ff	andi	r1,r31,#0x00ff
   65  000010a8  64210041	snei	r1,r1,#65
   66  000010ac  14200008	bnez	r1,L11_LF0
   67  000010b0  54000000	nop; not filled.
   68  000010b4          	L12_LF0:
   69  000010b4  20020001	addi	r2,r0,#1
   70  000010b8          	L11_LF0:
   71  000010b8  00020820	add	r1,r0,r2
   72  000010bc  8fa20000	lw	r2,0(r29)
   73  000010c0  8fdffff8	lw	r31,-8(r30)
   74  000010c4  001ee820	add	r29,r0,r30
   75  000010c8  8fdefffc	lw	r30,-4(r30)
   76  000010cc  4be00000	jr	r31
   77  000010d0  54000000	nop
   78  000010d4          	.endproc _isxdigit
   79  000010d4          	.data
   80  00003000          	.align 2
   81  00003000          	LC0_LF0:
   82  00003000  55736167	.ascii "Usage: %s <handle_to_mailbox> <handle_to_page_mapped_semaphore>\n\000"
   82  00003004  653a2025	
   82  00003008  73203c68	
   82  0000300c  616e646c	
   82  00003010  655f746f	
   82  00003014  5f6d6169	
   82  00003018  6c626f78	
   82  0000301c  3e203c68	
   82  00003020  616e646c	
   82  00003024  655f746f	
   82  00003028  5f706167	
   82  0000302c  655f6d61	
   82  00003030  70706564	
   82  00003034  5f73656d	
   82  00003038  6170686f	
   82  0000303c  72653e0a	
   82  00003040  00      	
   83  00003041          	.align 2
   84  00003044          	LC1_LF0:
   85  00003044  73706177	.ascii "spawn_me (%d): Could not open the mbox_N2!\n\000"
   85  00003048  6e5f6d65	
   85  0000304c  20282564	
   85  00003050  293a2043	
   85  00003054  6f756c64	
   85  00003058  206e6f74	
   85  0000305c  206f7065	
   85  00003060  6e207468	
   85  00003064  65206d62	
   85  00003068  6f785f4e	
   85  0000306c  32210a00	
   86  00003070          	.align 2
   87  00003070          	LC2_LF0:
   88  00003070  436f756c	.ascii "Could not send message to mailbox_N2\n\000"
   88  00003074  64206e6f	
   88  00003078  74207365	
   88  0000307c  6e64206d	
   88  00003080  65737361	
   88  00003084  67652074	
   88  00003088  6f206d61	
   88  0000308c  696c626f	
   88  00003090  785f4e32	
   88  00003094  0a00    	
   89  00003096          	.align 2
   90  00003098          	LC3_LF0:
   91  00003098  43726561	.ascii "Create 1 N2\n\000"
   91  0000309c  74652031	
   91  000030a0  204e320a	
   91  000030a4  00      	
   92  000030a5          	.align 2
   93  000030a8          	LC4_LF0:
   94  000030a8  73706177	.ascii "spawn_me (%d): Bad semaphore s_procs_completed (%d)!\n\000"
   94  000030ac  6e5f6d65	
   94  000030b0  20282564	
   94  000030b4  293a2042	
   94  000030b8  61642073	
   94  000030bc  656d6170	
   94  000030c0  686f7265	
   94  000030c4  20735f70	
   94  000030c8  726f6373	
   94  000030cc  5f636f6d	
   94  000030d0  706c6574	
   94  000030d4  65642028	
   94  000030d8  25642921	
   94  000030dc  0a00    	
   95  000030de          	.text
   96  000010d4          	.align 2
   97  000010d4          	.proc _main
   98  000010d4          	.global _main
   99  000010d4          	_main:
  100                      ;  Function 'main'; 8 bytes of locals, 0 regs to save.
  101  000010d4  afbefffc	sw	-4(r29),r30; push fp
  102  000010d8  001df020	add	r30,r0,r29; fp = sp
  103  000010dc  afbffff8	sw	-8(r29),r31; push ret addr
  104  000010e0  2fbd0010	subui	r29,r29,#16; alloc local storage
  105  000010e4  8fc20000	lw	r2,(r30)
  106  000010e8  8fc30004	lw	r3,4(r30)
  107  000010ec  0c001094	jal	___main
  108  000010f0  54000000	nop; not filled.
  109  000010f4  64410003	snei	r1,r2,#3
  110  000010f8  10200028	beqz	r1,L14_LF0
  111  000010fc  54000000	nop; not filled.
  112  00001100  23bdfff8	addi	r29,r29,#-8
  113  00001104  3c040000	lhi	r4,((LC0_LF0)>>16)&0xffff
  114  00001108  24843000	addui	r4,r4,(LC0_LF0)&0xffff
  115  0000110c  afa40000	sw	(r29),r4
  116  00001110  0c0001c0	jal	_Printf
  117  00001114  54000000	nop; not filled.
  118  00001118  0c0002c0	jal	_Exit
  119  0000111c  54000000	nop; not filled.
  120  00001120  23bd0008	addi	r29,r29,#8
  121  00001124          	L14_LF0:
  122  00001124  23bdfff0	addi	r29,r29,#-16
  123  00001128  8c640004	lw	r4,4(r3)
  124  0000112c  afa40000	sw	(r29),r4
  125  00001130  20040000	addi	r4,r0,#0
  126  00001134  afa40004	sw	4(r29),r4
  127  00001138  2004000a	addi	r4,r0,#10
  128  0000113c  afa40008	sw	8(r29),r4
  129  00001140  0c000b44	jal	_dstrtol
  130  00001144  54000000	nop; not filled.
  131  00001148  00011020	add	r2,r0,r1
  132  0000114c  8c630008	lw	r3,8(r3)
  133  00001150  afa30000	sw	(r29),r3
  134  00001154  20040000	addi	r4,r0,#0
  135  00001158  afa40004	sw	4(r29),r4
  136  0000115c  2004000a	addi	r4,r0,#10
  137  00001160  afa40008	sw	8(r29),r4
  138  00001164  0c000b20	jal	_dstrtol
  139  00001168  54000000	nop; not filled.
  140  0000116c  00011820	add	r3,r0,r1
  141  00001170  afa20000	sw	(r29),r2
  142  00001174  0c00021c	jal	_mbox_open
  143  00001178  54000000	nop; not filled.
  144  0000117c  23bd0010	addi	r29,r29,#16
  145  00001180  6021ffff	seqi	r1,r1,#-1
  146  00001184  10200034	beqz	r1,L15_LF0
  147  00001188  54000000	nop; not filled.
  148  0000118c  0c000150	jal	_getpid
  149  00001190  54000000	nop; not filled.
  150  00001194  23bdfff8	addi	r29,r29,#-8
  151  00001198  3c040000	lhi	r4,((LC1_LF0)>>16)&0xffff
  152  0000119c  24843044	addui	r4,r4,(LC1_LF0)&0xffff
  153  000011a0  afa40000	sw	(r29),r4
  154  000011a4  afa10004	sw	4(r29),r1
  155  000011a8  0c000128	jal	_Printf
  156  000011ac  54000000	nop; not filled.
  157  000011b0  0c000228	jal	_Exit
  158  000011b4  54000000	nop; not filled.
  159  000011b8  23bd0008	addi	r29,r29,#8
  160  000011bc          	L15_LF0:
  161  000011bc  23bdfff0	addi	r29,r29,#-16
  162  000011c0  afa20000	sw	(r29),r2
  163  000011c4  20040008	addi	r4,r0,#8
  164  000011c8  afa40004	sw	4(r29),r4
  165  000011cc  23c1fff0	addi	r1,r30,#-16
  166  000011d0  afa10008	sw	8(r29),r1
  167  000011d4  0c0001d4	jal	_mbox_send
  168  000011d8  54000000	nop; not filled.
  169  000011dc  23bd0010	addi	r29,r29,#16
  170  000011e0  6021ffff	seqi	r1,r1,#-1
  171  000011e4  1020002c	beqz	r1,L16_LF0
  172  000011e8  54000000	nop; not filled.
  173  000011ec  23bdfff8	addi	r29,r29,#-8
  174  000011f0  3c040000	lhi	r4,((LC2_LF0)>>16)&0xffff
  175  000011f4  24843070	addui	r4,r4,(LC2_LF0)&0xffff
  176  000011f8  afa40000	sw	(r29),r4
  177  000011fc  0c0000d4	jal	_Printf
  178  00001200  54000000	nop; not filled.
  179  00001204  0c0001d4	jal	_Exit
  180  00001208  54000000	nop; not filled.
  181  0000120c  0800001c	j	L19_LF0
  182  00001210  54000000	nop; not filled.
  183  00001214          	L16_LF0:
  184  00001214  23bdfff8	addi	r29,r29,#-8
  185  00001218  3c040000	lhi	r4,((LC3_LF0)>>16)&0xffff
  186  0000121c  24843098	addui	r4,r4,(LC3_LF0)&0xffff
  187  00001220  afa40000	sw	(r29),r4
  188  00001224  0c0000ac	jal	_Printf
  189  00001228  54000000	nop; not filled.
  190  0000122c          	L19_LF0:
  191  0000122c  23bd0008	addi	r29,r29,#8
  192  00001230  23bdfff8	addi	r29,r29,#-8
  193  00001234  afa30000	sw	(r29),r3
  194  00001238  0c0000ec	jal	_sem_signal
  195  0000123c  54000000	nop; not filled.
  196  00001240  23bd0008	addi	r29,r29,#8
  197  00001244  64210001	snei	r1,r1,#1
  198  00001248  10200038	beqz	r1,L18_LF0
  199  0000124c  54000000	nop; not filled.
  200  00001250  0c00008c	jal	_getpid
  201  00001254  54000000	nop; not filled.
  202  00001258  23bdfff0	addi	r29,r29,#-16
  203  0000125c  3c040000	lhi	r4,((LC4_LF0)>>16)&0xffff
  204  00001260  248430a8	addui	r4,r4,(LC4_LF0)&0xffff
  205  00001264  afa40000	sw	(r29),r4
  206  00001268  afa10004	sw	4(r29),r1
  207  0000126c  afa30008	sw	8(r29),r3
  208  00001270  0c000060	jal	_Printf
  209  00001274  54000000	nop; not filled.
  210  00001278  0c000160	jal	_Exit
  211  0000127c  54000000	nop; not filled.
  212  00001280  23bd0010	addi	r29,r29,#16
  213  00001284          	L18_LF0:
  214  00001284  0c000ef0	jal	_exit
  215  00001288  54000000	nop
  216  0000128c          	.endproc _main
  217                      ;;;
  218                      ;;; Stub functions for DLX traps.
  219                      ;;;
  220                      ;;; Ethan L. Miller, 1999.  Released to the public domain.
  221                      ;;;
  222                      ;;; The traps such as Open and Close
  223                      ;;; (note the capital letters) are for use by user programs.  The traps
  224                      ;;; with names such as open and close (lower case) are for use by the OS.
  225                      ;;;
  228  0000128c          	.align 2
  230                      ;;; The following are the traps to be used by user-level programs
  231                      ;;;
  233  0000128c          	.align 2
  234  0000128c          	.proc _Open
  235  0000128c          	.global _Open
  236  0000128c          	_Open:
  237                      ;;; Note that trap #0x213 actually causes a trap vector in the OS of
  238                      ;;; 0x1213.  The same is true for other user traps.  Thus, a user trap
  239                      ;;; with trap #0x240 will result in a trap vector of 0x1240 in the OS.
  240  0000128c  44000213	trap	#0x213
  241  00001290  4be00000	jr	r31
  242  00001294  54000000	nop
  243  00001298          	.endproc _Open
  245  00001298          	.proc _Close
  246  00001298          	.global _Close
  247  00001298          	_Close:
  248  00001298  44000214	trap	#0x214
  249  0000129c  4be00000	jr	r31
  250  000012a0  54000000	nop
  251  000012a4          	.endproc _Close
  253  000012a4          	.proc _Read
  254  000012a4          	.global _Read
  255  000012a4          	_Read:
  256  000012a4  44000210	trap	#0x210
  257  000012a8  4be00000	jr	r31
  258  000012ac  54000000	nop
  259  000012b0          	.endproc _Read
  261  000012b0          	.proc _Write
  262  000012b0          	.global _Write
  263  000012b0          	_Write:
  264  000012b0  44000211	trap	#0x211
  265  000012b4  4be00000	jr	r31
  266  000012b8  54000000	nop
  267  000012bc          	.endproc _Write
  269  000012bc          	.proc _Lseek
  270  000012bc          	.global _Lseek
  271  000012bc          	_Lseek:
  272  000012bc  44000212	trap	#0x212
  273  000012c0  4be00000	jr	r31
  274  000012c4  54000000	nop
  275  000012c8          	.endproc _Lseek
  277  000012c8          	.proc _Putchar
  278  000012c8          	.global _Putchar
  279  000012c8          	_Putchar:
  280  000012c8  44000280	trap	#0x280
  281  000012cc  4be00000	jr	r31
  282  000012d0  54000000	nop
  283  000012d4          	.endproc _Putchar
  285  000012d4          	.proc _Printf
  286  000012d4          	.global _Printf
  287  000012d4          	_Printf:
  288  000012d4  44000201	trap	#0x201
  289  000012d8  4be00000	jr	r31
  290  000012dc  54000000	nop
  291  000012e0          	.endproc _Printf
  293  000012e0          	.proc _getpid
  294  000012e0          	.global _getpid
  295  000012e0          	_getpid:
  296  000012e0  44000431	trap	#0x431
  297  000012e4  4be00000	jr	r31
  298  000012e8  54000000	nop
  299  000012ec          	.endproc _getpid
  301  000012ec          	.proc _process_create
  302  000012ec          	.global _process_create
  303  000012ec          	_process_create:
  304  000012ec  44000432	trap	#0x432
  305  000012f0  4be00000	jr	r31
  306  000012f4  54000000	nop
  307  000012f8          	.endproc _process_create
  309  000012f8          	.proc _shmget
  310  000012f8          	.global _shmget
  311  000012f8          	_shmget:
  312  000012f8  44000440	trap	#0x440
  313  000012fc  4be00000	jr	r31
  314  00001300  54000000	nop
  315  00001304          	.endproc _shmget
  317  00001304          	.proc _shmat
  318  00001304          	.global _shmat
  319  00001304          	_shmat:
  320  00001304  44000441	trap	#0x441
  321  00001308  4be00000	jr	r31
  322  0000130c  54000000	nop
  323  00001310          	.endproc _shmat
  325  00001310          	.proc _sem_create
  326  00001310          	.global _sem_create
  327  00001310          	_sem_create:
  328  00001310  44000450	trap	#0x450
  329  00001314  4be00000	jr	r31
  330  00001318  54000000	nop
  331  0000131c          	.endproc _sem_create
  333  0000131c          	.proc _sem_wait
  334  0000131c          	.global _sem_wait
  335  0000131c          	_sem_wait:
  336  0000131c  44000451	trap	#0x451
  337  00001320  4be00000	jr	r31
  338  00001324  54000000	nop
  339  00001328          	.endproc _sem_wait
  341  00001328          	.proc _sem_signal
  342  00001328          	.global _sem_signal
  343  00001328          	_sem_signal:
  344  00001328  44000452	trap	#0x452
  345  0000132c  4be00000	jr	r31
  346  00001330  54000000	nop
  347  00001334          	.endproc _sem_signal
  349  00001334          	.proc _lock_create
  350  00001334          	.global _lock_create
  351  00001334          	_lock_create:
  352  00001334  44000453	trap	#0x453
  353  00001338  4be00000	jr	r31
  354  0000133c  54000000	nop
  355  00001340          	.endproc _lock_create
  357  00001340          	.proc _lock_acquire
  358  00001340          	.global _lock_acquire
  359  00001340          	_lock_acquire:
  360  00001340  44000454	trap	#0x454
  361  00001344  4be00000	jr	r31
  362  00001348  54000000	nop
  363  0000134c          	.endproc _lock_acquire
  365  0000134c          	.proc _lock_release
  366  0000134c          	.global _lock_release
  367  0000134c          	_lock_release:
  368  0000134c  44000455	trap	#0x455
  369  00001350  4be00000	jr	r31
  370  00001354  54000000	nop
  371  00001358          	.endproc _lock_release
  373  00001358          	.proc _cond_create
  374  00001358          	.global _cond_create
  375  00001358          	_cond_create:
  376  00001358  44000456	trap	#0x456
  377  0000135c  4be00000	jr	r31
  378  00001360  54000000	nop
  379  00001364          	.endproc _cond_create
  381  00001364          	.proc _cond_wait
  382  00001364          	.global _cond_wait
  383  00001364          	_cond_wait:
  384  00001364  44000457	trap	#0x457
  385  00001368  4be00000	jr	r31
  386  0000136c  54000000	nop
  387  00001370          	.endproc _cond_wait
  389  00001370          	.proc _cond_signal
  390  00001370          	.global _cond_signal
  391  00001370          	_cond_signal:
  392  00001370  44000458	trap	#0x458
  393  00001374  4be00000	jr	r31
  394  00001378  54000000	nop
  395  0000137c          	.endproc _cond_signal
  397  0000137c          	.proc _cond_broadcast
  398  0000137c          	.global _cond_broadcast
  399  0000137c          	_cond_broadcast:
  400  0000137c  44000459	trap	#0x459
  401  00001380  4be00000	jr	r31
  402  00001384  54000000	nop
  403  00001388          	.endproc _cond_broadcast
  405  00001388          	.proc _mbox_create
  406  00001388          	.global _mbox_create
  407  00001388          	_mbox_create:
  408  00001388  44000460	trap	#0x460
  409  0000138c  4be00000	jr	r31
  410  00001390  54000000	nop
  411  00001394          	.endproc _mbox_create
  413  00001394          	.proc _mbox_open
  414  00001394          	.global _mbox_open
  415  00001394          	_mbox_open:
  416  00001394  44000461	trap	#0x461
  417  00001398  4be00000	jr	r31
  418  0000139c  54000000	nop
  419  000013a0          	.endproc _mbox_open
  421  000013a0          	.proc _mbox_close
  422  000013a0          	.global _mbox_close
  423  000013a0          	_mbox_close:
  424  000013a0  44000462	trap	#0x462
  425  000013a4  4be00000	jr	r31
  426  000013a8  54000000	nop
  427  000013ac          	.endproc _mbox_close
  429  000013ac          	.proc _mbox_send
  430  000013ac          	.global _mbox_send
  431  000013ac          	_mbox_send:
  432  000013ac  44000463	trap	#0x463
  433  000013b0  4be00000	jr	r31
  434  000013b4  54000000	nop
  435  000013b8          	.endproc _mbox_send
  437  000013b8          	.proc _mbox_recv
  438  000013b8          	.global _mbox_recv
  439  000013b8          	_mbox_recv:
  440  000013b8  44000464	trap	#0x464
  441  000013bc  4be00000	jr	r31
  442  000013c0  54000000	nop
  443  000013c4          	.endproc _mbox_recv
  445  000013c4          	.proc _sleep
  446  000013c4          	.global _sleep
  447  000013c4          	_sleep:
  448  000013c4  44000465	trap	#0x465
  449  000013c8  4be00000	jr	r31
  450  000013cc  54000000	nop
  451  000013d0          	.endproc _sleep
  453  000013d0          	.proc _yield
  454  000013d0          	.global _yield
  455  000013d0          	_yield:
  456  000013d0  44000466	trap	#0x466
  457  000013d4  4be00000	jr	r31
  458  000013d8  54000000	nop
  459  000013dc          	.endproc _yield
  462  000013dc          	.proc _Exit
  463  000013dc          	.global _Exit
  464  000013dc          	_Exit:
  465  000013dc  44000500	trap	#0x500
  466  000013e0  4be00000	jr	r31
  467  000013e4  54000000	nop
  468  000013e8          	.endproc _Exit
  469                      ; Compiled by GCC
  471  000013e8          	.align 2
  472  000013e8          	.proc _isspace
  473  000013e8          	.global _isspace
  474  000013e8          	_isspace:
  475                      ;  Function 'isspace'; 0 bytes of locals, 3 regs to save.
  476  000013e8  afbefffc	sw	-4(r29),r30; push fp
  477  000013ec  001df020	add	r30,r0,r29; fp = sp
  478  000013f0  afbffff8	sw	-8(r29),r31; push ret addr
  479  000013f4  2fbd0018	subui	r29,r29,#24; alloc local storage
  480  000013f8  afa20000	sw	0(r29),r2
  481  000013fc  afa30004	sw	4(r29),r3
  482  00001400  afa40008	sw	8(r29),r4
  483  00001404  83c20003	lb	r2,3(r30)
  484  00001408  20010000	addi	r1,r0,#0
  485  0000140c  304300ff	andi	r3,r2,#0x00ff
  486  00001410  60640020	seqi	r4,r3,#32
  487  00001414  1480002c	bnez	r4,L3_LF2
  488  00001418  54000000	nop; delay slot nop
  489  0000141c  304300ff	andi	r3,r2,#0x00ff
  490  00001420  60640009	seqi	r4,r3,#9
  491  00001424  1480001c	bnez	r4,L3_LF2
  492  00001428  54000000	nop; delay slot nop
  493  0000142c  304300ff	andi	r3,r2,#0x00ff
  494  00001430  6064000a	seqi	r4,r3,#10
  495  00001434  1480000c	bnez	r4,L3_LF2
  496  00001438  54000000	nop; delay slot nop
  497  0000143c  08000008	j	L2_LF2
  498  00001440  54000000	nop; delay slot nop
  499  00001444          	L3_LF2:
  500  00001444  20010001	addi	r1,r0,#1
  501  00001448          	L2_LF2:
  502  00001448  08000004	j	L1_LF2
  503  0000144c  54000000	nop; delay slot nop
  504  00001450          	L1_LF2:
  505  00001450  8fa20000	lw	r2,0(r29)
  506  00001454  8fa30004	lw	r3,4(r29)
  507  00001458  8fa40008	lw	r4,8(r29)
  508  0000145c  8fdffff8	lw	r31,-8(r30)
  509  00001460  001ee820	add	r29,r0,r30
  510  00001464  8fdefffc	lw	r30,-4(r30)
  511  00001468  4be00000	jr	r31
  512  0000146c  54000000	nop
  513  00001470          	.endproc _isspace
  514  00001470          	.align 2
  515  00001470          	.proc _isxdigit
  516  00001470          	.global _isxdigit
  517  00001470          	_isxdigit:
  518                      ;  Function 'isxdigit'; 0 bytes of locals, 3 regs to save.
  519  00001470  afbefffc	sw	-4(r29),r30; push fp
  520  00001474  001df020	add	r30,r0,r29; fp = sp
  521  00001478  afbffff8	sw	-8(r29),r31; push ret addr
  522  0000147c  2fbd0018	subui	r29,r29,#24; alloc local storage
  523  00001480  afa20000	sw	0(r29),r2
  524  00001484  afa30004	sw	4(r29),r3
  525  00001488  afa40008	sw	8(r29),r4
  526  0000148c  83c20003	lb	r2,3(r30)
  527  00001490  20010000	addi	r1,r0,#0
  528  00001494  304300ff	andi	r3,r2,#0x00ff
  529  00001498  6c64002f	sgtui	r4,r3,#47
  530  0000149c  1080001c	beqz	r4,L7_LF2
  531  000014a0  54000000	nop; delay slot nop
  532  000014a4  304300ff	andi	r3,r2,#0x00ff
  533  000014a8  70640039	sleui	r4,r3,#57
  534  000014ac  1480005c	bnez	r4,L6_LF2
  535  000014b0  54000000	nop; delay slot nop
  536  000014b4  08000004	j	L7_LF2
  537  000014b8  54000000	nop; delay slot nop
  538  000014bc          	L7_LF2:
  539  000014bc  304300ff	andi	r3,r2,#0x00ff
  540  000014c0  6c640060	sgtui	r4,r3,#96
  541  000014c4  1080001c	beqz	r4,L8_LF2
  542  000014c8  54000000	nop; delay slot nop
  543  000014cc  304300ff	andi	r3,r2,#0x00ff
  544  000014d0  70640066	sleui	r4,r3,#102
  545  000014d4  14800034	bnez	r4,L6_LF2
  546  000014d8  54000000	nop; delay slot nop
  547  000014dc  08000004	j	L8_LF2
  548  000014e0  54000000	nop; delay slot nop
  549  000014e4          	L8_LF2:
  550  000014e4  304300ff	andi	r3,r2,#0x00ff
  551  000014e8  6c640040	sgtui	r4,r3,#64
  552  000014ec  10800020	beqz	r4,L5_LF2
  553  000014f0  54000000	nop; delay slot nop
  554  000014f4  304300ff	andi	r3,r2,#0x00ff
  555  000014f8  70640041	sleui	r4,r3,#65
  556  000014fc  1480000c	bnez	r4,L6_LF2
  557  00001500  54000000	nop; delay slot nop
  558  00001504  08000008	j	L5_LF2
  559  00001508  54000000	nop; delay slot nop
  560  0000150c          	L6_LF2:
  561  0000150c  20010001	addi	r1,r0,#1
  562  00001510          	L5_LF2:
  563  00001510  08000004	j	L4_LF2
  564  00001514  54000000	nop; delay slot nop
  565  00001518          	L4_LF2:
  566  00001518  8fa20000	lw	r2,0(r29)
  567  0000151c  8fa30004	lw	r3,4(r29)
  568  00001520  8fa40008	lw	r4,8(r29)
  569  00001524  8fdffff8	lw	r31,-8(r30)
  570  00001528  001ee820	add	r29,r0,r30
  571  0000152c  8fdefffc	lw	r30,-4(r30)
  572  00001530  4be00000	jr	r31
  573  00001534  54000000	nop
  574  00001538          	.endproc _isxdigit
  575  00001538          	.align 2
  576  00001538          	.proc _dstrcpy
  577  00001538          	.global _dstrcpy
  578  00001538          	_dstrcpy:
  579                      ;  Function 'dstrcpy'; 8 bytes of locals, 2 regs to save.
  580  00001538  afbefffc	sw	-4(r29),r30; push fp
  581  0000153c  001df020	add	r30,r0,r29; fp = sp
  582  00001540  afbffff8	sw	-8(r29),r31; push ret addr
  583  00001544  2fbd0018	subui	r29,r29,#24; alloc local storage
  584  00001548  afa20000	sw	0(r29),r2
  585  0000154c  afa30004	sw	4(r29),r3
  586  00001550  8fc10000	lw	r1,(r30)
  587  00001554  afc1fff4	sw	-12(r30),r1
  588  00001558          	L10_LF2:
  589  00001558  8fc10000	lw	r1,(r30)
  590  0000155c  20220001	addi	r2,r1,#1
  591  00001560  afc20000	sw	(r30),r2
  592  00001564  8fc20004	lw	r2,4(r30)
  593  00001568  20430001	addi	r3,r2,#1
  594  0000156c  afc30004	sw	4(r30),r3
  595  00001570  80420000	lb	r2,(r2)
  596  00001574  a0220000	sb	(r1),r2
  597  00001578  a3c2fff3	sb	-13(r30),r2
  598  0000157c          	L12_LF2:
  599  0000157c  93c1fff3	lbu	r1,-13(r30)
  600  00001580  64220000	snei	r2,r1,#0
  601  00001584  1440000c	bnez	r2,L13_LF2
  602  00001588  54000000	nop; delay slot nop
  603  0000158c  0800000c	j	L11_LF2
  604  00001590  54000000	nop; delay slot nop
  605  00001594          	L13_LF2:
  606  00001594  0bffffc0	j	L10_LF2
  607  00001598  54000000	nop; delay slot nop
  608  0000159c          	L11_LF2:
  609  0000159c  8fc1fff4	lw	r1,-12(r30)
  610  000015a0  08000004	j	L9_LF2
  611  000015a4  54000000	nop; delay slot nop
  612  000015a8          	L9_LF2:
  613  000015a8  8fa20000	lw	r2,0(r29)
  614  000015ac  8fa30004	lw	r3,4(r29)
  615  000015b0  8fdffff8	lw	r31,-8(r30)
  616  000015b4  001ee820	add	r29,r0,r30
  617  000015b8  8fdefffc	lw	r30,-4(r30)
  618  000015bc  4be00000	jr	r31
  619  000015c0  54000000	nop
  620  000015c4          	.endproc _dstrcpy
  621  000015c4          	.align 2
  622  000015c4          	.proc _dstrncpy
  623  000015c4          	.global _dstrncpy
  624  000015c4          	_dstrncpy:
  625                      ;  Function 'dstrncpy'; 8 bytes of locals, 2 regs to save.
  626  000015c4  afbefffc	sw	-4(r29),r30; push fp
  627  000015c8  001df020	add	r30,r0,r29; fp = sp
  628  000015cc  afbffff8	sw	-8(r29),r31; push ret addr
  629  000015d0  2fbd0018	subui	r29,r29,#24; alloc local storage
  630  000015d4  afa20000	sw	0(r29),r2
  631  000015d8  afa30004	sw	4(r29),r3
  632  000015dc  8fc10000	lw	r1,(r30)
  633  000015e0  afc1fff4	sw	-12(r30),r1
  634  000015e4          	L15_LF2:
  635  000015e4  8fc10008	lw	r1,8(r30)
  636  000015e8  2022ffff	addi	r2,r1,#-1
  637  000015ec  afc20008	sw	8(r30),r2
  638  000015f0  70210000	slei	r1,r1,#0
  639  000015f4  1020000c	beqz	r1,L18_LF2
  640  000015f8  54000000	nop; delay slot nop
  641  000015fc  08000048	j	L16_LF2
  642  00001600  54000000	nop; delay slot nop
  643  00001604          	L18_LF2:
  644  00001604  8fc10000	lw	r1,(r30)
  645  00001608  20220001	addi	r2,r1,#1
  646  0000160c  afc20000	sw	(r30),r2
  647  00001610  8fc20004	lw	r2,4(r30)
  648  00001614  20430001	addi	r3,r2,#1
  649  00001618  afc30004	sw	4(r30),r3
  650  0000161c  80420000	lb	r2,(r2)
  651  00001620  a0220000	sb	(r1),r2
  652  00001624  a3c2fff3	sb	-13(r30),r2
  653  00001628          	L17_LF2:
  654  00001628  93c1fff3	lbu	r1,-13(r30)
  655  0000162c  64220000	snei	r2,r1,#0
  656  00001630  1440000c	bnez	r2,L19_LF2
  657  00001634  54000000	nop; delay slot nop
  658  00001638  0800000c	j	L16_LF2
  659  0000163c  54000000	nop; delay slot nop
  660  00001640          	L19_LF2:
  661  00001640  0bffffa0	j	L15_LF2
  662  00001644  54000000	nop; delay slot nop
  663  00001648          	L16_LF2:
  664  00001648  8fc1fff4	lw	r1,-12(r30)
  665  0000164c  08000004	j	L14_LF2
  666  00001650  54000000	nop; delay slot nop
  667  00001654          	L14_LF2:
  668  00001654  8fa20000	lw	r2,0(r29)
  669  00001658  8fa30004	lw	r3,4(r29)
  670  0000165c  8fdffff8	lw	r31,-8(r30)
  671  00001660  001ee820	add	r29,r0,r30
  672  00001664  8fdefffc	lw	r30,-4(r30)
  673  00001668  4be00000	jr	r31
  674  0000166c  54000000	nop
  675  00001670          	.endproc _dstrncpy
  676  00001670          	.align 2
  677  00001670          	.proc _dstrcat
  678  00001670          	.global _dstrcat
  679  00001670          	_dstrcat:
  680                      ;  Function 'dstrcat'; 8 bytes of locals, 1 regs to save.
  681  00001670  afbefffc	sw	-4(r29),r30; push fp
  682  00001674  001df020	add	r30,r0,r29; fp = sp
  683  00001678  afbffff8	sw	-8(r29),r31; push ret addr
  684  0000167c  2fbd0018	subui	r29,r29,#24; alloc local storage
  685  00001680  afa20000	sw	0(r29),r2
  686  00001684  8fc10000	lw	r1,(r30)
  687  00001688  afc1fff4	sw	-12(r30),r1
  688  0000168c          	L21_LF2:
  689  0000168c  8fc10000	lw	r1,(r30)
  690  00001690  90220000	lbu	r2,(r1)
  691  00001694  64410000	snei	r1,r2,#0
  692  00001698  1420000c	bnez	r1,L23_LF2
  693  0000169c  54000000	nop; delay slot nop
  694  000016a0  0800001c	j	L22_LF2
  695  000016a4  54000000	nop; delay slot nop
  696  000016a8          	L23_LF2:
  697  000016a8  8fc20000	lw	r2,(r30)
  698  000016ac  20410001	addi	r1,r2,#1
  699  000016b0  00011020	add	r2,r0,r1
  700  000016b4  afc20000	sw	(r30),r2
  701  000016b8  0bffffd0	j	L21_LF2
  702  000016bc  54000000	nop; delay slot nop
  703  000016c0          	L22_LF2:
  704  000016c0  23bdfff8	addi	r29,r29,#-8
  705  000016c4  001d0820	add	r1,r0,r29
  706  000016c8  8fc20000	lw	r2,(r30)
  707  000016cc  ac220000	sw	(r1),r2
  708  000016d0  8fc20004	lw	r2,4(r30)
  709  000016d4  ac220004	sw	4(r1),r2
  710  000016d8  0ffffe5c	jal	_dstrcpy
  711  000016dc  54000000	nop; delay slot nop
  712  000016e0  23bd0008	addi	r29,r29,#8
  713  000016e4  8fc1fff4	lw	r1,-12(r30)
  714  000016e8  08000004	j	L20_LF2
  715  000016ec  54000000	nop; delay slot nop
  716  000016f0          	L20_LF2:
  717  000016f0  8fa20000	lw	r2,0(r29)
  718  000016f4  8fdffff8	lw	r31,-8(r30)
  719  000016f8  001ee820	add	r29,r0,r30
  720  000016fc  8fdefffc	lw	r30,-4(r30)
  721  00001700  4be00000	jr	r31
  722  00001704  54000000	nop
  723  00001708          	.endproc _dstrcat
  724  00001708          	.align 2
  725  00001708          	.proc _dstrncmp
  726  00001708          	.global _dstrncmp
  727  00001708          	_dstrncmp:
  728                      ;  Function 'dstrncmp'; 8 bytes of locals, 2 regs to save.
  729  00001708  afbefffc	sw	-4(r29),r30; push fp
  730  0000170c  001df020	add	r30,r0,r29; fp = sp
  731  00001710  afbffff8	sw	-8(r29),r31; push ret addr
  732  00001714  2fbd0018	subui	r29,r29,#24; alloc local storage
  733  00001718  afa20000	sw	0(r29),r2
  734  0000171c  afa30004	sw	4(r29),r3
  735  00001720  54000000	nop
  736  00001724  20010000	addi	r1,r0,#0
  737  00001728  afc1fff4	sw	-12(r30),r1
  738  0000172c          	L25_LF2:
  739  0000172c  8fc1fff4	lw	r1,-12(r30)
  740  00001730  8fc20008	lw	r2,8(r30)
  741  00001734  0022082a	slt	r1,r1,r2
  742  00001738  1420000c	bnez	r1,L28_LF2
  743  0000173c  54000000	nop; delay slot nop
  744  00001740  08000088	j	L26_LF2
  745  00001744  54000000	nop; delay slot nop
  746  00001748          	L28_LF2:
  747  00001748  8fc10004	lw	r1,4(r30)
  748  0000174c  90220000	lbu	r2,(r1)
  749  00001750  64410000	snei	r1,r2,#0
  750  00001754  14200018	bnez	r1,L29_LF2
  751  00001758  54000000	nop; delay slot nop
  752  0000175c  20010000	addi	r1,r0,#0
  753  00001760  080000d8	j	L24_LF2
  754  00001764  54000000	nop; delay slot nop
  755  00001768  08000028	j	L30_LF2
  756  0000176c  54000000	nop; delay slot nop
  757  00001770          	L29_LF2:
  758  00001770  8fc10000	lw	r1,(r30)
  759  00001774  8fc20004	lw	r2,4(r30)
  760  00001778  90210000	lbu	r1,(r1)
  761  0000177c  90420000	lbu	r2,(r2)
  762  00001780  00220829	sne	r1,r1,r2
  763  00001784  1020000c	beqz	r1,L30_LF2
  764  00001788  54000000	nop; delay slot nop
  765  0000178c  0800003c	j	L26_LF2
  766  00001790  54000000	nop; delay slot nop
  767  00001794          	L31_LF2:
  768  00001794          	L30_LF2:
  769  00001794  8fc20000	lw	r2,(r30)
  770  00001798  20410001	addi	r1,r2,#1
  771  0000179c  00011020	add	r2,r0,r1
  772  000017a0  afc20000	sw	(r30),r2
  773  000017a4  8fc20004	lw	r2,4(r30)
  774  000017a8  20410001	addi	r1,r2,#1
  775  000017ac  00011020	add	r2,r0,r1
  776  000017b0  afc20004	sw	4(r30),r2
  777  000017b4          	L27_LF2:
  778  000017b4  8fc2fff4	lw	r2,-12(r30)
  779  000017b8  20410001	addi	r1,r2,#1
  780  000017bc  00011020	add	r2,r0,r1
  781  000017c0  afc2fff4	sw	-12(r30),r2
  782  000017c4  0bffff64	j	L25_LF2
  783  000017c8  54000000	nop; delay slot nop
  784  000017cc          	L26_LF2:
  785  000017cc  8fc1fff4	lw	r1,-12(r30)
  786  000017d0  8fc20008	lw	r2,8(r30)
  787  000017d4  00220828	seq	r1,r1,r2
  788  000017d8  10200018	beqz	r1,L32_LF2
  789  000017dc  54000000	nop; delay slot nop
  790  000017e0  20010000	addi	r1,r0,#0
  791  000017e4  08000054	j	L24_LF2
  792  000017e8  54000000	nop; delay slot nop
  793  000017ec  0800004c	j	L33_LF2
  794  000017f0  54000000	nop; delay slot nop
  795  000017f4          	L32_LF2:
  796  000017f4  8fc20000	lw	r2,(r30)
  797  000017f8  90410000	lbu	r1,(r2)
  798  000017fc  8fc20004	lw	r2,4(r30)
  799  00001800  90430000	lbu	r3,(r2)
  800  00001804  00230822	sub	r1,r1,r3
  801  00001808  74220000	sgei	r2,r1,#0
  802  0000180c  10400020	beqz	r2,L34_LF2
  803  00001810  54000000	nop; delay slot nop
  804  00001814  8fc10000	lw	r1,(r30)
  805  00001818  8fc20004	lw	r2,4(r30)
  806  0000181c  90210000	lbu	r1,(r1)
  807  00001820  90420000	lbu	r2,(r2)
  808  00001824  00220829	sne	r1,r1,r2
  809  00001828  08000008	j	L35_LF2
  810  0000182c  54000000	nop; delay slot nop
  811  00001830          	L34_LF2:
  812  00001830  2001ffff	addi	r1,r0,#-1
  813  00001834          	L35_LF2:
  814  00001834  08000004	j	L24_LF2
  815  00001838  54000000	nop; delay slot nop
  816  0000183c          	L33_LF2:
  817  0000183c          	L24_LF2:
  818  0000183c  8fa20000	lw	r2,0(r29)
  819  00001840  8fa30004	lw	r3,4(r29)
  820  00001844  8fdffff8	lw	r31,-8(r30)
  821  00001848  001ee820	add	r29,r0,r30
  822  0000184c  8fdefffc	lw	r30,-4(r30)
  823  00001850  4be00000	jr	r31
  824  00001854  54000000	nop
  825  00001858          	.endproc _dstrncmp
  826  00001858          	.align 2
  827  00001858          	.proc _dstrlen
  828  00001858          	.global _dstrlen
  829  00001858          	_dstrlen:
  830                      ;  Function 'dstrlen'; 8 bytes of locals, 1 regs to save.
  831  00001858  afbefffc	sw	-4(r29),r30; push fp
  832  0000185c  001df020	add	r30,r0,r29; fp = sp
  833  00001860  afbffff8	sw	-8(r29),r31; push ret addr
  834  00001864  2fbd0018	subui	r29,r29,#24; alloc local storage
  835  00001868  afa20000	sw	0(r29),r2
  836  0000186c  20010000	addi	r1,r0,#0
  837  00001870  afc1fff4	sw	-12(r30),r1
  838  00001874          	L37_LF2:
  839  00001874  8fc10000	lw	r1,(r30)
  840  00001878  20220001	addi	r2,r1,#1
  841  0000187c  afc20000	sw	(r30),r2
  842  00001880  90210000	lbu	r1,(r1)
  843  00001884  64220000	snei	r2,r1,#0
  844  00001888  1440000c	bnez	r2,L39_LF2
  845  0000188c  54000000	nop; delay slot nop
  846  00001890  0800001c	j	L38_LF2
  847  00001894  54000000	nop; delay slot nop
  848  00001898          	L39_LF2:
  849  00001898  8fc2fff4	lw	r2,-12(r30)
  850  0000189c  20410001	addi	r1,r2,#1
  851  000018a0  00011020	add	r2,r0,r1
  852  000018a4  afc2fff4	sw	-12(r30),r2
  853  000018a8  0bffffc8	j	L37_LF2
  854  000018ac  54000000	nop; delay slot nop
  855  000018b0          	L38_LF2:
  856  000018b0  8fc1fff4	lw	r1,-12(r30)
  857  000018b4  08000004	j	L36_LF2
  858  000018b8  54000000	nop; delay slot nop
  859  000018bc          	L36_LF2:
  860  000018bc  8fa20000	lw	r2,0(r29)
  861  000018c0  8fdffff8	lw	r31,-8(r30)
  862  000018c4  001ee820	add	r29,r0,r30
  863  000018c8  8fdefffc	lw	r30,-4(r30)
  864  000018cc  4be00000	jr	r31
  865  000018d0  54000000	nop
  866  000018d4          	.endproc _dstrlen
  867  000018d4          	.align 2
  868  000018d4          	.proc _dstrstr
  869  000018d4          	.global _dstrstr
  870  000018d4          	_dstrstr:
  871                      ;  Function 'dstrstr'; 8 bytes of locals, 1 regs to save.
  872  000018d4  afbefffc	sw	-4(r29),r30; push fp
  873  000018d8  001df020	add	r30,r0,r29; fp = sp
  874  000018dc  afbffff8	sw	-8(r29),r31; push ret addr
  875  000018e0  2fbd0018	subui	r29,r29,#24; alloc local storage
  876  000018e4  afa20000	sw	0(r29),r2
  877  000018e8  23bdfff8	addi	r29,r29,#-8
  878  000018ec  001d0820	add	r1,r0,r29
  879  000018f0  8fc20004	lw	r2,4(r30)
  880  000018f4  ac220000	sw	(r1),r2
  881  000018f8  0fffff5c	jal	_dstrlen
  882  000018fc  54000000	nop; delay slot nop
  883  00001900  23bd0008	addi	r29,r29,#8
  884  00001904  afc1fff4	sw	-12(r30),r1
  885  00001908          	L41_LF2:
  886  00001908  8fc10000	lw	r1,(r30)
  887  0000190c  90220000	lbu	r2,(r1)
  888  00001910  64410000	snei	r1,r2,#0
  889  00001914  1420000c	bnez	r1,L43_LF2
  890  00001918  54000000	nop; delay slot nop
  891  0000191c  08000060	j	L42_LF2
  892  00001920  54000000	nop; delay slot nop
  893  00001924          	L43_LF2:
  894  00001924  23bdfff0	addi	r29,r29,#-16
  895  00001928  001d0820	add	r1,r0,r29
  896  0000192c  8fc20000	lw	r2,(r30)
  897  00001930  ac220000	sw	(r1),r2
  898  00001934  8fc20004	lw	r2,4(r30)
  899  00001938  ac220004	sw	4(r1),r2
  900  0000193c  8fc2fff4	lw	r2,-12(r30)
  901  00001940  ac220008	sw	8(r1),r2
  902  00001944  0ffffdc0	jal	_dstrncmp
  903  00001948  54000000	nop; delay slot nop
  904  0000194c  23bd0010	addi	r29,r29,#16
  905  00001950  64220000	snei	r2,r1,#0
  906  00001954  14400010	bnez	r2,L44_LF2
  907  00001958  54000000	nop; delay slot nop
  908  0000195c  8fc10000	lw	r1,(r30)
  909  00001960  08000028	j	L40_LF2
  910  00001964  54000000	nop; delay slot nop
  911  00001968          	L44_LF2:
  912  00001968  8fc20000	lw	r2,(r30)
  913  0000196c  20410001	addi	r1,r2,#1
  914  00001970  00011020	add	r2,r0,r1
  915  00001974  afc20000	sw	(r30),r2
  916  00001978  0bffff8c	j	L41_LF2
  917  0000197c  54000000	nop; delay slot nop
  918  00001980          	L42_LF2:
  919  00001980  20010000	addi	r1,r0,#0
  920  00001984  08000004	j	L40_LF2
  921  00001988  54000000	nop; delay slot nop
  922  0000198c          	L40_LF2:
  923  0000198c  8fa20000	lw	r2,0(r29)
  924  00001990  8fdffff8	lw	r31,-8(r30)
  925  00001994  001ee820	add	r29,r0,r30
  926  00001998  8fdefffc	lw	r30,-4(r30)
  927  0000199c  4be00000	jr	r31
  928  000019a0  54000000	nop
  929  000019a4          	.endproc _dstrstr
  930  000019a4          	.align 2
  931  000019a4          	.proc _dmindex
  932  000019a4          	.global _dmindex
  933  000019a4          	_dmindex:
  934                      ;  Function 'dmindex'; 8 bytes of locals, 1 regs to save.
  935  000019a4  afbefffc	sw	-4(r29),r30; push fp
  936  000019a8  001df020	add	r30,r0,r29; fp = sp
  937  000019ac  afbffff8	sw	-8(r29),r31; push ret addr
  938  000019b0  2fbd0018	subui	r29,r29,#24; alloc local storage
  939  000019b4  afa20000	sw	0(r29),r2
  940  000019b8  54000000	nop
  941  000019bc          	L46_LF2:
  942  000019bc  8fc10000	lw	r1,(r30)
  943  000019c0  90220000	lbu	r2,(r1)
  944  000019c4  64410000	snei	r1,r2,#0
  945  000019c8  1420000c	bnez	r1,L48_LF2
  946  000019cc  54000000	nop; delay slot nop
  947  000019d0  08000070	j	L47_LF2
  948  000019d4  54000000	nop; delay slot nop
  949  000019d8          	L48_LF2:
  950  000019d8  8fc10004	lw	r1,4(r30)
  951  000019dc  afc1fff4	sw	-12(r30),r1
  952  000019e0          	L49_LF2:
  953  000019e0  8fc1fff4	lw	r1,-12(r30)
  954  000019e4  90220000	lbu	r2,(r1)
  955  000019e8  64410000	snei	r1,r2,#0
  956  000019ec  1420000c	bnez	r1,L52_LF2
  957  000019f0  54000000	nop; delay slot nop
  958  000019f4  08000044	j	L50_LF2
  959  000019f8  54000000	nop; delay slot nop
  960  000019fc          	L52_LF2:
  961  000019fc  8fc10000	lw	r1,(r30)
  962  00001a00  8fc2fff4	lw	r2,-12(r30)
  963  00001a04  90210000	lbu	r1,(r1)
  964  00001a08  90420000	lbu	r2,(r2)
  965  00001a0c  00220828	seq	r1,r1,r2
  966  00001a10  10200010	beqz	r1,L51_LF2
  967  00001a14  54000000	nop; delay slot nop
  968  00001a18  8fc10000	lw	r1,(r30)
  969  00001a1c  08000030	j	L45_LF2
  970  00001a20  54000000	nop; delay slot nop
  971  00001a24          	L53_LF2:
  972  00001a24          	L51_LF2:
  973  00001a24  8fc2fff4	lw	r2,-12(r30)
  974  00001a28  20410001	addi	r1,r2,#1
  975  00001a2c  00011020	add	r2,r0,r1
  976  00001a30  afc2fff4	sw	-12(r30),r2
  977  00001a34  0bffffa8	j	L49_LF2
  978  00001a38  54000000	nop; delay slot nop
  979  00001a3c          	L50_LF2:
  980  00001a3c  0bffff7c	j	L46_LF2
  981  00001a40  54000000	nop; delay slot nop
  982  00001a44          	L47_LF2:
  983  00001a44  20010000	addi	r1,r0,#0
  984  00001a48  08000004	j	L45_LF2
  985  00001a4c  54000000	nop; delay slot nop
  986  00001a50          	L45_LF2:
  987  00001a50  8fa20000	lw	r2,0(r29)
  988  00001a54  8fdffff8	lw	r31,-8(r30)
  989  00001a58  001ee820	add	r29,r0,r30
  990  00001a5c  8fdefffc	lw	r30,-4(r30)
  991  00001a60  4be00000	jr	r31
  992  00001a64  54000000	nop
  993  00001a68          	.endproc _dmindex
  994  00001a68          	.align 2
  995  00001a68          	.proc _dindex
  996  00001a68          	.global _dindex
  997  00001a68          	_dindex:
  998                      ;  Function 'dindex'; 0 bytes of locals, 1 regs to save.
  999  00001a68  afbefffc	sw	-4(r29),r30; push fp
 1000  00001a6c  001df020	add	r30,r0,r29; fp = sp
 1001  00001a70  afbffff8	sw	-8(r29),r31; push ret addr
 1002  00001a74  2fbd0010	subui	r29,r29,#16; alloc local storage
 1003  00001a78  afa20000	sw	0(r29),r2
 1004  00001a7c  54000000	nop
 1005  00001a80          	L55_LF2:
 1006  00001a80  8fc10000	lw	r1,(r30)
 1007  00001a84  90220000	lbu	r2,(r1)
 1008  00001a88  64410000	snei	r1,r2,#0
 1009  00001a8c  1420000c	bnez	r1,L57_LF2
 1010  00001a90  54000000	nop; delay slot nop
 1011  00001a94  08000040	j	L56_LF2
 1012  00001a98  54000000	nop; delay slot nop
 1013  00001a9c          	L57_LF2:
 1014  00001a9c  8fc10000	lw	r1,(r30)
 1015  00001aa0  90220000	lbu	r2,(r1)
 1016  00001aa4  8fc10004	lw	r1,4(r30)
 1017  00001aa8  00411028	seq	r2,r2,r1
 1018  00001aac  10400010	beqz	r2,L58_LF2
 1019  00001ab0  54000000	nop; delay slot nop
 1020  00001ab4  8fc10000	lw	r1,(r30)
 1021  00001ab8  08000028	j	L54_LF2
 1022  00001abc  54000000	nop; delay slot nop
 1023  00001ac0          	L58_LF2:
 1024  00001ac0  8fc20000	lw	r2,(r30)
 1025  00001ac4  20410001	addi	r1,r2,#1
 1026  00001ac8  00011020	add	r2,r0,r1
 1027  00001acc  afc20000	sw	(r30),r2
 1028  00001ad0  0bffffac	j	L55_LF2
 1029  00001ad4  54000000	nop; delay slot nop
 1030  00001ad8          	L56_LF2:
 1031  00001ad8  20010000	addi	r1,r0,#0
 1032  00001adc  08000004	j	L54_LF2
 1033  00001ae0  54000000	nop; delay slot nop
 1034  00001ae4          	L54_LF2:
 1035  00001ae4  8fa20000	lw	r2,0(r29)
 1036  00001ae8  8fdffff8	lw	r31,-8(r30)
 1037  00001aec  001ee820	add	r29,r0,r30
 1038  00001af0  8fdefffc	lw	r30,-4(r30)
 1039  00001af4  4be00000	jr	r31
 1040  00001af8  54000000	nop
 1041  00001afc          	.endproc _dindex
 1042  00001afc          	.align 2
 1043  00001afc          	.proc _ditoa
 1044  00001afc          	.global _ditoa
 1045  00001afc          	_ditoa:
 1046                      ;  Function 'ditoa'; 8 bytes of locals, 2 regs to save.
 1047  00001afc  afbefffc	sw	-4(r29),r30; push fp
 1048  00001b00  001df020	add	r30,r0,r29; fp = sp
 1049  00001b04  afbffff8	sw	-8(r29),r31; push ret addr
 1050  00001b08  2fbd0018	subui	r29,r29,#24; alloc local storage
 1051  00001b0c  afa20000	sw	0(r29),r2
 1052  00001b10  afa30004	sw	4(r29),r3
 1053  00001b14  8fc10000	lw	r1,(r30)
 1054  00001b18  68220000	slti	r2,r1,#0
 1055  00001b1c  1040002c	beqz	r2,L60_LF2
 1056  00001b20  54000000	nop; delay slot nop
 1057  00001b24  8fc10004	lw	r1,4(r30)
 1058  00001b28  20220001	addi	r2,r1,#1
 1059  00001b2c  afc20004	sw	4(r30),r2
 1060  00001b30  2002002d	addi	r2,r0,(#0x2d)&0xff
 1061  00001b34  a0220000	sb	(r1),r2
 1062  00001b38  8fc10000	lw	r1,(r30)
 1063  00001b3c  00011022	sub	r2,r0,r1
 1064  00001b40  afc20000	sw	(r30),r2
 1065  00001b44  08000118	j	L61_LF2
 1066  00001b48  54000000	nop; delay slot nop
 1067  00001b4c          	L60_LF2:
 1068  00001b4c  8fc10000	lw	r1,(r30)
 1069  00001b50  64220000	snei	r2,r1,#0
 1070  00001b54  14400020	bnez	r2,L62_LF2
 1071  00001b58  54000000	nop; delay slot nop
 1072  00001b5c  8fc10004	lw	r1,4(r30)
 1073  00001b60  20220001	addi	r2,r1,#1
 1074  00001b64  afc20004	sw	4(r30),r2
 1075  00001b68  20020030	addi	r2,r0,(#0x30)&0xff
 1076  00001b6c  a0220000	sb	(r1),r2
 1077  00001b70  080000ec	j	L61_LF2
 1078  00001b74  54000000	nop; delay slot nop
 1079  00001b78          	L62_LF2:
 1080  00001b78  20010001	addi	r1,r0,#1
 1081  00001b7c  afc1fff4	sw	-12(r30),r1
 1082  00001b80          	L64_LF2:
 1083  00001b80  8fc1fff4	lw	r1,-12(r30)
 1084  00001b84  8fc20000	lw	r2,(r30)
 1085  00001b88  0022082c	sle	r1,r1,r2
 1086  00001b8c  1420000c	bnez	r1,L66_LF2
 1087  00001b90  54000000	nop; delay slot nop
 1088  00001b94  08000024	j	L65_LF2
 1089  00001b98  54000000	nop; delay slot nop
 1090  00001b9c          	L67_LF2:
 1091  00001b9c          	L66_LF2:
 1092  00001b9c  8fc1fff4	lw	r1,-12(r30)
 1093  00001ba0  00011820	add	r3,r0,r1
 1094  00001ba4  50620002	slli	r2,r3,#0x2
 1095  00001ba8  00411020	add	r2,r2,r1
 1096  00001bac  50410001	slli	r1,r2,#0x1
 1097  00001bb0  afc1fff4	sw	-12(r30),r1
 1098  00001bb4  0bffffc8	j	L64_LF2
 1099  00001bb8  54000000	nop; delay slot nop
 1100  00001bbc          	L65_LF2:
 1101  00001bbc  54000000	nop
 1102  00001bc0          	L68_LF2:
 1103  00001bc0  8fc1fff4	lw	r1,-12(r30)
 1104  00001bc4  2002000a	addi	r2,r0,#10
 1105  00001bc8  00200035	movi2fp	f0,r1
 1106  00001bcc  00400835	movi2fp	f1,r2
 1107  00001bd0  0401000f	div	f0,f0,f1
 1108  00001bd4  00000834	movfp2i	r1,f0
 1109  00001bd8  afc1fff4	sw	-12(r30),r1
 1110  00001bdc  8fc10004	lw	r1,4(r30)
 1111  00001be0  20220001	addi	r2,r1,#1
 1112  00001be4  afc20004	sw	4(r30),r2
 1113  00001be8  8fc20000	lw	r2,(r30)
 1114  00001bec  8fc3fff4	lw	r3,-12(r30)
 1115  00001bf0  00400035	movi2fp	f0,r2
 1116  00001bf4  00600835	movi2fp	f1,r3
 1117  00001bf8  0401000f	div	f0,f0,f1
 1118  00001bfc  00001034	movfp2i	r2,f0
 1119  00001c00  00021820	add	r3,r0,r2
 1120  00001c04  20620030	addi	r2,r3,#48
 1121  00001c08  a0220000	sb	(r1),r2
 1122  00001c0c  8fc10000	lw	r1,(r30)
 1123  00001c10  8fc3fff4	lw	r3,-12(r30)
 1124  00001c14  00200035	movi2fp	f0,r1
 1125  00001c18  00600835	movi2fp	f1,r3
 1126  00001c1c  0401000f	div	f0,f0,f1
 1127  00001c20  00001034	movfp2i	r2,f0
 1128  00001c24  8fc3fff4	lw	r3,-12(r30)
 1129  00001c28  00400035	movi2fp	f0,r2
 1130  00001c2c  00600835	movi2fp	f1,r3
 1131  00001c30  0401000e	mult	f0,f0,f1
 1132  00001c34  00001034	movfp2i	r2,f0
 1133  00001c38  00220822	sub	r1,r1,r2
 1134  00001c3c  afc10000	sw	(r30),r1
 1135  00001c40          	L70_LF2:
 1136  00001c40  8fc1fff4	lw	r1,-12(r30)
 1137  00001c44  6c220001	sgti	r2,r1,#1
 1138  00001c48  1440000c	bnez	r2,L71_LF2
 1139  00001c4c  54000000	nop; delay slot nop
 1140  00001c50  0800000c	j	L61_LF2
 1141  00001c54  54000000	nop; delay slot nop
 1142  00001c58          	L71_LF2:
 1143  00001c58  0bffff64	j	L68_LF2
 1144  00001c5c  54000000	nop; delay slot nop
 1145  00001c60          	L69_LF2:
 1146  00001c60          	L63_LF2:
 1147  00001c60          	L61_LF2:
 1148  00001c60  8fc10004	lw	r1,4(r30)
 1149  00001c64  20020000	addi	r2,r0,(#0x0)&0xff
 1150  00001c68  a0220000	sb	(r1),r2
 1151  00001c6c          	L59_LF2:
 1152  00001c6c  8fa20000	lw	r2,0(r29)
 1153  00001c70  8fa30004	lw	r3,4(r29)
 1154  00001c74  8fdffff8	lw	r31,-8(r30)
 1155  00001c78  001ee820	add	r29,r0,r30
 1156  00001c7c  8fdefffc	lw	r30,-4(r30)
 1157  00001c80  4be00000	jr	r31
 1158  00001c84  54000000	nop
 1159  00001c88          	.endproc _ditoa
 1160  00001c88          	.align 2
 1161  00001c88          	.proc _dstrtol
 1162  00001c88          	.global _dstrtol
 1163  00001c88          	_dstrtol:
 1164                      ;  Function 'dstrtol'; 16 bytes of locals, 1 regs to save.
 1165  00001c88  afbefffc	sw	-4(r29),r30; push fp
 1166  00001c8c  001df020	add	r30,r0,r29; fp = sp
 1167  00001c90  afbffff8	sw	-8(r29),r31; push ret addr
 1168  00001c94  2fbd0020	subui	r29,r29,#32; alloc local storage
 1169  00001c98  afa20000	sw	0(r29),r2
 1170  00001c9c  20010000	addi	r1,r0,#0
 1171  00001ca0  afc1fff4	sw	-12(r30),r1
 1172  00001ca4          	L73_LF2:
 1173  00001ca4  8fc10000	lw	r1,(r30)
 1174  00001ca8  90220000	lbu	r2,(r1)
 1175  00001cac  60410020	seqi	r1,r2,#32
 1176  00001cb0  14200034	bnez	r1,L75_LF2
 1177  00001cb4  54000000	nop; delay slot nop
 1178  00001cb8  8fc10000	lw	r1,(r30)
 1179  00001cbc  90220000	lbu	r2,(r1)
 1180  00001cc0  60410009	seqi	r1,r2,#9
 1181  00001cc4  14200020	bnez	r1,L75_LF2
 1182  00001cc8  54000000	nop; delay slot nop
 1183  00001ccc  8fc10000	lw	r1,(r30)
 1184  00001cd0  90220000	lbu	r2,(r1)
 1185  00001cd4  6041000a	seqi	r1,r2,#10
 1186  00001cd8  1420000c	bnez	r1,L75_LF2
 1187  00001cdc  54000000	nop; delay slot nop
 1188  00001ce0  0800001c	j	L74_LF2
 1189  00001ce4  54000000	nop; delay slot nop
 1190  00001ce8          	L75_LF2:
 1191  00001ce8  8fc20000	lw	r2,(r30)
 1192  00001cec  20410001	addi	r1,r2,#1
 1193  00001cf0  00011020	add	r2,r0,r1
 1194  00001cf4  afc20000	sw	(r30),r2
 1195  00001cf8  0bffffa8	j	L73_LF2
 1196  00001cfc  54000000	nop; delay slot nop
 1197  00001d00          	L74_LF2:
 1198  00001d00  8fc10004	lw	r1,4(r30)
 1199  00001d04  64220000	snei	r2,r1,#0
 1200  00001d08  10400010	beqz	r2,L76_LF2
 1201  00001d0c  54000000	nop; delay slot nop
 1202  00001d10  8fc10004	lw	r1,4(r30)
 1203  00001d14  8fc20000	lw	r2,(r30)
 1204  00001d18  ac220000	sw	(r1),r2
 1205  00001d1c          	L76_LF2:
 1206  00001d1c  8fc10000	lw	r1,(r30)
 1207  00001d20  90220000	lbu	r2,(r1)
 1208  00001d24  64410000	snei	r1,r2,#0
 1209  00001d28  14200010	bnez	r1,L77_LF2
 1210  00001d2c  54000000	nop; delay slot nop
 1211  00001d30  8fc1fff4	lw	r1,-12(r30)
 1212  00001d34  08000294	j	L72_LF2
 1213  00001d38  54000000	nop; delay slot nop
 1214  00001d3c          	L77_LF2:
 1215  00001d3c  8fc10000	lw	r1,(r30)
 1216  00001d40  90220000	lbu	r2,(r1)
 1217  00001d44  6041002d	seqi	r1,r2,#45
 1218  00001d48  10200024	beqz	r1,L78_LF2
 1219  00001d4c  54000000	nop; delay slot nop
 1220  00001d50  2001ffff	addi	r1,r0,#-1
 1221  00001d54  afc1ffec	sw	-20(r30),r1
 1222  00001d58  8fc20000	lw	r2,(r30)
 1223  00001d5c  20410001	addi	r1,r2,#1
 1224  00001d60  00011020	add	r2,r0,r1
 1225  00001d64  afc20000	sw	(r30),r2
 1226  00001d68  0800000c	j	L79_LF2
 1227  00001d6c  54000000	nop; delay slot nop
 1228  00001d70          	L78_LF2:
 1229  00001d70  20010001	addi	r1,r0,#1
 1230  00001d74  afc1ffec	sw	-20(r30),r1
 1231  00001d78          	L79_LF2:
 1232  00001d78  8fc10008	lw	r1,8(r30)
 1233  00001d7c  64220000	snei	r2,r1,#0
 1234  00001d80  14400090	bnez	r2,L80_LF2
 1235  00001d84  54000000	nop; delay slot nop
 1236  00001d88  8fc10000	lw	r1,(r30)
 1237  00001d8c  90220000	lbu	r2,(r1)
 1238  00001d90  60410030	seqi	r1,r2,#48
 1239  00001d94  10200074	beqz	r1,L81_LF2
 1240  00001d98  54000000	nop; delay slot nop
 1241  00001d9c  8fc20000	lw	r2,(r30)
 1242  00001da0  20410001	addi	r1,r2,#1
 1243  00001da4  00011020	add	r2,r0,r1
 1244  00001da8  afc20000	sw	(r30),r2
 1245  00001dac  8fc10000	lw	r1,(r30)
 1246  00001db0  90220000	lbu	r2,(r1)
 1247  00001db4  60410078	seqi	r1,r2,#120
 1248  00001db8  14200020	bnez	r1,L83_LF2
 1249  00001dbc  54000000	nop; delay slot nop
 1250  00001dc0  8fc10000	lw	r1,(r30)
 1251  00001dc4  90220000	lbu	r2,(r1)
 1252  00001dc8  60410058	seqi	r1,r2,#88
 1253  00001dcc  1420000c	bnez	r1,L83_LF2
 1254  00001dd0  54000000	nop; delay slot nop
 1255  00001dd4  08000024	j	L82_LF2
 1256  00001dd8  54000000	nop; delay slot nop
 1257  00001ddc          	L83_LF2:
 1258  00001ddc  20010010	addi	r1,r0,#16
 1259  00001de0  afc10008	sw	8(r30),r1
 1260  00001de4  8fc20000	lw	r2,(r30)
 1261  00001de8  20410001	addi	r1,r2,#1
 1262  00001dec  00011020	add	r2,r0,r1
 1263  00001df0  afc20000	sw	(r30),r2
 1264  00001df4  0800000c	j	L84_LF2
 1265  00001df8  54000000	nop; delay slot nop
 1266  00001dfc          	L82_LF2:
 1267  00001dfc  20010008	addi	r1,r0,#8
 1268  00001e00  afc10008	sw	8(r30),r1
 1269  00001e04          	L84_LF2:
 1270  00001e04  0800000c	j	L80_LF2
 1271  00001e08  54000000	nop; delay slot nop
 1272  00001e0c          	L81_LF2:
 1273  00001e0c  2001000a	addi	r1,r0,#10
 1274  00001e10  afc10008	sw	8(r30),r1
 1275  00001e14          	L85_LF2:
 1276  00001e14          	L80_LF2:
 1277  00001e14  8fc10008	lw	r1,8(r30)
 1278  00001e18  70220000	slei	r2,r1,#0
 1279  00001e1c  1440001c	bnez	r2,L87_LF2
 1280  00001e20  54000000	nop; delay slot nop
 1281  00001e24  8fc10008	lw	r1,8(r30)
 1282  00001e28  6c220010	sgti	r2,r1,#16
 1283  00001e2c  1440000c	bnez	r2,L87_LF2
 1284  00001e30  54000000	nop; delay slot nop
 1285  00001e34  08000010	j	L86_LF2
 1286  00001e38  54000000	nop; delay slot nop
 1287  00001e3c          	L87_LF2:
 1288  00001e3c  8fc1fff4	lw	r1,-12(r30)
 1289  00001e40  08000188	j	L72_LF2
 1290  00001e44  54000000	nop; delay slot nop
 1291  00001e48          	L86_LF2:
 1292  00001e48  54000000	nop
 1293  00001e4c          	L88_LF2:
 1294  00001e4c  8fc10000	lw	r1,(r30)
 1295  00001e50  90220000	lbu	r2,(r1)
 1296  00001e54  6c41002f	sgtui	r1,r2,#47
 1297  00001e58  10200030	beqz	r1,L91_LF2
 1298  00001e5c  54000000	nop; delay slot nop
 1299  00001e60  8fc10000	lw	r1,(r30)
 1300  00001e64  90220000	lbu	r2,(r1)
 1301  00001e68  70410039	sleui	r1,r2,#57
 1302  00001e6c  1020001c	beqz	r1,L91_LF2
 1303  00001e70  54000000	nop; delay slot nop
 1304  00001e74  8fc10000	lw	r1,(r30)
 1305  00001e78  90220000	lbu	r2,(r1)
 1306  00001e7c  2041ffd0	addi	r1,r2,#-48
 1307  00001e80  afc1fff0	sw	-16(r30),r1
 1308  00001e84  0800008c	j	L92_LF2
 1309  00001e88  54000000	nop; delay slot nop
 1310  00001e8c          	L91_LF2:
 1311  00001e8c  8fc10000	lw	r1,(r30)
 1312  00001e90  90220000	lbu	r2,(r1)
 1313  00001e94  6c410060	sgtui	r1,r2,#96
 1314  00001e98  10200030	beqz	r1,L93_LF2
 1315  00001e9c  54000000	nop; delay slot nop
 1316  00001ea0  8fc10000	lw	r1,(r30)
 1317  00001ea4  90220000	lbu	r2,(r1)
 1318  00001ea8  7041007a	sleui	r1,r2,#122
 1319  00001eac  1020001c	beqz	r1,L93_LF2
 1320  00001eb0  54000000	nop; delay slot nop
 1321  00001eb4  8fc10000	lw	r1,(r30)
 1322  00001eb8  90220000	lbu	r2,(r1)
 1323  00001ebc  2041ffa9	addi	r1,r2,#-87
 1324  00001ec0  afc1fff0	sw	-16(r30),r1
 1325  00001ec4  0800004c	j	L92_LF2
 1326  00001ec8  54000000	nop; delay slot nop
 1327  00001ecc          	L93_LF2:
 1328  00001ecc  8fc10000	lw	r1,(r30)
 1329  00001ed0  90220000	lbu	r2,(r1)
 1330  00001ed4  6c410040	sgtui	r1,r2,#64
 1331  00001ed8  10200030	beqz	r1,L95_LF2
 1332  00001edc  54000000	nop; delay slot nop
 1333  00001ee0  8fc10000	lw	r1,(r30)
 1334  00001ee4  90220000	lbu	r2,(r1)
 1335  00001ee8  7041005a	sleui	r1,r2,#90
 1336  00001eec  1020001c	beqz	r1,L95_LF2
 1337  00001ef0  54000000	nop; delay slot nop
 1338  00001ef4  8fc10000	lw	r1,(r30)
 1339  00001ef8  90220000	lbu	r2,(r1)
 1340  00001efc  2041ffc9	addi	r1,r2,#-55
 1341  00001f00  afc1fff0	sw	-16(r30),r1
 1342  00001f04  0800000c	j	L92_LF2
 1343  00001f08  54000000	nop; delay slot nop
 1344  00001f0c          	L95_LF2:
 1345  00001f0c  200103e8	addi	r1,r0,#1000
 1346  00001f10  afc1fff0	sw	-16(r30),r1
 1347  00001f14          	L96_LF2:
 1348  00001f14          	L94_LF2:
 1349  00001f14          	L92_LF2:
 1350  00001f14  8fc1fff0	lw	r1,-16(r30)
 1351  00001f18  8fc20008	lw	r2,8(r30)
 1352  00001f1c  0022082a	slt	r1,r1,r2
 1353  00001f20  10200040	beqz	r1,L90_LF2
 1354  00001f24  54000000	nop; delay slot nop
 1355  00001f28  8fc1fff4	lw	r1,-12(r30)
 1356  00001f2c  8fc20008	lw	r2,8(r30)
 1357  00001f30  00200035	movi2fp	f0,r1
 1358  00001f34  00400835	movi2fp	f1,r2
 1359  00001f38  0401000e	mult	f0,f0,f1
 1360  00001f3c  00000834	movfp2i	r1,f0
 1361  00001f40  afc1fff4	sw	-12(r30),r1
 1362  00001f44  8fc1fff4	lw	r1,-12(r30)
 1363  00001f48  8fc2fff0	lw	r2,-16(r30)
 1364  00001f4c  00220820	add	r1,r1,r2
 1365  00001f50  afc1fff4	sw	-12(r30),r1
 1366  00001f54  8fc20000	lw	r2,(r30)
 1367  00001f58  20410001	addi	r1,r2,#1
 1368  00001f5c  00011020	add	r2,r0,r1
 1369  00001f60  afc20000	sw	(r30),r2
 1370  00001f64          	L97_LF2:
 1371  00001f64          	L90_LF2:
 1372  00001f64  8fc1fff0	lw	r1,-16(r30)
 1373  00001f68  8fc20008	lw	r2,8(r30)
 1374  00001f6c  0022082a	slt	r1,r1,r2
 1375  00001f70  1420000c	bnez	r1,L98_LF2
 1376  00001f74  54000000	nop; delay slot nop
 1377  00001f78  0800000c	j	L89_LF2
 1378  00001f7c  54000000	nop; delay slot nop
 1379  00001f80          	L98_LF2:
 1380  00001f80  0bfffec8	j	L88_LF2
 1381  00001f84  54000000	nop; delay slot nop
 1382  00001f88          	L89_LF2:
 1383  00001f88  8fc10004	lw	r1,4(r30)
 1384  00001f8c  64220000	snei	r2,r1,#0
 1385  00001f90  10400010	beqz	r2,L99_LF2
 1386  00001f94  54000000	nop; delay slot nop
 1387  00001f98  8fc10004	lw	r1,4(r30)
 1388  00001f9c  8fc20000	lw	r2,(r30)
 1389  00001fa0  ac220000	sw	(r1),r2
 1390  00001fa4          	L99_LF2:
 1391  00001fa4  8fc1fff4	lw	r1,-12(r30)
 1392  00001fa8  8fc2ffec	lw	r2,-20(r30)
 1393  00001fac  00200035	movi2fp	f0,r1
 1394  00001fb0  00400835	movi2fp	f1,r2
 1395  00001fb4  0401000e	mult	f0,f0,f1
 1396  00001fb8  00000834	movfp2i	r1,f0
 1397  00001fbc  afc1fff4	sw	-12(r30),r1
 1398  00001fc0  8fc1fff4	lw	r1,-12(r30)
 1399  00001fc4  08000004	j	L72_LF2
 1400  00001fc8  54000000	nop; delay slot nop
 1401  00001fcc          	L72_LF2:
 1402  00001fcc  8fa20000	lw	r2,0(r29)
 1403  00001fd0  8fdffff8	lw	r31,-8(r30)
 1404  00001fd4  001ee820	add	r29,r0,r30
 1405  00001fd8  8fdefffc	lw	r30,-4(r30)
 1406  00001fdc  4be00000	jr	r31
 1407  00001fe0  54000000	nop
 1408  00001fe4          	.endproc _dstrtol
 1409  00001fe4          	.align 2
 1410  00001fe4          	.proc _bcopy
 1411  00001fe4          	.global _bcopy
 1412  00001fe4          	_bcopy:
 1413                      ;  Function 'bcopy'; 0 bytes of locals, 2 regs to save.
 1414  00001fe4  afbefffc	sw	-4(r29),r30; push fp
 1415  00001fe8  001df020	add	r30,r0,r29; fp = sp
 1416  00001fec  afbffff8	sw	-8(r29),r31; push ret addr
 1417  00001ff0  2fbd0010	subui	r29,r29,#16; alloc local storage
 1418  00001ff4  afa20000	sw	0(r29),r2
 1419  00001ff8  afa30004	sw	4(r29),r3
 1420  00001ffc  54000000	nop
 1421  00002000          	L101_LF2:
 1422  00002000  8fc10008	lw	r1,8(r30)
 1423  00002004  2022ffff	addi	r2,r1,#-1
 1424  00002008  afc20008	sw	8(r30),r2
 1425  0000200c  6c210000	sgti	r1,r1,#0
 1426  00002010  1420000c	bnez	r1,L103_LF2
 1427  00002014  54000000	nop; delay slot nop
 1428  00002018  0800002c	j	L102_LF2
 1429  0000201c  54000000	nop; delay slot nop
 1430  00002020          	L103_LF2:
 1431  00002020  8fc10004	lw	r1,4(r30)
 1432  00002024  20220001	addi	r2,r1,#1
 1433  00002028  afc20004	sw	4(r30),r2
 1434  0000202c  8fc20000	lw	r2,(r30)
 1435  00002030  20430001	addi	r3,r2,#1
 1436  00002034  afc30000	sw	(r30),r3
 1437  00002038  80420000	lb	r2,(r2)
 1438  0000203c  a0220000	sb	(r1),r2
 1439  00002040  0bffffbc	j	L101_LF2
 1440  00002044  54000000	nop; delay slot nop
 1441  00002048          	L102_LF2:
 1442  00002048          	L100_LF2:
 1443  00002048  8fa20000	lw	r2,0(r29)
 1444  0000204c  8fa30004	lw	r3,4(r29)
 1445  00002050  8fdffff8	lw	r31,-8(r30)
 1446  00002054  001ee820	add	r29,r0,r30
 1447  00002058  8fdefffc	lw	r30,-4(r30)
 1448  0000205c  4be00000	jr	r31
 1449  00002060  54000000	nop
 1450  00002064          	.endproc _bcopy
 1451  00002064          	.align 2
 1452  00002064          	.proc _bzero
 1453  00002064          	.global _bzero
 1454  00002064          	_bzero:
 1455                      ;  Function 'bzero'; 0 bytes of locals, 1 regs to save.
 1456  00002064  afbefffc	sw	-4(r29),r30; push fp
 1457  00002068  001df020	add	r30,r0,r29; fp = sp
 1458  0000206c  afbffff8	sw	-8(r29),r31; push ret addr
 1459  00002070  2fbd0010	subui	r29,r29,#16; alloc local storage
 1460  00002074  afa20000	sw	0(r29),r2
 1461  00002078  54000000	nop
 1462  0000207c          	L105_LF2:
 1463  0000207c  8fc10004	lw	r1,4(r30)
 1464  00002080  2022ffff	addi	r2,r1,#-1
 1465  00002084  afc20004	sw	4(r30),r2
 1466  00002088  6c210000	sgti	r1,r1,#0
 1467  0000208c  1420000c	bnez	r1,L107_LF2
 1468  00002090  54000000	nop; delay slot nop
 1469  00002094  08000020	j	L106_LF2
 1470  00002098  54000000	nop; delay slot nop
 1471  0000209c          	L107_LF2:
 1472  0000209c  8fc10000	lw	r1,(r30)
 1473  000020a0  20220001	addi	r2,r1,#1
 1474  000020a4  afc20000	sw	(r30),r2
 1475  000020a8  20020000	addi	r2,r0,(#0x0)&0xff
 1476  000020ac  a0220000	sb	(r1),r2
 1477  000020b0  0bffffc8	j	L105_LF2
 1478  000020b4  54000000	nop; delay slot nop
 1479  000020b8          	L106_LF2:
 1480  000020b8          	L104_LF2:
 1481  000020b8  8fa20000	lw	r2,0(r29)
 1482  000020bc  8fdffff8	lw	r31,-8(r30)
 1483  000020c0  001ee820	add	r29,r0,r30
 1484  000020c4  8fdefffc	lw	r30,-4(r30)
 1485  000020c8  4be00000	jr	r31
 1486  000020cc  54000000	nop
 1487  000020d0          	.endproc _bzero
 1488  000020d0          	.align 2
 1489  000020d0          	.proc _min
 1490  000020d0          	.global _min
 1491  000020d0          	_min:
 1492                      ;  Function 'min'; 0 bytes of locals, 2 regs to save.
 1493  000020d0  afbefffc	sw	-4(r29),r30; push fp
 1494  000020d4  001df020	add	r30,r0,r29; fp = sp
 1495  000020d8  afbffff8	sw	-8(r29),r31; push ret addr
 1496  000020dc  2fbd0010	subui	r29,r29,#16; alloc local storage
 1497  000020e0  afa20000	sw	0(r29),r2
 1498  000020e4  afa30004	sw	4(r29),r3
 1499  000020e8  8fc10000	lw	r1,(r30)
 1500  000020ec  8fc20004	lw	r2,4(r30)
 1501  000020f0  0022182c	sle	r3,r1,r2
 1502  000020f4  14600008	bnez	r3,L109_LF2
 1503  000020f8  54000000	nop; delay slot nop
 1504  000020fc  8fc10004	lw	r1,4(r30)
 1505  00002100          	L109_LF2:
 1506  00002100  08000004	j	L108_LF2
 1507  00002104  54000000	nop; delay slot nop
 1508  00002108          	L108_LF2:
 1509  00002108  8fa20000	lw	r2,0(r29)
 1510  0000210c  8fa30004	lw	r3,4(r29)
 1511  00002110  8fdffff8	lw	r31,-8(r30)
 1512  00002114  001ee820	add	r29,r0,r30
 1513  00002118  8fdefffc	lw	r30,-4(r30)
 1514  0000211c  4be00000	jr	r31
 1515  00002120  54000000	nop
 1516  00002124          	.endproc _min
 1517  00002124          	.align 2
 1518  00002124          	.proc _max
 1519  00002124          	.global _max
 1520  00002124          	_max:
 1521                      ;  Function 'max'; 0 bytes of locals, 2 regs to save.
 1522  00002124  afbefffc	sw	-4(r29),r30; push fp
 1523  00002128  001df020	add	r30,r0,r29; fp = sp
 1524  0000212c  afbffff8	sw	-8(r29),r31; push ret addr
 1525  00002130  2fbd0010	subui	r29,r29,#16; alloc local storage
 1526  00002134  afa20000	sw	0(r29),r2
 1527  00002138  afa30004	sw	4(r29),r3
 1528  0000213c  8fc10000	lw	r1,(r30)
 1529  00002140  8fc20004	lw	r2,4(r30)
 1530  00002144  0022182d	sge	r3,r1,r2
 1531  00002148  14600008	bnez	r3,L111_LF2
 1532  0000214c  54000000	nop; delay slot nop
 1533  00002150  8fc10004	lw	r1,4(r30)
 1534  00002154          	L111_LF2:
 1535  00002154  08000004	j	L110_LF2
 1536  00002158  54000000	nop; delay slot nop
 1537  0000215c          	L110_LF2:
 1538  0000215c  8fa20000	lw	r2,0(r29)
 1539  00002160  8fa30004	lw	r3,4(r29)
 1540  00002164  8fdffff8	lw	r31,-8(r30)
 1541  00002168  001ee820	add	r29,r0,r30
 1542  0000216c  8fdefffc	lw	r30,-4(r30)
 1543  00002170  4be00000	jr	r31
 1544  00002174  54000000	nop
 1545  00002178          	.endproc _max
 1546                      ;;; Ethan L. Miller, 1999.  Released to the public domain
 1547                      ;;;
 1548                      ;;; Most of the traps are called in files from libtraps.
 1551  00002178          	.align 2
 1552  00002178          	.proc _exit
 1553  00002178          	.global _exit
 1554  00002178          	_exit:
 1555  00002178  44000300	trap	#0x300
 1556  0000217c  4be00000	jr	r31
 1557  00002180  54000000	nop
 1558  00002184          	.endproc _exit
 1560                      ; for the benefit of gcc.
 1561  00002184          	.proc ___main
 1562  00002184          	.global ___main
 1563  00002184          	___main:
 1564  00002184  4be00000	jr	r31
 1565  00002188  54000000	nop
 1566  0000218c          	.endproc ___main
 1567  0000218c          	.text
 1568  0000218c          	.global _etext
 1569  0000218c          	_etext:
 1570  0000218c          	.align 3
 1571  00002190          	.data
 1572  000030de          	.global _edata
 1573  000030de          	_edata:
