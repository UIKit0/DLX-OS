 line   address	contents
    1                      ; Linked by DLX-LD.
    2                      ; MemSize 24576
    3                      ; Data size: 322
    4                      ; Text size: 4848
    5                      ; Stack size: 8192
    6  00000000          	.text 0x1000
    7  00001000          	.data 0x3000
    8                      ; Compiled by GCC
    9  00003000          	.text
   10  00001000          	.align 2
   11  00001000          	.proc _isspace
   12  00001000          	.global _isspace
   13  00001000          	_isspace:
   14                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
   15  00001000  afbefffc	sw	-4(r29),r30; push fp
   16  00001004  001df020	add	r30,r0,r29; fp = sp
   17  00001008  afbffff8	sw	-8(r29),r31; push ret addr
   18  0000100c  2fbd0010	subui	r29,r29,#16; alloc local storage
   19  00001010  afa20000	sw	0(r29),r2
   20  00001014  83c20003	lb	r2,3(r30)
   21  00001018  201f0000	addi	r31,r0,#0
   22  0000101c  304100ff	andi	r1,r2,#0x00ff
   23  00001020  60210020	seqi	r1,r1,#32
   24  00001024  14200018	bnez	r1,L6_LF0
   25  00001028  54000000	nop; not filled.
   26  0000102c  2041fff7	addi	r1,r2,#-9
   27  00001030  302100ff	andi	r1,r1,#0x00ff
   28  00001034  70210001	sleui	r1,r1,#1
   29  00001038  10200008	beqz	r1,L5_LF0
   30  0000103c  54000000	nop; not filled.
   31  00001040          	L6_LF0:
   32  00001040  201f0001	addi	r31,r0,#1
   33  00001044          	L5_LF0:
   34  00001044  001f0820	add	r1,r0,r31
   35  00001048  8fa20000	lw	r2,0(r29)
   36  0000104c  8fdffff8	lw	r31,-8(r30)
   37  00001050  001ee820	add	r29,r0,r30
   38  00001054  8fdefffc	lw	r30,-4(r30)
   39  00001058  4be00000	jr	r31
   40  0000105c  54000000	nop
   41  00001060          	.endproc _isspace
   42  00001060          	.align 2
   43  00001060          	.proc _isxdigit
   44  00001060          	.global _isxdigit
   45  00001060          	_isxdigit:
   46                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
   47  00001060  afbefffc	sw	-4(r29),r30; push fp
   48  00001064  001df020	add	r30,r0,r29; fp = sp
   49  00001068  afbffff8	sw	-8(r29),r31; push ret addr
   50  0000106c  2fbd0010	subui	r29,r29,#16; alloc local storage
   51  00001070  afa20000	sw	0(r29),r2
   52  00001074  83df0003	lb	r31,3(r30)
   53  00001078  20020000	addi	r2,r0,#0
   54  0000107c  23e1ffd0	addi	r1,r31,#-48
   55  00001080  302100ff	andi	r1,r1,#0x00ff
   56  00001084  70210009	sleui	r1,r1,#9
   57  00001088  14200028	bnez	r1,L12_LF0
   58  0000108c  54000000	nop; not filled.
   59  00001090  23e1ff9f	addi	r1,r31,#-97
   60  00001094  302100ff	andi	r1,r1,#0x00ff
   61  00001098  70210005	sleui	r1,r1,#5
   62  0000109c  14200014	bnez	r1,L12_LF0
   63  000010a0  54000000	nop; not filled.
   64  000010a4  33e100ff	andi	r1,r31,#0x00ff
   65  000010a8  64210041	snei	r1,r1,#65
   66  000010ac  14200008	bnez	r1,L11_LF0
   67  000010b0  54000000	nop; not filled.
   68  000010b4          	L12_LF0:
   69  000010b4  20020001	addi	r2,r0,#1
   70  000010b8          	L11_LF0:
   71  000010b8  00020820	add	r1,r0,r2
   72  000010bc  8fa20000	lw	r2,0(r29)
   73  000010c0  8fdffff8	lw	r31,-8(r30)
   74  000010c4  001ee820	add	r29,r0,r30
   75  000010c8  8fdefffc	lw	r30,-4(r30)
   76  000010cc  4be00000	jr	r31
   77  000010d0  54000000	nop
   78  000010d4          	.endproc _isxdigit
   79  000010d4          	.data
   80  00003000          	.align 2
   81  00003000          	LC0_LF0:
   82  00003000  55736167	.ascii "Usage: %s <handle_to_mbox_N><handle_to_mbox_O2><handle_to_mbox_NO2> <h"
   82  00003004  653a2025	
   82  00003008  73203c68	
   82  0000300c  616e646c	
   82  00003010  655f746f	
   82  00003014  5f6d626f	
   82  00003018  785f4e3e	
   82  0000301c  3c68616e	
   82  00003020  646c655f	
   82  00003024  746f5f6d	
   82  00003028  626f785f	
   82  0000302c  4f323e3c	
   82  00003030  68616e64	
   82  00003034  6c655f74	
   82  00003038  6f5f6d62	
   82  0000303c  6f785f4e	
   82  00003040  4f323e20	
   82  00003044  3c68    	
   83  00003046  616e646c	.ascii "andle_to_page_mapped_semaphore>\n\000"
   83  0000304a  655f746f	
   83  0000304e  5f706167	
   83  00003052  655f6d61	
   83  00003056  70706564	
   83  0000305a  5f73656d	
   83  0000305e  6170686f	
   83  00003062  72653e0a	
   83  00003066  00      	
   84  00003067          	.align 2
   85  00003068          	LC1_LF0:
   86  00003068  436f756c	.ascii "Could not open the mbox_N!\n\000"
   86  0000306c  64206e6f	
   86  00003070  74206f70	
   86  00003074  656e2074	
   86  00003078  6865206d	
   86  0000307c  626f785f	
   86  00003080  4e210a00	
   87  00003084          	.align 2
   88  00003084          	LC2_LF0:
   89  00003084  436f756c	.ascii "Could not receive message from mbox_N!\n\000"
   89  00003088  64206e6f	
   89  0000308c  74207265	
   89  00003090  63656976	
   89  00003094  65206d65	
   89  00003098  73736167	
   89  0000309c  65206672	
   89  000030a0  6f6d206d	
   89  000030a4  626f785f	
   89  000030a8  4e210a00	
   90  000030ac          	.align 2
   91  000030ac          	LC3_LF0:
   92  000030ac  436f756c	.ascii "Could not receive message from mbox_O2!\n\000"
   92  000030b0  64206e6f	
   92  000030b4  74207265	
   92  000030b8  63656976	
   92  000030bc  65206d65	
   92  000030c0  73736167	
   92  000030c4  65206672	
   92  000030c8  6f6d206d	
   92  000030cc  626f785f	
   92  000030d0  4f32210a	
   92  000030d4  00      	
   93  000030d5          	.align 2
   94  000030d8          	LC4_LF0:
   95  000030d8  436f756c	.ascii "Could not send message to mbox_NO2!\n\000"
   95  000030dc  64206e6f	
   95  000030e0  74207365	
   95  000030e4  6e64206d	
   95  000030e8  65737361	
   95  000030ec  67652074	
   95  000030f0  6f206d62	
   95  000030f4  6f785f4e	
   95  000030f8  4f32210a	
   95  000030fc  00      	
   96  000030fd          	.align 2
   97  00003100          	LC5_LF0:
   98  00003100  476f7420	.ascii "Got 1 NO2!\n\000"
   98  00003104  31204e4f	
   98  00003108  32210a00	
   99  0000310c          	.align 2
  100  0000310c          	LC6_LF0:
  101  0000310c  73706177	.ascii "spawn_me (%d): Bad semaphore s_procs_completed (%d)!\n\000"
  101  00003110  6e5f6d65	
  101  00003114  20282564	
  101  00003118  293a2042	
  101  0000311c  61642073	
  101  00003120  656d6170	
  101  00003124  686f7265	
  101  00003128  20735f70	
  101  0000312c  726f6373	
  101  00003130  5f636f6d	
  101  00003134  706c6574	
  101  00003138  65642028	
  101  0000313c  25642921	
  101  00003140  0a00    	
  102  00003142          	.text
  103  000010d4          	.align 2
  104  000010d4          	.proc _main
  105  000010d4          	.global _main
  106  000010d4          	_main:
  107                      ;  Function 'main'; 8 bytes of locals, 0 regs to save.
  108  000010d4  afbefffc	sw	-4(r29),r30; push fp
  109  000010d8  001df020	add	r30,r0,r29; fp = sp
  110  000010dc  afbffff8	sw	-8(r29),r31; push ret addr
  111  000010e0  2fbd0010	subui	r29,r29,#16; alloc local storage
  112  000010e4  8fc20000	lw	r2,(r30)
  113  000010e8  8fc30004	lw	r3,4(r30)
  114  000010ec  0c0011f8	jal	___main
  115  000010f0  54000000	nop; not filled.
  116  000010f4  64410005	snei	r1,r2,#5
  117  000010f8  10200028	beqz	r1,L14_LF0
  118  000010fc  54000000	nop; not filled.
  119  00001100  23bdfff8	addi	r29,r29,#-8
  120  00001104  3c060000	lhi	r6,((LC0_LF0)>>16)&0xffff
  121  00001108  24c63000	addui	r6,r6,(LC0_LF0)&0xffff
  122  0000110c  afa60000	sw	(r29),r6
  123  00001110  0c000324	jal	_Printf
  124  00001114  54000000	nop; not filled.
  125  00001118  0c000424	jal	_Exit
  126  0000111c  54000000	nop; not filled.
  127  00001120  23bd0008	addi	r29,r29,#8
  128  00001124          	L14_LF0:
  129  00001124  23bdfff0	addi	r29,r29,#-16
  130  00001128  8c660004	lw	r6,4(r3)
  131  0000112c  afa60000	sw	(r29),r6
  132  00001130  20060000	addi	r6,r0,#0
  133  00001134  afa60004	sw	4(r29),r6
  134  00001138  2006000a	addi	r6,r0,#10
  135  0000113c  afa60008	sw	8(r29),r6
  136  00001140  0c000ca8	jal	_dstrtol
  137  00001144  54000000	nop; not filled.
  138  00001148  00011020	add	r2,r0,r1
  139  0000114c  8c660008	lw	r6,8(r3)
  140  00001150  afa60000	sw	(r29),r6
  141  00001154  20060000	addi	r6,r0,#0
  142  00001158  afa60004	sw	4(r29),r6
  143  0000115c  2006000a	addi	r6,r0,#10
  144  00001160  afa60008	sw	8(r29),r6
  145  00001164  0c000c84	jal	_dstrtol
  146  00001168  54000000	nop; not filled.
  147  0000116c  00012020	add	r4,r0,r1
  148  00001170  8c66000c	lw	r6,12(r3)
  149  00001174  afa60000	sw	(r29),r6
  150  00001178  20060000	addi	r6,r0,#0
  151  0000117c  afa60004	sw	4(r29),r6
  152  00001180  2006000a	addi	r6,r0,#10
  153  00001184  afa60008	sw	8(r29),r6
  154  00001188  0c000c60	jal	_dstrtol
  155  0000118c  54000000	nop; not filled.
  156  00001190  00012820	add	r5,r0,r1
  157  00001194  8c630010	lw	r3,16(r3)
  158  00001198  afa30000	sw	(r29),r3
  159  0000119c  20060000	addi	r6,r0,#0
  160  000011a0  afa60004	sw	4(r29),r6
  161  000011a4  2006000a	addi	r6,r0,#10
  162  000011a8  afa60008	sw	8(r29),r6
  163  000011ac  0c000c3c	jal	_dstrtol
  164  000011b0  54000000	nop; not filled.
  165  000011b4  00011820	add	r3,r0,r1
  166  000011b8  afa20000	sw	(r29),r2
  167  000011bc  0c000338	jal	_mbox_open
  168  000011c0  54000000	nop; not filled.
  169  000011c4  23bd0010	addi	r29,r29,#16
  170  000011c8  6021ffff	seqi	r1,r1,#-1
  171  000011cc  10200028	beqz	r1,L15_LF0
  172  000011d0  54000000	nop; not filled.
  173  000011d4  23bdfff8	addi	r29,r29,#-8
  174  000011d8  3c060000	lhi	r6,((LC1_LF0)>>16)&0xffff
  175  000011dc  24c63068	addui	r6,r6,(LC1_LF0)&0xffff
  176  000011e0  afa60000	sw	(r29),r6
  177  000011e4  0c000250	jal	_Printf
  178  000011e8  54000000	nop; not filled.
  179  000011ec  0c000350	jal	_Exit
  180  000011f0  54000000	nop; not filled.
  181  000011f4  23bd0008	addi	r29,r29,#8
  182  000011f8          	L15_LF0:
  183  000011f8  23bdfff8	addi	r29,r29,#-8
  184  000011fc  afa40000	sw	(r29),r4
  185  00001200  0c0002f4	jal	_mbox_open
  186  00001204  54000000	nop; not filled.
  187  00001208  23bd0008	addi	r29,r29,#8
  188  0000120c  6021ffff	seqi	r1,r1,#-1
  189  00001210  10200028	beqz	r1,L16_LF0
  190  00001214  54000000	nop; not filled.
  191  00001218  23bdfff8	addi	r29,r29,#-8
  192  0000121c  3c060000	lhi	r6,((LC1_LF0)>>16)&0xffff
  193  00001220  24c63068	addui	r6,r6,(LC1_LF0)&0xffff
  194  00001224  afa60000	sw	(r29),r6
  195  00001228  0c00020c	jal	_Printf
  196  0000122c  54000000	nop; not filled.
  197  00001230  0c00030c	jal	_Exit
  198  00001234  54000000	nop; not filled.
  199  00001238  23bd0008	addi	r29,r29,#8
  200  0000123c          	L16_LF0:
  201  0000123c  23bdfff8	addi	r29,r29,#-8
  202  00001240  afa50000	sw	(r29),r5
  203  00001244  0c0002b0	jal	_mbox_open
  204  00001248  54000000	nop; not filled.
  205  0000124c  23bd0008	addi	r29,r29,#8
  206  00001250  6021ffff	seqi	r1,r1,#-1
  207  00001254  10200028	beqz	r1,L17_LF0
  208  00001258  54000000	nop; not filled.
  209  0000125c  23bdfff8	addi	r29,r29,#-8
  210  00001260  3c060000	lhi	r6,((LC1_LF0)>>16)&0xffff
  211  00001264  24c63068	addui	r6,r6,(LC1_LF0)&0xffff
  212  00001268  afa60000	sw	(r29),r6
  213  0000126c  0c0001c8	jal	_Printf
  214  00001270  54000000	nop; not filled.
  215  00001274  0c0002c8	jal	_Exit
  216  00001278  54000000	nop; not filled.
  217  0000127c  23bd0008	addi	r29,r29,#8
  218  00001280          	L17_LF0:
  219  00001280  23bdfff0	addi	r29,r29,#-16
  220  00001284  afa20000	sw	(r29),r2
  221  00001288  20060008	addi	r6,r0,#8
  222  0000128c  afa60004	sw	4(r29),r6
  223  00001290  23c2fff0	addi	r2,r30,#-16
  224  00001294  afa20008	sw	8(r29),r2
  225  00001298  0c000280	jal	_mbox_recv
  226  0000129c  54000000	nop; not filled.
  227  000012a0  23bd0010	addi	r29,r29,#16
  228  000012a4  6021ffff	seqi	r1,r1,#-1
  229  000012a8  10200028	beqz	r1,L18_LF0
  230  000012ac  54000000	nop; not filled.
  231  000012b0  23bdfff8	addi	r29,r29,#-8
  232  000012b4  3c060000	lhi	r6,((LC2_LF0)>>16)&0xffff
  233  000012b8  24c63084	addui	r6,r6,(LC2_LF0)&0xffff
  234  000012bc  afa60000	sw	(r29),r6
  235  000012c0  0c000174	jal	_Printf
  236  000012c4  54000000	nop; not filled.
  237  000012c8  0c000274	jal	_Exit
  238  000012cc  54000000	nop; not filled.
  239  000012d0  23bd0008	addi	r29,r29,#8
  240  000012d4          	L18_LF0:
  241  000012d4  23bdfff0	addi	r29,r29,#-16
  242  000012d8  afa40000	sw	(r29),r4
  243  000012dc  20060008	addi	r6,r0,#8
  244  000012e0  afa60004	sw	4(r29),r6
  245  000012e4  afa20008	sw	8(r29),r2
  246  000012e8  0c000230	jal	_mbox_recv
  247  000012ec  54000000	nop; not filled.
  248  000012f0  23bd0010	addi	r29,r29,#16
  249  000012f4  6021ffff	seqi	r1,r1,#-1
  250  000012f8  10200028	beqz	r1,L19_LF0
  251  000012fc  54000000	nop; not filled.
  252  00001300  23bdfff8	addi	r29,r29,#-8
  253  00001304  3c060000	lhi	r6,((LC3_LF0)>>16)&0xffff
  254  00001308  24c630ac	addui	r6,r6,(LC3_LF0)&0xffff
  255  0000130c  afa60000	sw	(r29),r6
  256  00001310  0c000124	jal	_Printf
  257  00001314  54000000	nop; not filled.
  258  00001318  0c000224	jal	_Exit
  259  0000131c  54000000	nop; not filled.
  260  00001320  23bd0008	addi	r29,r29,#8
  261  00001324          	L19_LF0:
  262  00001324  23bdfff0	addi	r29,r29,#-16
  263  00001328  afa50000	sw	(r29),r5
  264  0000132c  20060008	addi	r6,r0,#8
  265  00001330  afa60004	sw	4(r29),r6
  266  00001334  afa20008	sw	8(r29),r2
  267  00001338  0c0001d4	jal	_mbox_send
  268  0000133c  54000000	nop; not filled.
  269  00001340  23bd0010	addi	r29,r29,#16
  270  00001344  6021ffff	seqi	r1,r1,#-1
  271  00001348  1020002c	beqz	r1,L20_LF0
  272  0000134c  54000000	nop; not filled.
  273  00001350  23bdfff8	addi	r29,r29,#-8
  274  00001354  3c060000	lhi	r6,((LC4_LF0)>>16)&0xffff
  275  00001358  24c630d8	addui	r6,r6,(LC4_LF0)&0xffff
  276  0000135c  afa60000	sw	(r29),r6
  277  00001360  0c0000d4	jal	_Printf
  278  00001364  54000000	nop; not filled.
  279  00001368  0c0001d4	jal	_Exit
  280  0000136c  54000000	nop; not filled.
  281  00001370  0800001c	j	L23_LF0
  282  00001374  54000000	nop; not filled.
  283  00001378          	L20_LF0:
  284  00001378  23bdfff8	addi	r29,r29,#-8
  285  0000137c  3c060000	lhi	r6,((LC5_LF0)>>16)&0xffff
  286  00001380  24c63100	addui	r6,r6,(LC5_LF0)&0xffff
  287  00001384  afa60000	sw	(r29),r6
  288  00001388  0c0000ac	jal	_Printf
  289  0000138c  54000000	nop; not filled.
  290  00001390          	L23_LF0:
  291  00001390  23bd0008	addi	r29,r29,#8
  292  00001394  23bdfff8	addi	r29,r29,#-8
  293  00001398  afa30000	sw	(r29),r3
  294  0000139c  0c0000ec	jal	_sem_signal
  295  000013a0  54000000	nop; not filled.
  296  000013a4  23bd0008	addi	r29,r29,#8
  297  000013a8  64210001	snei	r1,r1,#1
  298  000013ac  10200038	beqz	r1,L22_LF0
  299  000013b0  54000000	nop; not filled.
  300  000013b4  0c00008c	jal	_getpid
  301  000013b8  54000000	nop; not filled.
  302  000013bc  23bdfff0	addi	r29,r29,#-16
  303  000013c0  3c060000	lhi	r6,((LC6_LF0)>>16)&0xffff
  304  000013c4  24c6310c	addui	r6,r6,(LC6_LF0)&0xffff
  305  000013c8  afa60000	sw	(r29),r6
  306  000013cc  afa10004	sw	4(r29),r1
  307  000013d0  afa30008	sw	8(r29),r3
  308  000013d4  0c000060	jal	_Printf
  309  000013d8  54000000	nop; not filled.
  310  000013dc  0c000160	jal	_Exit
  311  000013e0  54000000	nop; not filled.
  312  000013e4  23bd0010	addi	r29,r29,#16
  313  000013e8          	L22_LF0:
  314  000013e8  0c000ef0	jal	_exit
  315  000013ec  54000000	nop
  316  000013f0          	.endproc _main
  317                      ;;;
  318                      ;;; Stub functions for DLX traps.
  319                      ;;;
  320                      ;;; Ethan L. Miller, 1999.  Released to the public domain.
  321                      ;;;
  322                      ;;; The traps such as Open and Close
  323                      ;;; (note the capital letters) are for use by user programs.  The traps
  324                      ;;; with names such as open and close (lower case) are for use by the OS.
  325                      ;;;
  328  000013f0          	.align 2
  330                      ;;; The following are the traps to be used by user-level programs
  331                      ;;;
  333  000013f0          	.align 2
  334  000013f0          	.proc _Open
  335  000013f0          	.global _Open
  336  000013f0          	_Open:
  337                      ;;; Note that trap #0x213 actually causes a trap vector in the OS of
  338                      ;;; 0x1213.  The same is true for other user traps.  Thus, a user trap
  339                      ;;; with trap #0x240 will result in a trap vector of 0x1240 in the OS.
  340  000013f0  44000213	trap	#0x213
  341  000013f4  4be00000	jr	r31
  342  000013f8  54000000	nop
  343  000013fc          	.endproc _Open
  345  000013fc          	.proc _Close
  346  000013fc          	.global _Close
  347  000013fc          	_Close:
  348  000013fc  44000214	trap	#0x214
  349  00001400  4be00000	jr	r31
  350  00001404  54000000	nop
  351  00001408          	.endproc _Close
  353  00001408          	.proc _Read
  354  00001408          	.global _Read
  355  00001408          	_Read:
  356  00001408  44000210	trap	#0x210
  357  0000140c  4be00000	jr	r31
  358  00001410  54000000	nop
  359  00001414          	.endproc _Read
  361  00001414          	.proc _Write
  362  00001414          	.global _Write
  363  00001414          	_Write:
  364  00001414  44000211	trap	#0x211
  365  00001418  4be00000	jr	r31
  366  0000141c  54000000	nop
  367  00001420          	.endproc _Write
  369  00001420          	.proc _Lseek
  370  00001420          	.global _Lseek
  371  00001420          	_Lseek:
  372  00001420  44000212	trap	#0x212
  373  00001424  4be00000	jr	r31
  374  00001428  54000000	nop
  375  0000142c          	.endproc _Lseek
  377  0000142c          	.proc _Putchar
  378  0000142c          	.global _Putchar
  379  0000142c          	_Putchar:
  380  0000142c  44000280	trap	#0x280
  381  00001430  4be00000	jr	r31
  382  00001434  54000000	nop
  383  00001438          	.endproc _Putchar
  385  00001438          	.proc _Printf
  386  00001438          	.global _Printf
  387  00001438          	_Printf:
  388  00001438  44000201	trap	#0x201
  389  0000143c  4be00000	jr	r31
  390  00001440  54000000	nop
  391  00001444          	.endproc _Printf
  393  00001444          	.proc _getpid
  394  00001444          	.global _getpid
  395  00001444          	_getpid:
  396  00001444  44000431	trap	#0x431
  397  00001448  4be00000	jr	r31
  398  0000144c  54000000	nop
  399  00001450          	.endproc _getpid
  401  00001450          	.proc _process_create
  402  00001450          	.global _process_create
  403  00001450          	_process_create:
  404  00001450  44000432	trap	#0x432
  405  00001454  4be00000	jr	r31
  406  00001458  54000000	nop
  407  0000145c          	.endproc _process_create
  409  0000145c          	.proc _shmget
  410  0000145c          	.global _shmget
  411  0000145c          	_shmget:
  412  0000145c  44000440	trap	#0x440
  413  00001460  4be00000	jr	r31
  414  00001464  54000000	nop
  415  00001468          	.endproc _shmget
  417  00001468          	.proc _shmat
  418  00001468          	.global _shmat
  419  00001468          	_shmat:
  420  00001468  44000441	trap	#0x441
  421  0000146c  4be00000	jr	r31
  422  00001470  54000000	nop
  423  00001474          	.endproc _shmat
  425  00001474          	.proc _sem_create
  426  00001474          	.global _sem_create
  427  00001474          	_sem_create:
  428  00001474  44000450	trap	#0x450
  429  00001478  4be00000	jr	r31
  430  0000147c  54000000	nop
  431  00001480          	.endproc _sem_create
  433  00001480          	.proc _sem_wait
  434  00001480          	.global _sem_wait
  435  00001480          	_sem_wait:
  436  00001480  44000451	trap	#0x451
  437  00001484  4be00000	jr	r31
  438  00001488  54000000	nop
  439  0000148c          	.endproc _sem_wait
  441  0000148c          	.proc _sem_signal
  442  0000148c          	.global _sem_signal
  443  0000148c          	_sem_signal:
  444  0000148c  44000452	trap	#0x452
  445  00001490  4be00000	jr	r31
  446  00001494  54000000	nop
  447  00001498          	.endproc _sem_signal
  449  00001498          	.proc _lock_create
  450  00001498          	.global _lock_create
  451  00001498          	_lock_create:
  452  00001498  44000453	trap	#0x453
  453  0000149c  4be00000	jr	r31
  454  000014a0  54000000	nop
  455  000014a4          	.endproc _lock_create
  457  000014a4          	.proc _lock_acquire
  458  000014a4          	.global _lock_acquire
  459  000014a4          	_lock_acquire:
  460  000014a4  44000454	trap	#0x454
  461  000014a8  4be00000	jr	r31
  462  000014ac  54000000	nop
  463  000014b0          	.endproc _lock_acquire
  465  000014b0          	.proc _lock_release
  466  000014b0          	.global _lock_release
  467  000014b0          	_lock_release:
  468  000014b0  44000455	trap	#0x455
  469  000014b4  4be00000	jr	r31
  470  000014b8  54000000	nop
  471  000014bc          	.endproc _lock_release
  473  000014bc          	.proc _cond_create
  474  000014bc          	.global _cond_create
  475  000014bc          	_cond_create:
  476  000014bc  44000456	trap	#0x456
  477  000014c0  4be00000	jr	r31
  478  000014c4  54000000	nop
  479  000014c8          	.endproc _cond_create
  481  000014c8          	.proc _cond_wait
  482  000014c8          	.global _cond_wait
  483  000014c8          	_cond_wait:
  484  000014c8  44000457	trap	#0x457
  485  000014cc  4be00000	jr	r31
  486  000014d0  54000000	nop
  487  000014d4          	.endproc _cond_wait
  489  000014d4          	.proc _cond_signal
  490  000014d4          	.global _cond_signal
  491  000014d4          	_cond_signal:
  492  000014d4  44000458	trap	#0x458
  493  000014d8  4be00000	jr	r31
  494  000014dc  54000000	nop
  495  000014e0          	.endproc _cond_signal
  497  000014e0          	.proc _cond_broadcast
  498  000014e0          	.global _cond_broadcast
  499  000014e0          	_cond_broadcast:
  500  000014e0  44000459	trap	#0x459
  501  000014e4  4be00000	jr	r31
  502  000014e8  54000000	nop
  503  000014ec          	.endproc _cond_broadcast
  505  000014ec          	.proc _mbox_create
  506  000014ec          	.global _mbox_create
  507  000014ec          	_mbox_create:
  508  000014ec  44000460	trap	#0x460
  509  000014f0  4be00000	jr	r31
  510  000014f4  54000000	nop
  511  000014f8          	.endproc _mbox_create
  513  000014f8          	.proc _mbox_open
  514  000014f8          	.global _mbox_open
  515  000014f8          	_mbox_open:
  516  000014f8  44000461	trap	#0x461
  517  000014fc  4be00000	jr	r31
  518  00001500  54000000	nop
  519  00001504          	.endproc _mbox_open
  521  00001504          	.proc _mbox_close
  522  00001504          	.global _mbox_close
  523  00001504          	_mbox_close:
  524  00001504  44000462	trap	#0x462
  525  00001508  4be00000	jr	r31
  526  0000150c  54000000	nop
  527  00001510          	.endproc _mbox_close
  529  00001510          	.proc _mbox_send
  530  00001510          	.global _mbox_send
  531  00001510          	_mbox_send:
  532  00001510  44000463	trap	#0x463
  533  00001514  4be00000	jr	r31
  534  00001518  54000000	nop
  535  0000151c          	.endproc _mbox_send
  537  0000151c          	.proc _mbox_recv
  538  0000151c          	.global _mbox_recv
  539  0000151c          	_mbox_recv:
  540  0000151c  44000464	trap	#0x464
  541  00001520  4be00000	jr	r31
  542  00001524  54000000	nop
  543  00001528          	.endproc _mbox_recv
  545  00001528          	.proc _sleep
  546  00001528          	.global _sleep
  547  00001528          	_sleep:
  548  00001528  44000465	trap	#0x465
  549  0000152c  4be00000	jr	r31
  550  00001530  54000000	nop
  551  00001534          	.endproc _sleep
  553  00001534          	.proc _yield
  554  00001534          	.global _yield
  555  00001534          	_yield:
  556  00001534  44000466	trap	#0x466
  557  00001538  4be00000	jr	r31
  558  0000153c  54000000	nop
  559  00001540          	.endproc _yield
  562  00001540          	.proc _Exit
  563  00001540          	.global _Exit
  564  00001540          	_Exit:
  565  00001540  44000500	trap	#0x500
  566  00001544  4be00000	jr	r31
  567  00001548  54000000	nop
  568  0000154c          	.endproc _Exit
  569                      ; Compiled by GCC
  571  0000154c          	.align 2
  572  0000154c          	.proc _isspace
  573  0000154c          	.global _isspace
  574  0000154c          	_isspace:
  575                      ;  Function 'isspace'; 0 bytes of locals, 3 regs to save.
  576  0000154c  afbefffc	sw	-4(r29),r30; push fp
  577  00001550  001df020	add	r30,r0,r29; fp = sp
  578  00001554  afbffff8	sw	-8(r29),r31; push ret addr
  579  00001558  2fbd0018	subui	r29,r29,#24; alloc local storage
  580  0000155c  afa20000	sw	0(r29),r2
  581  00001560  afa30004	sw	4(r29),r3
  582  00001564  afa40008	sw	8(r29),r4
  583  00001568  83c20003	lb	r2,3(r30)
  584  0000156c  20010000	addi	r1,r0,#0
  585  00001570  304300ff	andi	r3,r2,#0x00ff
  586  00001574  60640020	seqi	r4,r3,#32
  587  00001578  1480002c	bnez	r4,L3_LF2
  588  0000157c  54000000	nop; delay slot nop
  589  00001580  304300ff	andi	r3,r2,#0x00ff
  590  00001584  60640009	seqi	r4,r3,#9
  591  00001588  1480001c	bnez	r4,L3_LF2
  592  0000158c  54000000	nop; delay slot nop
  593  00001590  304300ff	andi	r3,r2,#0x00ff
  594  00001594  6064000a	seqi	r4,r3,#10
  595  00001598  1480000c	bnez	r4,L3_LF2
  596  0000159c  54000000	nop; delay slot nop
  597  000015a0  08000008	j	L2_LF2
  598  000015a4  54000000	nop; delay slot nop
  599  000015a8          	L3_LF2:
  600  000015a8  20010001	addi	r1,r0,#1
  601  000015ac          	L2_LF2:
  602  000015ac  08000004	j	L1_LF2
  603  000015b0  54000000	nop; delay slot nop
  604  000015b4          	L1_LF2:
  605  000015b4  8fa20000	lw	r2,0(r29)
  606  000015b8  8fa30004	lw	r3,4(r29)
  607  000015bc  8fa40008	lw	r4,8(r29)
  608  000015c0  8fdffff8	lw	r31,-8(r30)
  609  000015c4  001ee820	add	r29,r0,r30
  610  000015c8  8fdefffc	lw	r30,-4(r30)
  611  000015cc  4be00000	jr	r31
  612  000015d0  54000000	nop
  613  000015d4          	.endproc _isspace
  614  000015d4          	.align 2
  615  000015d4          	.proc _isxdigit
  616  000015d4          	.global _isxdigit
  617  000015d4          	_isxdigit:
  618                      ;  Function 'isxdigit'; 0 bytes of locals, 3 regs to save.
  619  000015d4  afbefffc	sw	-4(r29),r30; push fp
  620  000015d8  001df020	add	r30,r0,r29; fp = sp
  621  000015dc  afbffff8	sw	-8(r29),r31; push ret addr
  622  000015e0  2fbd0018	subui	r29,r29,#24; alloc local storage
  623  000015e4  afa20000	sw	0(r29),r2
  624  000015e8  afa30004	sw	4(r29),r3
  625  000015ec  afa40008	sw	8(r29),r4
  626  000015f0  83c20003	lb	r2,3(r30)
  627  000015f4  20010000	addi	r1,r0,#0
  628  000015f8  304300ff	andi	r3,r2,#0x00ff
  629  000015fc  6c64002f	sgtui	r4,r3,#47
  630  00001600  1080001c	beqz	r4,L7_LF2
  631  00001604  54000000	nop; delay slot nop
  632  00001608  304300ff	andi	r3,r2,#0x00ff
  633  0000160c  70640039	sleui	r4,r3,#57
  634  00001610  1480005c	bnez	r4,L6_LF2
  635  00001614  54000000	nop; delay slot nop
  636  00001618  08000004	j	L7_LF2
  637  0000161c  54000000	nop; delay slot nop
  638  00001620          	L7_LF2:
  639  00001620  304300ff	andi	r3,r2,#0x00ff
  640  00001624  6c640060	sgtui	r4,r3,#96
  641  00001628  1080001c	beqz	r4,L8_LF2
  642  0000162c  54000000	nop; delay slot nop
  643  00001630  304300ff	andi	r3,r2,#0x00ff
  644  00001634  70640066	sleui	r4,r3,#102
  645  00001638  14800034	bnez	r4,L6_LF2
  646  0000163c  54000000	nop; delay slot nop
  647  00001640  08000004	j	L8_LF2
  648  00001644  54000000	nop; delay slot nop
  649  00001648          	L8_LF2:
  650  00001648  304300ff	andi	r3,r2,#0x00ff
  651  0000164c  6c640040	sgtui	r4,r3,#64
  652  00001650  10800020	beqz	r4,L5_LF2
  653  00001654  54000000	nop; delay slot nop
  654  00001658  304300ff	andi	r3,r2,#0x00ff
  655  0000165c  70640041	sleui	r4,r3,#65
  656  00001660  1480000c	bnez	r4,L6_LF2
  657  00001664  54000000	nop; delay slot nop
  658  00001668  08000008	j	L5_LF2
  659  0000166c  54000000	nop; delay slot nop
  660  00001670          	L6_LF2:
  661  00001670  20010001	addi	r1,r0,#1
  662  00001674          	L5_LF2:
  663  00001674  08000004	j	L4_LF2
  664  00001678  54000000	nop; delay slot nop
  665  0000167c          	L4_LF2:
  666  0000167c  8fa20000	lw	r2,0(r29)
  667  00001680  8fa30004	lw	r3,4(r29)
  668  00001684  8fa40008	lw	r4,8(r29)
  669  00001688  8fdffff8	lw	r31,-8(r30)
  670  0000168c  001ee820	add	r29,r0,r30
  671  00001690  8fdefffc	lw	r30,-4(r30)
  672  00001694  4be00000	jr	r31
  673  00001698  54000000	nop
  674  0000169c          	.endproc _isxdigit
  675  0000169c          	.align 2
  676  0000169c          	.proc _dstrcpy
  677  0000169c          	.global _dstrcpy
  678  0000169c          	_dstrcpy:
  679                      ;  Function 'dstrcpy'; 8 bytes of locals, 2 regs to save.
  680  0000169c  afbefffc	sw	-4(r29),r30; push fp
  681  000016a0  001df020	add	r30,r0,r29; fp = sp
  682  000016a4  afbffff8	sw	-8(r29),r31; push ret addr
  683  000016a8  2fbd0018	subui	r29,r29,#24; alloc local storage
  684  000016ac  afa20000	sw	0(r29),r2
  685  000016b0  afa30004	sw	4(r29),r3
  686  000016b4  8fc10000	lw	r1,(r30)
  687  000016b8  afc1fff4	sw	-12(r30),r1
  688  000016bc          	L10_LF2:
  689  000016bc  8fc10000	lw	r1,(r30)
  690  000016c0  20220001	addi	r2,r1,#1
  691  000016c4  afc20000	sw	(r30),r2
  692  000016c8  8fc20004	lw	r2,4(r30)
  693  000016cc  20430001	addi	r3,r2,#1
  694  000016d0  afc30004	sw	4(r30),r3
  695  000016d4  80420000	lb	r2,(r2)
  696  000016d8  a0220000	sb	(r1),r2
  697  000016dc  a3c2fff3	sb	-13(r30),r2
  698  000016e0          	L12_LF2:
  699  000016e0  93c1fff3	lbu	r1,-13(r30)
  700  000016e4  64220000	snei	r2,r1,#0
  701  000016e8  1440000c	bnez	r2,L13_LF2
  702  000016ec  54000000	nop; delay slot nop
  703  000016f0  0800000c	j	L11_LF2
  704  000016f4  54000000	nop; delay slot nop
  705  000016f8          	L13_LF2:
  706  000016f8  0bffffc0	j	L10_LF2
  707  000016fc  54000000	nop; delay slot nop
  708  00001700          	L11_LF2:
  709  00001700  8fc1fff4	lw	r1,-12(r30)
  710  00001704  08000004	j	L9_LF2
  711  00001708  54000000	nop; delay slot nop
  712  0000170c          	L9_LF2:
  713  0000170c  8fa20000	lw	r2,0(r29)
  714  00001710  8fa30004	lw	r3,4(r29)
  715  00001714  8fdffff8	lw	r31,-8(r30)
  716  00001718  001ee820	add	r29,r0,r30
  717  0000171c  8fdefffc	lw	r30,-4(r30)
  718  00001720  4be00000	jr	r31
  719  00001724  54000000	nop
  720  00001728          	.endproc _dstrcpy
  721  00001728          	.align 2
  722  00001728          	.proc _dstrncpy
  723  00001728          	.global _dstrncpy
  724  00001728          	_dstrncpy:
  725                      ;  Function 'dstrncpy'; 8 bytes of locals, 2 regs to save.
  726  00001728  afbefffc	sw	-4(r29),r30; push fp
  727  0000172c  001df020	add	r30,r0,r29; fp = sp
  728  00001730  afbffff8	sw	-8(r29),r31; push ret addr
  729  00001734  2fbd0018	subui	r29,r29,#24; alloc local storage
  730  00001738  afa20000	sw	0(r29),r2
  731  0000173c  afa30004	sw	4(r29),r3
  732  00001740  8fc10000	lw	r1,(r30)
  733  00001744  afc1fff4	sw	-12(r30),r1
  734  00001748          	L15_LF2:
  735  00001748  8fc10008	lw	r1,8(r30)
  736  0000174c  2022ffff	addi	r2,r1,#-1
  737  00001750  afc20008	sw	8(r30),r2
  738  00001754  70210000	slei	r1,r1,#0
  739  00001758  1020000c	beqz	r1,L18_LF2
  740  0000175c  54000000	nop; delay slot nop
  741  00001760  08000048	j	L16_LF2
  742  00001764  54000000	nop; delay slot nop
  743  00001768          	L18_LF2:
  744  00001768  8fc10000	lw	r1,(r30)
  745  0000176c  20220001	addi	r2,r1,#1
  746  00001770  afc20000	sw	(r30),r2
  747  00001774  8fc20004	lw	r2,4(r30)
  748  00001778  20430001	addi	r3,r2,#1
  749  0000177c  afc30004	sw	4(r30),r3
  750  00001780  80420000	lb	r2,(r2)
  751  00001784  a0220000	sb	(r1),r2
  752  00001788  a3c2fff3	sb	-13(r30),r2
  753  0000178c          	L17_LF2:
  754  0000178c  93c1fff3	lbu	r1,-13(r30)
  755  00001790  64220000	snei	r2,r1,#0
  756  00001794  1440000c	bnez	r2,L19_LF2
  757  00001798  54000000	nop; delay slot nop
  758  0000179c  0800000c	j	L16_LF2
  759  000017a0  54000000	nop; delay slot nop
  760  000017a4          	L19_LF2:
  761  000017a4  0bffffa0	j	L15_LF2
  762  000017a8  54000000	nop; delay slot nop
  763  000017ac          	L16_LF2:
  764  000017ac  8fc1fff4	lw	r1,-12(r30)
  765  000017b0  08000004	j	L14_LF2
  766  000017b4  54000000	nop; delay slot nop
  767  000017b8          	L14_LF2:
  768  000017b8  8fa20000	lw	r2,0(r29)
  769  000017bc  8fa30004	lw	r3,4(r29)
  770  000017c0  8fdffff8	lw	r31,-8(r30)
  771  000017c4  001ee820	add	r29,r0,r30
  772  000017c8  8fdefffc	lw	r30,-4(r30)
  773  000017cc  4be00000	jr	r31
  774  000017d0  54000000	nop
  775  000017d4          	.endproc _dstrncpy
  776  000017d4          	.align 2
  777  000017d4          	.proc _dstrcat
  778  000017d4          	.global _dstrcat
  779  000017d4          	_dstrcat:
  780                      ;  Function 'dstrcat'; 8 bytes of locals, 1 regs to save.
  781  000017d4  afbefffc	sw	-4(r29),r30; push fp
  782  000017d8  001df020	add	r30,r0,r29; fp = sp
  783  000017dc  afbffff8	sw	-8(r29),r31; push ret addr
  784  000017e0  2fbd0018	subui	r29,r29,#24; alloc local storage
  785  000017e4  afa20000	sw	0(r29),r2
  786  000017e8  8fc10000	lw	r1,(r30)
  787  000017ec  afc1fff4	sw	-12(r30),r1
  788  000017f0          	L21_LF2:
  789  000017f0  8fc10000	lw	r1,(r30)
  790  000017f4  90220000	lbu	r2,(r1)
  791  000017f8  64410000	snei	r1,r2,#0
  792  000017fc  1420000c	bnez	r1,L23_LF2
  793  00001800  54000000	nop; delay slot nop
  794  00001804  0800001c	j	L22_LF2
  795  00001808  54000000	nop; delay slot nop
  796  0000180c          	L23_LF2:
  797  0000180c  8fc20000	lw	r2,(r30)
  798  00001810  20410001	addi	r1,r2,#1
  799  00001814  00011020	add	r2,r0,r1
  800  00001818  afc20000	sw	(r30),r2
  801  0000181c  0bffffd0	j	L21_LF2
  802  00001820  54000000	nop; delay slot nop
  803  00001824          	L22_LF2:
  804  00001824  23bdfff8	addi	r29,r29,#-8
  805  00001828  001d0820	add	r1,r0,r29
  806  0000182c  8fc20000	lw	r2,(r30)
  807  00001830  ac220000	sw	(r1),r2
  808  00001834  8fc20004	lw	r2,4(r30)
  809  00001838  ac220004	sw	4(r1),r2
  810  0000183c  0ffffe5c	jal	_dstrcpy
  811  00001840  54000000	nop; delay slot nop
  812  00001844  23bd0008	addi	r29,r29,#8
  813  00001848  8fc1fff4	lw	r1,-12(r30)
  814  0000184c  08000004	j	L20_LF2
  815  00001850  54000000	nop; delay slot nop
  816  00001854          	L20_LF2:
  817  00001854  8fa20000	lw	r2,0(r29)
  818  00001858  8fdffff8	lw	r31,-8(r30)
  819  0000185c  001ee820	add	r29,r0,r30
  820  00001860  8fdefffc	lw	r30,-4(r30)
  821  00001864  4be00000	jr	r31
  822  00001868  54000000	nop
  823  0000186c          	.endproc _dstrcat
  824  0000186c          	.align 2
  825  0000186c          	.proc _dstrncmp
  826  0000186c          	.global _dstrncmp
  827  0000186c          	_dstrncmp:
  828                      ;  Function 'dstrncmp'; 8 bytes of locals, 2 regs to save.
  829  0000186c  afbefffc	sw	-4(r29),r30; push fp
  830  00001870  001df020	add	r30,r0,r29; fp = sp
  831  00001874  afbffff8	sw	-8(r29),r31; push ret addr
  832  00001878  2fbd0018	subui	r29,r29,#24; alloc local storage
  833  0000187c  afa20000	sw	0(r29),r2
  834  00001880  afa30004	sw	4(r29),r3
  835  00001884  54000000	nop
  836  00001888  20010000	addi	r1,r0,#0
  837  0000188c  afc1fff4	sw	-12(r30),r1
  838  00001890          	L25_LF2:
  839  00001890  8fc1fff4	lw	r1,-12(r30)
  840  00001894  8fc20008	lw	r2,8(r30)
  841  00001898  0022082a	slt	r1,r1,r2
  842  0000189c  1420000c	bnez	r1,L28_LF2
  843  000018a0  54000000	nop; delay slot nop
  844  000018a4  08000088	j	L26_LF2
  845  000018a8  54000000	nop; delay slot nop
  846  000018ac          	L28_LF2:
  847  000018ac  8fc10004	lw	r1,4(r30)
  848  000018b0  90220000	lbu	r2,(r1)
  849  000018b4  64410000	snei	r1,r2,#0
  850  000018b8  14200018	bnez	r1,L29_LF2
  851  000018bc  54000000	nop; delay slot nop
  852  000018c0  20010000	addi	r1,r0,#0
  853  000018c4  080000d8	j	L24_LF2
  854  000018c8  54000000	nop; delay slot nop
  855  000018cc  08000028	j	L30_LF2
  856  000018d0  54000000	nop; delay slot nop
  857  000018d4          	L29_LF2:
  858  000018d4  8fc10000	lw	r1,(r30)
  859  000018d8  8fc20004	lw	r2,4(r30)
  860  000018dc  90210000	lbu	r1,(r1)
  861  000018e0  90420000	lbu	r2,(r2)
  862  000018e4  00220829	sne	r1,r1,r2
  863  000018e8  1020000c	beqz	r1,L30_LF2
  864  000018ec  54000000	nop; delay slot nop
  865  000018f0  0800003c	j	L26_LF2
  866  000018f4  54000000	nop; delay slot nop
  867  000018f8          	L31_LF2:
  868  000018f8          	L30_LF2:
  869  000018f8  8fc20000	lw	r2,(r30)
  870  000018fc  20410001	addi	r1,r2,#1
  871  00001900  00011020	add	r2,r0,r1
  872  00001904  afc20000	sw	(r30),r2
  873  00001908  8fc20004	lw	r2,4(r30)
  874  0000190c  20410001	addi	r1,r2,#1
  875  00001910  00011020	add	r2,r0,r1
  876  00001914  afc20004	sw	4(r30),r2
  877  00001918          	L27_LF2:
  878  00001918  8fc2fff4	lw	r2,-12(r30)
  879  0000191c  20410001	addi	r1,r2,#1
  880  00001920  00011020	add	r2,r0,r1
  881  00001924  afc2fff4	sw	-12(r30),r2
  882  00001928  0bffff64	j	L25_LF2
  883  0000192c  54000000	nop; delay slot nop
  884  00001930          	L26_LF2:
  885  00001930  8fc1fff4	lw	r1,-12(r30)
  886  00001934  8fc20008	lw	r2,8(r30)
  887  00001938  00220828	seq	r1,r1,r2
  888  0000193c  10200018	beqz	r1,L32_LF2
  889  00001940  54000000	nop; delay slot nop
  890  00001944  20010000	addi	r1,r0,#0
  891  00001948  08000054	j	L24_LF2
  892  0000194c  54000000	nop; delay slot nop
  893  00001950  0800004c	j	L33_LF2
  894  00001954  54000000	nop; delay slot nop
  895  00001958          	L32_LF2:
  896  00001958  8fc20000	lw	r2,(r30)
  897  0000195c  90410000	lbu	r1,(r2)
  898  00001960  8fc20004	lw	r2,4(r30)
  899  00001964  90430000	lbu	r3,(r2)
  900  00001968  00230822	sub	r1,r1,r3
  901  0000196c  74220000	sgei	r2,r1,#0
  902  00001970  10400020	beqz	r2,L34_LF2
  903  00001974  54000000	nop; delay slot nop
  904  00001978  8fc10000	lw	r1,(r30)
  905  0000197c  8fc20004	lw	r2,4(r30)
  906  00001980  90210000	lbu	r1,(r1)
  907  00001984  90420000	lbu	r2,(r2)
  908  00001988  00220829	sne	r1,r1,r2
  909  0000198c  08000008	j	L35_LF2
  910  00001990  54000000	nop; delay slot nop
  911  00001994          	L34_LF2:
  912  00001994  2001ffff	addi	r1,r0,#-1
  913  00001998          	L35_LF2:
  914  00001998  08000004	j	L24_LF2
  915  0000199c  54000000	nop; delay slot nop
  916  000019a0          	L33_LF2:
  917  000019a0          	L24_LF2:
  918  000019a0  8fa20000	lw	r2,0(r29)
  919  000019a4  8fa30004	lw	r3,4(r29)
  920  000019a8  8fdffff8	lw	r31,-8(r30)
  921  000019ac  001ee820	add	r29,r0,r30
  922  000019b0  8fdefffc	lw	r30,-4(r30)
  923  000019b4  4be00000	jr	r31
  924  000019b8  54000000	nop
  925  000019bc          	.endproc _dstrncmp
  926  000019bc          	.align 2
  927  000019bc          	.proc _dstrlen
  928  000019bc          	.global _dstrlen
  929  000019bc          	_dstrlen:
  930                      ;  Function 'dstrlen'; 8 bytes of locals, 1 regs to save.
  931  000019bc  afbefffc	sw	-4(r29),r30; push fp
  932  000019c0  001df020	add	r30,r0,r29; fp = sp
  933  000019c4  afbffff8	sw	-8(r29),r31; push ret addr
  934  000019c8  2fbd0018	subui	r29,r29,#24; alloc local storage
  935  000019cc  afa20000	sw	0(r29),r2
  936  000019d0  20010000	addi	r1,r0,#0
  937  000019d4  afc1fff4	sw	-12(r30),r1
  938  000019d8          	L37_LF2:
  939  000019d8  8fc10000	lw	r1,(r30)
  940  000019dc  20220001	addi	r2,r1,#1
  941  000019e0  afc20000	sw	(r30),r2
  942  000019e4  90210000	lbu	r1,(r1)
  943  000019e8  64220000	snei	r2,r1,#0
  944  000019ec  1440000c	bnez	r2,L39_LF2
  945  000019f0  54000000	nop; delay slot nop
  946  000019f4  0800001c	j	L38_LF2
  947  000019f8  54000000	nop; delay slot nop
  948  000019fc          	L39_LF2:
  949  000019fc  8fc2fff4	lw	r2,-12(r30)
  950  00001a00  20410001	addi	r1,r2,#1
  951  00001a04  00011020	add	r2,r0,r1
  952  00001a08  afc2fff4	sw	-12(r30),r2
  953  00001a0c  0bffffc8	j	L37_LF2
  954  00001a10  54000000	nop; delay slot nop
  955  00001a14          	L38_LF2:
  956  00001a14  8fc1fff4	lw	r1,-12(r30)
  957  00001a18  08000004	j	L36_LF2
  958  00001a1c  54000000	nop; delay slot nop
  959  00001a20          	L36_LF2:
  960  00001a20  8fa20000	lw	r2,0(r29)
  961  00001a24  8fdffff8	lw	r31,-8(r30)
  962  00001a28  001ee820	add	r29,r0,r30
  963  00001a2c  8fdefffc	lw	r30,-4(r30)
  964  00001a30  4be00000	jr	r31
  965  00001a34  54000000	nop
  966  00001a38          	.endproc _dstrlen
  967  00001a38          	.align 2
  968  00001a38          	.proc _dstrstr
  969  00001a38          	.global _dstrstr
  970  00001a38          	_dstrstr:
  971                      ;  Function 'dstrstr'; 8 bytes of locals, 1 regs to save.
  972  00001a38  afbefffc	sw	-4(r29),r30; push fp
  973  00001a3c  001df020	add	r30,r0,r29; fp = sp
  974  00001a40  afbffff8	sw	-8(r29),r31; push ret addr
  975  00001a44  2fbd0018	subui	r29,r29,#24; alloc local storage
  976  00001a48  afa20000	sw	0(r29),r2
  977  00001a4c  23bdfff8	addi	r29,r29,#-8
  978  00001a50  001d0820	add	r1,r0,r29
  979  00001a54  8fc20004	lw	r2,4(r30)
  980  00001a58  ac220000	sw	(r1),r2
  981  00001a5c  0fffff5c	jal	_dstrlen
  982  00001a60  54000000	nop; delay slot nop
  983  00001a64  23bd0008	addi	r29,r29,#8
  984  00001a68  afc1fff4	sw	-12(r30),r1
  985  00001a6c          	L41_LF2:
  986  00001a6c  8fc10000	lw	r1,(r30)
  987  00001a70  90220000	lbu	r2,(r1)
  988  00001a74  64410000	snei	r1,r2,#0
  989  00001a78  1420000c	bnez	r1,L43_LF2
  990  00001a7c  54000000	nop; delay slot nop
  991  00001a80  08000060	j	L42_LF2
  992  00001a84  54000000	nop; delay slot nop
  993  00001a88          	L43_LF2:
  994  00001a88  23bdfff0	addi	r29,r29,#-16
  995  00001a8c  001d0820	add	r1,r0,r29
  996  00001a90  8fc20000	lw	r2,(r30)
  997  00001a94  ac220000	sw	(r1),r2
  998  00001a98  8fc20004	lw	r2,4(r30)
  999  00001a9c  ac220004	sw	4(r1),r2
 1000  00001aa0  8fc2fff4	lw	r2,-12(r30)
 1001  00001aa4  ac220008	sw	8(r1),r2
 1002  00001aa8  0ffffdc0	jal	_dstrncmp
 1003  00001aac  54000000	nop; delay slot nop
 1004  00001ab0  23bd0010	addi	r29,r29,#16
 1005  00001ab4  64220000	snei	r2,r1,#0
 1006  00001ab8  14400010	bnez	r2,L44_LF2
 1007  00001abc  54000000	nop; delay slot nop
 1008  00001ac0  8fc10000	lw	r1,(r30)
 1009  00001ac4  08000028	j	L40_LF2
 1010  00001ac8  54000000	nop; delay slot nop
 1011  00001acc          	L44_LF2:
 1012  00001acc  8fc20000	lw	r2,(r30)
 1013  00001ad0  20410001	addi	r1,r2,#1
 1014  00001ad4  00011020	add	r2,r0,r1
 1015  00001ad8  afc20000	sw	(r30),r2
 1016  00001adc  0bffff8c	j	L41_LF2
 1017  00001ae0  54000000	nop; delay slot nop
 1018  00001ae4          	L42_LF2:
 1019  00001ae4  20010000	addi	r1,r0,#0
 1020  00001ae8  08000004	j	L40_LF2
 1021  00001aec  54000000	nop; delay slot nop
 1022  00001af0          	L40_LF2:
 1023  00001af0  8fa20000	lw	r2,0(r29)
 1024  00001af4  8fdffff8	lw	r31,-8(r30)
 1025  00001af8  001ee820	add	r29,r0,r30
 1026  00001afc  8fdefffc	lw	r30,-4(r30)
 1027  00001b00  4be00000	jr	r31
 1028  00001b04  54000000	nop
 1029  00001b08          	.endproc _dstrstr
 1030  00001b08          	.align 2
 1031  00001b08          	.proc _dmindex
 1032  00001b08          	.global _dmindex
 1033  00001b08          	_dmindex:
 1034                      ;  Function 'dmindex'; 8 bytes of locals, 1 regs to save.
 1035  00001b08  afbefffc	sw	-4(r29),r30; push fp
 1036  00001b0c  001df020	add	r30,r0,r29; fp = sp
 1037  00001b10  afbffff8	sw	-8(r29),r31; push ret addr
 1038  00001b14  2fbd0018	subui	r29,r29,#24; alloc local storage
 1039  00001b18  afa20000	sw	0(r29),r2
 1040  00001b1c  54000000	nop
 1041  00001b20          	L46_LF2:
 1042  00001b20  8fc10000	lw	r1,(r30)
 1043  00001b24  90220000	lbu	r2,(r1)
 1044  00001b28  64410000	snei	r1,r2,#0
 1045  00001b2c  1420000c	bnez	r1,L48_LF2
 1046  00001b30  54000000	nop; delay slot nop
 1047  00001b34  08000070	j	L47_LF2
 1048  00001b38  54000000	nop; delay slot nop
 1049  00001b3c          	L48_LF2:
 1050  00001b3c  8fc10004	lw	r1,4(r30)
 1051  00001b40  afc1fff4	sw	-12(r30),r1
 1052  00001b44          	L49_LF2:
 1053  00001b44  8fc1fff4	lw	r1,-12(r30)
 1054  00001b48  90220000	lbu	r2,(r1)
 1055  00001b4c  64410000	snei	r1,r2,#0
 1056  00001b50  1420000c	bnez	r1,L52_LF2
 1057  00001b54  54000000	nop; delay slot nop
 1058  00001b58  08000044	j	L50_LF2
 1059  00001b5c  54000000	nop; delay slot nop
 1060  00001b60          	L52_LF2:
 1061  00001b60  8fc10000	lw	r1,(r30)
 1062  00001b64  8fc2fff4	lw	r2,-12(r30)
 1063  00001b68  90210000	lbu	r1,(r1)
 1064  00001b6c  90420000	lbu	r2,(r2)
 1065  00001b70  00220828	seq	r1,r1,r2
 1066  00001b74  10200010	beqz	r1,L51_LF2
 1067  00001b78  54000000	nop; delay slot nop
 1068  00001b7c  8fc10000	lw	r1,(r30)
 1069  00001b80  08000030	j	L45_LF2
 1070  00001b84  54000000	nop; delay slot nop
 1071  00001b88          	L53_LF2:
 1072  00001b88          	L51_LF2:
 1073  00001b88  8fc2fff4	lw	r2,-12(r30)
 1074  00001b8c  20410001	addi	r1,r2,#1
 1075  00001b90  00011020	add	r2,r0,r1
 1076  00001b94  afc2fff4	sw	-12(r30),r2
 1077  00001b98  0bffffa8	j	L49_LF2
 1078  00001b9c  54000000	nop; delay slot nop
 1079  00001ba0          	L50_LF2:
 1080  00001ba0  0bffff7c	j	L46_LF2
 1081  00001ba4  54000000	nop; delay slot nop
 1082  00001ba8          	L47_LF2:
 1083  00001ba8  20010000	addi	r1,r0,#0
 1084  00001bac  08000004	j	L45_LF2
 1085  00001bb0  54000000	nop; delay slot nop
 1086  00001bb4          	L45_LF2:
 1087  00001bb4  8fa20000	lw	r2,0(r29)
 1088  00001bb8  8fdffff8	lw	r31,-8(r30)
 1089  00001bbc  001ee820	add	r29,r0,r30
 1090  00001bc0  8fdefffc	lw	r30,-4(r30)
 1091  00001bc4  4be00000	jr	r31
 1092  00001bc8  54000000	nop
 1093  00001bcc          	.endproc _dmindex
 1094  00001bcc          	.align 2
 1095  00001bcc          	.proc _dindex
 1096  00001bcc          	.global _dindex
 1097  00001bcc          	_dindex:
 1098                      ;  Function 'dindex'; 0 bytes of locals, 1 regs to save.
 1099  00001bcc  afbefffc	sw	-4(r29),r30; push fp
 1100  00001bd0  001df020	add	r30,r0,r29; fp = sp
 1101  00001bd4  afbffff8	sw	-8(r29),r31; push ret addr
 1102  00001bd8  2fbd0010	subui	r29,r29,#16; alloc local storage
 1103  00001bdc  afa20000	sw	0(r29),r2
 1104  00001be0  54000000	nop
 1105  00001be4          	L55_LF2:
 1106  00001be4  8fc10000	lw	r1,(r30)
 1107  00001be8  90220000	lbu	r2,(r1)
 1108  00001bec  64410000	snei	r1,r2,#0
 1109  00001bf0  1420000c	bnez	r1,L57_LF2
 1110  00001bf4  54000000	nop; delay slot nop
 1111  00001bf8  08000040	j	L56_LF2
 1112  00001bfc  54000000	nop; delay slot nop
 1113  00001c00          	L57_LF2:
 1114  00001c00  8fc10000	lw	r1,(r30)
 1115  00001c04  90220000	lbu	r2,(r1)
 1116  00001c08  8fc10004	lw	r1,4(r30)
 1117  00001c0c  00411028	seq	r2,r2,r1
 1118  00001c10  10400010	beqz	r2,L58_LF2
 1119  00001c14  54000000	nop; delay slot nop
 1120  00001c18  8fc10000	lw	r1,(r30)
 1121  00001c1c  08000028	j	L54_LF2
 1122  00001c20  54000000	nop; delay slot nop
 1123  00001c24          	L58_LF2:
 1124  00001c24  8fc20000	lw	r2,(r30)
 1125  00001c28  20410001	addi	r1,r2,#1
 1126  00001c2c  00011020	add	r2,r0,r1
 1127  00001c30  afc20000	sw	(r30),r2
 1128  00001c34  0bffffac	j	L55_LF2
 1129  00001c38  54000000	nop; delay slot nop
 1130  00001c3c          	L56_LF2:
 1131  00001c3c  20010000	addi	r1,r0,#0
 1132  00001c40  08000004	j	L54_LF2
 1133  00001c44  54000000	nop; delay slot nop
 1134  00001c48          	L54_LF2:
 1135  00001c48  8fa20000	lw	r2,0(r29)
 1136  00001c4c  8fdffff8	lw	r31,-8(r30)
 1137  00001c50  001ee820	add	r29,r0,r30
 1138  00001c54  8fdefffc	lw	r30,-4(r30)
 1139  00001c58  4be00000	jr	r31
 1140  00001c5c  54000000	nop
 1141  00001c60          	.endproc _dindex
 1142  00001c60          	.align 2
 1143  00001c60          	.proc _ditoa
 1144  00001c60          	.global _ditoa
 1145  00001c60          	_ditoa:
 1146                      ;  Function 'ditoa'; 8 bytes of locals, 2 regs to save.
 1147  00001c60  afbefffc	sw	-4(r29),r30; push fp
 1148  00001c64  001df020	add	r30,r0,r29; fp = sp
 1149  00001c68  afbffff8	sw	-8(r29),r31; push ret addr
 1150  00001c6c  2fbd0018	subui	r29,r29,#24; alloc local storage
 1151  00001c70  afa20000	sw	0(r29),r2
 1152  00001c74  afa30004	sw	4(r29),r3
 1153  00001c78  8fc10000	lw	r1,(r30)
 1154  00001c7c  68220000	slti	r2,r1,#0
 1155  00001c80  1040002c	beqz	r2,L60_LF2
 1156  00001c84  54000000	nop; delay slot nop
 1157  00001c88  8fc10004	lw	r1,4(r30)
 1158  00001c8c  20220001	addi	r2,r1,#1
 1159  00001c90  afc20004	sw	4(r30),r2
 1160  00001c94  2002002d	addi	r2,r0,(#0x2d)&0xff
 1161  00001c98  a0220000	sb	(r1),r2
 1162  00001c9c  8fc10000	lw	r1,(r30)
 1163  00001ca0  00011022	sub	r2,r0,r1
 1164  00001ca4  afc20000	sw	(r30),r2
 1165  00001ca8  08000118	j	L61_LF2
 1166  00001cac  54000000	nop; delay slot nop
 1167  00001cb0          	L60_LF2:
 1168  00001cb0  8fc10000	lw	r1,(r30)
 1169  00001cb4  64220000	snei	r2,r1,#0
 1170  00001cb8  14400020	bnez	r2,L62_LF2
 1171  00001cbc  54000000	nop; delay slot nop
 1172  00001cc0  8fc10004	lw	r1,4(r30)
 1173  00001cc4  20220001	addi	r2,r1,#1
 1174  00001cc8  afc20004	sw	4(r30),r2
 1175  00001ccc  20020030	addi	r2,r0,(#0x30)&0xff
 1176  00001cd0  a0220000	sb	(r1),r2
 1177  00001cd4  080000ec	j	L61_LF2
 1178  00001cd8  54000000	nop; delay slot nop
 1179  00001cdc          	L62_LF2:
 1180  00001cdc  20010001	addi	r1,r0,#1
 1181  00001ce0  afc1fff4	sw	-12(r30),r1
 1182  00001ce4          	L64_LF2:
 1183  00001ce4  8fc1fff4	lw	r1,-12(r30)
 1184  00001ce8  8fc20000	lw	r2,(r30)
 1185  00001cec  0022082c	sle	r1,r1,r2
 1186  00001cf0  1420000c	bnez	r1,L66_LF2
 1187  00001cf4  54000000	nop; delay slot nop
 1188  00001cf8  08000024	j	L65_LF2
 1189  00001cfc  54000000	nop; delay slot nop
 1190  00001d00          	L67_LF2:
 1191  00001d00          	L66_LF2:
 1192  00001d00  8fc1fff4	lw	r1,-12(r30)
 1193  00001d04  00011820	add	r3,r0,r1
 1194  00001d08  50620002	slli	r2,r3,#0x2
 1195  00001d0c  00411020	add	r2,r2,r1
 1196  00001d10  50410001	slli	r1,r2,#0x1
 1197  00001d14  afc1fff4	sw	-12(r30),r1
 1198  00001d18  0bffffc8	j	L64_LF2
 1199  00001d1c  54000000	nop; delay slot nop
 1200  00001d20          	L65_LF2:
 1201  00001d20  54000000	nop
 1202  00001d24          	L68_LF2:
 1203  00001d24  8fc1fff4	lw	r1,-12(r30)
 1204  00001d28  2002000a	addi	r2,r0,#10
 1205  00001d2c  00200035	movi2fp	f0,r1
 1206  00001d30  00400835	movi2fp	f1,r2
 1207  00001d34  0401000f	div	f0,f0,f1
 1208  00001d38  00000834	movfp2i	r1,f0
 1209  00001d3c  afc1fff4	sw	-12(r30),r1
 1210  00001d40  8fc10004	lw	r1,4(r30)
 1211  00001d44  20220001	addi	r2,r1,#1
 1212  00001d48  afc20004	sw	4(r30),r2
 1213  00001d4c  8fc20000	lw	r2,(r30)
 1214  00001d50  8fc3fff4	lw	r3,-12(r30)
 1215  00001d54  00400035	movi2fp	f0,r2
 1216  00001d58  00600835	movi2fp	f1,r3
 1217  00001d5c  0401000f	div	f0,f0,f1
 1218  00001d60  00001034	movfp2i	r2,f0
 1219  00001d64  00021820	add	r3,r0,r2
 1220  00001d68  20620030	addi	r2,r3,#48
 1221  00001d6c  a0220000	sb	(r1),r2
 1222  00001d70  8fc10000	lw	r1,(r30)
 1223  00001d74  8fc3fff4	lw	r3,-12(r30)
 1224  00001d78  00200035	movi2fp	f0,r1
 1225  00001d7c  00600835	movi2fp	f1,r3
 1226  00001d80  0401000f	div	f0,f0,f1
 1227  00001d84  00001034	movfp2i	r2,f0
 1228  00001d88  8fc3fff4	lw	r3,-12(r30)
 1229  00001d8c  00400035	movi2fp	f0,r2
 1230  00001d90  00600835	movi2fp	f1,r3
 1231  00001d94  0401000e	mult	f0,f0,f1
 1232  00001d98  00001034	movfp2i	r2,f0
 1233  00001d9c  00220822	sub	r1,r1,r2
 1234  00001da0  afc10000	sw	(r30),r1
 1235  00001da4          	L70_LF2:
 1236  00001da4  8fc1fff4	lw	r1,-12(r30)
 1237  00001da8  6c220001	sgti	r2,r1,#1
 1238  00001dac  1440000c	bnez	r2,L71_LF2
 1239  00001db0  54000000	nop; delay slot nop
 1240  00001db4  0800000c	j	L61_LF2
 1241  00001db8  54000000	nop; delay slot nop
 1242  00001dbc          	L71_LF2:
 1243  00001dbc  0bffff64	j	L68_LF2
 1244  00001dc0  54000000	nop; delay slot nop
 1245  00001dc4          	L69_LF2:
 1246  00001dc4          	L63_LF2:
 1247  00001dc4          	L61_LF2:
 1248  00001dc4  8fc10004	lw	r1,4(r30)
 1249  00001dc8  20020000	addi	r2,r0,(#0x0)&0xff
 1250  00001dcc  a0220000	sb	(r1),r2
 1251  00001dd0          	L59_LF2:
 1252  00001dd0  8fa20000	lw	r2,0(r29)
 1253  00001dd4  8fa30004	lw	r3,4(r29)
 1254  00001dd8  8fdffff8	lw	r31,-8(r30)
 1255  00001ddc  001ee820	add	r29,r0,r30
 1256  00001de0  8fdefffc	lw	r30,-4(r30)
 1257  00001de4  4be00000	jr	r31
 1258  00001de8  54000000	nop
 1259  00001dec          	.endproc _ditoa
 1260  00001dec          	.align 2
 1261  00001dec          	.proc _dstrtol
 1262  00001dec          	.global _dstrtol
 1263  00001dec          	_dstrtol:
 1264                      ;  Function 'dstrtol'; 16 bytes of locals, 1 regs to save.
 1265  00001dec  afbefffc	sw	-4(r29),r30; push fp
 1266  00001df0  001df020	add	r30,r0,r29; fp = sp
 1267  00001df4  afbffff8	sw	-8(r29),r31; push ret addr
 1268  00001df8  2fbd0020	subui	r29,r29,#32; alloc local storage
 1269  00001dfc  afa20000	sw	0(r29),r2
 1270  00001e00  20010000	addi	r1,r0,#0
 1271  00001e04  afc1fff4	sw	-12(r30),r1
 1272  00001e08          	L73_LF2:
 1273  00001e08  8fc10000	lw	r1,(r30)
 1274  00001e0c  90220000	lbu	r2,(r1)
 1275  00001e10  60410020	seqi	r1,r2,#32
 1276  00001e14  14200034	bnez	r1,L75_LF2
 1277  00001e18  54000000	nop; delay slot nop
 1278  00001e1c  8fc10000	lw	r1,(r30)
 1279  00001e20  90220000	lbu	r2,(r1)
 1280  00001e24  60410009	seqi	r1,r2,#9
 1281  00001e28  14200020	bnez	r1,L75_LF2
 1282  00001e2c  54000000	nop; delay slot nop
 1283  00001e30  8fc10000	lw	r1,(r30)
 1284  00001e34  90220000	lbu	r2,(r1)
 1285  00001e38  6041000a	seqi	r1,r2,#10
 1286  00001e3c  1420000c	bnez	r1,L75_LF2
 1287  00001e40  54000000	nop; delay slot nop
 1288  00001e44  0800001c	j	L74_LF2
 1289  00001e48  54000000	nop; delay slot nop
 1290  00001e4c          	L75_LF2:
 1291  00001e4c  8fc20000	lw	r2,(r30)
 1292  00001e50  20410001	addi	r1,r2,#1
 1293  00001e54  00011020	add	r2,r0,r1
 1294  00001e58  afc20000	sw	(r30),r2
 1295  00001e5c  0bffffa8	j	L73_LF2
 1296  00001e60  54000000	nop; delay slot nop
 1297  00001e64          	L74_LF2:
 1298  00001e64  8fc10004	lw	r1,4(r30)
 1299  00001e68  64220000	snei	r2,r1,#0
 1300  00001e6c  10400010	beqz	r2,L76_LF2
 1301  00001e70  54000000	nop; delay slot nop
 1302  00001e74  8fc10004	lw	r1,4(r30)
 1303  00001e78  8fc20000	lw	r2,(r30)
 1304  00001e7c  ac220000	sw	(r1),r2
 1305  00001e80          	L76_LF2:
 1306  00001e80  8fc10000	lw	r1,(r30)
 1307  00001e84  90220000	lbu	r2,(r1)
 1308  00001e88  64410000	snei	r1,r2,#0
 1309  00001e8c  14200010	bnez	r1,L77_LF2
 1310  00001e90  54000000	nop; delay slot nop
 1311  00001e94  8fc1fff4	lw	r1,-12(r30)
 1312  00001e98  08000294	j	L72_LF2
 1313  00001e9c  54000000	nop; delay slot nop
 1314  00001ea0          	L77_LF2:
 1315  00001ea0  8fc10000	lw	r1,(r30)
 1316  00001ea4  90220000	lbu	r2,(r1)
 1317  00001ea8  6041002d	seqi	r1,r2,#45
 1318  00001eac  10200024	beqz	r1,L78_LF2
 1319  00001eb0  54000000	nop; delay slot nop
 1320  00001eb4  2001ffff	addi	r1,r0,#-1
 1321  00001eb8  afc1ffec	sw	-20(r30),r1
 1322  00001ebc  8fc20000	lw	r2,(r30)
 1323  00001ec0  20410001	addi	r1,r2,#1
 1324  00001ec4  00011020	add	r2,r0,r1
 1325  00001ec8  afc20000	sw	(r30),r2
 1326  00001ecc  0800000c	j	L79_LF2
 1327  00001ed0  54000000	nop; delay slot nop
 1328  00001ed4          	L78_LF2:
 1329  00001ed4  20010001	addi	r1,r0,#1
 1330  00001ed8  afc1ffec	sw	-20(r30),r1
 1331  00001edc          	L79_LF2:
 1332  00001edc  8fc10008	lw	r1,8(r30)
 1333  00001ee0  64220000	snei	r2,r1,#0
 1334  00001ee4  14400090	bnez	r2,L80_LF2
 1335  00001ee8  54000000	nop; delay slot nop
 1336  00001eec  8fc10000	lw	r1,(r30)
 1337  00001ef0  90220000	lbu	r2,(r1)
 1338  00001ef4  60410030	seqi	r1,r2,#48
 1339  00001ef8  10200074	beqz	r1,L81_LF2
 1340  00001efc  54000000	nop; delay slot nop
 1341  00001f00  8fc20000	lw	r2,(r30)
 1342  00001f04  20410001	addi	r1,r2,#1
 1343  00001f08  00011020	add	r2,r0,r1
 1344  00001f0c  afc20000	sw	(r30),r2
 1345  00001f10  8fc10000	lw	r1,(r30)
 1346  00001f14  90220000	lbu	r2,(r1)
 1347  00001f18  60410078	seqi	r1,r2,#120
 1348  00001f1c  14200020	bnez	r1,L83_LF2
 1349  00001f20  54000000	nop; delay slot nop
 1350  00001f24  8fc10000	lw	r1,(r30)
 1351  00001f28  90220000	lbu	r2,(r1)
 1352  00001f2c  60410058	seqi	r1,r2,#88
 1353  00001f30  1420000c	bnez	r1,L83_LF2
 1354  00001f34  54000000	nop; delay slot nop
 1355  00001f38  08000024	j	L82_LF2
 1356  00001f3c  54000000	nop; delay slot nop
 1357  00001f40          	L83_LF2:
 1358  00001f40  20010010	addi	r1,r0,#16
 1359  00001f44  afc10008	sw	8(r30),r1
 1360  00001f48  8fc20000	lw	r2,(r30)
 1361  00001f4c  20410001	addi	r1,r2,#1
 1362  00001f50  00011020	add	r2,r0,r1
 1363  00001f54  afc20000	sw	(r30),r2
 1364  00001f58  0800000c	j	L84_LF2
 1365  00001f5c  54000000	nop; delay slot nop
 1366  00001f60          	L82_LF2:
 1367  00001f60  20010008	addi	r1,r0,#8
 1368  00001f64  afc10008	sw	8(r30),r1
 1369  00001f68          	L84_LF2:
 1370  00001f68  0800000c	j	L80_LF2
 1371  00001f6c  54000000	nop; delay slot nop
 1372  00001f70          	L81_LF2:
 1373  00001f70  2001000a	addi	r1,r0,#10
 1374  00001f74  afc10008	sw	8(r30),r1
 1375  00001f78          	L85_LF2:
 1376  00001f78          	L80_LF2:
 1377  00001f78  8fc10008	lw	r1,8(r30)
 1378  00001f7c  70220000	slei	r2,r1,#0
 1379  00001f80  1440001c	bnez	r2,L87_LF2
 1380  00001f84  54000000	nop; delay slot nop
 1381  00001f88  8fc10008	lw	r1,8(r30)
 1382  00001f8c  6c220010	sgti	r2,r1,#16
 1383  00001f90  1440000c	bnez	r2,L87_LF2
 1384  00001f94  54000000	nop; delay slot nop
 1385  00001f98  08000010	j	L86_LF2
 1386  00001f9c  54000000	nop; delay slot nop
 1387  00001fa0          	L87_LF2:
 1388  00001fa0  8fc1fff4	lw	r1,-12(r30)
 1389  00001fa4  08000188	j	L72_LF2
 1390  00001fa8  54000000	nop; delay slot nop
 1391  00001fac          	L86_LF2:
 1392  00001fac  54000000	nop
 1393  00001fb0          	L88_LF2:
 1394  00001fb0  8fc10000	lw	r1,(r30)
 1395  00001fb4  90220000	lbu	r2,(r1)
 1396  00001fb8  6c41002f	sgtui	r1,r2,#47
 1397  00001fbc  10200030	beqz	r1,L91_LF2
 1398  00001fc0  54000000	nop; delay slot nop
 1399  00001fc4  8fc10000	lw	r1,(r30)
 1400  00001fc8  90220000	lbu	r2,(r1)
 1401  00001fcc  70410039	sleui	r1,r2,#57
 1402  00001fd0  1020001c	beqz	r1,L91_LF2
 1403  00001fd4  54000000	nop; delay slot nop
 1404  00001fd8  8fc10000	lw	r1,(r30)
 1405  00001fdc  90220000	lbu	r2,(r1)
 1406  00001fe0  2041ffd0	addi	r1,r2,#-48
 1407  00001fe4  afc1fff0	sw	-16(r30),r1
 1408  00001fe8  0800008c	j	L92_LF2
 1409  00001fec  54000000	nop; delay slot nop
 1410  00001ff0          	L91_LF2:
 1411  00001ff0  8fc10000	lw	r1,(r30)
 1412  00001ff4  90220000	lbu	r2,(r1)
 1413  00001ff8  6c410060	sgtui	r1,r2,#96
 1414  00001ffc  10200030	beqz	r1,L93_LF2
 1415  00002000  54000000	nop; delay slot nop
 1416  00002004  8fc10000	lw	r1,(r30)
 1417  00002008  90220000	lbu	r2,(r1)
 1418  0000200c  7041007a	sleui	r1,r2,#122
 1419  00002010  1020001c	beqz	r1,L93_LF2
 1420  00002014  54000000	nop; delay slot nop
 1421  00002018  8fc10000	lw	r1,(r30)
 1422  0000201c  90220000	lbu	r2,(r1)
 1423  00002020  2041ffa9	addi	r1,r2,#-87
 1424  00002024  afc1fff0	sw	-16(r30),r1
 1425  00002028  0800004c	j	L92_LF2
 1426  0000202c  54000000	nop; delay slot nop
 1427  00002030          	L93_LF2:
 1428  00002030  8fc10000	lw	r1,(r30)
 1429  00002034  90220000	lbu	r2,(r1)
 1430  00002038  6c410040	sgtui	r1,r2,#64
 1431  0000203c  10200030	beqz	r1,L95_LF2
 1432  00002040  54000000	nop; delay slot nop
 1433  00002044  8fc10000	lw	r1,(r30)
 1434  00002048  90220000	lbu	r2,(r1)
 1435  0000204c  7041005a	sleui	r1,r2,#90
 1436  00002050  1020001c	beqz	r1,L95_LF2
 1437  00002054  54000000	nop; delay slot nop
 1438  00002058  8fc10000	lw	r1,(r30)
 1439  0000205c  90220000	lbu	r2,(r1)
 1440  00002060  2041ffc9	addi	r1,r2,#-55
 1441  00002064  afc1fff0	sw	-16(r30),r1
 1442  00002068  0800000c	j	L92_LF2
 1443  0000206c  54000000	nop; delay slot nop
 1444  00002070          	L95_LF2:
 1445  00002070  200103e8	addi	r1,r0,#1000
 1446  00002074  afc1fff0	sw	-16(r30),r1
 1447  00002078          	L96_LF2:
 1448  00002078          	L94_LF2:
 1449  00002078          	L92_LF2:
 1450  00002078  8fc1fff0	lw	r1,-16(r30)
 1451  0000207c  8fc20008	lw	r2,8(r30)
 1452  00002080  0022082a	slt	r1,r1,r2
 1453  00002084  10200040	beqz	r1,L90_LF2
 1454  00002088  54000000	nop; delay slot nop
 1455  0000208c  8fc1fff4	lw	r1,-12(r30)
 1456  00002090  8fc20008	lw	r2,8(r30)
 1457  00002094  00200035	movi2fp	f0,r1
 1458  00002098  00400835	movi2fp	f1,r2
 1459  0000209c  0401000e	mult	f0,f0,f1
 1460  000020a0  00000834	movfp2i	r1,f0
 1461  000020a4  afc1fff4	sw	-12(r30),r1
 1462  000020a8  8fc1fff4	lw	r1,-12(r30)
 1463  000020ac  8fc2fff0	lw	r2,-16(r30)
 1464  000020b0  00220820	add	r1,r1,r2
 1465  000020b4  afc1fff4	sw	-12(r30),r1
 1466  000020b8  8fc20000	lw	r2,(r30)
 1467  000020bc  20410001	addi	r1,r2,#1
 1468  000020c0  00011020	add	r2,r0,r1
 1469  000020c4  afc20000	sw	(r30),r2
 1470  000020c8          	L97_LF2:
 1471  000020c8          	L90_LF2:
 1472  000020c8  8fc1fff0	lw	r1,-16(r30)
 1473  000020cc  8fc20008	lw	r2,8(r30)
 1474  000020d0  0022082a	slt	r1,r1,r2
 1475  000020d4  1420000c	bnez	r1,L98_LF2
 1476  000020d8  54000000	nop; delay slot nop
 1477  000020dc  0800000c	j	L89_LF2
 1478  000020e0  54000000	nop; delay slot nop
 1479  000020e4          	L98_LF2:
 1480  000020e4  0bfffec8	j	L88_LF2
 1481  000020e8  54000000	nop; delay slot nop
 1482  000020ec          	L89_LF2:
 1483  000020ec  8fc10004	lw	r1,4(r30)
 1484  000020f0  64220000	snei	r2,r1,#0
 1485  000020f4  10400010	beqz	r2,L99_LF2
 1486  000020f8  54000000	nop; delay slot nop
 1487  000020fc  8fc10004	lw	r1,4(r30)
 1488  00002100  8fc20000	lw	r2,(r30)
 1489  00002104  ac220000	sw	(r1),r2
 1490  00002108          	L99_LF2:
 1491  00002108  8fc1fff4	lw	r1,-12(r30)
 1492  0000210c  8fc2ffec	lw	r2,-20(r30)
 1493  00002110  00200035	movi2fp	f0,r1
 1494  00002114  00400835	movi2fp	f1,r2
 1495  00002118  0401000e	mult	f0,f0,f1
 1496  0000211c  00000834	movfp2i	r1,f0
 1497  00002120  afc1fff4	sw	-12(r30),r1
 1498  00002124  8fc1fff4	lw	r1,-12(r30)
 1499  00002128  08000004	j	L72_LF2
 1500  0000212c  54000000	nop; delay slot nop
 1501  00002130          	L72_LF2:
 1502  00002130  8fa20000	lw	r2,0(r29)
 1503  00002134  8fdffff8	lw	r31,-8(r30)
 1504  00002138  001ee820	add	r29,r0,r30
 1505  0000213c  8fdefffc	lw	r30,-4(r30)
 1506  00002140  4be00000	jr	r31
 1507  00002144  54000000	nop
 1508  00002148          	.endproc _dstrtol
 1509  00002148          	.align 2
 1510  00002148          	.proc _bcopy
 1511  00002148          	.global _bcopy
 1512  00002148          	_bcopy:
 1513                      ;  Function 'bcopy'; 0 bytes of locals, 2 regs to save.
 1514  00002148  afbefffc	sw	-4(r29),r30; push fp
 1515  0000214c  001df020	add	r30,r0,r29; fp = sp
 1516  00002150  afbffff8	sw	-8(r29),r31; push ret addr
 1517  00002154  2fbd0010	subui	r29,r29,#16; alloc local storage
 1518  00002158  afa20000	sw	0(r29),r2
 1519  0000215c  afa30004	sw	4(r29),r3
 1520  00002160  54000000	nop
 1521  00002164          	L101_LF2:
 1522  00002164  8fc10008	lw	r1,8(r30)
 1523  00002168  2022ffff	addi	r2,r1,#-1
 1524  0000216c  afc20008	sw	8(r30),r2
 1525  00002170  6c210000	sgti	r1,r1,#0
 1526  00002174  1420000c	bnez	r1,L103_LF2
 1527  00002178  54000000	nop; delay slot nop
 1528  0000217c  0800002c	j	L102_LF2
 1529  00002180  54000000	nop; delay slot nop
 1530  00002184          	L103_LF2:
 1531  00002184  8fc10004	lw	r1,4(r30)
 1532  00002188  20220001	addi	r2,r1,#1
 1533  0000218c  afc20004	sw	4(r30),r2
 1534  00002190  8fc20000	lw	r2,(r30)
 1535  00002194  20430001	addi	r3,r2,#1
 1536  00002198  afc30000	sw	(r30),r3
 1537  0000219c  80420000	lb	r2,(r2)
 1538  000021a0  a0220000	sb	(r1),r2
 1539  000021a4  0bffffbc	j	L101_LF2
 1540  000021a8  54000000	nop; delay slot nop
 1541  000021ac          	L102_LF2:
 1542  000021ac          	L100_LF2:
 1543  000021ac  8fa20000	lw	r2,0(r29)
 1544  000021b0  8fa30004	lw	r3,4(r29)
 1545  000021b4  8fdffff8	lw	r31,-8(r30)
 1546  000021b8  001ee820	add	r29,r0,r30
 1547  000021bc  8fdefffc	lw	r30,-4(r30)
 1548  000021c0  4be00000	jr	r31
 1549  000021c4  54000000	nop
 1550  000021c8          	.endproc _bcopy
 1551  000021c8          	.align 2
 1552  000021c8          	.proc _bzero
 1553  000021c8          	.global _bzero
 1554  000021c8          	_bzero:
 1555                      ;  Function 'bzero'; 0 bytes of locals, 1 regs to save.
 1556  000021c8  afbefffc	sw	-4(r29),r30; push fp
 1557  000021cc  001df020	add	r30,r0,r29; fp = sp
 1558  000021d0  afbffff8	sw	-8(r29),r31; push ret addr
 1559  000021d4  2fbd0010	subui	r29,r29,#16; alloc local storage
 1560  000021d8  afa20000	sw	0(r29),r2
 1561  000021dc  54000000	nop
 1562  000021e0          	L105_LF2:
 1563  000021e0  8fc10004	lw	r1,4(r30)
 1564  000021e4  2022ffff	addi	r2,r1,#-1
 1565  000021e8  afc20004	sw	4(r30),r2
 1566  000021ec  6c210000	sgti	r1,r1,#0
 1567  000021f0  1420000c	bnez	r1,L107_LF2
 1568  000021f4  54000000	nop; delay slot nop
 1569  000021f8  08000020	j	L106_LF2
 1570  000021fc  54000000	nop; delay slot nop
 1571  00002200          	L107_LF2:
 1572  00002200  8fc10000	lw	r1,(r30)
 1573  00002204  20220001	addi	r2,r1,#1
 1574  00002208  afc20000	sw	(r30),r2
 1575  0000220c  20020000	addi	r2,r0,(#0x0)&0xff
 1576  00002210  a0220000	sb	(r1),r2
 1577  00002214  0bffffc8	j	L105_LF2
 1578  00002218  54000000	nop; delay slot nop
 1579  0000221c          	L106_LF2:
 1580  0000221c          	L104_LF2:
 1581  0000221c  8fa20000	lw	r2,0(r29)
 1582  00002220  8fdffff8	lw	r31,-8(r30)
 1583  00002224  001ee820	add	r29,r0,r30
 1584  00002228  8fdefffc	lw	r30,-4(r30)
 1585  0000222c  4be00000	jr	r31
 1586  00002230  54000000	nop
 1587  00002234          	.endproc _bzero
 1588  00002234          	.align 2
 1589  00002234          	.proc _min
 1590  00002234          	.global _min
 1591  00002234          	_min:
 1592                      ;  Function 'min'; 0 bytes of locals, 2 regs to save.
 1593  00002234  afbefffc	sw	-4(r29),r30; push fp
 1594  00002238  001df020	add	r30,r0,r29; fp = sp
 1595  0000223c  afbffff8	sw	-8(r29),r31; push ret addr
 1596  00002240  2fbd0010	subui	r29,r29,#16; alloc local storage
 1597  00002244  afa20000	sw	0(r29),r2
 1598  00002248  afa30004	sw	4(r29),r3
 1599  0000224c  8fc10000	lw	r1,(r30)
 1600  00002250  8fc20004	lw	r2,4(r30)
 1601  00002254  0022182c	sle	r3,r1,r2
 1602  00002258  14600008	bnez	r3,L109_LF2
 1603  0000225c  54000000	nop; delay slot nop
 1604  00002260  8fc10004	lw	r1,4(r30)
 1605  00002264          	L109_LF2:
 1606  00002264  08000004	j	L108_LF2
 1607  00002268  54000000	nop; delay slot nop
 1608  0000226c          	L108_LF2:
 1609  0000226c  8fa20000	lw	r2,0(r29)
 1610  00002270  8fa30004	lw	r3,4(r29)
 1611  00002274  8fdffff8	lw	r31,-8(r30)
 1612  00002278  001ee820	add	r29,r0,r30
 1613  0000227c  8fdefffc	lw	r30,-4(r30)
 1614  00002280  4be00000	jr	r31
 1615  00002284  54000000	nop
 1616  00002288          	.endproc _min
 1617  00002288          	.align 2
 1618  00002288          	.proc _max
 1619  00002288          	.global _max
 1620  00002288          	_max:
 1621                      ;  Function 'max'; 0 bytes of locals, 2 regs to save.
 1622  00002288  afbefffc	sw	-4(r29),r30; push fp
 1623  0000228c  001df020	add	r30,r0,r29; fp = sp
 1624  00002290  afbffff8	sw	-8(r29),r31; push ret addr
 1625  00002294  2fbd0010	subui	r29,r29,#16; alloc local storage
 1626  00002298  afa20000	sw	0(r29),r2
 1627  0000229c  afa30004	sw	4(r29),r3
 1628  000022a0  8fc10000	lw	r1,(r30)
 1629  000022a4  8fc20004	lw	r2,4(r30)
 1630  000022a8  0022182d	sge	r3,r1,r2
 1631  000022ac  14600008	bnez	r3,L111_LF2
 1632  000022b0  54000000	nop; delay slot nop
 1633  000022b4  8fc10004	lw	r1,4(r30)
 1634  000022b8          	L111_LF2:
 1635  000022b8  08000004	j	L110_LF2
 1636  000022bc  54000000	nop; delay slot nop
 1637  000022c0          	L110_LF2:
 1638  000022c0  8fa20000	lw	r2,0(r29)
 1639  000022c4  8fa30004	lw	r3,4(r29)
 1640  000022c8  8fdffff8	lw	r31,-8(r30)
 1641  000022cc  001ee820	add	r29,r0,r30
 1642  000022d0  8fdefffc	lw	r30,-4(r30)
 1643  000022d4  4be00000	jr	r31
 1644  000022d8  54000000	nop
 1645  000022dc          	.endproc _max
 1646                      ;;; Ethan L. Miller, 1999.  Released to the public domain
 1647                      ;;;
 1648                      ;;; Most of the traps are called in files from libtraps.
 1651  000022dc          	.align 2
 1652  000022dc          	.proc _exit
 1653  000022dc          	.global _exit
 1654  000022dc          	_exit:
 1655  000022dc  44000300	trap	#0x300
 1656  000022e0  4be00000	jr	r31
 1657  000022e4  54000000	nop
 1658  000022e8          	.endproc _exit
 1660                      ; for the benefit of gcc.
 1661  000022e8          	.proc ___main
 1662  000022e8          	.global ___main
 1663  000022e8          	___main:
 1664  000022e8  4be00000	jr	r31
 1665  000022ec  54000000	nop
 1666  000022f0          	.endproc ___main
 1667  000022f0          	.text
 1668  000022f0          	.global _etext
 1669  000022f0          	_etext:
 1670  000022f0          	.align 3
 1671  000022f0          	.data
 1672  00003142          	.global _edata
 1673  00003142          	_edata:
