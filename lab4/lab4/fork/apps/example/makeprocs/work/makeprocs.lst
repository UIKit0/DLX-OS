 line   address	contents
    1                      ; Linked by DLX-LD.
    2                      ; MemSize 24576
    3                      ; Data size: 415
    4                      ; Text size: 4596
    5                      ; Stack size: 8192
    6  00000000          	.text 0x1000
    7  00001000          	.data 0x3000
    8                      ; Compiled by GCC
    9  00003000          	.text
   10  00001000          	.align 2
   11  00001000          	.proc _isspace
   12  00001000          	.global _isspace
   13  00001000          	_isspace:
   14                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
   15  00001000  afbefffc	sw	-4(r29),r30; push fp
   16  00001004  001df020	add	r30,r0,r29; fp = sp
   17  00001008  afbffff8	sw	-8(r29),r31; push ret addr
   18  0000100c  2fbd0010	subui	r29,r29,#16; alloc local storage
   19  00001010  afa20000	sw	0(r29),r2
   20  00001014  83c20003	lb	r2,3(r30)
   21  00001018  201f0000	addi	r31,r0,#0
   22  0000101c  304100ff	andi	r1,r2,#0x00ff
   23  00001020  60210020	seqi	r1,r1,#32
   24  00001024  14200018	bnez	r1,L6_LF0
   25  00001028  54000000	nop; not filled.
   26  0000102c  2041fff7	addi	r1,r2,#-9
   27  00001030  302100ff	andi	r1,r1,#0x00ff
   28  00001034  70210001	sleui	r1,r1,#1
   29  00001038  10200008	beqz	r1,L5_LF0
   30  0000103c  54000000	nop; not filled.
   31  00001040          	L6_LF0:
   32  00001040  201f0001	addi	r31,r0,#1
   33  00001044          	L5_LF0:
   34  00001044  001f0820	add	r1,r0,r31
   35  00001048  8fa20000	lw	r2,0(r29)
   36  0000104c  8fdffff8	lw	r31,-8(r30)
   37  00001050  001ee820	add	r29,r0,r30
   38  00001054  8fdefffc	lw	r30,-4(r30)
   39  00001058  4be00000	jr	r31
   40  0000105c  54000000	nop
   41  00001060          	.endproc _isspace
   42  00001060          	.align 2
   43  00001060          	.proc _isxdigit
   44  00001060          	.global _isxdigit
   45  00001060          	_isxdigit:
   46                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
   47  00001060  afbefffc	sw	-4(r29),r30; push fp
   48  00001064  001df020	add	r30,r0,r29; fp = sp
   49  00001068  afbffff8	sw	-8(r29),r31; push ret addr
   50  0000106c  2fbd0010	subui	r29,r29,#16; alloc local storage
   51  00001070  afa20000	sw	0(r29),r2
   52  00001074  83df0003	lb	r31,3(r30)
   53  00001078  20020000	addi	r2,r0,#0
   54  0000107c  23e1ffd0	addi	r1,r31,#-48
   55  00001080  302100ff	andi	r1,r1,#0x00ff
   56  00001084  70210009	sleui	r1,r1,#9
   57  00001088  14200028	bnez	r1,L12_LF0
   58  0000108c  54000000	nop; not filled.
   59  00001090  23e1ff9f	addi	r1,r31,#-97
   60  00001094  302100ff	andi	r1,r1,#0x00ff
   61  00001098  70210005	sleui	r1,r1,#5
   62  0000109c  14200014	bnez	r1,L12_LF0
   63  000010a0  54000000	nop; not filled.
   64  000010a4  33e100ff	andi	r1,r31,#0x00ff
   65  000010a8  64210041	snei	r1,r1,#65
   66  000010ac  14200008	bnez	r1,L11_LF0
   67  000010b0  54000000	nop; not filled.
   68  000010b4          	L12_LF0:
   69  000010b4  20020001	addi	r2,r0,#1
   70  000010b8          	L11_LF0:
   71  000010b8  00020820	add	r1,r0,r2
   72  000010bc  8fa20000	lw	r2,0(r29)
   73  000010c0  8fdffff8	lw	r31,-8(r30)
   74  000010c4  001ee820	add	r29,r0,r30
   75  000010c8  8fdefffc	lw	r30,-4(r30)
   76  000010cc  4be00000	jr	r31
   77  000010d0  54000000	nop
   78  000010d4          	.endproc _isxdigit
   79  000010d4          	.data
   80  00003000          	.align 2
   81  00003000          	LC0_LF0:
   82  00003000  55736167	.ascii "Usage: %s <number of hello world processes to create>\n\000"
   82  00003004  653a2025	
   82  00003008  73203c6e	
   82  0000300c  756d6265	
   82  00003010  72206f66	
   82  00003014  2068656c	
   82  00003018  6c6f2077	
   82  0000301c  6f726c64	
   82  00003020  2070726f	
   82  00003024  63657373	
   82  00003028  65732074	
   82  0000302c  6f206372	
   82  00003030  65617465	
   82  00003034  3e0a00  	
   83  00003037          	.align 2
   84  00003038          	LC1_LF0:
   85  00003038  6d616b65	.ascii "makeprocs (%d): Creating %d hello_world processes\n\000"
   85  0000303c  70726f63	
   85  00003040  73202825	
   85  00003044  64293a20	
   85  00003048  43726561	
   85  0000304c  74696e67	
   85  00003050  20256420	
   85  00003054  68656c6c	
   85  00003058  6f5f776f	
   85  0000305c  726c6420	
   85  00003060  70726f63	
   85  00003064  65737365	
   85  00003068  730a00  	
   86  0000306b          	.align 2
   87  0000306c          	LC2_LF0:
   88  0000306c  6d616b65	.ascii "makeprocs (%d): Bad sem_create\n\000"
   88  00003070  70726f63	
   88  00003074  73202825	
   88  00003078  64293a20	
   88  0000307c  42616420	
   88  00003080  73656d5f	
   88  00003084  63726561	
   88  00003088  74650a00	
   89  0000308c          	.align 2
   90  0000308c          	LC3_LF0:
   91  0000308c  74686520	.ascii "the main program process ID is %d\n\000"
   91  00003090  6d61696e	
   91  00003094  2070726f	
   91  00003098  6772616d	
   91  0000309c  2070726f	
   91  000030a0  63657373	
   91  000030a4  20494420	
   91  000030a8  69732025	
   91  000030ac  640a00  	
   92  000030af          	.align 2
   93  000030b0          	LC4_LF0:
   94  000030b0  74686973	.ascii "this is the parent process with id %d\n\000"
   94  000030b4  20697320	
   94  000030b8  74686520	
   94  000030bc  70617265	
   94  000030c0  6e742070	
   94  000030c4  726f6365	
   94  000030c8  73732077	
   94  000030cc  69746820	
   94  000030d0  69642025	
   94  000030d4  640a00  	
   95  000030d7          	.align 2
   96  000030d8          	LC5_LF0:
   97  000030d8  74686520	.ascii "the child\'s process ID is %d\n\000"
   97  000030dc  6368696c	
   97  000030e0  64277320	
   97  000030e4  70726f63	
   97  000030e8  65737320	
   97  000030ec  49442069	
   97  000030f0  73202564	
   97  000030f4  0a00    	
   98  000030f6          	.align 2
   99  000030f8          	LC6_LF0:
  100  000030f8  74686973	.ascii "this is the child process,with id %d\n\000"
  100  000030fc  20697320	
  100  00003100  74686520	
  100  00003104  6368696c	
  100  00003108  64207072	
  100  0000310c  6f636573	
  100  00003110  732c7769	
  100  00003114  74682069	
  100  00003118  64202564	
  100  0000311c  0a00    	
  101  0000311e          	.align 2
  102  00003120          	LC7_LF0:
  103  00003120  6d616b65	.ascii "makeprocs (%d): exiting main process.\n\000"
  103  00003124  70726f63	
  103  00003128  73202825	
  103  0000312c  64293a20	
  103  00003130  65786974	
  103  00003134  696e6720	
  103  00003138  6d61696e	
  103  0000313c  2070726f	
  103  00003140  63657373	
  103  00003144  2e0a00  	
  104  00003147          	.align 2
  105  00003148          	LC8_LF0:
  106  00003148  2d2d2d2d	.ascii "----------------------------------------------------------------------"
  106  0000314c  2d2d2d2d	
  106  00003150  2d2d2d2d	
  106  00003154  2d2d2d2d	
  106  00003158  2d2d2d2d	
  106  0000315c  2d2d2d2d	
  106  00003160  2d2d2d2d	
  106  00003164  2d2d2d2d	
  106  00003168  2d2d2d2d	
  106  0000316c  2d2d2d2d	
  106  00003170  2d2d2d2d	
  106  00003174  2d2d2d2d	
  106  00003178  2d2d2d2d	
  106  0000317c  2d2d2d2d	
  106  00003180  2d2d2d2d	
  106  00003184  2d2d2d2d	
  106  00003188  2d2d2d2d	
  106  0000318c  2d2d    	
  107  0000318e  2d2d2d2d	.ascii "---------------\n\000"
  107  00003192  2d2d2d2d	
  107  00003196  2d2d2d2d	
  107  0000319a  2d2d2d0a	
  107  0000319e  00      	
  108  0000319f          	.text
  109  000010d4          	.align 2
  110  000010d4          	.proc _main
  111  000010d4          	.global _main
  112  000010d4          	_main:
  113                      ;  Function 'main'; 16 bytes of locals, 0 regs to save.
  114  000010d4  afbefffc	sw	-4(r29),r30; push fp
  115  000010d8  001df020	add	r30,r0,r29; fp = sp
  116  000010dc  afbffff8	sw	-8(r29),r31; push ret addr
  117  000010e0  2fbd0018	subui	r29,r29,#24; alloc local storage
  118  000010e4  8fc20000	lw	r2,(r30)
  119  000010e8  8fc30004	lw	r3,4(r30)
  120  000010ec  0c0010f0	jal	___main
  121  000010f0  54000000	nop; not filled.
  122  000010f4  64410002	snei	r1,r2,#2
  123  000010f8  10200030	beqz	r1,L14_LF0
  124  000010fc  54000000	nop; not filled.
  125  00001100  23bdfff8	addi	r29,r29,#-8
  126  00001104  3c040000	lhi	r4,((LC0_LF0)>>16)&0xffff
  127  00001108  24843000	addui	r4,r4,(LC0_LF0)&0xffff
  128  0000110c  afa40000	sw	(r29),r4
  129  00001110  8c610000	lw	r1,(r3)
  130  00001114  afa10004	sw	4(r29),r1
  131  00001118  0c0001f8	jal	_Printf
  132  0000111c  54000000	nop; not filled.
  133  00001120  0c000304	jal	_Exit
  134  00001124  54000000	nop; not filled.
  135  00001128  23bd0008	addi	r29,r29,#8
  136  0000112c          	L14_LF0:
  137  0000112c  23bdfff0	addi	r29,r29,#-16
  138  00001130  8c630004	lw	r3,4(r3)
  139  00001134  afa30000	sw	(r29),r3
  140  00001138  20040000	addi	r4,r0,#0
  141  0000113c  afa40004	sw	4(r29),r4
  142  00001140  2004000a	addi	r4,r0,#10
  143  00001144  afa40008	sw	8(r29),r4
  144  00001148  0c000b98	jal	_dstrtol
  145  0000114c  54000000	nop; not filled.
  146  00001150  00011020	add	r2,r0,r1
  147  00001154  0c0001c8	jal	_getpid
  148  00001158  54000000	nop; not filled.
  149  0000115c  3c040000	lhi	r4,((LC1_LF0)>>16)&0xffff
  150  00001160  24843038	addui	r4,r4,(LC1_LF0)&0xffff
  151  00001164  afa40000	sw	(r29),r4
  152  00001168  afa10004	sw	4(r29),r1
  153  0000116c  afa20008	sw	8(r29),r2
  154  00001170  0c0001a0	jal	_Printf
  155  00001174  54000000	nop; not filled.
  156  00001178  20010001	addi	r1,r0,#1
  157  0000117c  00220822	sub	r1,r1,r2
  158  00001180  afa10000	sw	(r29),r1
  159  00001184  0c0001d4	jal	_sem_create
  160  00001188  54000000	nop; not filled.
  161  0000118c  00011020	add	r2,r0,r1
  162  00001190  23bd0010	addi	r29,r29,#16
  163  00001194  6041ffff	seqi	r1,r2,#-1
  164  00001198  10200034	beqz	r1,L15_LF0
  165  0000119c  54000000	nop; not filled.
  166  000011a0  0c00017c	jal	_getpid
  167  000011a4  54000000	nop; not filled.
  168  000011a8  23bdfff8	addi	r29,r29,#-8
  169  000011ac  3c040000	lhi	r4,((LC2_LF0)>>16)&0xffff
  170  000011b0  2484306c	addui	r4,r4,(LC2_LF0)&0xffff
  171  000011b4  afa40000	sw	(r29),r4
  172  000011b8  afa10004	sw	4(r29),r1
  173  000011bc  0c000154	jal	_Printf
  174  000011c0  54000000	nop; not filled.
  175  000011c4  0c000260	jal	_Exit
  176  000011c8  54000000	nop; not filled.
  177  000011cc  23bd0008	addi	r29,r29,#8
  178  000011d0          	L15_LF0:
  179  000011d0  23bdfff8	addi	r29,r29,#-8
  180  000011d4  afa20000	sw	(r29),r2
  181  000011d8  23c1ffe8	addi	r1,r30,#-24
  182  000011dc  afa10004	sw	4(r29),r1
  183  000011e0  0c000974	jal	_ditoa
  184  000011e4  54000000	nop; not filled.
  185  000011e8  0c000134	jal	_getpid
  186  000011ec  54000000	nop; not filled.
  187  000011f0  3c040000	lhi	r4,((LC3_LF0)>>16)&0xffff
  188  000011f4  2484308c	addui	r4,r4,(LC3_LF0)&0xffff
  189  000011f8  afa40000	sw	(r29),r4
  190  000011fc  afa10004	sw	4(r29),r1
  191  00001200  0c000fe4	jal	_printf
  192  00001204  54000000	nop; not filled.
  193  00001208  0c00012c	jal	_process_fork
  194  0000120c  54000000	nop; not filled.
  195  00001210  00011020	add	r2,r0,r1
  196  00001214  23bd0008	addi	r29,r29,#8
  197  00001218  64410000	snei	r1,r2,#0
  198  0000121c  10200040	beqz	r1,L16_LF0
  199  00001220  54000000	nop; not filled.
  200  00001224  0c0000f8	jal	_getpid
  201  00001228  54000000	nop; not filled.
  202  0000122c  23bdfff8	addi	r29,r29,#-8
  203  00001230  3c040000	lhi	r4,((LC4_LF0)>>16)&0xffff
  204  00001234  248430b0	addui	r4,r4,(LC4_LF0)&0xffff
  205  00001238  afa40000	sw	(r29),r4
  206  0000123c  afa10004	sw	4(r29),r1
  207  00001240  0c0000d0	jal	_Printf
  208  00001244  54000000	nop; not filled.
  209  00001248  3c040000	lhi	r4,((LC5_LF0)>>16)&0xffff
  210  0000124c  248430d8	addui	r4,r4,(LC5_LF0)&0xffff
  211  00001250  afa40000	sw	(r29),r4
  212  00001254  afa20004	sw	4(r29),r2
  213  00001258  08000020	j	L18_LF0
  214  0000125c  54000000	nop; not filled.
  215  00001260          	L16_LF0:
  216  00001260  0c0000bc	jal	_getpid
  217  00001264  54000000	nop; not filled.
  218  00001268  23bdfff8	addi	r29,r29,#-8
  219  0000126c  3c040000	lhi	r4,((LC6_LF0)>>16)&0xffff
  220  00001270  248430f8	addui	r4,r4,(LC6_LF0)&0xffff
  221  00001274  afa40000	sw	(r29),r4
  222  00001278  afa10004	sw	4(r29),r1
  223  0000127c          	L18_LF0:
  224  0000127c  0c000094	jal	_Printf
  225  00001280  54000000	nop; not filled.
  226  00001284  23bd0008	addi	r29,r29,#8
  227  00001288  0c000094	jal	_getpid
  228  0000128c  54000000	nop; not filled.
  229  00001290  23bdfff8	addi	r29,r29,#-8
  230  00001294  3c040000	lhi	r4,((LC7_LF0)>>16)&0xffff
  231  00001298  24843120	addui	r4,r4,(LC7_LF0)&0xffff
  232  0000129c  afa40000	sw	(r29),r4
  233  000012a0  afa10004	sw	4(r29),r1
  234  000012a4  0c00006c	jal	_Printf
  235  000012a8  54000000	nop; not filled.
  236  000012ac  3c040000	lhi	r4,((LC8_LF0)>>16)&0xffff
  237  000012b0  24843148	addui	r4,r4,(LC8_LF0)&0xffff
  238  000012b4  afa40000	sw	(r29),r4
  239  000012b8  0c000058	jal	_Printf
  240  000012bc  54000000	nop; not filled.
  241  000012c0  23bd0008	addi	r29,r29,#8
  242  000012c4  0c000f0c	jal	_exit
  243  000012c8  54000000	nop
  244  000012cc          	.endproc _main
  245                      ;;;
  246                      ;;; Stub functions for DLX traps.
  247                      ;;;
  248                      ;;; Ethan L. Miller, 1999.  Released to the public domain.
  249                      ;;;
  250                      ;;; The traps such as Open and Close
  251                      ;;; (note the capital letters) are for use by user programs.  The traps
  252                      ;;; with names such as open and close (lower case) are for use by the OS.
  253                      ;;;
  256  000012cc          	.align 2
  258                      ;;; The following are the traps to be used by user-level programs
  259                      ;;;
  261  000012cc          	.align 2
  262  000012cc          	.proc _Open
  263  000012cc          	.global _Open
  264  000012cc          	_Open:
  265                      ;;; Note that trap #0x213 actually causes a trap vector in the OS of
  266                      ;;; 0x1213.  The same is true for other user traps.  Thus, a user trap
  267                      ;;; with trap #0x240 will result in a trap vector of 0x1240 in the OS.
  268  000012cc  44000213	trap	#0x213
  269  000012d0  4be00000	jr	r31
  270  000012d4  54000000	nop
  271  000012d8          	.endproc _Open
  273  000012d8          	.proc _Close
  274  000012d8          	.global _Close
  275  000012d8          	_Close:
  276  000012d8  44000214	trap	#0x214
  277  000012dc  4be00000	jr	r31
  278  000012e0  54000000	nop
  279  000012e4          	.endproc _Close
  281  000012e4          	.proc _Read
  282  000012e4          	.global _Read
  283  000012e4          	_Read:
  284  000012e4  44000210	trap	#0x210
  285  000012e8  4be00000	jr	r31
  286  000012ec  54000000	nop
  287  000012f0          	.endproc _Read
  289  000012f0          	.proc _Write
  290  000012f0          	.global _Write
  291  000012f0          	_Write:
  292  000012f0  44000211	trap	#0x211
  293  000012f4  4be00000	jr	r31
  294  000012f8  54000000	nop
  295  000012fc          	.endproc _Write
  297  000012fc          	.proc _Lseek
  298  000012fc          	.global _Lseek
  299  000012fc          	_Lseek:
  300  000012fc  44000212	trap	#0x212
  301  00001300  4be00000	jr	r31
  302  00001304  54000000	nop
  303  00001308          	.endproc _Lseek
  305  00001308          	.proc _Putchar
  306  00001308          	.global _Putchar
  307  00001308          	_Putchar:
  308  00001308  44000280	trap	#0x280
  309  0000130c  4be00000	jr	r31
  310  00001310  54000000	nop
  311  00001314          	.endproc _Putchar
  313  00001314          	.proc _Printf
  314  00001314          	.global _Printf
  315  00001314          	_Printf:
  316  00001314  44000201	trap	#0x201
  317  00001318  4be00000	jr	r31
  318  0000131c  54000000	nop
  319  00001320          	.endproc _Printf
  321  00001320          	.proc _getpid
  322  00001320          	.global _getpid
  323  00001320          	_getpid:
  324  00001320  44000431	trap	#0x431
  325  00001324  4be00000	jr	r31
  326  00001328  54000000	nop
  327  0000132c          	.endproc _getpid
  329  0000132c          	.proc _process_create
  330  0000132c          	.global _process_create
  331  0000132c          	_process_create:
  332  0000132c  44000432	trap	#0x432
  333  00001330  4be00000	jr	r31
  334  00001334  54000000	nop
  335  00001338          	.endproc _process_create
  337  00001338          	.proc _process_fork
  338  00001338          	.global _process_fork
  339  00001338          	_process_fork:
  340  00001338  44000430	trap	#0x430
  341  0000133c  4be00000	jr	r31
  342  00001340  54000000	nop
  343  00001344          	.endproc _process_fork
  345  00001344          	.proc _shmget
  346  00001344          	.global _shmget
  347  00001344          	_shmget:
  348  00001344  44000440	trap	#0x440
  349  00001348  4be00000	jr	r31
  350  0000134c  54000000	nop
  351  00001350          	.endproc _shmget
  353  00001350          	.proc _shmat
  354  00001350          	.global _shmat
  355  00001350          	_shmat:
  356  00001350  44000441	trap	#0x441
  357  00001354  4be00000	jr	r31
  358  00001358  54000000	nop
  359  0000135c          	.endproc _shmat
  361  0000135c          	.proc _sem_create
  362  0000135c          	.global _sem_create
  363  0000135c          	_sem_create:
  364  0000135c  44000450	trap	#0x450
  365  00001360  4be00000	jr	r31
  366  00001364  54000000	nop
  367  00001368          	.endproc _sem_create
  369  00001368          	.proc _sem_wait
  370  00001368          	.global _sem_wait
  371  00001368          	_sem_wait:
  372  00001368  44000451	trap	#0x451
  373  0000136c  4be00000	jr	r31
  374  00001370  54000000	nop
  375  00001374          	.endproc _sem_wait
  377  00001374          	.proc _sem_signal
  378  00001374          	.global _sem_signal
  379  00001374          	_sem_signal:
  380  00001374  44000452	trap	#0x452
  381  00001378  4be00000	jr	r31
  382  0000137c  54000000	nop
  383  00001380          	.endproc _sem_signal
  385  00001380          	.proc _lock_create
  386  00001380          	.global _lock_create
  387  00001380          	_lock_create:
  388  00001380  44000453	trap	#0x453
  389  00001384  4be00000	jr	r31
  390  00001388  54000000	nop
  391  0000138c          	.endproc _lock_create
  393  0000138c          	.proc _lock_acquire
  394  0000138c          	.global _lock_acquire
  395  0000138c          	_lock_acquire:
  396  0000138c  44000454	trap	#0x454
  397  00001390  4be00000	jr	r31
  398  00001394  54000000	nop
  399  00001398          	.endproc _lock_acquire
  401  00001398          	.proc _lock_release
  402  00001398          	.global _lock_release
  403  00001398          	_lock_release:
  404  00001398  44000455	trap	#0x455
  405  0000139c  4be00000	jr	r31
  406  000013a0  54000000	nop
  407  000013a4          	.endproc _lock_release
  409  000013a4          	.proc _cond_create
  410  000013a4          	.global _cond_create
  411  000013a4          	_cond_create:
  412  000013a4  44000456	trap	#0x456
  413  000013a8  4be00000	jr	r31
  414  000013ac  54000000	nop
  415  000013b0          	.endproc _cond_create
  417  000013b0          	.proc _cond_wait
  418  000013b0          	.global _cond_wait
  419  000013b0          	_cond_wait:
  420  000013b0  44000457	trap	#0x457
  421  000013b4  4be00000	jr	r31
  422  000013b8  54000000	nop
  423  000013bc          	.endproc _cond_wait
  425  000013bc          	.proc _cond_signal
  426  000013bc          	.global _cond_signal
  427  000013bc          	_cond_signal:
  428  000013bc  44000458	trap	#0x458
  429  000013c0  4be00000	jr	r31
  430  000013c4  54000000	nop
  431  000013c8          	.endproc _cond_signal
  433  000013c8          	.proc _cond_broadcast
  434  000013c8          	.global _cond_broadcast
  435  000013c8          	_cond_broadcast:
  436  000013c8  44000459	trap	#0x459
  437  000013cc  4be00000	jr	r31
  438  000013d0  54000000	nop
  439  000013d4          	.endproc _cond_broadcast
  441  000013d4          	.proc _mbox_create
  442  000013d4          	.global _mbox_create
  443  000013d4          	_mbox_create:
  444  000013d4  44000460	trap	#0x460
  445  000013d8  4be00000	jr	r31
  446  000013dc  54000000	nop
  447  000013e0          	.endproc _mbox_create
  449  000013e0          	.proc _mbox_open
  450  000013e0          	.global _mbox_open
  451  000013e0          	_mbox_open:
  452  000013e0  44000461	trap	#0x461
  453  000013e4  4be00000	jr	r31
  454  000013e8  54000000	nop
  455  000013ec          	.endproc _mbox_open
  457  000013ec          	.proc _mbox_close
  458  000013ec          	.global _mbox_close
  459  000013ec          	_mbox_close:
  460  000013ec  44000462	trap	#0x462
  461  000013f0  4be00000	jr	r31
  462  000013f4  54000000	nop
  463  000013f8          	.endproc _mbox_close
  465  000013f8          	.proc _mbox_send
  466  000013f8          	.global _mbox_send
  467  000013f8          	_mbox_send:
  468  000013f8  44000463	trap	#0x463
  469  000013fc  4be00000	jr	r31
  470  00001400  54000000	nop
  471  00001404          	.endproc _mbox_send
  473  00001404          	.proc _mbox_recv
  474  00001404          	.global _mbox_recv
  475  00001404          	_mbox_recv:
  476  00001404  44000464	trap	#0x464
  477  00001408  4be00000	jr	r31
  478  0000140c  54000000	nop
  479  00001410          	.endproc _mbox_recv
  481  00001410          	.proc _sleep
  482  00001410          	.global _sleep
  483  00001410          	_sleep:
  484  00001410  44000465	trap	#0x465
  485  00001414  4be00000	jr	r31
  486  00001418  54000000	nop
  487  0000141c          	.endproc _sleep
  489  0000141c          	.proc _yield
  490  0000141c          	.global _yield
  491  0000141c          	_yield:
  492  0000141c  44000466	trap	#0x466
  493  00001420  4be00000	jr	r31
  494  00001424  54000000	nop
  495  00001428          	.endproc _yield
  498  00001428          	.proc _Exit
  499  00001428          	.global _Exit
  500  00001428          	_Exit:
  501  00001428  44000500	trap	#0x500
  502  0000142c  4be00000	jr	r31
  503  00001430  54000000	nop
  504  00001434          	.endproc _Exit
  507  00001434          	.proc _malloc
  508  00001434          	.global _malloc
  509  00001434          	_malloc:
  510  00001434  44000467	trap	#0x467
  511  00001438  4be00000	jr	r31
  512  0000143c          	.endproc _malloc
  515  0000143c          	.proc _mfree
  516  0000143c          	.global _mfree
  517  0000143c          	_mfree:
  518  0000143c  44000468	trap	#0x468
  519  00001440  4be00000	jr	r31
  520  00001444          	.endproc _mfree
  521                      ; Compiled by GCC
  523  00001444          	.align 2
  524  00001444          	.proc _isspace
  525  00001444          	.global _isspace
  526  00001444          	_isspace:
  527                      ;  Function 'isspace'; 0 bytes of locals, 3 regs to save.
  528  00001444  afbefffc	sw	-4(r29),r30; push fp
  529  00001448  001df020	add	r30,r0,r29; fp = sp
  530  0000144c  afbffff8	sw	-8(r29),r31; push ret addr
  531  00001450  2fbd0018	subui	r29,r29,#24; alloc local storage
  532  00001454  afa20000	sw	0(r29),r2
  533  00001458  afa30004	sw	4(r29),r3
  534  0000145c  afa40008	sw	8(r29),r4
  535  00001460  83c20003	lb	r2,3(r30)
  536  00001464  20010000	addi	r1,r0,#0
  537  00001468  304300ff	andi	r3,r2,#0x00ff
  538  0000146c  60640020	seqi	r4,r3,#32
  539  00001470  1480002c	bnez	r4,L3_LF2
  540  00001474  54000000	nop; delay slot nop
  541  00001478  304300ff	andi	r3,r2,#0x00ff
  542  0000147c  60640009	seqi	r4,r3,#9
  543  00001480  1480001c	bnez	r4,L3_LF2
  544  00001484  54000000	nop; delay slot nop
  545  00001488  304300ff	andi	r3,r2,#0x00ff
  546  0000148c  6064000a	seqi	r4,r3,#10
  547  00001490  1480000c	bnez	r4,L3_LF2
  548  00001494  54000000	nop; delay slot nop
  549  00001498  08000008	j	L2_LF2
  550  0000149c  54000000	nop; delay slot nop
  551  000014a0          	L3_LF2:
  552  000014a0  20010001	addi	r1,r0,#1
  553  000014a4          	L2_LF2:
  554  000014a4  08000004	j	L1_LF2
  555  000014a8  54000000	nop; delay slot nop
  556  000014ac          	L1_LF2:
  557  000014ac  8fa20000	lw	r2,0(r29)
  558  000014b0  8fa30004	lw	r3,4(r29)
  559  000014b4  8fa40008	lw	r4,8(r29)
  560  000014b8  8fdffff8	lw	r31,-8(r30)
  561  000014bc  001ee820	add	r29,r0,r30
  562  000014c0  8fdefffc	lw	r30,-4(r30)
  563  000014c4  4be00000	jr	r31
  564  000014c8  54000000	nop
  565  000014cc          	.endproc _isspace
  566  000014cc          	.align 2
  567  000014cc          	.proc _isxdigit
  568  000014cc          	.global _isxdigit
  569  000014cc          	_isxdigit:
  570                      ;  Function 'isxdigit'; 0 bytes of locals, 3 regs to save.
  571  000014cc  afbefffc	sw	-4(r29),r30; push fp
  572  000014d0  001df020	add	r30,r0,r29; fp = sp
  573  000014d4  afbffff8	sw	-8(r29),r31; push ret addr
  574  000014d8  2fbd0018	subui	r29,r29,#24; alloc local storage
  575  000014dc  afa20000	sw	0(r29),r2
  576  000014e0  afa30004	sw	4(r29),r3
  577  000014e4  afa40008	sw	8(r29),r4
  578  000014e8  83c20003	lb	r2,3(r30)
  579  000014ec  20010000	addi	r1,r0,#0
  580  000014f0  304300ff	andi	r3,r2,#0x00ff
  581  000014f4  6c64002f	sgtui	r4,r3,#47
  582  000014f8  1080001c	beqz	r4,L7_LF2
  583  000014fc  54000000	nop; delay slot nop
  584  00001500  304300ff	andi	r3,r2,#0x00ff
  585  00001504  70640039	sleui	r4,r3,#57
  586  00001508  1480005c	bnez	r4,L6_LF2
  587  0000150c  54000000	nop; delay slot nop
  588  00001510  08000004	j	L7_LF2
  589  00001514  54000000	nop; delay slot nop
  590  00001518          	L7_LF2:
  591  00001518  304300ff	andi	r3,r2,#0x00ff
  592  0000151c  6c640060	sgtui	r4,r3,#96
  593  00001520  1080001c	beqz	r4,L8_LF2
  594  00001524  54000000	nop; delay slot nop
  595  00001528  304300ff	andi	r3,r2,#0x00ff
  596  0000152c  70640066	sleui	r4,r3,#102
  597  00001530  14800034	bnez	r4,L6_LF2
  598  00001534  54000000	nop; delay slot nop
  599  00001538  08000004	j	L8_LF2
  600  0000153c  54000000	nop; delay slot nop
  601  00001540          	L8_LF2:
  602  00001540  304300ff	andi	r3,r2,#0x00ff
  603  00001544  6c640040	sgtui	r4,r3,#64
  604  00001548  10800020	beqz	r4,L5_LF2
  605  0000154c  54000000	nop; delay slot nop
  606  00001550  304300ff	andi	r3,r2,#0x00ff
  607  00001554  70640041	sleui	r4,r3,#65
  608  00001558  1480000c	bnez	r4,L6_LF2
  609  0000155c  54000000	nop; delay slot nop
  610  00001560  08000008	j	L5_LF2
  611  00001564  54000000	nop; delay slot nop
  612  00001568          	L6_LF2:
  613  00001568  20010001	addi	r1,r0,#1
  614  0000156c          	L5_LF2:
  615  0000156c  08000004	j	L4_LF2
  616  00001570  54000000	nop; delay slot nop
  617  00001574          	L4_LF2:
  618  00001574  8fa20000	lw	r2,0(r29)
  619  00001578  8fa30004	lw	r3,4(r29)
  620  0000157c  8fa40008	lw	r4,8(r29)
  621  00001580  8fdffff8	lw	r31,-8(r30)
  622  00001584  001ee820	add	r29,r0,r30
  623  00001588  8fdefffc	lw	r30,-4(r30)
  624  0000158c  4be00000	jr	r31
  625  00001590  54000000	nop
  626  00001594          	.endproc _isxdigit
  627  00001594          	.align 2
  628  00001594          	.proc _dstrcpy
  629  00001594          	.global _dstrcpy
  630  00001594          	_dstrcpy:
  631                      ;  Function 'dstrcpy'; 8 bytes of locals, 2 regs to save.
  632  00001594  afbefffc	sw	-4(r29),r30; push fp
  633  00001598  001df020	add	r30,r0,r29; fp = sp
  634  0000159c  afbffff8	sw	-8(r29),r31; push ret addr
  635  000015a0  2fbd0018	subui	r29,r29,#24; alloc local storage
  636  000015a4  afa20000	sw	0(r29),r2
  637  000015a8  afa30004	sw	4(r29),r3
  638  000015ac  8fc10000	lw	r1,(r30)
  639  000015b0  afc1fff4	sw	-12(r30),r1
  640  000015b4          	L10_LF2:
  641  000015b4  8fc10000	lw	r1,(r30)
  642  000015b8  20220001	addi	r2,r1,#1
  643  000015bc  afc20000	sw	(r30),r2
  644  000015c0  8fc20004	lw	r2,4(r30)
  645  000015c4  20430001	addi	r3,r2,#1
  646  000015c8  afc30004	sw	4(r30),r3
  647  000015cc  80420000	lb	r2,(r2)
  648  000015d0  a0220000	sb	(r1),r2
  649  000015d4  a3c2fff3	sb	-13(r30),r2
  650  000015d8          	L12_LF2:
  651  000015d8  93c1fff3	lbu	r1,-13(r30)
  652  000015dc  64220000	snei	r2,r1,#0
  653  000015e0  1440000c	bnez	r2,L13_LF2
  654  000015e4  54000000	nop; delay slot nop
  655  000015e8  0800000c	j	L11_LF2
  656  000015ec  54000000	nop; delay slot nop
  657  000015f0          	L13_LF2:
  658  000015f0  0bffffc0	j	L10_LF2
  659  000015f4  54000000	nop; delay slot nop
  660  000015f8          	L11_LF2:
  661  000015f8  8fc1fff4	lw	r1,-12(r30)
  662  000015fc  08000004	j	L9_LF2
  663  00001600  54000000	nop; delay slot nop
  664  00001604          	L9_LF2:
  665  00001604  8fa20000	lw	r2,0(r29)
  666  00001608  8fa30004	lw	r3,4(r29)
  667  0000160c  8fdffff8	lw	r31,-8(r30)
  668  00001610  001ee820	add	r29,r0,r30
  669  00001614  8fdefffc	lw	r30,-4(r30)
  670  00001618  4be00000	jr	r31
  671  0000161c  54000000	nop
  672  00001620          	.endproc _dstrcpy
  673  00001620          	.align 2
  674  00001620          	.proc _dstrncpy
  675  00001620          	.global _dstrncpy
  676  00001620          	_dstrncpy:
  677                      ;  Function 'dstrncpy'; 8 bytes of locals, 2 regs to save.
  678  00001620  afbefffc	sw	-4(r29),r30; push fp
  679  00001624  001df020	add	r30,r0,r29; fp = sp
  680  00001628  afbffff8	sw	-8(r29),r31; push ret addr
  681  0000162c  2fbd0018	subui	r29,r29,#24; alloc local storage
  682  00001630  afa20000	sw	0(r29),r2
  683  00001634  afa30004	sw	4(r29),r3
  684  00001638  8fc10000	lw	r1,(r30)
  685  0000163c  afc1fff4	sw	-12(r30),r1
  686  00001640          	L15_LF2:
  687  00001640  8fc10008	lw	r1,8(r30)
  688  00001644  2022ffff	addi	r2,r1,#-1
  689  00001648  afc20008	sw	8(r30),r2
  690  0000164c  70210000	slei	r1,r1,#0
  691  00001650  1020000c	beqz	r1,L18_LF2
  692  00001654  54000000	nop; delay slot nop
  693  00001658  08000048	j	L16_LF2
  694  0000165c  54000000	nop; delay slot nop
  695  00001660          	L18_LF2:
  696  00001660  8fc10000	lw	r1,(r30)
  697  00001664  20220001	addi	r2,r1,#1
  698  00001668  afc20000	sw	(r30),r2
  699  0000166c  8fc20004	lw	r2,4(r30)
  700  00001670  20430001	addi	r3,r2,#1
  701  00001674  afc30004	sw	4(r30),r3
  702  00001678  80420000	lb	r2,(r2)
  703  0000167c  a0220000	sb	(r1),r2
  704  00001680  a3c2fff3	sb	-13(r30),r2
  705  00001684          	L17_LF2:
  706  00001684  93c1fff3	lbu	r1,-13(r30)
  707  00001688  64220000	snei	r2,r1,#0
  708  0000168c  1440000c	bnez	r2,L19_LF2
  709  00001690  54000000	nop; delay slot nop
  710  00001694  0800000c	j	L16_LF2
  711  00001698  54000000	nop; delay slot nop
  712  0000169c          	L19_LF2:
  713  0000169c  0bffffa0	j	L15_LF2
  714  000016a0  54000000	nop; delay slot nop
  715  000016a4          	L16_LF2:
  716  000016a4  8fc1fff4	lw	r1,-12(r30)
  717  000016a8  08000004	j	L14_LF2
  718  000016ac  54000000	nop; delay slot nop
  719  000016b0          	L14_LF2:
  720  000016b0  8fa20000	lw	r2,0(r29)
  721  000016b4  8fa30004	lw	r3,4(r29)
  722  000016b8  8fdffff8	lw	r31,-8(r30)
  723  000016bc  001ee820	add	r29,r0,r30
  724  000016c0  8fdefffc	lw	r30,-4(r30)
  725  000016c4  4be00000	jr	r31
  726  000016c8  54000000	nop
  727  000016cc          	.endproc _dstrncpy
  728  000016cc          	.align 2
  729  000016cc          	.proc _dstrcat
  730  000016cc          	.global _dstrcat
  731  000016cc          	_dstrcat:
  732                      ;  Function 'dstrcat'; 8 bytes of locals, 1 regs to save.
  733  000016cc  afbefffc	sw	-4(r29),r30; push fp
  734  000016d0  001df020	add	r30,r0,r29; fp = sp
  735  000016d4  afbffff8	sw	-8(r29),r31; push ret addr
  736  000016d8  2fbd0018	subui	r29,r29,#24; alloc local storage
  737  000016dc  afa20000	sw	0(r29),r2
  738  000016e0  8fc10000	lw	r1,(r30)
  739  000016e4  afc1fff4	sw	-12(r30),r1
  740  000016e8          	L21_LF2:
  741  000016e8  8fc10000	lw	r1,(r30)
  742  000016ec  90220000	lbu	r2,(r1)
  743  000016f0  64410000	snei	r1,r2,#0
  744  000016f4  1420000c	bnez	r1,L23_LF2
  745  000016f8  54000000	nop; delay slot nop
  746  000016fc  0800001c	j	L22_LF2
  747  00001700  54000000	nop; delay slot nop
  748  00001704          	L23_LF2:
  749  00001704  8fc20000	lw	r2,(r30)
  750  00001708  20410001	addi	r1,r2,#1
  751  0000170c  00011020	add	r2,r0,r1
  752  00001710  afc20000	sw	(r30),r2
  753  00001714  0bffffd0	j	L21_LF2
  754  00001718  54000000	nop; delay slot nop
  755  0000171c          	L22_LF2:
  756  0000171c  23bdfff8	addi	r29,r29,#-8
  757  00001720  001d0820	add	r1,r0,r29
  758  00001724  8fc20000	lw	r2,(r30)
  759  00001728  ac220000	sw	(r1),r2
  760  0000172c  8fc20004	lw	r2,4(r30)
  761  00001730  ac220004	sw	4(r1),r2
  762  00001734  0ffffe5c	jal	_dstrcpy
  763  00001738  54000000	nop; delay slot nop
  764  0000173c  23bd0008	addi	r29,r29,#8
  765  00001740  8fc1fff4	lw	r1,-12(r30)
  766  00001744  08000004	j	L20_LF2
  767  00001748  54000000	nop; delay slot nop
  768  0000174c          	L20_LF2:
  769  0000174c  8fa20000	lw	r2,0(r29)
  770  00001750  8fdffff8	lw	r31,-8(r30)
  771  00001754  001ee820	add	r29,r0,r30
  772  00001758  8fdefffc	lw	r30,-4(r30)
  773  0000175c  4be00000	jr	r31
  774  00001760  54000000	nop
  775  00001764          	.endproc _dstrcat
  776  00001764          	.align 2
  777  00001764          	.proc _dstrncmp
  778  00001764          	.global _dstrncmp
  779  00001764          	_dstrncmp:
  780                      ;  Function 'dstrncmp'; 8 bytes of locals, 2 regs to save.
  781  00001764  afbefffc	sw	-4(r29),r30; push fp
  782  00001768  001df020	add	r30,r0,r29; fp = sp
  783  0000176c  afbffff8	sw	-8(r29),r31; push ret addr
  784  00001770  2fbd0018	subui	r29,r29,#24; alloc local storage
  785  00001774  afa20000	sw	0(r29),r2
  786  00001778  afa30004	sw	4(r29),r3
  787  0000177c  54000000	nop
  788  00001780  20010000	addi	r1,r0,#0
  789  00001784  afc1fff4	sw	-12(r30),r1
  790  00001788          	L25_LF2:
  791  00001788  8fc1fff4	lw	r1,-12(r30)
  792  0000178c  8fc20008	lw	r2,8(r30)
  793  00001790  0022082a	slt	r1,r1,r2
  794  00001794  1420000c	bnez	r1,L28_LF2
  795  00001798  54000000	nop; delay slot nop
  796  0000179c  08000088	j	L26_LF2
  797  000017a0  54000000	nop; delay slot nop
  798  000017a4          	L28_LF2:
  799  000017a4  8fc10004	lw	r1,4(r30)
  800  000017a8  90220000	lbu	r2,(r1)
  801  000017ac  64410000	snei	r1,r2,#0
  802  000017b0  14200018	bnez	r1,L29_LF2
  803  000017b4  54000000	nop; delay slot nop
  804  000017b8  20010000	addi	r1,r0,#0
  805  000017bc  080000d8	j	L24_LF2
  806  000017c0  54000000	nop; delay slot nop
  807  000017c4  08000028	j	L30_LF2
  808  000017c8  54000000	nop; delay slot nop
  809  000017cc          	L29_LF2:
  810  000017cc  8fc10000	lw	r1,(r30)
  811  000017d0  8fc20004	lw	r2,4(r30)
  812  000017d4  90210000	lbu	r1,(r1)
  813  000017d8  90420000	lbu	r2,(r2)
  814  000017dc  00220829	sne	r1,r1,r2
  815  000017e0  1020000c	beqz	r1,L30_LF2
  816  000017e4  54000000	nop; delay slot nop
  817  000017e8  0800003c	j	L26_LF2
  818  000017ec  54000000	nop; delay slot nop
  819  000017f0          	L31_LF2:
  820  000017f0          	L30_LF2:
  821  000017f0  8fc20000	lw	r2,(r30)
  822  000017f4  20410001	addi	r1,r2,#1
  823  000017f8  00011020	add	r2,r0,r1
  824  000017fc  afc20000	sw	(r30),r2
  825  00001800  8fc20004	lw	r2,4(r30)
  826  00001804  20410001	addi	r1,r2,#1
  827  00001808  00011020	add	r2,r0,r1
  828  0000180c  afc20004	sw	4(r30),r2
  829  00001810          	L27_LF2:
  830  00001810  8fc2fff4	lw	r2,-12(r30)
  831  00001814  20410001	addi	r1,r2,#1
  832  00001818  00011020	add	r2,r0,r1
  833  0000181c  afc2fff4	sw	-12(r30),r2
  834  00001820  0bffff64	j	L25_LF2
  835  00001824  54000000	nop; delay slot nop
  836  00001828          	L26_LF2:
  837  00001828  8fc1fff4	lw	r1,-12(r30)
  838  0000182c  8fc20008	lw	r2,8(r30)
  839  00001830  00220828	seq	r1,r1,r2
  840  00001834  10200018	beqz	r1,L32_LF2
  841  00001838  54000000	nop; delay slot nop
  842  0000183c  20010000	addi	r1,r0,#0
  843  00001840  08000054	j	L24_LF2
  844  00001844  54000000	nop; delay slot nop
  845  00001848  0800004c	j	L33_LF2
  846  0000184c  54000000	nop; delay slot nop
  847  00001850          	L32_LF2:
  848  00001850  8fc20000	lw	r2,(r30)
  849  00001854  90410000	lbu	r1,(r2)
  850  00001858  8fc20004	lw	r2,4(r30)
  851  0000185c  90430000	lbu	r3,(r2)
  852  00001860  00230822	sub	r1,r1,r3
  853  00001864  74220000	sgei	r2,r1,#0
  854  00001868  10400020	beqz	r2,L34_LF2
  855  0000186c  54000000	nop; delay slot nop
  856  00001870  8fc10000	lw	r1,(r30)
  857  00001874  8fc20004	lw	r2,4(r30)
  858  00001878  90210000	lbu	r1,(r1)
  859  0000187c  90420000	lbu	r2,(r2)
  860  00001880  00220829	sne	r1,r1,r2
  861  00001884  08000008	j	L35_LF2
  862  00001888  54000000	nop; delay slot nop
  863  0000188c          	L34_LF2:
  864  0000188c  2001ffff	addi	r1,r0,#-1
  865  00001890          	L35_LF2:
  866  00001890  08000004	j	L24_LF2
  867  00001894  54000000	nop; delay slot nop
  868  00001898          	L33_LF2:
  869  00001898          	L24_LF2:
  870  00001898  8fa20000	lw	r2,0(r29)
  871  0000189c  8fa30004	lw	r3,4(r29)
  872  000018a0  8fdffff8	lw	r31,-8(r30)
  873  000018a4  001ee820	add	r29,r0,r30
  874  000018a8  8fdefffc	lw	r30,-4(r30)
  875  000018ac  4be00000	jr	r31
  876  000018b0  54000000	nop
  877  000018b4          	.endproc _dstrncmp
  878  000018b4          	.align 2
  879  000018b4          	.proc _dstrlen
  880  000018b4          	.global _dstrlen
  881  000018b4          	_dstrlen:
  882                      ;  Function 'dstrlen'; 8 bytes of locals, 1 regs to save.
  883  000018b4  afbefffc	sw	-4(r29),r30; push fp
  884  000018b8  001df020	add	r30,r0,r29; fp = sp
  885  000018bc  afbffff8	sw	-8(r29),r31; push ret addr
  886  000018c0  2fbd0018	subui	r29,r29,#24; alloc local storage
  887  000018c4  afa20000	sw	0(r29),r2
  888  000018c8  20010000	addi	r1,r0,#0
  889  000018cc  afc1fff4	sw	-12(r30),r1
  890  000018d0          	L37_LF2:
  891  000018d0  8fc10000	lw	r1,(r30)
  892  000018d4  20220001	addi	r2,r1,#1
  893  000018d8  afc20000	sw	(r30),r2
  894  000018dc  90210000	lbu	r1,(r1)
  895  000018e0  64220000	snei	r2,r1,#0
  896  000018e4  1440000c	bnez	r2,L39_LF2
  897  000018e8  54000000	nop; delay slot nop
  898  000018ec  0800001c	j	L38_LF2
  899  000018f0  54000000	nop; delay slot nop
  900  000018f4          	L39_LF2:
  901  000018f4  8fc2fff4	lw	r2,-12(r30)
  902  000018f8  20410001	addi	r1,r2,#1
  903  000018fc  00011020	add	r2,r0,r1
  904  00001900  afc2fff4	sw	-12(r30),r2
  905  00001904  0bffffc8	j	L37_LF2
  906  00001908  54000000	nop; delay slot nop
  907  0000190c          	L38_LF2:
  908  0000190c  8fc1fff4	lw	r1,-12(r30)
  909  00001910  08000004	j	L36_LF2
  910  00001914  54000000	nop; delay slot nop
  911  00001918          	L36_LF2:
  912  00001918  8fa20000	lw	r2,0(r29)
  913  0000191c  8fdffff8	lw	r31,-8(r30)
  914  00001920  001ee820	add	r29,r0,r30
  915  00001924  8fdefffc	lw	r30,-4(r30)
  916  00001928  4be00000	jr	r31
  917  0000192c  54000000	nop
  918  00001930          	.endproc _dstrlen
  919  00001930          	.align 2
  920  00001930          	.proc _dstrstr
  921  00001930          	.global _dstrstr
  922  00001930          	_dstrstr:
  923                      ;  Function 'dstrstr'; 8 bytes of locals, 1 regs to save.
  924  00001930  afbefffc	sw	-4(r29),r30; push fp
  925  00001934  001df020	add	r30,r0,r29; fp = sp
  926  00001938  afbffff8	sw	-8(r29),r31; push ret addr
  927  0000193c  2fbd0018	subui	r29,r29,#24; alloc local storage
  928  00001940  afa20000	sw	0(r29),r2
  929  00001944  23bdfff8	addi	r29,r29,#-8
  930  00001948  001d0820	add	r1,r0,r29
  931  0000194c  8fc20004	lw	r2,4(r30)
  932  00001950  ac220000	sw	(r1),r2
  933  00001954  0fffff5c	jal	_dstrlen
  934  00001958  54000000	nop; delay slot nop
  935  0000195c  23bd0008	addi	r29,r29,#8
  936  00001960  afc1fff4	sw	-12(r30),r1
  937  00001964          	L41_LF2:
  938  00001964  8fc10000	lw	r1,(r30)
  939  00001968  90220000	lbu	r2,(r1)
  940  0000196c  64410000	snei	r1,r2,#0
  941  00001970  1420000c	bnez	r1,L43_LF2
  942  00001974  54000000	nop; delay slot nop
  943  00001978  08000060	j	L42_LF2
  944  0000197c  54000000	nop; delay slot nop
  945  00001980          	L43_LF2:
  946  00001980  23bdfff0	addi	r29,r29,#-16
  947  00001984  001d0820	add	r1,r0,r29
  948  00001988  8fc20000	lw	r2,(r30)
  949  0000198c  ac220000	sw	(r1),r2
  950  00001990  8fc20004	lw	r2,4(r30)
  951  00001994  ac220004	sw	4(r1),r2
  952  00001998  8fc2fff4	lw	r2,-12(r30)
  953  0000199c  ac220008	sw	8(r1),r2
  954  000019a0  0ffffdc0	jal	_dstrncmp
  955  000019a4  54000000	nop; delay slot nop
  956  000019a8  23bd0010	addi	r29,r29,#16
  957  000019ac  64220000	snei	r2,r1,#0
  958  000019b0  14400010	bnez	r2,L44_LF2
  959  000019b4  54000000	nop; delay slot nop
  960  000019b8  8fc10000	lw	r1,(r30)
  961  000019bc  08000028	j	L40_LF2
  962  000019c0  54000000	nop; delay slot nop
  963  000019c4          	L44_LF2:
  964  000019c4  8fc20000	lw	r2,(r30)
  965  000019c8  20410001	addi	r1,r2,#1
  966  000019cc  00011020	add	r2,r0,r1
  967  000019d0  afc20000	sw	(r30),r2
  968  000019d4  0bffff8c	j	L41_LF2
  969  000019d8  54000000	nop; delay slot nop
  970  000019dc          	L42_LF2:
  971  000019dc  20010000	addi	r1,r0,#0
  972  000019e0  08000004	j	L40_LF2
  973  000019e4  54000000	nop; delay slot nop
  974  000019e8          	L40_LF2:
  975  000019e8  8fa20000	lw	r2,0(r29)
  976  000019ec  8fdffff8	lw	r31,-8(r30)
  977  000019f0  001ee820	add	r29,r0,r30
  978  000019f4  8fdefffc	lw	r30,-4(r30)
  979  000019f8  4be00000	jr	r31
  980  000019fc  54000000	nop
  981  00001a00          	.endproc _dstrstr
  982  00001a00          	.align 2
  983  00001a00          	.proc _dmindex
  984  00001a00          	.global _dmindex
  985  00001a00          	_dmindex:
  986                      ;  Function 'dmindex'; 8 bytes of locals, 1 regs to save.
  987  00001a00  afbefffc	sw	-4(r29),r30; push fp
  988  00001a04  001df020	add	r30,r0,r29; fp = sp
  989  00001a08  afbffff8	sw	-8(r29),r31; push ret addr
  990  00001a0c  2fbd0018	subui	r29,r29,#24; alloc local storage
  991  00001a10  afa20000	sw	0(r29),r2
  992  00001a14  54000000	nop
  993  00001a18          	L46_LF2:
  994  00001a18  8fc10000	lw	r1,(r30)
  995  00001a1c  90220000	lbu	r2,(r1)
  996  00001a20  64410000	snei	r1,r2,#0
  997  00001a24  1420000c	bnez	r1,L48_LF2
  998  00001a28  54000000	nop; delay slot nop
  999  00001a2c  08000070	j	L47_LF2
 1000  00001a30  54000000	nop; delay slot nop
 1001  00001a34          	L48_LF2:
 1002  00001a34  8fc10004	lw	r1,4(r30)
 1003  00001a38  afc1fff4	sw	-12(r30),r1
 1004  00001a3c          	L49_LF2:
 1005  00001a3c  8fc1fff4	lw	r1,-12(r30)
 1006  00001a40  90220000	lbu	r2,(r1)
 1007  00001a44  64410000	snei	r1,r2,#0
 1008  00001a48  1420000c	bnez	r1,L52_LF2
 1009  00001a4c  54000000	nop; delay slot nop
 1010  00001a50  08000044	j	L50_LF2
 1011  00001a54  54000000	nop; delay slot nop
 1012  00001a58          	L52_LF2:
 1013  00001a58  8fc10000	lw	r1,(r30)
 1014  00001a5c  8fc2fff4	lw	r2,-12(r30)
 1015  00001a60  90210000	lbu	r1,(r1)
 1016  00001a64  90420000	lbu	r2,(r2)
 1017  00001a68  00220828	seq	r1,r1,r2
 1018  00001a6c  10200010	beqz	r1,L51_LF2
 1019  00001a70  54000000	nop; delay slot nop
 1020  00001a74  8fc10000	lw	r1,(r30)
 1021  00001a78  08000030	j	L45_LF2
 1022  00001a7c  54000000	nop; delay slot nop
 1023  00001a80          	L53_LF2:
 1024  00001a80          	L51_LF2:
 1025  00001a80  8fc2fff4	lw	r2,-12(r30)
 1026  00001a84  20410001	addi	r1,r2,#1
 1027  00001a88  00011020	add	r2,r0,r1
 1028  00001a8c  afc2fff4	sw	-12(r30),r2
 1029  00001a90  0bffffa8	j	L49_LF2
 1030  00001a94  54000000	nop; delay slot nop
 1031  00001a98          	L50_LF2:
 1032  00001a98  0bffff7c	j	L46_LF2
 1033  00001a9c  54000000	nop; delay slot nop
 1034  00001aa0          	L47_LF2:
 1035  00001aa0  20010000	addi	r1,r0,#0
 1036  00001aa4  08000004	j	L45_LF2
 1037  00001aa8  54000000	nop; delay slot nop
 1038  00001aac          	L45_LF2:
 1039  00001aac  8fa20000	lw	r2,0(r29)
 1040  00001ab0  8fdffff8	lw	r31,-8(r30)
 1041  00001ab4  001ee820	add	r29,r0,r30
 1042  00001ab8  8fdefffc	lw	r30,-4(r30)
 1043  00001abc  4be00000	jr	r31
 1044  00001ac0  54000000	nop
 1045  00001ac4          	.endproc _dmindex
 1046  00001ac4          	.align 2
 1047  00001ac4          	.proc _dindex
 1048  00001ac4          	.global _dindex
 1049  00001ac4          	_dindex:
 1050                      ;  Function 'dindex'; 0 bytes of locals, 1 regs to save.
 1051  00001ac4  afbefffc	sw	-4(r29),r30; push fp
 1052  00001ac8  001df020	add	r30,r0,r29; fp = sp
 1053  00001acc  afbffff8	sw	-8(r29),r31; push ret addr
 1054  00001ad0  2fbd0010	subui	r29,r29,#16; alloc local storage
 1055  00001ad4  afa20000	sw	0(r29),r2
 1056  00001ad8  54000000	nop
 1057  00001adc          	L55_LF2:
 1058  00001adc  8fc10000	lw	r1,(r30)
 1059  00001ae0  90220000	lbu	r2,(r1)
 1060  00001ae4  64410000	snei	r1,r2,#0
 1061  00001ae8  1420000c	bnez	r1,L57_LF2
 1062  00001aec  54000000	nop; delay slot nop
 1063  00001af0  08000040	j	L56_LF2
 1064  00001af4  54000000	nop; delay slot nop
 1065  00001af8          	L57_LF2:
 1066  00001af8  8fc10000	lw	r1,(r30)
 1067  00001afc  90220000	lbu	r2,(r1)
 1068  00001b00  8fc10004	lw	r1,4(r30)
 1069  00001b04  00411028	seq	r2,r2,r1
 1070  00001b08  10400010	beqz	r2,L58_LF2
 1071  00001b0c  54000000	nop; delay slot nop
 1072  00001b10  8fc10000	lw	r1,(r30)
 1073  00001b14  08000028	j	L54_LF2
 1074  00001b18  54000000	nop; delay slot nop
 1075  00001b1c          	L58_LF2:
 1076  00001b1c  8fc20000	lw	r2,(r30)
 1077  00001b20  20410001	addi	r1,r2,#1
 1078  00001b24  00011020	add	r2,r0,r1
 1079  00001b28  afc20000	sw	(r30),r2
 1080  00001b2c  0bffffac	j	L55_LF2
 1081  00001b30  54000000	nop; delay slot nop
 1082  00001b34          	L56_LF2:
 1083  00001b34  20010000	addi	r1,r0,#0
 1084  00001b38  08000004	j	L54_LF2
 1085  00001b3c  54000000	nop; delay slot nop
 1086  00001b40          	L54_LF2:
 1087  00001b40  8fa20000	lw	r2,0(r29)
 1088  00001b44  8fdffff8	lw	r31,-8(r30)
 1089  00001b48  001ee820	add	r29,r0,r30
 1090  00001b4c  8fdefffc	lw	r30,-4(r30)
 1091  00001b50  4be00000	jr	r31
 1092  00001b54  54000000	nop
 1093  00001b58          	.endproc _dindex
 1094  00001b58          	.align 2
 1095  00001b58          	.proc _ditoa
 1096  00001b58          	.global _ditoa
 1097  00001b58          	_ditoa:
 1098                      ;  Function 'ditoa'; 8 bytes of locals, 2 regs to save.
 1099  00001b58  afbefffc	sw	-4(r29),r30; push fp
 1100  00001b5c  001df020	add	r30,r0,r29; fp = sp
 1101  00001b60  afbffff8	sw	-8(r29),r31; push ret addr
 1102  00001b64  2fbd0018	subui	r29,r29,#24; alloc local storage
 1103  00001b68  afa20000	sw	0(r29),r2
 1104  00001b6c  afa30004	sw	4(r29),r3
 1105  00001b70  8fc10000	lw	r1,(r30)
 1106  00001b74  68220000	slti	r2,r1,#0
 1107  00001b78  1040002c	beqz	r2,L60_LF2
 1108  00001b7c  54000000	nop; delay slot nop
 1109  00001b80  8fc10004	lw	r1,4(r30)
 1110  00001b84  20220001	addi	r2,r1,#1
 1111  00001b88  afc20004	sw	4(r30),r2
 1112  00001b8c  2002002d	addi	r2,r0,(#0x2d)&0xff
 1113  00001b90  a0220000	sb	(r1),r2
 1114  00001b94  8fc10000	lw	r1,(r30)
 1115  00001b98  00011022	sub	r2,r0,r1
 1116  00001b9c  afc20000	sw	(r30),r2
 1117  00001ba0  08000118	j	L61_LF2
 1118  00001ba4  54000000	nop; delay slot nop
 1119  00001ba8          	L60_LF2:
 1120  00001ba8  8fc10000	lw	r1,(r30)
 1121  00001bac  64220000	snei	r2,r1,#0
 1122  00001bb0  14400020	bnez	r2,L62_LF2
 1123  00001bb4  54000000	nop; delay slot nop
 1124  00001bb8  8fc10004	lw	r1,4(r30)
 1125  00001bbc  20220001	addi	r2,r1,#1
 1126  00001bc0  afc20004	sw	4(r30),r2
 1127  00001bc4  20020030	addi	r2,r0,(#0x30)&0xff
 1128  00001bc8  a0220000	sb	(r1),r2
 1129  00001bcc  080000ec	j	L61_LF2
 1130  00001bd0  54000000	nop; delay slot nop
 1131  00001bd4          	L62_LF2:
 1132  00001bd4  20010001	addi	r1,r0,#1
 1133  00001bd8  afc1fff4	sw	-12(r30),r1
 1134  00001bdc          	L64_LF2:
 1135  00001bdc  8fc1fff4	lw	r1,-12(r30)
 1136  00001be0  8fc20000	lw	r2,(r30)
 1137  00001be4  0022082c	sle	r1,r1,r2
 1138  00001be8  1420000c	bnez	r1,L66_LF2
 1139  00001bec  54000000	nop; delay slot nop
 1140  00001bf0  08000024	j	L65_LF2
 1141  00001bf4  54000000	nop; delay slot nop
 1142  00001bf8          	L67_LF2:
 1143  00001bf8          	L66_LF2:
 1144  00001bf8  8fc1fff4	lw	r1,-12(r30)
 1145  00001bfc  00011820	add	r3,r0,r1
 1146  00001c00  50620002	slli	r2,r3,#0x2
 1147  00001c04  00411020	add	r2,r2,r1
 1148  00001c08  50410001	slli	r1,r2,#0x1
 1149  00001c0c  afc1fff4	sw	-12(r30),r1
 1150  00001c10  0bffffc8	j	L64_LF2
 1151  00001c14  54000000	nop; delay slot nop
 1152  00001c18          	L65_LF2:
 1153  00001c18  54000000	nop
 1154  00001c1c          	L68_LF2:
 1155  00001c1c  8fc1fff4	lw	r1,-12(r30)
 1156  00001c20  2002000a	addi	r2,r0,#10
 1157  00001c24  00200035	movi2fp	f0,r1
 1158  00001c28  00400835	movi2fp	f1,r2
 1159  00001c2c  0401000f	div	f0,f0,f1
 1160  00001c30  00000834	movfp2i	r1,f0
 1161  00001c34  afc1fff4	sw	-12(r30),r1
 1162  00001c38  8fc10004	lw	r1,4(r30)
 1163  00001c3c  20220001	addi	r2,r1,#1
 1164  00001c40  afc20004	sw	4(r30),r2
 1165  00001c44  8fc20000	lw	r2,(r30)
 1166  00001c48  8fc3fff4	lw	r3,-12(r30)
 1167  00001c4c  00400035	movi2fp	f0,r2
 1168  00001c50  00600835	movi2fp	f1,r3
 1169  00001c54  0401000f	div	f0,f0,f1
 1170  00001c58  00001034	movfp2i	r2,f0
 1171  00001c5c  00021820	add	r3,r0,r2
 1172  00001c60  20620030	addi	r2,r3,#48
 1173  00001c64  a0220000	sb	(r1),r2
 1174  00001c68  8fc10000	lw	r1,(r30)
 1175  00001c6c  8fc3fff4	lw	r3,-12(r30)
 1176  00001c70  00200035	movi2fp	f0,r1
 1177  00001c74  00600835	movi2fp	f1,r3
 1178  00001c78  0401000f	div	f0,f0,f1
 1179  00001c7c  00001034	movfp2i	r2,f0
 1180  00001c80  8fc3fff4	lw	r3,-12(r30)
 1181  00001c84  00400035	movi2fp	f0,r2
 1182  00001c88  00600835	movi2fp	f1,r3
 1183  00001c8c  0401000e	mult	f0,f0,f1
 1184  00001c90  00001034	movfp2i	r2,f0
 1185  00001c94  00220822	sub	r1,r1,r2
 1186  00001c98  afc10000	sw	(r30),r1
 1187  00001c9c          	L70_LF2:
 1188  00001c9c  8fc1fff4	lw	r1,-12(r30)
 1189  00001ca0  6c220001	sgti	r2,r1,#1
 1190  00001ca4  1440000c	bnez	r2,L71_LF2
 1191  00001ca8  54000000	nop; delay slot nop
 1192  00001cac  0800000c	j	L61_LF2
 1193  00001cb0  54000000	nop; delay slot nop
 1194  00001cb4          	L71_LF2:
 1195  00001cb4  0bffff64	j	L68_LF2
 1196  00001cb8  54000000	nop; delay slot nop
 1197  00001cbc          	L69_LF2:
 1198  00001cbc          	L63_LF2:
 1199  00001cbc          	L61_LF2:
 1200  00001cbc  8fc10004	lw	r1,4(r30)
 1201  00001cc0  20020000	addi	r2,r0,(#0x0)&0xff
 1202  00001cc4  a0220000	sb	(r1),r2
 1203  00001cc8          	L59_LF2:
 1204  00001cc8  8fa20000	lw	r2,0(r29)
 1205  00001ccc  8fa30004	lw	r3,4(r29)
 1206  00001cd0  8fdffff8	lw	r31,-8(r30)
 1207  00001cd4  001ee820	add	r29,r0,r30
 1208  00001cd8  8fdefffc	lw	r30,-4(r30)
 1209  00001cdc  4be00000	jr	r31
 1210  00001ce0  54000000	nop
 1211  00001ce4          	.endproc _ditoa
 1212  00001ce4          	.align 2
 1213  00001ce4          	.proc _dstrtol
 1214  00001ce4          	.global _dstrtol
 1215  00001ce4          	_dstrtol:
 1216                      ;  Function 'dstrtol'; 16 bytes of locals, 1 regs to save.
 1217  00001ce4  afbefffc	sw	-4(r29),r30; push fp
 1218  00001ce8  001df020	add	r30,r0,r29; fp = sp
 1219  00001cec  afbffff8	sw	-8(r29),r31; push ret addr
 1220  00001cf0  2fbd0020	subui	r29,r29,#32; alloc local storage
 1221  00001cf4  afa20000	sw	0(r29),r2
 1222  00001cf8  20010000	addi	r1,r0,#0
 1223  00001cfc  afc1fff4	sw	-12(r30),r1
 1224  00001d00          	L73_LF2:
 1225  00001d00  8fc10000	lw	r1,(r30)
 1226  00001d04  90220000	lbu	r2,(r1)
 1227  00001d08  60410020	seqi	r1,r2,#32
 1228  00001d0c  14200034	bnez	r1,L75_LF2
 1229  00001d10  54000000	nop; delay slot nop
 1230  00001d14  8fc10000	lw	r1,(r30)
 1231  00001d18  90220000	lbu	r2,(r1)
 1232  00001d1c  60410009	seqi	r1,r2,#9
 1233  00001d20  14200020	bnez	r1,L75_LF2
 1234  00001d24  54000000	nop; delay slot nop
 1235  00001d28  8fc10000	lw	r1,(r30)
 1236  00001d2c  90220000	lbu	r2,(r1)
 1237  00001d30  6041000a	seqi	r1,r2,#10
 1238  00001d34  1420000c	bnez	r1,L75_LF2
 1239  00001d38  54000000	nop; delay slot nop
 1240  00001d3c  0800001c	j	L74_LF2
 1241  00001d40  54000000	nop; delay slot nop
 1242  00001d44          	L75_LF2:
 1243  00001d44  8fc20000	lw	r2,(r30)
 1244  00001d48  20410001	addi	r1,r2,#1
 1245  00001d4c  00011020	add	r2,r0,r1
 1246  00001d50  afc20000	sw	(r30),r2
 1247  00001d54  0bffffa8	j	L73_LF2
 1248  00001d58  54000000	nop; delay slot nop
 1249  00001d5c          	L74_LF2:
 1250  00001d5c  8fc10004	lw	r1,4(r30)
 1251  00001d60  64220000	snei	r2,r1,#0
 1252  00001d64  10400010	beqz	r2,L76_LF2
 1253  00001d68  54000000	nop; delay slot nop
 1254  00001d6c  8fc10004	lw	r1,4(r30)
 1255  00001d70  8fc20000	lw	r2,(r30)
 1256  00001d74  ac220000	sw	(r1),r2
 1257  00001d78          	L76_LF2:
 1258  00001d78  8fc10000	lw	r1,(r30)
 1259  00001d7c  90220000	lbu	r2,(r1)
 1260  00001d80  64410000	snei	r1,r2,#0
 1261  00001d84  14200010	bnez	r1,L77_LF2
 1262  00001d88  54000000	nop; delay slot nop
 1263  00001d8c  8fc1fff4	lw	r1,-12(r30)
 1264  00001d90  08000294	j	L72_LF2
 1265  00001d94  54000000	nop; delay slot nop
 1266  00001d98          	L77_LF2:
 1267  00001d98  8fc10000	lw	r1,(r30)
 1268  00001d9c  90220000	lbu	r2,(r1)
 1269  00001da0  6041002d	seqi	r1,r2,#45
 1270  00001da4  10200024	beqz	r1,L78_LF2
 1271  00001da8  54000000	nop; delay slot nop
 1272  00001dac  2001ffff	addi	r1,r0,#-1
 1273  00001db0  afc1ffec	sw	-20(r30),r1
 1274  00001db4  8fc20000	lw	r2,(r30)
 1275  00001db8  20410001	addi	r1,r2,#1
 1276  00001dbc  00011020	add	r2,r0,r1
 1277  00001dc0  afc20000	sw	(r30),r2
 1278  00001dc4  0800000c	j	L79_LF2
 1279  00001dc8  54000000	nop; delay slot nop
 1280  00001dcc          	L78_LF2:
 1281  00001dcc  20010001	addi	r1,r0,#1
 1282  00001dd0  afc1ffec	sw	-20(r30),r1
 1283  00001dd4          	L79_LF2:
 1284  00001dd4  8fc10008	lw	r1,8(r30)
 1285  00001dd8  64220000	snei	r2,r1,#0
 1286  00001ddc  14400090	bnez	r2,L80_LF2
 1287  00001de0  54000000	nop; delay slot nop
 1288  00001de4  8fc10000	lw	r1,(r30)
 1289  00001de8  90220000	lbu	r2,(r1)
 1290  00001dec  60410030	seqi	r1,r2,#48
 1291  00001df0  10200074	beqz	r1,L81_LF2
 1292  00001df4  54000000	nop; delay slot nop
 1293  00001df8  8fc20000	lw	r2,(r30)
 1294  00001dfc  20410001	addi	r1,r2,#1
 1295  00001e00  00011020	add	r2,r0,r1
 1296  00001e04  afc20000	sw	(r30),r2
 1297  00001e08  8fc10000	lw	r1,(r30)
 1298  00001e0c  90220000	lbu	r2,(r1)
 1299  00001e10  60410078	seqi	r1,r2,#120
 1300  00001e14  14200020	bnez	r1,L83_LF2
 1301  00001e18  54000000	nop; delay slot nop
 1302  00001e1c  8fc10000	lw	r1,(r30)
 1303  00001e20  90220000	lbu	r2,(r1)
 1304  00001e24  60410058	seqi	r1,r2,#88
 1305  00001e28  1420000c	bnez	r1,L83_LF2
 1306  00001e2c  54000000	nop; delay slot nop
 1307  00001e30  08000024	j	L82_LF2
 1308  00001e34  54000000	nop; delay slot nop
 1309  00001e38          	L83_LF2:
 1310  00001e38  20010010	addi	r1,r0,#16
 1311  00001e3c  afc10008	sw	8(r30),r1
 1312  00001e40  8fc20000	lw	r2,(r30)
 1313  00001e44  20410001	addi	r1,r2,#1
 1314  00001e48  00011020	add	r2,r0,r1
 1315  00001e4c  afc20000	sw	(r30),r2
 1316  00001e50  0800000c	j	L84_LF2
 1317  00001e54  54000000	nop; delay slot nop
 1318  00001e58          	L82_LF2:
 1319  00001e58  20010008	addi	r1,r0,#8
 1320  00001e5c  afc10008	sw	8(r30),r1
 1321  00001e60          	L84_LF2:
 1322  00001e60  0800000c	j	L80_LF2
 1323  00001e64  54000000	nop; delay slot nop
 1324  00001e68          	L81_LF2:
 1325  00001e68  2001000a	addi	r1,r0,#10
 1326  00001e6c  afc10008	sw	8(r30),r1
 1327  00001e70          	L85_LF2:
 1328  00001e70          	L80_LF2:
 1329  00001e70  8fc10008	lw	r1,8(r30)
 1330  00001e74  70220000	slei	r2,r1,#0
 1331  00001e78  1440001c	bnez	r2,L87_LF2
 1332  00001e7c  54000000	nop; delay slot nop
 1333  00001e80  8fc10008	lw	r1,8(r30)
 1334  00001e84  6c220010	sgti	r2,r1,#16
 1335  00001e88  1440000c	bnez	r2,L87_LF2
 1336  00001e8c  54000000	nop; delay slot nop
 1337  00001e90  08000010	j	L86_LF2
 1338  00001e94  54000000	nop; delay slot nop
 1339  00001e98          	L87_LF2:
 1340  00001e98  8fc1fff4	lw	r1,-12(r30)
 1341  00001e9c  08000188	j	L72_LF2
 1342  00001ea0  54000000	nop; delay slot nop
 1343  00001ea4          	L86_LF2:
 1344  00001ea4  54000000	nop
 1345  00001ea8          	L88_LF2:
 1346  00001ea8  8fc10000	lw	r1,(r30)
 1347  00001eac  90220000	lbu	r2,(r1)
 1348  00001eb0  6c41002f	sgtui	r1,r2,#47
 1349  00001eb4  10200030	beqz	r1,L91_LF2
 1350  00001eb8  54000000	nop; delay slot nop
 1351  00001ebc  8fc10000	lw	r1,(r30)
 1352  00001ec0  90220000	lbu	r2,(r1)
 1353  00001ec4  70410039	sleui	r1,r2,#57
 1354  00001ec8  1020001c	beqz	r1,L91_LF2
 1355  00001ecc  54000000	nop; delay slot nop
 1356  00001ed0  8fc10000	lw	r1,(r30)
 1357  00001ed4  90220000	lbu	r2,(r1)
 1358  00001ed8  2041ffd0	addi	r1,r2,#-48
 1359  00001edc  afc1fff0	sw	-16(r30),r1
 1360  00001ee0  0800008c	j	L92_LF2
 1361  00001ee4  54000000	nop; delay slot nop
 1362  00001ee8          	L91_LF2:
 1363  00001ee8  8fc10000	lw	r1,(r30)
 1364  00001eec  90220000	lbu	r2,(r1)
 1365  00001ef0  6c410060	sgtui	r1,r2,#96
 1366  00001ef4  10200030	beqz	r1,L93_LF2
 1367  00001ef8  54000000	nop; delay slot nop
 1368  00001efc  8fc10000	lw	r1,(r30)
 1369  00001f00  90220000	lbu	r2,(r1)
 1370  00001f04  7041007a	sleui	r1,r2,#122
 1371  00001f08  1020001c	beqz	r1,L93_LF2
 1372  00001f0c  54000000	nop; delay slot nop
 1373  00001f10  8fc10000	lw	r1,(r30)
 1374  00001f14  90220000	lbu	r2,(r1)
 1375  00001f18  2041ffa9	addi	r1,r2,#-87
 1376  00001f1c  afc1fff0	sw	-16(r30),r1
 1377  00001f20  0800004c	j	L92_LF2
 1378  00001f24  54000000	nop; delay slot nop
 1379  00001f28          	L93_LF2:
 1380  00001f28  8fc10000	lw	r1,(r30)
 1381  00001f2c  90220000	lbu	r2,(r1)
 1382  00001f30  6c410040	sgtui	r1,r2,#64
 1383  00001f34  10200030	beqz	r1,L95_LF2
 1384  00001f38  54000000	nop; delay slot nop
 1385  00001f3c  8fc10000	lw	r1,(r30)
 1386  00001f40  90220000	lbu	r2,(r1)
 1387  00001f44  7041005a	sleui	r1,r2,#90
 1388  00001f48  1020001c	beqz	r1,L95_LF2
 1389  00001f4c  54000000	nop; delay slot nop
 1390  00001f50  8fc10000	lw	r1,(r30)
 1391  00001f54  90220000	lbu	r2,(r1)
 1392  00001f58  2041ffc9	addi	r1,r2,#-55
 1393  00001f5c  afc1fff0	sw	-16(r30),r1
 1394  00001f60  0800000c	j	L92_LF2
 1395  00001f64  54000000	nop; delay slot nop
 1396  00001f68          	L95_LF2:
 1397  00001f68  200103e8	addi	r1,r0,#1000
 1398  00001f6c  afc1fff0	sw	-16(r30),r1
 1399  00001f70          	L96_LF2:
 1400  00001f70          	L94_LF2:
 1401  00001f70          	L92_LF2:
 1402  00001f70  8fc1fff0	lw	r1,-16(r30)
 1403  00001f74  8fc20008	lw	r2,8(r30)
 1404  00001f78  0022082a	slt	r1,r1,r2
 1405  00001f7c  10200040	beqz	r1,L90_LF2
 1406  00001f80  54000000	nop; delay slot nop
 1407  00001f84  8fc1fff4	lw	r1,-12(r30)
 1408  00001f88  8fc20008	lw	r2,8(r30)
 1409  00001f8c  00200035	movi2fp	f0,r1
 1410  00001f90  00400835	movi2fp	f1,r2
 1411  00001f94  0401000e	mult	f0,f0,f1
 1412  00001f98  00000834	movfp2i	r1,f0
 1413  00001f9c  afc1fff4	sw	-12(r30),r1
 1414  00001fa0  8fc1fff4	lw	r1,-12(r30)
 1415  00001fa4  8fc2fff0	lw	r2,-16(r30)
 1416  00001fa8  00220820	add	r1,r1,r2
 1417  00001fac  afc1fff4	sw	-12(r30),r1
 1418  00001fb0  8fc20000	lw	r2,(r30)
 1419  00001fb4  20410001	addi	r1,r2,#1
 1420  00001fb8  00011020	add	r2,r0,r1
 1421  00001fbc  afc20000	sw	(r30),r2
 1422  00001fc0          	L97_LF2:
 1423  00001fc0          	L90_LF2:
 1424  00001fc0  8fc1fff0	lw	r1,-16(r30)
 1425  00001fc4  8fc20008	lw	r2,8(r30)
 1426  00001fc8  0022082a	slt	r1,r1,r2
 1427  00001fcc  1420000c	bnez	r1,L98_LF2
 1428  00001fd0  54000000	nop; delay slot nop
 1429  00001fd4  0800000c	j	L89_LF2
 1430  00001fd8  54000000	nop; delay slot nop
 1431  00001fdc          	L98_LF2:
 1432  00001fdc  0bfffec8	j	L88_LF2
 1433  00001fe0  54000000	nop; delay slot nop
 1434  00001fe4          	L89_LF2:
 1435  00001fe4  8fc10004	lw	r1,4(r30)
 1436  00001fe8  64220000	snei	r2,r1,#0
 1437  00001fec  10400010	beqz	r2,L99_LF2
 1438  00001ff0  54000000	nop; delay slot nop
 1439  00001ff4  8fc10004	lw	r1,4(r30)
 1440  00001ff8  8fc20000	lw	r2,(r30)
 1441  00001ffc  ac220000	sw	(r1),r2
 1442  00002000          	L99_LF2:
 1443  00002000  8fc1fff4	lw	r1,-12(r30)
 1444  00002004  8fc2ffec	lw	r2,-20(r30)
 1445  00002008  00200035	movi2fp	f0,r1
 1446  0000200c  00400835	movi2fp	f1,r2
 1447  00002010  0401000e	mult	f0,f0,f1
 1448  00002014  00000834	movfp2i	r1,f0
 1449  00002018  afc1fff4	sw	-12(r30),r1
 1450  0000201c  8fc1fff4	lw	r1,-12(r30)
 1451  00002020  08000004	j	L72_LF2
 1452  00002024  54000000	nop; delay slot nop
 1453  00002028          	L72_LF2:
 1454  00002028  8fa20000	lw	r2,0(r29)
 1455  0000202c  8fdffff8	lw	r31,-8(r30)
 1456  00002030  001ee820	add	r29,r0,r30
 1457  00002034  8fdefffc	lw	r30,-4(r30)
 1458  00002038  4be00000	jr	r31
 1459  0000203c  54000000	nop
 1460  00002040          	.endproc _dstrtol
 1461  00002040          	.align 2
 1462  00002040          	.proc _bcopy
 1463  00002040          	.global _bcopy
 1464  00002040          	_bcopy:
 1465                      ;  Function 'bcopy'; 0 bytes of locals, 2 regs to save.
 1466  00002040  afbefffc	sw	-4(r29),r30; push fp
 1467  00002044  001df020	add	r30,r0,r29; fp = sp
 1468  00002048  afbffff8	sw	-8(r29),r31; push ret addr
 1469  0000204c  2fbd0010	subui	r29,r29,#16; alloc local storage
 1470  00002050  afa20000	sw	0(r29),r2
 1471  00002054  afa30004	sw	4(r29),r3
 1472  00002058  54000000	nop
 1473  0000205c          	L101_LF2:
 1474  0000205c  8fc10008	lw	r1,8(r30)
 1475  00002060  2022ffff	addi	r2,r1,#-1
 1476  00002064  afc20008	sw	8(r30),r2
 1477  00002068  6c210000	sgti	r1,r1,#0
 1478  0000206c  1420000c	bnez	r1,L103_LF2
 1479  00002070  54000000	nop; delay slot nop
 1480  00002074  0800002c	j	L102_LF2
 1481  00002078  54000000	nop; delay slot nop
 1482  0000207c          	L103_LF2:
 1483  0000207c  8fc10004	lw	r1,4(r30)
 1484  00002080  20220001	addi	r2,r1,#1
 1485  00002084  afc20004	sw	4(r30),r2
 1486  00002088  8fc20000	lw	r2,(r30)
 1487  0000208c  20430001	addi	r3,r2,#1
 1488  00002090  afc30000	sw	(r30),r3
 1489  00002094  80420000	lb	r2,(r2)
 1490  00002098  a0220000	sb	(r1),r2
 1491  0000209c  0bffffbc	j	L101_LF2
 1492  000020a0  54000000	nop; delay slot nop
 1493  000020a4          	L102_LF2:
 1494  000020a4          	L100_LF2:
 1495  000020a4  8fa20000	lw	r2,0(r29)
 1496  000020a8  8fa30004	lw	r3,4(r29)
 1497  000020ac  8fdffff8	lw	r31,-8(r30)
 1498  000020b0  001ee820	add	r29,r0,r30
 1499  000020b4  8fdefffc	lw	r30,-4(r30)
 1500  000020b8  4be00000	jr	r31
 1501  000020bc  54000000	nop
 1502  000020c0          	.endproc _bcopy
 1503  000020c0          	.align 2
 1504  000020c0          	.proc _bzero
 1505  000020c0          	.global _bzero
 1506  000020c0          	_bzero:
 1507                      ;  Function 'bzero'; 0 bytes of locals, 1 regs to save.
 1508  000020c0  afbefffc	sw	-4(r29),r30; push fp
 1509  000020c4  001df020	add	r30,r0,r29; fp = sp
 1510  000020c8  afbffff8	sw	-8(r29),r31; push ret addr
 1511  000020cc  2fbd0010	subui	r29,r29,#16; alloc local storage
 1512  000020d0  afa20000	sw	0(r29),r2
 1513  000020d4  54000000	nop
 1514  000020d8          	L105_LF2:
 1515  000020d8  8fc10004	lw	r1,4(r30)
 1516  000020dc  2022ffff	addi	r2,r1,#-1
 1517  000020e0  afc20004	sw	4(r30),r2
 1518  000020e4  6c210000	sgti	r1,r1,#0
 1519  000020e8  1420000c	bnez	r1,L107_LF2
 1520  000020ec  54000000	nop; delay slot nop
 1521  000020f0  08000020	j	L106_LF2
 1522  000020f4  54000000	nop; delay slot nop
 1523  000020f8          	L107_LF2:
 1524  000020f8  8fc10000	lw	r1,(r30)
 1525  000020fc  20220001	addi	r2,r1,#1
 1526  00002100  afc20000	sw	(r30),r2
 1527  00002104  20020000	addi	r2,r0,(#0x0)&0xff
 1528  00002108  a0220000	sb	(r1),r2
 1529  0000210c  0bffffc8	j	L105_LF2
 1530  00002110  54000000	nop; delay slot nop
 1531  00002114          	L106_LF2:
 1532  00002114          	L104_LF2:
 1533  00002114  8fa20000	lw	r2,0(r29)
 1534  00002118  8fdffff8	lw	r31,-8(r30)
 1535  0000211c  001ee820	add	r29,r0,r30
 1536  00002120  8fdefffc	lw	r30,-4(r30)
 1537  00002124  4be00000	jr	r31
 1538  00002128  54000000	nop
 1539  0000212c          	.endproc _bzero
 1540  0000212c          	.align 2
 1541  0000212c          	.proc _min
 1542  0000212c          	.global _min
 1543  0000212c          	_min:
 1544                      ;  Function 'min'; 0 bytes of locals, 2 regs to save.
 1545  0000212c  afbefffc	sw	-4(r29),r30; push fp
 1546  00002130  001df020	add	r30,r0,r29; fp = sp
 1547  00002134  afbffff8	sw	-8(r29),r31; push ret addr
 1548  00002138  2fbd0010	subui	r29,r29,#16; alloc local storage
 1549  0000213c  afa20000	sw	0(r29),r2
 1550  00002140  afa30004	sw	4(r29),r3
 1551  00002144  8fc10000	lw	r1,(r30)
 1552  00002148  8fc20004	lw	r2,4(r30)
 1553  0000214c  0022182c	sle	r3,r1,r2
 1554  00002150  14600008	bnez	r3,L109_LF2
 1555  00002154  54000000	nop; delay slot nop
 1556  00002158  8fc10004	lw	r1,4(r30)
 1557  0000215c          	L109_LF2:
 1558  0000215c  08000004	j	L108_LF2
 1559  00002160  54000000	nop; delay slot nop
 1560  00002164          	L108_LF2:
 1561  00002164  8fa20000	lw	r2,0(r29)
 1562  00002168  8fa30004	lw	r3,4(r29)
 1563  0000216c  8fdffff8	lw	r31,-8(r30)
 1564  00002170  001ee820	add	r29,r0,r30
 1565  00002174  8fdefffc	lw	r30,-4(r30)
 1566  00002178  4be00000	jr	r31
 1567  0000217c  54000000	nop
 1568  00002180          	.endproc _min
 1569  00002180          	.align 2
 1570  00002180          	.proc _max
 1571  00002180          	.global _max
 1572  00002180          	_max:
 1573                      ;  Function 'max'; 0 bytes of locals, 2 regs to save.
 1574  00002180  afbefffc	sw	-4(r29),r30; push fp
 1575  00002184  001df020	add	r30,r0,r29; fp = sp
 1576  00002188  afbffff8	sw	-8(r29),r31; push ret addr
 1577  0000218c  2fbd0010	subui	r29,r29,#16; alloc local storage
 1578  00002190  afa20000	sw	0(r29),r2
 1579  00002194  afa30004	sw	4(r29),r3
 1580  00002198  8fc10000	lw	r1,(r30)
 1581  0000219c  8fc20004	lw	r2,4(r30)
 1582  000021a0  0022182d	sge	r3,r1,r2
 1583  000021a4  14600008	bnez	r3,L111_LF2
 1584  000021a8  54000000	nop; delay slot nop
 1585  000021ac  8fc10004	lw	r1,4(r30)
 1586  000021b0          	L111_LF2:
 1587  000021b0  08000004	j	L110_LF2
 1588  000021b4  54000000	nop; delay slot nop
 1589  000021b8          	L110_LF2:
 1590  000021b8  8fa20000	lw	r2,0(r29)
 1591  000021bc  8fa30004	lw	r3,4(r29)
 1592  000021c0  8fdffff8	lw	r31,-8(r30)
 1593  000021c4  001ee820	add	r29,r0,r30
 1594  000021c8  8fdefffc	lw	r30,-4(r30)
 1595  000021cc  4be00000	jr	r31
 1596  000021d0  54000000	nop
 1597  000021d4          	.endproc _max
 1598                      ;;; Ethan L. Miller, 1999.  Released to the public domain
 1599                      ;;;
 1600                      ;;; Most of the traps are called in files from libtraps.
 1603  000021d4          	.align 2
 1604  000021d4          	.proc _exit
 1605  000021d4          	.global _exit
 1606  000021d4          	_exit:
 1607  000021d4  44000300	trap	#0x300
 1608  000021d8  4be00000	jr	r31
 1609  000021dc  54000000	nop
 1610  000021e0          	.endproc _exit
 1612                      ; for the benefit of gcc.
 1613  000021e0          	.proc ___main
 1614  000021e0          	.global ___main
 1615  000021e0          	___main:
 1616  000021e0  4be00000	jr	r31
 1617  000021e4  54000000	nop
 1618  000021e8          	.endproc ___main
 1619                      ;
 1620                      ; Stub functions for DLX traps.
 1621                      ;
 1622                      ; Aaron Sawdey 1996; released to the Public Domain.
 1623                      ;
 1625  000021e8          	.proc _printf
 1626  000021e8          	.global _printf
 1627  000021e8          	_printf:
 1628  000021e8  44002001	trap	#0x2001
 1629  000021ec  4be00000	jr	r31
 1630  000021f0  54000000	nop
 1631  000021f4          	.endproc _printf
 1633  000021f4          	.text
 1634  000021f4          	.global _etext
 1635  000021f4          	_etext:
 1636  000021f4          	.align 3
 1637  000021f8          	.data
 1638  0000319f          	.global _edata
 1639  0000319f          	_edata:
