 line   address	contents
    1                      ; Linked by DLX-LD.
    2                      ; MemSize 24576
    3                      ; Data size: 192
    4                      ; Text size: 4520
    5                      ; Stack size: 8192
    6  00000000          	.text 0x1000
    7  00001000          	.data 0x3000
    8                      ; Compiled by GCC
    9  00003000          	.text
   10  00001000          	.align 2
   11  00001000          	.proc _isspace
   12  00001000          	.global _isspace
   13  00001000          	_isspace:
   14                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
   15  00001000  afbefffc	sw	-4(r29),r30; push fp
   16  00001004  001df020	add	r30,r0,r29; fp = sp
   17  00001008  afbffff8	sw	-8(r29),r31; push ret addr
   18  0000100c  2fbd0010	subui	r29,r29,#16; alloc local storage
   19  00001010  afa20000	sw	0(r29),r2
   20  00001014  83c20003	lb	r2,3(r30)
   21  00001018  201f0000	addi	r31,r0,#0
   22  0000101c  304100ff	andi	r1,r2,#0x00ff
   23  00001020  60210020	seqi	r1,r1,#32
   24  00001024  14200018	bnez	r1,L6_LF0
   25  00001028  54000000	nop; not filled.
   26  0000102c  2041fff7	addi	r1,r2,#-9
   27  00001030  302100ff	andi	r1,r1,#0x00ff
   28  00001034  70210001	sleui	r1,r1,#1
   29  00001038  10200008	beqz	r1,L5_LF0
   30  0000103c  54000000	nop; not filled.
   31  00001040          	L6_LF0:
   32  00001040  201f0001	addi	r31,r0,#1
   33  00001044          	L5_LF0:
   34  00001044  001f0820	add	r1,r0,r31
   35  00001048  8fa20000	lw	r2,0(r29)
   36  0000104c  8fdffff8	lw	r31,-8(r30)
   37  00001050  001ee820	add	r29,r0,r30
   38  00001054  8fdefffc	lw	r30,-4(r30)
   39  00001058  4be00000	jr	r31
   40  0000105c  54000000	nop
   41  00001060          	.endproc _isspace
   42  00001060          	.align 2
   43  00001060          	.proc _isxdigit
   44  00001060          	.global _isxdigit
   45  00001060          	_isxdigit:
   46                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
   47  00001060  afbefffc	sw	-4(r29),r30; push fp
   48  00001064  001df020	add	r30,r0,r29; fp = sp
   49  00001068  afbffff8	sw	-8(r29),r31; push ret addr
   50  0000106c  2fbd0010	subui	r29,r29,#16; alloc local storage
   51  00001070  afa20000	sw	0(r29),r2
   52  00001074  83df0003	lb	r31,3(r30)
   53  00001078  20020000	addi	r2,r0,#0
   54  0000107c  23e1ffd0	addi	r1,r31,#-48
   55  00001080  302100ff	andi	r1,r1,#0x00ff
   56  00001084  70210009	sleui	r1,r1,#9
   57  00001088  14200028	bnez	r1,L12_LF0
   58  0000108c  54000000	nop; not filled.
   59  00001090  23e1ff9f	addi	r1,r31,#-97
   60  00001094  302100ff	andi	r1,r1,#0x00ff
   61  00001098  70210005	sleui	r1,r1,#5
   62  0000109c  14200014	bnez	r1,L12_LF0
   63  000010a0  54000000	nop; not filled.
   64  000010a4  33e100ff	andi	r1,r31,#0x00ff
   65  000010a8  64210041	snei	r1,r1,#65
   66  000010ac  14200008	bnez	r1,L11_LF0
   67  000010b0  54000000	nop; not filled.
   68  000010b4          	L12_LF0:
   69  000010b4  20020001	addi	r2,r0,#1
   70  000010b8          	L11_LF0:
   71  000010b8  00020820	add	r1,r0,r2
   72  000010bc  8fa20000	lw	r2,0(r29)
   73  000010c0  8fdffff8	lw	r31,-8(r30)
   74  000010c4  001ee820	add	r29,r0,r30
   75  000010c8  8fdefffc	lw	r30,-4(r30)
   76  000010cc  4be00000	jr	r31
   77  000010d0  54000000	nop
   78  000010d4          	.endproc _isxdigit
   79  000010d4          	.data
   80  00003000          	.align 2
   81  00003000          	LC0_LF0:
   82  00003000  55736167	.ascii "Usage: %s <handle_to_procs_completed_semaphore>\n\000"
   82  00003004  653a2025	
   82  00003008  73203c68	
   82  0000300c  616e646c	
   82  00003010  655f746f	
   82  00003014  5f70726f	
   82  00003018  63735f63	
   82  0000301c  6f6d706c	
   82  00003020  65746564	
   82  00003024  5f73656d	
   82  00003028  6170686f	
   82  0000302c  72653e0a	
   82  00003030  00      	
   83  00003031          	.align 2
   84  00003034          	LC1_LF0:
   85  00003034  68656c6c	.ascii "hello_world (%d): Hello world!\n\000"
   85  00003038  6f5f776f	
   85  0000303c  726c6420	
   85  00003040  28256429	
   85  00003044  3a204865	
   85  00003048  6c6c6f20	
   85  0000304c  776f726c	
   85  00003050  64210a00	
   86  00003054          	.align 2
   87  00003054          	LC2_LF0:
   88  00003054  68656c6c	.ascii "hello_world (%d): Bad semaphore s_procs_completed (%d)!\n\000"
   88  00003058  6f5f776f	
   88  0000305c  726c6420	
   88  00003060  28256429	
   88  00003064  3a204261	
   88  00003068  64207365	
   88  0000306c  6d617068	
   88  00003070  6f726520	
   88  00003074  735f7072	
   88  00003078  6f63735f	
   88  0000307c  636f6d70	
   88  00003080  6c657465	
   88  00003084  64202825	
   88  00003088  6429210a	
   88  0000308c  00      	
   89  0000308d          	.align 2
   90  00003090          	LC3_LF0:
   91  00003090  68656c6c	.ascii "hello_world (%d): Done!\n\000"
   91  00003094  6f5f776f	
   91  00003098  726c6420	
   91  0000309c  28256429	
   91  000030a0  3a20446f	
   91  000030a4  6e65210a	
   91  000030a8  00      	
   92  000030a9          	.text
   93  000010d4          	.align 2
   94  000010d4          	.proc _main
   95  000010d4          	.global _main
   96  000010d4          	_main:
   97                      ;  Function 'main'; 0 bytes of locals, 0 regs to save.
   98  000010d4  afbefffc	sw	-4(r29),r30; push fp
   99  000010d8  001df020	add	r30,r0,r29; fp = sp
  100  000010dc  afbffff8	sw	-8(r29),r31; push ret addr
  101  000010e0  2fbd0008	subui	r29,r29,#8; alloc local storage
  102  000010e4  8fc20000	lw	r2,(r30)
  103  000010e8  8fc30004	lw	r3,4(r30)
  104  000010ec  0c0010b0	jal	___main
  105  000010f0  54000000	nop; not filled.
  106  000010f4  64410002	snei	r1,r2,#2
  107  000010f8  10200028	beqz	r1,L17_LF0
  108  000010fc  54000000	nop; not filled.
  109  00001100  23bdfff8	addi	r29,r29,#-8
  110  00001104  3c040000	lhi	r4,((LC0_LF0)>>16)&0xffff
  111  00001108  24843000	addui	r4,r4,(LC0_LF0)&0xffff
  112  0000110c  afa40000	sw	(r29),r4
  113  00001110  0c0001c0	jal	_Printf
  114  00001114  54000000	nop; not filled.
  115  00001118  0c0002cc	jal	_Exit
  116  0000111c  54000000	nop; not filled.
  117  00001120  23bd0008	addi	r29,r29,#8
  118  00001124          	L17_LF0:
  119  00001124  23bdfff0	addi	r29,r29,#-16
  120  00001128  8c630004	lw	r3,4(r3)
  121  0000112c  afa30000	sw	(r29),r3
  122  00001130  20040000	addi	r4,r0,#0
  123  00001134  afa40004	sw	4(r29),r4
  124  00001138  2004000a	addi	r4,r0,#10
  125  0000113c  afa40008	sw	8(r29),r4
  126  00001140  0c000b60	jal	_dstrtol
  127  00001144  54000000	nop; not filled.
  128  00001148  00011020	add	r2,r0,r1
  129  0000114c  0c000190	jal	_getpid
  130  00001150  54000000	nop; not filled.
  131  00001154  3c040000	lhi	r4,((LC1_LF0)>>16)&0xffff
  132  00001158  24843034	addui	r4,r4,(LC1_LF0)&0xffff
  133  0000115c  afa40000	sw	(r29),r4
  134  00001160  afa10004	sw	4(r29),r1
  135  00001164  0c00016c	jal	_Printf
  136  00001168  54000000	nop; not filled.
  137  0000116c  afa20000	sw	(r29),r2
  138  00001170  0c0001c0	jal	_sem_signal
  139  00001174  54000000	nop; not filled.
  140  00001178  23bd0010	addi	r29,r29,#16
  141  0000117c  64210001	snei	r1,r1,#1
  142  00001180  10200038	beqz	r1,L18_LF0
  143  00001184  54000000	nop; not filled.
  144  00001188  0c000154	jal	_getpid
  145  0000118c  54000000	nop; not filled.
  146  00001190  23bdfff0	addi	r29,r29,#-16
  147  00001194  3c040000	lhi	r4,((LC2_LF0)>>16)&0xffff
  148  00001198  24843054	addui	r4,r4,(LC2_LF0)&0xffff
  149  0000119c  afa40000	sw	(r29),r4
  150  000011a0  afa10004	sw	4(r29),r1
  151  000011a4  afa20008	sw	8(r29),r2
  152  000011a8  0c000128	jal	_Printf
  153  000011ac  54000000	nop; not filled.
  154  000011b0  0c000234	jal	_Exit
  155  000011b4  54000000	nop; not filled.
  156  000011b8  23bd0010	addi	r29,r29,#16
  157  000011bc          	L18_LF0:
  158  000011bc  0c000120	jal	_getpid
  159  000011c0  54000000	nop; not filled.
  160  000011c4  23bdfff8	addi	r29,r29,#-8
  161  000011c8  3c040000	lhi	r4,((LC3_LF0)>>16)&0xffff
  162  000011cc  24843090	addui	r4,r4,(LC3_LF0)&0xffff
  163  000011d0  afa40000	sw	(r29),r4
  164  000011d4  afa10004	sw	4(r29),r1
  165  000011d8  0c0000f8	jal	_Printf
  166  000011dc  54000000	nop; not filled.
  167  000011e0  23bd0008	addi	r29,r29,#8
  168  000011e4  0c000fac	jal	_exit
  169  000011e8  54000000	nop
  170  000011ec          	.endproc _main
  171  000011ec          	.data
  172  000030a9          	.align 2
  173  000030ac          	LC4_LF0:
  174  000030ac  68656c6c	.ascii "hello_world, i= %d\n\000"
  174  000030b0  6f5f776f	
  174  000030b4  726c642c	
  174  000030b8  20693d20	
  174  000030bc  25640a00	
  175  000030c0          	.text
  176  000011ec          	.align 2
  177  000011ec          	.proc _hello
  178  000011ec          	.global _hello
  179  000011ec          	_hello:
  180                      ;  Function 'hello'; 400 bytes of locals, 3 regs to save.
  181  000011ec  afbefffc	sw	-4(r29),r30; push fp
  182  000011f0  001df020	add	r30,r0,r29; fp = sp
  183  000011f4  afbffff8	sw	-8(r29),r31; push ret addr
  184  000011f8  2fbd01a8	subui	r29,r29,#424; alloc local storage
  185  000011fc  afa20000	sw	0(r29),r2
  186  00001200  afa30004	sw	4(r29),r3
  187  00001204  afa40008	sw	8(r29),r4
  188  00001208  8fc20000	lw	r2,(r30)
  189  0000120c  23dffff8	addi	r31,r30,#-8
  190  00001210  23c30184	addi	r3,r30,#388
  191  00001214          	L30_LF0:
  192  00001214  afe2fe70	sw	-400(r31),r2
  193  00001218  23ff0004	addi	r31,r31,#4
  194  0000121c  03e3082c	sle	r1,r31,r3
  195  00001220  1420fff0	bnez	r1,L30_LF0
  196  00001224  54000000	nop; not filled.
  197  00001228  23bdfff8	addi	r29,r29,#-8
  198  0000122c  3c040000	lhi	r4,((LC4_LF0)>>16)&0xffff
  199  00001230  248430ac	addui	r4,r4,(LC4_LF0)&0xffff
  200  00001234  afa40000	sw	(r29),r4
  201  00001238  afa20004	sw	4(r29),r2
  202  0000123c  0c000094	jal	_Printf
  203  00001240  54000000	nop; not filled.
  204  00001244  23bd0008	addi	r29,r29,#8
  205  00001248  6c410000	sgti	r1,r2,#0
  206  0000124c  1020001c	beqz	r1,L32_LF0
  207  00001250  54000000	nop; not filled.
  208  00001254  2042ffff	addi	r2,r2,#-1
  209  00001258  23bdfff8	addi	r29,r29,#-8
  210  0000125c  afa20000	sw	(r29),r2
  211  00001260  0fffff88	jal	_hello
  212  00001264  54000000	nop; not filled.
  213  00001268  23bd0008	addi	r29,r29,#8
  214  0000126c          	L32_LF0:
  215  0000126c  8fa20000	lw	r2,0(r29)
  216  00001270  8fa30004	lw	r3,4(r29)
  217  00001274  8fa40008	lw	r4,8(r29)
  218  00001278  8fdffff8	lw	r31,-8(r30)
  219  0000127c  001ee820	add	r29,r0,r30
  220  00001280  8fdefffc	lw	r30,-4(r30)
  221  00001284  4be00000	jr	r31
  222  00001288  54000000	nop
  223  0000128c          	.endproc _hello
  224                      ;;;
  225                      ;;; Stub functions for DLX traps.
  226                      ;;;
  227                      ;;; Ethan L. Miller, 1999.  Released to the public domain.
  228                      ;;;
  229                      ;;; The traps such as Open and Close
  230                      ;;; (note the capital letters) are for use by user programs.  The traps
  231                      ;;; with names such as open and close (lower case) are for use by the OS.
  232                      ;;;
  235  0000128c          	.align 2
  237                      ;;; The following are the traps to be used by user-level programs
  238                      ;;;
  240  0000128c          	.align 2
  241  0000128c          	.proc _Open
  242  0000128c          	.global _Open
  243  0000128c          	_Open:
  244                      ;;; Note that trap #0x213 actually causes a trap vector in the OS of
  245                      ;;; 0x1213.  The same is true for other user traps.  Thus, a user trap
  246                      ;;; with trap #0x240 will result in a trap vector of 0x1240 in the OS.
  247  0000128c  44000213	trap	#0x213
  248  00001290  4be00000	jr	r31
  249  00001294  54000000	nop
  250  00001298          	.endproc _Open
  252  00001298          	.proc _Close
  253  00001298          	.global _Close
  254  00001298          	_Close:
  255  00001298  44000214	trap	#0x214
  256  0000129c  4be00000	jr	r31
  257  000012a0  54000000	nop
  258  000012a4          	.endproc _Close
  260  000012a4          	.proc _Read
  261  000012a4          	.global _Read
  262  000012a4          	_Read:
  263  000012a4  44000210	trap	#0x210
  264  000012a8  4be00000	jr	r31
  265  000012ac  54000000	nop
  266  000012b0          	.endproc _Read
  268  000012b0          	.proc _Write
  269  000012b0          	.global _Write
  270  000012b0          	_Write:
  271  000012b0  44000211	trap	#0x211
  272  000012b4  4be00000	jr	r31
  273  000012b8  54000000	nop
  274  000012bc          	.endproc _Write
  276  000012bc          	.proc _Lseek
  277  000012bc          	.global _Lseek
  278  000012bc          	_Lseek:
  279  000012bc  44000212	trap	#0x212
  280  000012c0  4be00000	jr	r31
  281  000012c4  54000000	nop
  282  000012c8          	.endproc _Lseek
  284  000012c8          	.proc _Putchar
  285  000012c8          	.global _Putchar
  286  000012c8          	_Putchar:
  287  000012c8  44000280	trap	#0x280
  288  000012cc  4be00000	jr	r31
  289  000012d0  54000000	nop
  290  000012d4          	.endproc _Putchar
  292  000012d4          	.proc _Printf
  293  000012d4          	.global _Printf
  294  000012d4          	_Printf:
  295  000012d4  44000201	trap	#0x201
  296  000012d8  4be00000	jr	r31
  297  000012dc  54000000	nop
  298  000012e0          	.endproc _Printf
  300  000012e0          	.proc _getpid
  301  000012e0          	.global _getpid
  302  000012e0          	_getpid:
  303  000012e0  44000431	trap	#0x431
  304  000012e4  4be00000	jr	r31
  305  000012e8  54000000	nop
  306  000012ec          	.endproc _getpid
  308  000012ec          	.proc _process_create
  309  000012ec          	.global _process_create
  310  000012ec          	_process_create:
  311  000012ec  44000432	trap	#0x432
  312  000012f0  4be00000	jr	r31
  313  000012f4  54000000	nop
  314  000012f8          	.endproc _process_create
  316  000012f8          	.proc _process_fork
  317  000012f8          	.global _process_fork
  318  000012f8          	_process_fork:
  319  000012f8  44000430	trap	#0x430
  320  000012fc  4be00000	jr	r31
  321  00001300  54000000	nop
  322  00001304          	.endproc _process_fork
  324  00001304          	.proc _shmget
  325  00001304          	.global _shmget
  326  00001304          	_shmget:
  327  00001304  44000440	trap	#0x440
  328  00001308  4be00000	jr	r31
  329  0000130c  54000000	nop
  330  00001310          	.endproc _shmget
  332  00001310          	.proc _shmat
  333  00001310          	.global _shmat
  334  00001310          	_shmat:
  335  00001310  44000441	trap	#0x441
  336  00001314  4be00000	jr	r31
  337  00001318  54000000	nop
  338  0000131c          	.endproc _shmat
  340  0000131c          	.proc _sem_create
  341  0000131c          	.global _sem_create
  342  0000131c          	_sem_create:
  343  0000131c  44000450	trap	#0x450
  344  00001320  4be00000	jr	r31
  345  00001324  54000000	nop
  346  00001328          	.endproc _sem_create
  348  00001328          	.proc _sem_wait
  349  00001328          	.global _sem_wait
  350  00001328          	_sem_wait:
  351  00001328  44000451	trap	#0x451
  352  0000132c  4be00000	jr	r31
  353  00001330  54000000	nop
  354  00001334          	.endproc _sem_wait
  356  00001334          	.proc _sem_signal
  357  00001334          	.global _sem_signal
  358  00001334          	_sem_signal:
  359  00001334  44000452	trap	#0x452
  360  00001338  4be00000	jr	r31
  361  0000133c  54000000	nop
  362  00001340          	.endproc _sem_signal
  364  00001340          	.proc _lock_create
  365  00001340          	.global _lock_create
  366  00001340          	_lock_create:
  367  00001340  44000453	trap	#0x453
  368  00001344  4be00000	jr	r31
  369  00001348  54000000	nop
  370  0000134c          	.endproc _lock_create
  372  0000134c          	.proc _lock_acquire
  373  0000134c          	.global _lock_acquire
  374  0000134c          	_lock_acquire:
  375  0000134c  44000454	trap	#0x454
  376  00001350  4be00000	jr	r31
  377  00001354  54000000	nop
  378  00001358          	.endproc _lock_acquire
  380  00001358          	.proc _lock_release
  381  00001358          	.global _lock_release
  382  00001358          	_lock_release:
  383  00001358  44000455	trap	#0x455
  384  0000135c  4be00000	jr	r31
  385  00001360  54000000	nop
  386  00001364          	.endproc _lock_release
  388  00001364          	.proc _cond_create
  389  00001364          	.global _cond_create
  390  00001364          	_cond_create:
  391  00001364  44000456	trap	#0x456
  392  00001368  4be00000	jr	r31
  393  0000136c  54000000	nop
  394  00001370          	.endproc _cond_create
  396  00001370          	.proc _cond_wait
  397  00001370          	.global _cond_wait
  398  00001370          	_cond_wait:
  399  00001370  44000457	trap	#0x457
  400  00001374  4be00000	jr	r31
  401  00001378  54000000	nop
  402  0000137c          	.endproc _cond_wait
  404  0000137c          	.proc _cond_signal
  405  0000137c          	.global _cond_signal
  406  0000137c          	_cond_signal:
  407  0000137c  44000458	trap	#0x458
  408  00001380  4be00000	jr	r31
  409  00001384  54000000	nop
  410  00001388          	.endproc _cond_signal
  412  00001388          	.proc _cond_broadcast
  413  00001388          	.global _cond_broadcast
  414  00001388          	_cond_broadcast:
  415  00001388  44000459	trap	#0x459
  416  0000138c  4be00000	jr	r31
  417  00001390  54000000	nop
  418  00001394          	.endproc _cond_broadcast
  420  00001394          	.proc _mbox_create
  421  00001394          	.global _mbox_create
  422  00001394          	_mbox_create:
  423  00001394  44000460	trap	#0x460
  424  00001398  4be00000	jr	r31
  425  0000139c  54000000	nop
  426  000013a0          	.endproc _mbox_create
  428  000013a0          	.proc _mbox_open
  429  000013a0          	.global _mbox_open
  430  000013a0          	_mbox_open:
  431  000013a0  44000461	trap	#0x461
  432  000013a4  4be00000	jr	r31
  433  000013a8  54000000	nop
  434  000013ac          	.endproc _mbox_open
  436  000013ac          	.proc _mbox_close
  437  000013ac          	.global _mbox_close
  438  000013ac          	_mbox_close:
  439  000013ac  44000462	trap	#0x462
  440  000013b0  4be00000	jr	r31
  441  000013b4  54000000	nop
  442  000013b8          	.endproc _mbox_close
  444  000013b8          	.proc _mbox_send
  445  000013b8          	.global _mbox_send
  446  000013b8          	_mbox_send:
  447  000013b8  44000463	trap	#0x463
  448  000013bc  4be00000	jr	r31
  449  000013c0  54000000	nop
  450  000013c4          	.endproc _mbox_send
  452  000013c4          	.proc _mbox_recv
  453  000013c4          	.global _mbox_recv
  454  000013c4          	_mbox_recv:
  455  000013c4  44000464	trap	#0x464
  456  000013c8  4be00000	jr	r31
  457  000013cc  54000000	nop
  458  000013d0          	.endproc _mbox_recv
  460  000013d0          	.proc _sleep
  461  000013d0          	.global _sleep
  462  000013d0          	_sleep:
  463  000013d0  44000465	trap	#0x465
  464  000013d4  4be00000	jr	r31
  465  000013d8  54000000	nop
  466  000013dc          	.endproc _sleep
  468  000013dc          	.proc _yield
  469  000013dc          	.global _yield
  470  000013dc          	_yield:
  471  000013dc  44000466	trap	#0x466
  472  000013e0  4be00000	jr	r31
  473  000013e4  54000000	nop
  474  000013e8          	.endproc _yield
  477  000013e8          	.proc _Exit
  478  000013e8          	.global _Exit
  479  000013e8          	_Exit:
  480  000013e8  44000500	trap	#0x500
  481  000013ec  4be00000	jr	r31
  482  000013f0  54000000	nop
  483  000013f4          	.endproc _Exit
  486  000013f4          	.proc _malloc
  487  000013f4          	.global _malloc
  488  000013f4          	_malloc:
  489  000013f4  44000467	trap	#0x467
  490  000013f8  4be00000	jr	r31
  491  000013fc          	.endproc _malloc
  494  000013fc          	.proc _mfree
  495  000013fc          	.global _mfree
  496  000013fc          	_mfree:
  497  000013fc  44000468	trap	#0x468
  498  00001400  4be00000	jr	r31
  499  00001404          	.endproc _mfree
  500                      ; Compiled by GCC
  502  00001404          	.align 2
  503  00001404          	.proc _isspace
  504  00001404          	.global _isspace
  505  00001404          	_isspace:
  506                      ;  Function 'isspace'; 0 bytes of locals, 3 regs to save.
  507  00001404  afbefffc	sw	-4(r29),r30; push fp
  508  00001408  001df020	add	r30,r0,r29; fp = sp
  509  0000140c  afbffff8	sw	-8(r29),r31; push ret addr
  510  00001410  2fbd0018	subui	r29,r29,#24; alloc local storage
  511  00001414  afa20000	sw	0(r29),r2
  512  00001418  afa30004	sw	4(r29),r3
  513  0000141c  afa40008	sw	8(r29),r4
  514  00001420  83c20003	lb	r2,3(r30)
  515  00001424  20010000	addi	r1,r0,#0
  516  00001428  304300ff	andi	r3,r2,#0x00ff
  517  0000142c  60640020	seqi	r4,r3,#32
  518  00001430  1480002c	bnez	r4,L3_LF2
  519  00001434  54000000	nop; delay slot nop
  520  00001438  304300ff	andi	r3,r2,#0x00ff
  521  0000143c  60640009	seqi	r4,r3,#9
  522  00001440  1480001c	bnez	r4,L3_LF2
  523  00001444  54000000	nop; delay slot nop
  524  00001448  304300ff	andi	r3,r2,#0x00ff
  525  0000144c  6064000a	seqi	r4,r3,#10
  526  00001450  1480000c	bnez	r4,L3_LF2
  527  00001454  54000000	nop; delay slot nop
  528  00001458  08000008	j	L2_LF2
  529  0000145c  54000000	nop; delay slot nop
  530  00001460          	L3_LF2:
  531  00001460  20010001	addi	r1,r0,#1
  532  00001464          	L2_LF2:
  533  00001464  08000004	j	L1_LF2
  534  00001468  54000000	nop; delay slot nop
  535  0000146c          	L1_LF2:
  536  0000146c  8fa20000	lw	r2,0(r29)
  537  00001470  8fa30004	lw	r3,4(r29)
  538  00001474  8fa40008	lw	r4,8(r29)
  539  00001478  8fdffff8	lw	r31,-8(r30)
  540  0000147c  001ee820	add	r29,r0,r30
  541  00001480  8fdefffc	lw	r30,-4(r30)
  542  00001484  4be00000	jr	r31
  543  00001488  54000000	nop
  544  0000148c          	.endproc _isspace
  545  0000148c          	.align 2
  546  0000148c          	.proc _isxdigit
  547  0000148c          	.global _isxdigit
  548  0000148c          	_isxdigit:
  549                      ;  Function 'isxdigit'; 0 bytes of locals, 3 regs to save.
  550  0000148c  afbefffc	sw	-4(r29),r30; push fp
  551  00001490  001df020	add	r30,r0,r29; fp = sp
  552  00001494  afbffff8	sw	-8(r29),r31; push ret addr
  553  00001498  2fbd0018	subui	r29,r29,#24; alloc local storage
  554  0000149c  afa20000	sw	0(r29),r2
  555  000014a0  afa30004	sw	4(r29),r3
  556  000014a4  afa40008	sw	8(r29),r4
  557  000014a8  83c20003	lb	r2,3(r30)
  558  000014ac  20010000	addi	r1,r0,#0
  559  000014b0  304300ff	andi	r3,r2,#0x00ff
  560  000014b4  6c64002f	sgtui	r4,r3,#47
  561  000014b8  1080001c	beqz	r4,L7_LF2
  562  000014bc  54000000	nop; delay slot nop
  563  000014c0  304300ff	andi	r3,r2,#0x00ff
  564  000014c4  70640039	sleui	r4,r3,#57
  565  000014c8  1480005c	bnez	r4,L6_LF2
  566  000014cc  54000000	nop; delay slot nop
  567  000014d0  08000004	j	L7_LF2
  568  000014d4  54000000	nop; delay slot nop
  569  000014d8          	L7_LF2:
  570  000014d8  304300ff	andi	r3,r2,#0x00ff
  571  000014dc  6c640060	sgtui	r4,r3,#96
  572  000014e0  1080001c	beqz	r4,L8_LF2
  573  000014e4  54000000	nop; delay slot nop
  574  000014e8  304300ff	andi	r3,r2,#0x00ff
  575  000014ec  70640066	sleui	r4,r3,#102
  576  000014f0  14800034	bnez	r4,L6_LF2
  577  000014f4  54000000	nop; delay slot nop
  578  000014f8  08000004	j	L8_LF2
  579  000014fc  54000000	nop; delay slot nop
  580  00001500          	L8_LF2:
  581  00001500  304300ff	andi	r3,r2,#0x00ff
  582  00001504  6c640040	sgtui	r4,r3,#64
  583  00001508  10800020	beqz	r4,L5_LF2
  584  0000150c  54000000	nop; delay slot nop
  585  00001510  304300ff	andi	r3,r2,#0x00ff
  586  00001514  70640041	sleui	r4,r3,#65
  587  00001518  1480000c	bnez	r4,L6_LF2
  588  0000151c  54000000	nop; delay slot nop
  589  00001520  08000008	j	L5_LF2
  590  00001524  54000000	nop; delay slot nop
  591  00001528          	L6_LF2:
  592  00001528  20010001	addi	r1,r0,#1
  593  0000152c          	L5_LF2:
  594  0000152c  08000004	j	L4_LF2
  595  00001530  54000000	nop; delay slot nop
  596  00001534          	L4_LF2:
  597  00001534  8fa20000	lw	r2,0(r29)
  598  00001538  8fa30004	lw	r3,4(r29)
  599  0000153c  8fa40008	lw	r4,8(r29)
  600  00001540  8fdffff8	lw	r31,-8(r30)
  601  00001544  001ee820	add	r29,r0,r30
  602  00001548  8fdefffc	lw	r30,-4(r30)
  603  0000154c  4be00000	jr	r31
  604  00001550  54000000	nop
  605  00001554          	.endproc _isxdigit
  606  00001554          	.align 2
  607  00001554          	.proc _dstrcpy
  608  00001554          	.global _dstrcpy
  609  00001554          	_dstrcpy:
  610                      ;  Function 'dstrcpy'; 8 bytes of locals, 2 regs to save.
  611  00001554  afbefffc	sw	-4(r29),r30; push fp
  612  00001558  001df020	add	r30,r0,r29; fp = sp
  613  0000155c  afbffff8	sw	-8(r29),r31; push ret addr
  614  00001560  2fbd0018	subui	r29,r29,#24; alloc local storage
  615  00001564  afa20000	sw	0(r29),r2
  616  00001568  afa30004	sw	4(r29),r3
  617  0000156c  8fc10000	lw	r1,(r30)
  618  00001570  afc1fff4	sw	-12(r30),r1
  619  00001574          	L10_LF2:
  620  00001574  8fc10000	lw	r1,(r30)
  621  00001578  20220001	addi	r2,r1,#1
  622  0000157c  afc20000	sw	(r30),r2
  623  00001580  8fc20004	lw	r2,4(r30)
  624  00001584  20430001	addi	r3,r2,#1
  625  00001588  afc30004	sw	4(r30),r3
  626  0000158c  80420000	lb	r2,(r2)
  627  00001590  a0220000	sb	(r1),r2
  628  00001594  a3c2fff3	sb	-13(r30),r2
  629  00001598          	L12_LF2:
  630  00001598  93c1fff3	lbu	r1,-13(r30)
  631  0000159c  64220000	snei	r2,r1,#0
  632  000015a0  1440000c	bnez	r2,L13_LF2
  633  000015a4  54000000	nop; delay slot nop
  634  000015a8  0800000c	j	L11_LF2
  635  000015ac  54000000	nop; delay slot nop
  636  000015b0          	L13_LF2:
  637  000015b0  0bffffc0	j	L10_LF2
  638  000015b4  54000000	nop; delay slot nop
  639  000015b8          	L11_LF2:
  640  000015b8  8fc1fff4	lw	r1,-12(r30)
  641  000015bc  08000004	j	L9_LF2
  642  000015c0  54000000	nop; delay slot nop
  643  000015c4          	L9_LF2:
  644  000015c4  8fa20000	lw	r2,0(r29)
  645  000015c8  8fa30004	lw	r3,4(r29)
  646  000015cc  8fdffff8	lw	r31,-8(r30)
  647  000015d0  001ee820	add	r29,r0,r30
  648  000015d4  8fdefffc	lw	r30,-4(r30)
  649  000015d8  4be00000	jr	r31
  650  000015dc  54000000	nop
  651  000015e0          	.endproc _dstrcpy
  652  000015e0          	.align 2
  653  000015e0          	.proc _dstrncpy
  654  000015e0          	.global _dstrncpy
  655  000015e0          	_dstrncpy:
  656                      ;  Function 'dstrncpy'; 8 bytes of locals, 2 regs to save.
  657  000015e0  afbefffc	sw	-4(r29),r30; push fp
  658  000015e4  001df020	add	r30,r0,r29; fp = sp
  659  000015e8  afbffff8	sw	-8(r29),r31; push ret addr
  660  000015ec  2fbd0018	subui	r29,r29,#24; alloc local storage
  661  000015f0  afa20000	sw	0(r29),r2
  662  000015f4  afa30004	sw	4(r29),r3
  663  000015f8  8fc10000	lw	r1,(r30)
  664  000015fc  afc1fff4	sw	-12(r30),r1
  665  00001600          	L15_LF2:
  666  00001600  8fc10008	lw	r1,8(r30)
  667  00001604  2022ffff	addi	r2,r1,#-1
  668  00001608  afc20008	sw	8(r30),r2
  669  0000160c  70210000	slei	r1,r1,#0
  670  00001610  1020000c	beqz	r1,L18_LF2
  671  00001614  54000000	nop; delay slot nop
  672  00001618  08000048	j	L16_LF2
  673  0000161c  54000000	nop; delay slot nop
  674  00001620          	L18_LF2:
  675  00001620  8fc10000	lw	r1,(r30)
  676  00001624  20220001	addi	r2,r1,#1
  677  00001628  afc20000	sw	(r30),r2
  678  0000162c  8fc20004	lw	r2,4(r30)
  679  00001630  20430001	addi	r3,r2,#1
  680  00001634  afc30004	sw	4(r30),r3
  681  00001638  80420000	lb	r2,(r2)
  682  0000163c  a0220000	sb	(r1),r2
  683  00001640  a3c2fff3	sb	-13(r30),r2
  684  00001644          	L17_LF2:
  685  00001644  93c1fff3	lbu	r1,-13(r30)
  686  00001648  64220000	snei	r2,r1,#0
  687  0000164c  1440000c	bnez	r2,L19_LF2
  688  00001650  54000000	nop; delay slot nop
  689  00001654  0800000c	j	L16_LF2
  690  00001658  54000000	nop; delay slot nop
  691  0000165c          	L19_LF2:
  692  0000165c  0bffffa0	j	L15_LF2
  693  00001660  54000000	nop; delay slot nop
  694  00001664          	L16_LF2:
  695  00001664  8fc1fff4	lw	r1,-12(r30)
  696  00001668  08000004	j	L14_LF2
  697  0000166c  54000000	nop; delay slot nop
  698  00001670          	L14_LF2:
  699  00001670  8fa20000	lw	r2,0(r29)
  700  00001674  8fa30004	lw	r3,4(r29)
  701  00001678  8fdffff8	lw	r31,-8(r30)
  702  0000167c  001ee820	add	r29,r0,r30
  703  00001680  8fdefffc	lw	r30,-4(r30)
  704  00001684  4be00000	jr	r31
  705  00001688  54000000	nop
  706  0000168c          	.endproc _dstrncpy
  707  0000168c          	.align 2
  708  0000168c          	.proc _dstrcat
  709  0000168c          	.global _dstrcat
  710  0000168c          	_dstrcat:
  711                      ;  Function 'dstrcat'; 8 bytes of locals, 1 regs to save.
  712  0000168c  afbefffc	sw	-4(r29),r30; push fp
  713  00001690  001df020	add	r30,r0,r29; fp = sp
  714  00001694  afbffff8	sw	-8(r29),r31; push ret addr
  715  00001698  2fbd0018	subui	r29,r29,#24; alloc local storage
  716  0000169c  afa20000	sw	0(r29),r2
  717  000016a0  8fc10000	lw	r1,(r30)
  718  000016a4  afc1fff4	sw	-12(r30),r1
  719  000016a8          	L21_LF2:
  720  000016a8  8fc10000	lw	r1,(r30)
  721  000016ac  90220000	lbu	r2,(r1)
  722  000016b0  64410000	snei	r1,r2,#0
  723  000016b4  1420000c	bnez	r1,L23_LF2
  724  000016b8  54000000	nop; delay slot nop
  725  000016bc  0800001c	j	L22_LF2
  726  000016c0  54000000	nop; delay slot nop
  727  000016c4          	L23_LF2:
  728  000016c4  8fc20000	lw	r2,(r30)
  729  000016c8  20410001	addi	r1,r2,#1
  730  000016cc  00011020	add	r2,r0,r1
  731  000016d0  afc20000	sw	(r30),r2
  732  000016d4  0bffffd0	j	L21_LF2
  733  000016d8  54000000	nop; delay slot nop
  734  000016dc          	L22_LF2:
  735  000016dc  23bdfff8	addi	r29,r29,#-8
  736  000016e0  001d0820	add	r1,r0,r29
  737  000016e4  8fc20000	lw	r2,(r30)
  738  000016e8  ac220000	sw	(r1),r2
  739  000016ec  8fc20004	lw	r2,4(r30)
  740  000016f0  ac220004	sw	4(r1),r2
  741  000016f4  0ffffe5c	jal	_dstrcpy
  742  000016f8  54000000	nop; delay slot nop
  743  000016fc  23bd0008	addi	r29,r29,#8
  744  00001700  8fc1fff4	lw	r1,-12(r30)
  745  00001704  08000004	j	L20_LF2
  746  00001708  54000000	nop; delay slot nop
  747  0000170c          	L20_LF2:
  748  0000170c  8fa20000	lw	r2,0(r29)
  749  00001710  8fdffff8	lw	r31,-8(r30)
  750  00001714  001ee820	add	r29,r0,r30
  751  00001718  8fdefffc	lw	r30,-4(r30)
  752  0000171c  4be00000	jr	r31
  753  00001720  54000000	nop
  754  00001724          	.endproc _dstrcat
  755  00001724          	.align 2
  756  00001724          	.proc _dstrncmp
  757  00001724          	.global _dstrncmp
  758  00001724          	_dstrncmp:
  759                      ;  Function 'dstrncmp'; 8 bytes of locals, 2 regs to save.
  760  00001724  afbefffc	sw	-4(r29),r30; push fp
  761  00001728  001df020	add	r30,r0,r29; fp = sp
  762  0000172c  afbffff8	sw	-8(r29),r31; push ret addr
  763  00001730  2fbd0018	subui	r29,r29,#24; alloc local storage
  764  00001734  afa20000	sw	0(r29),r2
  765  00001738  afa30004	sw	4(r29),r3
  766  0000173c  54000000	nop
  767  00001740  20010000	addi	r1,r0,#0
  768  00001744  afc1fff4	sw	-12(r30),r1
  769  00001748          	L25_LF2:
  770  00001748  8fc1fff4	lw	r1,-12(r30)
  771  0000174c  8fc20008	lw	r2,8(r30)
  772  00001750  0022082a	slt	r1,r1,r2
  773  00001754  1420000c	bnez	r1,L28_LF2
  774  00001758  54000000	nop; delay slot nop
  775  0000175c  08000088	j	L26_LF2
  776  00001760  54000000	nop; delay slot nop
  777  00001764          	L28_LF2:
  778  00001764  8fc10004	lw	r1,4(r30)
  779  00001768  90220000	lbu	r2,(r1)
  780  0000176c  64410000	snei	r1,r2,#0
  781  00001770  14200018	bnez	r1,L29_LF2
  782  00001774  54000000	nop; delay slot nop
  783  00001778  20010000	addi	r1,r0,#0
  784  0000177c  080000d8	j	L24_LF2
  785  00001780  54000000	nop; delay slot nop
  786  00001784  08000028	j	L30_LF2
  787  00001788  54000000	nop; delay slot nop
  788  0000178c          	L29_LF2:
  789  0000178c  8fc10000	lw	r1,(r30)
  790  00001790  8fc20004	lw	r2,4(r30)
  791  00001794  90210000	lbu	r1,(r1)
  792  00001798  90420000	lbu	r2,(r2)
  793  0000179c  00220829	sne	r1,r1,r2
  794  000017a0  1020000c	beqz	r1,L30_LF2
  795  000017a4  54000000	nop; delay slot nop
  796  000017a8  0800003c	j	L26_LF2
  797  000017ac  54000000	nop; delay slot nop
  798  000017b0          	L31_LF2:
  799  000017b0          	L30_LF2:
  800  000017b0  8fc20000	lw	r2,(r30)
  801  000017b4  20410001	addi	r1,r2,#1
  802  000017b8  00011020	add	r2,r0,r1
  803  000017bc  afc20000	sw	(r30),r2
  804  000017c0  8fc20004	lw	r2,4(r30)
  805  000017c4  20410001	addi	r1,r2,#1
  806  000017c8  00011020	add	r2,r0,r1
  807  000017cc  afc20004	sw	4(r30),r2
  808  000017d0          	L27_LF2:
  809  000017d0  8fc2fff4	lw	r2,-12(r30)
  810  000017d4  20410001	addi	r1,r2,#1
  811  000017d8  00011020	add	r2,r0,r1
  812  000017dc  afc2fff4	sw	-12(r30),r2
  813  000017e0  0bffff64	j	L25_LF2
  814  000017e4  54000000	nop; delay slot nop
  815  000017e8          	L26_LF2:
  816  000017e8  8fc1fff4	lw	r1,-12(r30)
  817  000017ec  8fc20008	lw	r2,8(r30)
  818  000017f0  00220828	seq	r1,r1,r2
  819  000017f4  10200018	beqz	r1,L32_LF2
  820  000017f8  54000000	nop; delay slot nop
  821  000017fc  20010000	addi	r1,r0,#0
  822  00001800  08000054	j	L24_LF2
  823  00001804  54000000	nop; delay slot nop
  824  00001808  0800004c	j	L33_LF2
  825  0000180c  54000000	nop; delay slot nop
  826  00001810          	L32_LF2:
  827  00001810  8fc20000	lw	r2,(r30)
  828  00001814  90410000	lbu	r1,(r2)
  829  00001818  8fc20004	lw	r2,4(r30)
  830  0000181c  90430000	lbu	r3,(r2)
  831  00001820  00230822	sub	r1,r1,r3
  832  00001824  74220000	sgei	r2,r1,#0
  833  00001828  10400020	beqz	r2,L34_LF2
  834  0000182c  54000000	nop; delay slot nop
  835  00001830  8fc10000	lw	r1,(r30)
  836  00001834  8fc20004	lw	r2,4(r30)
  837  00001838  90210000	lbu	r1,(r1)
  838  0000183c  90420000	lbu	r2,(r2)
  839  00001840  00220829	sne	r1,r1,r2
  840  00001844  08000008	j	L35_LF2
  841  00001848  54000000	nop; delay slot nop
  842  0000184c          	L34_LF2:
  843  0000184c  2001ffff	addi	r1,r0,#-1
  844  00001850          	L35_LF2:
  845  00001850  08000004	j	L24_LF2
  846  00001854  54000000	nop; delay slot nop
  847  00001858          	L33_LF2:
  848  00001858          	L24_LF2:
  849  00001858  8fa20000	lw	r2,0(r29)
  850  0000185c  8fa30004	lw	r3,4(r29)
  851  00001860  8fdffff8	lw	r31,-8(r30)
  852  00001864  001ee820	add	r29,r0,r30
  853  00001868  8fdefffc	lw	r30,-4(r30)
  854  0000186c  4be00000	jr	r31
  855  00001870  54000000	nop
  856  00001874          	.endproc _dstrncmp
  857  00001874          	.align 2
  858  00001874          	.proc _dstrlen
  859  00001874          	.global _dstrlen
  860  00001874          	_dstrlen:
  861                      ;  Function 'dstrlen'; 8 bytes of locals, 1 regs to save.
  862  00001874  afbefffc	sw	-4(r29),r30; push fp
  863  00001878  001df020	add	r30,r0,r29; fp = sp
  864  0000187c  afbffff8	sw	-8(r29),r31; push ret addr
  865  00001880  2fbd0018	subui	r29,r29,#24; alloc local storage
  866  00001884  afa20000	sw	0(r29),r2
  867  00001888  20010000	addi	r1,r0,#0
  868  0000188c  afc1fff4	sw	-12(r30),r1
  869  00001890          	L37_LF2:
  870  00001890  8fc10000	lw	r1,(r30)
  871  00001894  20220001	addi	r2,r1,#1
  872  00001898  afc20000	sw	(r30),r2
  873  0000189c  90210000	lbu	r1,(r1)
  874  000018a0  64220000	snei	r2,r1,#0
  875  000018a4  1440000c	bnez	r2,L39_LF2
  876  000018a8  54000000	nop; delay slot nop
  877  000018ac  0800001c	j	L38_LF2
  878  000018b0  54000000	nop; delay slot nop
  879  000018b4          	L39_LF2:
  880  000018b4  8fc2fff4	lw	r2,-12(r30)
  881  000018b8  20410001	addi	r1,r2,#1
  882  000018bc  00011020	add	r2,r0,r1
  883  000018c0  afc2fff4	sw	-12(r30),r2
  884  000018c4  0bffffc8	j	L37_LF2
  885  000018c8  54000000	nop; delay slot nop
  886  000018cc          	L38_LF2:
  887  000018cc  8fc1fff4	lw	r1,-12(r30)
  888  000018d0  08000004	j	L36_LF2
  889  000018d4  54000000	nop; delay slot nop
  890  000018d8          	L36_LF2:
  891  000018d8  8fa20000	lw	r2,0(r29)
  892  000018dc  8fdffff8	lw	r31,-8(r30)
  893  000018e0  001ee820	add	r29,r0,r30
  894  000018e4  8fdefffc	lw	r30,-4(r30)
  895  000018e8  4be00000	jr	r31
  896  000018ec  54000000	nop
  897  000018f0          	.endproc _dstrlen
  898  000018f0          	.align 2
  899  000018f0          	.proc _dstrstr
  900  000018f0          	.global _dstrstr
  901  000018f0          	_dstrstr:
  902                      ;  Function 'dstrstr'; 8 bytes of locals, 1 regs to save.
  903  000018f0  afbefffc	sw	-4(r29),r30; push fp
  904  000018f4  001df020	add	r30,r0,r29; fp = sp
  905  000018f8  afbffff8	sw	-8(r29),r31; push ret addr
  906  000018fc  2fbd0018	subui	r29,r29,#24; alloc local storage
  907  00001900  afa20000	sw	0(r29),r2
  908  00001904  23bdfff8	addi	r29,r29,#-8
  909  00001908  001d0820	add	r1,r0,r29
  910  0000190c  8fc20004	lw	r2,4(r30)
  911  00001910  ac220000	sw	(r1),r2
  912  00001914  0fffff5c	jal	_dstrlen
  913  00001918  54000000	nop; delay slot nop
  914  0000191c  23bd0008	addi	r29,r29,#8
  915  00001920  afc1fff4	sw	-12(r30),r1
  916  00001924          	L41_LF2:
  917  00001924  8fc10000	lw	r1,(r30)
  918  00001928  90220000	lbu	r2,(r1)
  919  0000192c  64410000	snei	r1,r2,#0
  920  00001930  1420000c	bnez	r1,L43_LF2
  921  00001934  54000000	nop; delay slot nop
  922  00001938  08000060	j	L42_LF2
  923  0000193c  54000000	nop; delay slot nop
  924  00001940          	L43_LF2:
  925  00001940  23bdfff0	addi	r29,r29,#-16
  926  00001944  001d0820	add	r1,r0,r29
  927  00001948  8fc20000	lw	r2,(r30)
  928  0000194c  ac220000	sw	(r1),r2
  929  00001950  8fc20004	lw	r2,4(r30)
  930  00001954  ac220004	sw	4(r1),r2
  931  00001958  8fc2fff4	lw	r2,-12(r30)
  932  0000195c  ac220008	sw	8(r1),r2
  933  00001960  0ffffdc0	jal	_dstrncmp
  934  00001964  54000000	nop; delay slot nop
  935  00001968  23bd0010	addi	r29,r29,#16
  936  0000196c  64220000	snei	r2,r1,#0
  937  00001970  14400010	bnez	r2,L44_LF2
  938  00001974  54000000	nop; delay slot nop
  939  00001978  8fc10000	lw	r1,(r30)
  940  0000197c  08000028	j	L40_LF2
  941  00001980  54000000	nop; delay slot nop
  942  00001984          	L44_LF2:
  943  00001984  8fc20000	lw	r2,(r30)
  944  00001988  20410001	addi	r1,r2,#1
  945  0000198c  00011020	add	r2,r0,r1
  946  00001990  afc20000	sw	(r30),r2
  947  00001994  0bffff8c	j	L41_LF2
  948  00001998  54000000	nop; delay slot nop
  949  0000199c          	L42_LF2:
  950  0000199c  20010000	addi	r1,r0,#0
  951  000019a0  08000004	j	L40_LF2
  952  000019a4  54000000	nop; delay slot nop
  953  000019a8          	L40_LF2:
  954  000019a8  8fa20000	lw	r2,0(r29)
  955  000019ac  8fdffff8	lw	r31,-8(r30)
  956  000019b0  001ee820	add	r29,r0,r30
  957  000019b4  8fdefffc	lw	r30,-4(r30)
  958  000019b8  4be00000	jr	r31
  959  000019bc  54000000	nop
  960  000019c0          	.endproc _dstrstr
  961  000019c0          	.align 2
  962  000019c0          	.proc _dmindex
  963  000019c0          	.global _dmindex
  964  000019c0          	_dmindex:
  965                      ;  Function 'dmindex'; 8 bytes of locals, 1 regs to save.
  966  000019c0  afbefffc	sw	-4(r29),r30; push fp
  967  000019c4  001df020	add	r30,r0,r29; fp = sp
  968  000019c8  afbffff8	sw	-8(r29),r31; push ret addr
  969  000019cc  2fbd0018	subui	r29,r29,#24; alloc local storage
  970  000019d0  afa20000	sw	0(r29),r2
  971  000019d4  54000000	nop
  972  000019d8          	L46_LF2:
  973  000019d8  8fc10000	lw	r1,(r30)
  974  000019dc  90220000	lbu	r2,(r1)
  975  000019e0  64410000	snei	r1,r2,#0
  976  000019e4  1420000c	bnez	r1,L48_LF2
  977  000019e8  54000000	nop; delay slot nop
  978  000019ec  08000070	j	L47_LF2
  979  000019f0  54000000	nop; delay slot nop
  980  000019f4          	L48_LF2:
  981  000019f4  8fc10004	lw	r1,4(r30)
  982  000019f8  afc1fff4	sw	-12(r30),r1
  983  000019fc          	L49_LF2:
  984  000019fc  8fc1fff4	lw	r1,-12(r30)
  985  00001a00  90220000	lbu	r2,(r1)
  986  00001a04  64410000	snei	r1,r2,#0
  987  00001a08  1420000c	bnez	r1,L52_LF2
  988  00001a0c  54000000	nop; delay slot nop
  989  00001a10  08000044	j	L50_LF2
  990  00001a14  54000000	nop; delay slot nop
  991  00001a18          	L52_LF2:
  992  00001a18  8fc10000	lw	r1,(r30)
  993  00001a1c  8fc2fff4	lw	r2,-12(r30)
  994  00001a20  90210000	lbu	r1,(r1)
  995  00001a24  90420000	lbu	r2,(r2)
  996  00001a28  00220828	seq	r1,r1,r2
  997  00001a2c  10200010	beqz	r1,L51_LF2
  998  00001a30  54000000	nop; delay slot nop
  999  00001a34  8fc10000	lw	r1,(r30)
 1000  00001a38  08000030	j	L45_LF2
 1001  00001a3c  54000000	nop; delay slot nop
 1002  00001a40          	L53_LF2:
 1003  00001a40          	L51_LF2:
 1004  00001a40  8fc2fff4	lw	r2,-12(r30)
 1005  00001a44  20410001	addi	r1,r2,#1
 1006  00001a48  00011020	add	r2,r0,r1
 1007  00001a4c  afc2fff4	sw	-12(r30),r2
 1008  00001a50  0bffffa8	j	L49_LF2
 1009  00001a54  54000000	nop; delay slot nop
 1010  00001a58          	L50_LF2:
 1011  00001a58  0bffff7c	j	L46_LF2
 1012  00001a5c  54000000	nop; delay slot nop
 1013  00001a60          	L47_LF2:
 1014  00001a60  20010000	addi	r1,r0,#0
 1015  00001a64  08000004	j	L45_LF2
 1016  00001a68  54000000	nop; delay slot nop
 1017  00001a6c          	L45_LF2:
 1018  00001a6c  8fa20000	lw	r2,0(r29)
 1019  00001a70  8fdffff8	lw	r31,-8(r30)
 1020  00001a74  001ee820	add	r29,r0,r30
 1021  00001a78  8fdefffc	lw	r30,-4(r30)
 1022  00001a7c  4be00000	jr	r31
 1023  00001a80  54000000	nop
 1024  00001a84          	.endproc _dmindex
 1025  00001a84          	.align 2
 1026  00001a84          	.proc _dindex
 1027  00001a84          	.global _dindex
 1028  00001a84          	_dindex:
 1029                      ;  Function 'dindex'; 0 bytes of locals, 1 regs to save.
 1030  00001a84  afbefffc	sw	-4(r29),r30; push fp
 1031  00001a88  001df020	add	r30,r0,r29; fp = sp
 1032  00001a8c  afbffff8	sw	-8(r29),r31; push ret addr
 1033  00001a90  2fbd0010	subui	r29,r29,#16; alloc local storage
 1034  00001a94  afa20000	sw	0(r29),r2
 1035  00001a98  54000000	nop
 1036  00001a9c          	L55_LF2:
 1037  00001a9c  8fc10000	lw	r1,(r30)
 1038  00001aa0  90220000	lbu	r2,(r1)
 1039  00001aa4  64410000	snei	r1,r2,#0
 1040  00001aa8  1420000c	bnez	r1,L57_LF2
 1041  00001aac  54000000	nop; delay slot nop
 1042  00001ab0  08000040	j	L56_LF2
 1043  00001ab4  54000000	nop; delay slot nop
 1044  00001ab8          	L57_LF2:
 1045  00001ab8  8fc10000	lw	r1,(r30)
 1046  00001abc  90220000	lbu	r2,(r1)
 1047  00001ac0  8fc10004	lw	r1,4(r30)
 1048  00001ac4  00411028	seq	r2,r2,r1
 1049  00001ac8  10400010	beqz	r2,L58_LF2
 1050  00001acc  54000000	nop; delay slot nop
 1051  00001ad0  8fc10000	lw	r1,(r30)
 1052  00001ad4  08000028	j	L54_LF2
 1053  00001ad8  54000000	nop; delay slot nop
 1054  00001adc          	L58_LF2:
 1055  00001adc  8fc20000	lw	r2,(r30)
 1056  00001ae0  20410001	addi	r1,r2,#1
 1057  00001ae4  00011020	add	r2,r0,r1
 1058  00001ae8  afc20000	sw	(r30),r2
 1059  00001aec  0bffffac	j	L55_LF2
 1060  00001af0  54000000	nop; delay slot nop
 1061  00001af4          	L56_LF2:
 1062  00001af4  20010000	addi	r1,r0,#0
 1063  00001af8  08000004	j	L54_LF2
 1064  00001afc  54000000	nop; delay slot nop
 1065  00001b00          	L54_LF2:
 1066  00001b00  8fa20000	lw	r2,0(r29)
 1067  00001b04  8fdffff8	lw	r31,-8(r30)
 1068  00001b08  001ee820	add	r29,r0,r30
 1069  00001b0c  8fdefffc	lw	r30,-4(r30)
 1070  00001b10  4be00000	jr	r31
 1071  00001b14  54000000	nop
 1072  00001b18          	.endproc _dindex
 1073  00001b18          	.align 2
 1074  00001b18          	.proc _ditoa
 1075  00001b18          	.global _ditoa
 1076  00001b18          	_ditoa:
 1077                      ;  Function 'ditoa'; 8 bytes of locals, 2 regs to save.
 1078  00001b18  afbefffc	sw	-4(r29),r30; push fp
 1079  00001b1c  001df020	add	r30,r0,r29; fp = sp
 1080  00001b20  afbffff8	sw	-8(r29),r31; push ret addr
 1081  00001b24  2fbd0018	subui	r29,r29,#24; alloc local storage
 1082  00001b28  afa20000	sw	0(r29),r2
 1083  00001b2c  afa30004	sw	4(r29),r3
 1084  00001b30  8fc10000	lw	r1,(r30)
 1085  00001b34  68220000	slti	r2,r1,#0
 1086  00001b38  1040002c	beqz	r2,L60_LF2
 1087  00001b3c  54000000	nop; delay slot nop
 1088  00001b40  8fc10004	lw	r1,4(r30)
 1089  00001b44  20220001	addi	r2,r1,#1
 1090  00001b48  afc20004	sw	4(r30),r2
 1091  00001b4c  2002002d	addi	r2,r0,(#0x2d)&0xff
 1092  00001b50  a0220000	sb	(r1),r2
 1093  00001b54  8fc10000	lw	r1,(r30)
 1094  00001b58  00011022	sub	r2,r0,r1
 1095  00001b5c  afc20000	sw	(r30),r2
 1096  00001b60  08000118	j	L61_LF2
 1097  00001b64  54000000	nop; delay slot nop
 1098  00001b68          	L60_LF2:
 1099  00001b68  8fc10000	lw	r1,(r30)
 1100  00001b6c  64220000	snei	r2,r1,#0
 1101  00001b70  14400020	bnez	r2,L62_LF2
 1102  00001b74  54000000	nop; delay slot nop
 1103  00001b78  8fc10004	lw	r1,4(r30)
 1104  00001b7c  20220001	addi	r2,r1,#1
 1105  00001b80  afc20004	sw	4(r30),r2
 1106  00001b84  20020030	addi	r2,r0,(#0x30)&0xff
 1107  00001b88  a0220000	sb	(r1),r2
 1108  00001b8c  080000ec	j	L61_LF2
 1109  00001b90  54000000	nop; delay slot nop
 1110  00001b94          	L62_LF2:
 1111  00001b94  20010001	addi	r1,r0,#1
 1112  00001b98  afc1fff4	sw	-12(r30),r1
 1113  00001b9c          	L64_LF2:
 1114  00001b9c  8fc1fff4	lw	r1,-12(r30)
 1115  00001ba0  8fc20000	lw	r2,(r30)
 1116  00001ba4  0022082c	sle	r1,r1,r2
 1117  00001ba8  1420000c	bnez	r1,L66_LF2
 1118  00001bac  54000000	nop; delay slot nop
 1119  00001bb0  08000024	j	L65_LF2
 1120  00001bb4  54000000	nop; delay slot nop
 1121  00001bb8          	L67_LF2:
 1122  00001bb8          	L66_LF2:
 1123  00001bb8  8fc1fff4	lw	r1,-12(r30)
 1124  00001bbc  00011820	add	r3,r0,r1
 1125  00001bc0  50620002	slli	r2,r3,#0x2
 1126  00001bc4  00411020	add	r2,r2,r1
 1127  00001bc8  50410001	slli	r1,r2,#0x1
 1128  00001bcc  afc1fff4	sw	-12(r30),r1
 1129  00001bd0  0bffffc8	j	L64_LF2
 1130  00001bd4  54000000	nop; delay slot nop
 1131  00001bd8          	L65_LF2:
 1132  00001bd8  54000000	nop
 1133  00001bdc          	L68_LF2:
 1134  00001bdc  8fc1fff4	lw	r1,-12(r30)
 1135  00001be0  2002000a	addi	r2,r0,#10
 1136  00001be4  00200035	movi2fp	f0,r1
 1137  00001be8  00400835	movi2fp	f1,r2
 1138  00001bec  0401000f	div	f0,f0,f1
 1139  00001bf0  00000834	movfp2i	r1,f0
 1140  00001bf4  afc1fff4	sw	-12(r30),r1
 1141  00001bf8  8fc10004	lw	r1,4(r30)
 1142  00001bfc  20220001	addi	r2,r1,#1
 1143  00001c00  afc20004	sw	4(r30),r2
 1144  00001c04  8fc20000	lw	r2,(r30)
 1145  00001c08  8fc3fff4	lw	r3,-12(r30)
 1146  00001c0c  00400035	movi2fp	f0,r2
 1147  00001c10  00600835	movi2fp	f1,r3
 1148  00001c14  0401000f	div	f0,f0,f1
 1149  00001c18  00001034	movfp2i	r2,f0
 1150  00001c1c  00021820	add	r3,r0,r2
 1151  00001c20  20620030	addi	r2,r3,#48
 1152  00001c24  a0220000	sb	(r1),r2
 1153  00001c28  8fc10000	lw	r1,(r30)
 1154  00001c2c  8fc3fff4	lw	r3,-12(r30)
 1155  00001c30  00200035	movi2fp	f0,r1
 1156  00001c34  00600835	movi2fp	f1,r3
 1157  00001c38  0401000f	div	f0,f0,f1
 1158  00001c3c  00001034	movfp2i	r2,f0
 1159  00001c40  8fc3fff4	lw	r3,-12(r30)
 1160  00001c44  00400035	movi2fp	f0,r2
 1161  00001c48  00600835	movi2fp	f1,r3
 1162  00001c4c  0401000e	mult	f0,f0,f1
 1163  00001c50  00001034	movfp2i	r2,f0
 1164  00001c54  00220822	sub	r1,r1,r2
 1165  00001c58  afc10000	sw	(r30),r1
 1166  00001c5c          	L70_LF2:
 1167  00001c5c  8fc1fff4	lw	r1,-12(r30)
 1168  00001c60  6c220001	sgti	r2,r1,#1
 1169  00001c64  1440000c	bnez	r2,L71_LF2
 1170  00001c68  54000000	nop; delay slot nop
 1171  00001c6c  0800000c	j	L61_LF2
 1172  00001c70  54000000	nop; delay slot nop
 1173  00001c74          	L71_LF2:
 1174  00001c74  0bffff64	j	L68_LF2
 1175  00001c78  54000000	nop; delay slot nop
 1176  00001c7c          	L69_LF2:
 1177  00001c7c          	L63_LF2:
 1178  00001c7c          	L61_LF2:
 1179  00001c7c  8fc10004	lw	r1,4(r30)
 1180  00001c80  20020000	addi	r2,r0,(#0x0)&0xff
 1181  00001c84  a0220000	sb	(r1),r2
 1182  00001c88          	L59_LF2:
 1183  00001c88  8fa20000	lw	r2,0(r29)
 1184  00001c8c  8fa30004	lw	r3,4(r29)
 1185  00001c90  8fdffff8	lw	r31,-8(r30)
 1186  00001c94  001ee820	add	r29,r0,r30
 1187  00001c98  8fdefffc	lw	r30,-4(r30)
 1188  00001c9c  4be00000	jr	r31
 1189  00001ca0  54000000	nop
 1190  00001ca4          	.endproc _ditoa
 1191  00001ca4          	.align 2
 1192  00001ca4          	.proc _dstrtol
 1193  00001ca4          	.global _dstrtol
 1194  00001ca4          	_dstrtol:
 1195                      ;  Function 'dstrtol'; 16 bytes of locals, 1 regs to save.
 1196  00001ca4  afbefffc	sw	-4(r29),r30; push fp
 1197  00001ca8  001df020	add	r30,r0,r29; fp = sp
 1198  00001cac  afbffff8	sw	-8(r29),r31; push ret addr
 1199  00001cb0  2fbd0020	subui	r29,r29,#32; alloc local storage
 1200  00001cb4  afa20000	sw	0(r29),r2
 1201  00001cb8  20010000	addi	r1,r0,#0
 1202  00001cbc  afc1fff4	sw	-12(r30),r1
 1203  00001cc0          	L73_LF2:
 1204  00001cc0  8fc10000	lw	r1,(r30)
 1205  00001cc4  90220000	lbu	r2,(r1)
 1206  00001cc8  60410020	seqi	r1,r2,#32
 1207  00001ccc  14200034	bnez	r1,L75_LF2
 1208  00001cd0  54000000	nop; delay slot nop
 1209  00001cd4  8fc10000	lw	r1,(r30)
 1210  00001cd8  90220000	lbu	r2,(r1)
 1211  00001cdc  60410009	seqi	r1,r2,#9
 1212  00001ce0  14200020	bnez	r1,L75_LF2
 1213  00001ce4  54000000	nop; delay slot nop
 1214  00001ce8  8fc10000	lw	r1,(r30)
 1215  00001cec  90220000	lbu	r2,(r1)
 1216  00001cf0  6041000a	seqi	r1,r2,#10
 1217  00001cf4  1420000c	bnez	r1,L75_LF2
 1218  00001cf8  54000000	nop; delay slot nop
 1219  00001cfc  0800001c	j	L74_LF2
 1220  00001d00  54000000	nop; delay slot nop
 1221  00001d04          	L75_LF2:
 1222  00001d04  8fc20000	lw	r2,(r30)
 1223  00001d08  20410001	addi	r1,r2,#1
 1224  00001d0c  00011020	add	r2,r0,r1
 1225  00001d10  afc20000	sw	(r30),r2
 1226  00001d14  0bffffa8	j	L73_LF2
 1227  00001d18  54000000	nop; delay slot nop
 1228  00001d1c          	L74_LF2:
 1229  00001d1c  8fc10004	lw	r1,4(r30)
 1230  00001d20  64220000	snei	r2,r1,#0
 1231  00001d24  10400010	beqz	r2,L76_LF2
 1232  00001d28  54000000	nop; delay slot nop
 1233  00001d2c  8fc10004	lw	r1,4(r30)
 1234  00001d30  8fc20000	lw	r2,(r30)
 1235  00001d34  ac220000	sw	(r1),r2
 1236  00001d38          	L76_LF2:
 1237  00001d38  8fc10000	lw	r1,(r30)
 1238  00001d3c  90220000	lbu	r2,(r1)
 1239  00001d40  64410000	snei	r1,r2,#0
 1240  00001d44  14200010	bnez	r1,L77_LF2
 1241  00001d48  54000000	nop; delay slot nop
 1242  00001d4c  8fc1fff4	lw	r1,-12(r30)
 1243  00001d50  08000294	j	L72_LF2
 1244  00001d54  54000000	nop; delay slot nop
 1245  00001d58          	L77_LF2:
 1246  00001d58  8fc10000	lw	r1,(r30)
 1247  00001d5c  90220000	lbu	r2,(r1)
 1248  00001d60  6041002d	seqi	r1,r2,#45
 1249  00001d64  10200024	beqz	r1,L78_LF2
 1250  00001d68  54000000	nop; delay slot nop
 1251  00001d6c  2001ffff	addi	r1,r0,#-1
 1252  00001d70  afc1ffec	sw	-20(r30),r1
 1253  00001d74  8fc20000	lw	r2,(r30)
 1254  00001d78  20410001	addi	r1,r2,#1
 1255  00001d7c  00011020	add	r2,r0,r1
 1256  00001d80  afc20000	sw	(r30),r2
 1257  00001d84  0800000c	j	L79_LF2
 1258  00001d88  54000000	nop; delay slot nop
 1259  00001d8c          	L78_LF2:
 1260  00001d8c  20010001	addi	r1,r0,#1
 1261  00001d90  afc1ffec	sw	-20(r30),r1
 1262  00001d94          	L79_LF2:
 1263  00001d94  8fc10008	lw	r1,8(r30)
 1264  00001d98  64220000	snei	r2,r1,#0
 1265  00001d9c  14400090	bnez	r2,L80_LF2
 1266  00001da0  54000000	nop; delay slot nop
 1267  00001da4  8fc10000	lw	r1,(r30)
 1268  00001da8  90220000	lbu	r2,(r1)
 1269  00001dac  60410030	seqi	r1,r2,#48
 1270  00001db0  10200074	beqz	r1,L81_LF2
 1271  00001db4  54000000	nop; delay slot nop
 1272  00001db8  8fc20000	lw	r2,(r30)
 1273  00001dbc  20410001	addi	r1,r2,#1
 1274  00001dc0  00011020	add	r2,r0,r1
 1275  00001dc4  afc20000	sw	(r30),r2
 1276  00001dc8  8fc10000	lw	r1,(r30)
 1277  00001dcc  90220000	lbu	r2,(r1)
 1278  00001dd0  60410078	seqi	r1,r2,#120
 1279  00001dd4  14200020	bnez	r1,L83_LF2
 1280  00001dd8  54000000	nop; delay slot nop
 1281  00001ddc  8fc10000	lw	r1,(r30)
 1282  00001de0  90220000	lbu	r2,(r1)
 1283  00001de4  60410058	seqi	r1,r2,#88
 1284  00001de8  1420000c	bnez	r1,L83_LF2
 1285  00001dec  54000000	nop; delay slot nop
 1286  00001df0  08000024	j	L82_LF2
 1287  00001df4  54000000	nop; delay slot nop
 1288  00001df8          	L83_LF2:
 1289  00001df8  20010010	addi	r1,r0,#16
 1290  00001dfc  afc10008	sw	8(r30),r1
 1291  00001e00  8fc20000	lw	r2,(r30)
 1292  00001e04  20410001	addi	r1,r2,#1
 1293  00001e08  00011020	add	r2,r0,r1
 1294  00001e0c  afc20000	sw	(r30),r2
 1295  00001e10  0800000c	j	L84_LF2
 1296  00001e14  54000000	nop; delay slot nop
 1297  00001e18          	L82_LF2:
 1298  00001e18  20010008	addi	r1,r0,#8
 1299  00001e1c  afc10008	sw	8(r30),r1
 1300  00001e20          	L84_LF2:
 1301  00001e20  0800000c	j	L80_LF2
 1302  00001e24  54000000	nop; delay slot nop
 1303  00001e28          	L81_LF2:
 1304  00001e28  2001000a	addi	r1,r0,#10
 1305  00001e2c  afc10008	sw	8(r30),r1
 1306  00001e30          	L85_LF2:
 1307  00001e30          	L80_LF2:
 1308  00001e30  8fc10008	lw	r1,8(r30)
 1309  00001e34  70220000	slei	r2,r1,#0
 1310  00001e38  1440001c	bnez	r2,L87_LF2
 1311  00001e3c  54000000	nop; delay slot nop
 1312  00001e40  8fc10008	lw	r1,8(r30)
 1313  00001e44  6c220010	sgti	r2,r1,#16
 1314  00001e48  1440000c	bnez	r2,L87_LF2
 1315  00001e4c  54000000	nop; delay slot nop
 1316  00001e50  08000010	j	L86_LF2
 1317  00001e54  54000000	nop; delay slot nop
 1318  00001e58          	L87_LF2:
 1319  00001e58  8fc1fff4	lw	r1,-12(r30)
 1320  00001e5c  08000188	j	L72_LF2
 1321  00001e60  54000000	nop; delay slot nop
 1322  00001e64          	L86_LF2:
 1323  00001e64  54000000	nop
 1324  00001e68          	L88_LF2:
 1325  00001e68  8fc10000	lw	r1,(r30)
 1326  00001e6c  90220000	lbu	r2,(r1)
 1327  00001e70  6c41002f	sgtui	r1,r2,#47
 1328  00001e74  10200030	beqz	r1,L91_LF2
 1329  00001e78  54000000	nop; delay slot nop
 1330  00001e7c  8fc10000	lw	r1,(r30)
 1331  00001e80  90220000	lbu	r2,(r1)
 1332  00001e84  70410039	sleui	r1,r2,#57
 1333  00001e88  1020001c	beqz	r1,L91_LF2
 1334  00001e8c  54000000	nop; delay slot nop
 1335  00001e90  8fc10000	lw	r1,(r30)
 1336  00001e94  90220000	lbu	r2,(r1)
 1337  00001e98  2041ffd0	addi	r1,r2,#-48
 1338  00001e9c  afc1fff0	sw	-16(r30),r1
 1339  00001ea0  0800008c	j	L92_LF2
 1340  00001ea4  54000000	nop; delay slot nop
 1341  00001ea8          	L91_LF2:
 1342  00001ea8  8fc10000	lw	r1,(r30)
 1343  00001eac  90220000	lbu	r2,(r1)
 1344  00001eb0  6c410060	sgtui	r1,r2,#96
 1345  00001eb4  10200030	beqz	r1,L93_LF2
 1346  00001eb8  54000000	nop; delay slot nop
 1347  00001ebc  8fc10000	lw	r1,(r30)
 1348  00001ec0  90220000	lbu	r2,(r1)
 1349  00001ec4  7041007a	sleui	r1,r2,#122
 1350  00001ec8  1020001c	beqz	r1,L93_LF2
 1351  00001ecc  54000000	nop; delay slot nop
 1352  00001ed0  8fc10000	lw	r1,(r30)
 1353  00001ed4  90220000	lbu	r2,(r1)
 1354  00001ed8  2041ffa9	addi	r1,r2,#-87
 1355  00001edc  afc1fff0	sw	-16(r30),r1
 1356  00001ee0  0800004c	j	L92_LF2
 1357  00001ee4  54000000	nop; delay slot nop
 1358  00001ee8          	L93_LF2:
 1359  00001ee8  8fc10000	lw	r1,(r30)
 1360  00001eec  90220000	lbu	r2,(r1)
 1361  00001ef0  6c410040	sgtui	r1,r2,#64
 1362  00001ef4  10200030	beqz	r1,L95_LF2
 1363  00001ef8  54000000	nop; delay slot nop
 1364  00001efc  8fc10000	lw	r1,(r30)
 1365  00001f00  90220000	lbu	r2,(r1)
 1366  00001f04  7041005a	sleui	r1,r2,#90
 1367  00001f08  1020001c	beqz	r1,L95_LF2
 1368  00001f0c  54000000	nop; delay slot nop
 1369  00001f10  8fc10000	lw	r1,(r30)
 1370  00001f14  90220000	lbu	r2,(r1)
 1371  00001f18  2041ffc9	addi	r1,r2,#-55
 1372  00001f1c  afc1fff0	sw	-16(r30),r1
 1373  00001f20  0800000c	j	L92_LF2
 1374  00001f24  54000000	nop; delay slot nop
 1375  00001f28          	L95_LF2:
 1376  00001f28  200103e8	addi	r1,r0,#1000
 1377  00001f2c  afc1fff0	sw	-16(r30),r1
 1378  00001f30          	L96_LF2:
 1379  00001f30          	L94_LF2:
 1380  00001f30          	L92_LF2:
 1381  00001f30  8fc1fff0	lw	r1,-16(r30)
 1382  00001f34  8fc20008	lw	r2,8(r30)
 1383  00001f38  0022082a	slt	r1,r1,r2
 1384  00001f3c  10200040	beqz	r1,L90_LF2
 1385  00001f40  54000000	nop; delay slot nop
 1386  00001f44  8fc1fff4	lw	r1,-12(r30)
 1387  00001f48  8fc20008	lw	r2,8(r30)
 1388  00001f4c  00200035	movi2fp	f0,r1
 1389  00001f50  00400835	movi2fp	f1,r2
 1390  00001f54  0401000e	mult	f0,f0,f1
 1391  00001f58  00000834	movfp2i	r1,f0
 1392  00001f5c  afc1fff4	sw	-12(r30),r1
 1393  00001f60  8fc1fff4	lw	r1,-12(r30)
 1394  00001f64  8fc2fff0	lw	r2,-16(r30)
 1395  00001f68  00220820	add	r1,r1,r2
 1396  00001f6c  afc1fff4	sw	-12(r30),r1
 1397  00001f70  8fc20000	lw	r2,(r30)
 1398  00001f74  20410001	addi	r1,r2,#1
 1399  00001f78  00011020	add	r2,r0,r1
 1400  00001f7c  afc20000	sw	(r30),r2
 1401  00001f80          	L97_LF2:
 1402  00001f80          	L90_LF2:
 1403  00001f80  8fc1fff0	lw	r1,-16(r30)
 1404  00001f84  8fc20008	lw	r2,8(r30)
 1405  00001f88  0022082a	slt	r1,r1,r2
 1406  00001f8c  1420000c	bnez	r1,L98_LF2
 1407  00001f90  54000000	nop; delay slot nop
 1408  00001f94  0800000c	j	L89_LF2
 1409  00001f98  54000000	nop; delay slot nop
 1410  00001f9c          	L98_LF2:
 1411  00001f9c  0bfffec8	j	L88_LF2
 1412  00001fa0  54000000	nop; delay slot nop
 1413  00001fa4          	L89_LF2:
 1414  00001fa4  8fc10004	lw	r1,4(r30)
 1415  00001fa8  64220000	snei	r2,r1,#0
 1416  00001fac  10400010	beqz	r2,L99_LF2
 1417  00001fb0  54000000	nop; delay slot nop
 1418  00001fb4  8fc10004	lw	r1,4(r30)
 1419  00001fb8  8fc20000	lw	r2,(r30)
 1420  00001fbc  ac220000	sw	(r1),r2
 1421  00001fc0          	L99_LF2:
 1422  00001fc0  8fc1fff4	lw	r1,-12(r30)
 1423  00001fc4  8fc2ffec	lw	r2,-20(r30)
 1424  00001fc8  00200035	movi2fp	f0,r1
 1425  00001fcc  00400835	movi2fp	f1,r2
 1426  00001fd0  0401000e	mult	f0,f0,f1
 1427  00001fd4  00000834	movfp2i	r1,f0
 1428  00001fd8  afc1fff4	sw	-12(r30),r1
 1429  00001fdc  8fc1fff4	lw	r1,-12(r30)
 1430  00001fe0  08000004	j	L72_LF2
 1431  00001fe4  54000000	nop; delay slot nop
 1432  00001fe8          	L72_LF2:
 1433  00001fe8  8fa20000	lw	r2,0(r29)
 1434  00001fec  8fdffff8	lw	r31,-8(r30)
 1435  00001ff0  001ee820	add	r29,r0,r30
 1436  00001ff4  8fdefffc	lw	r30,-4(r30)
 1437  00001ff8  4be00000	jr	r31
 1438  00001ffc  54000000	nop
 1439  00002000          	.endproc _dstrtol
 1440  00002000          	.align 2
 1441  00002000          	.proc _bcopy
 1442  00002000          	.global _bcopy
 1443  00002000          	_bcopy:
 1444                      ;  Function 'bcopy'; 0 bytes of locals, 2 regs to save.
 1445  00002000  afbefffc	sw	-4(r29),r30; push fp
 1446  00002004  001df020	add	r30,r0,r29; fp = sp
 1447  00002008  afbffff8	sw	-8(r29),r31; push ret addr
 1448  0000200c  2fbd0010	subui	r29,r29,#16; alloc local storage
 1449  00002010  afa20000	sw	0(r29),r2
 1450  00002014  afa30004	sw	4(r29),r3
 1451  00002018  54000000	nop
 1452  0000201c          	L101_LF2:
 1453  0000201c  8fc10008	lw	r1,8(r30)
 1454  00002020  2022ffff	addi	r2,r1,#-1
 1455  00002024  afc20008	sw	8(r30),r2
 1456  00002028  6c210000	sgti	r1,r1,#0
 1457  0000202c  1420000c	bnez	r1,L103_LF2
 1458  00002030  54000000	nop; delay slot nop
 1459  00002034  0800002c	j	L102_LF2
 1460  00002038  54000000	nop; delay slot nop
 1461  0000203c          	L103_LF2:
 1462  0000203c  8fc10004	lw	r1,4(r30)
 1463  00002040  20220001	addi	r2,r1,#1
 1464  00002044  afc20004	sw	4(r30),r2
 1465  00002048  8fc20000	lw	r2,(r30)
 1466  0000204c  20430001	addi	r3,r2,#1
 1467  00002050  afc30000	sw	(r30),r3
 1468  00002054  80420000	lb	r2,(r2)
 1469  00002058  a0220000	sb	(r1),r2
 1470  0000205c  0bffffbc	j	L101_LF2
 1471  00002060  54000000	nop; delay slot nop
 1472  00002064          	L102_LF2:
 1473  00002064          	L100_LF2:
 1474  00002064  8fa20000	lw	r2,0(r29)
 1475  00002068  8fa30004	lw	r3,4(r29)
 1476  0000206c  8fdffff8	lw	r31,-8(r30)
 1477  00002070  001ee820	add	r29,r0,r30
 1478  00002074  8fdefffc	lw	r30,-4(r30)
 1479  00002078  4be00000	jr	r31
 1480  0000207c  54000000	nop
 1481  00002080          	.endproc _bcopy
 1482  00002080          	.align 2
 1483  00002080          	.proc _bzero
 1484  00002080          	.global _bzero
 1485  00002080          	_bzero:
 1486                      ;  Function 'bzero'; 0 bytes of locals, 1 regs to save.
 1487  00002080  afbefffc	sw	-4(r29),r30; push fp
 1488  00002084  001df020	add	r30,r0,r29; fp = sp
 1489  00002088  afbffff8	sw	-8(r29),r31; push ret addr
 1490  0000208c  2fbd0010	subui	r29,r29,#16; alloc local storage
 1491  00002090  afa20000	sw	0(r29),r2
 1492  00002094  54000000	nop
 1493  00002098          	L105_LF2:
 1494  00002098  8fc10004	lw	r1,4(r30)
 1495  0000209c  2022ffff	addi	r2,r1,#-1
 1496  000020a0  afc20004	sw	4(r30),r2
 1497  000020a4  6c210000	sgti	r1,r1,#0
 1498  000020a8  1420000c	bnez	r1,L107_LF2
 1499  000020ac  54000000	nop; delay slot nop
 1500  000020b0  08000020	j	L106_LF2
 1501  000020b4  54000000	nop; delay slot nop
 1502  000020b8          	L107_LF2:
 1503  000020b8  8fc10000	lw	r1,(r30)
 1504  000020bc  20220001	addi	r2,r1,#1
 1505  000020c0  afc20000	sw	(r30),r2
 1506  000020c4  20020000	addi	r2,r0,(#0x0)&0xff
 1507  000020c8  a0220000	sb	(r1),r2
 1508  000020cc  0bffffc8	j	L105_LF2
 1509  000020d0  54000000	nop; delay slot nop
 1510  000020d4          	L106_LF2:
 1511  000020d4          	L104_LF2:
 1512  000020d4  8fa20000	lw	r2,0(r29)
 1513  000020d8  8fdffff8	lw	r31,-8(r30)
 1514  000020dc  001ee820	add	r29,r0,r30
 1515  000020e0  8fdefffc	lw	r30,-4(r30)
 1516  000020e4  4be00000	jr	r31
 1517  000020e8  54000000	nop
 1518  000020ec          	.endproc _bzero
 1519  000020ec          	.align 2
 1520  000020ec          	.proc _min
 1521  000020ec          	.global _min
 1522  000020ec          	_min:
 1523                      ;  Function 'min'; 0 bytes of locals, 2 regs to save.
 1524  000020ec  afbefffc	sw	-4(r29),r30; push fp
 1525  000020f0  001df020	add	r30,r0,r29; fp = sp
 1526  000020f4  afbffff8	sw	-8(r29),r31; push ret addr
 1527  000020f8  2fbd0010	subui	r29,r29,#16; alloc local storage
 1528  000020fc  afa20000	sw	0(r29),r2
 1529  00002100  afa30004	sw	4(r29),r3
 1530  00002104  8fc10000	lw	r1,(r30)
 1531  00002108  8fc20004	lw	r2,4(r30)
 1532  0000210c  0022182c	sle	r3,r1,r2
 1533  00002110  14600008	bnez	r3,L109_LF2
 1534  00002114  54000000	nop; delay slot nop
 1535  00002118  8fc10004	lw	r1,4(r30)
 1536  0000211c          	L109_LF2:
 1537  0000211c  08000004	j	L108_LF2
 1538  00002120  54000000	nop; delay slot nop
 1539  00002124          	L108_LF2:
 1540  00002124  8fa20000	lw	r2,0(r29)
 1541  00002128  8fa30004	lw	r3,4(r29)
 1542  0000212c  8fdffff8	lw	r31,-8(r30)
 1543  00002130  001ee820	add	r29,r0,r30
 1544  00002134  8fdefffc	lw	r30,-4(r30)
 1545  00002138  4be00000	jr	r31
 1546  0000213c  54000000	nop
 1547  00002140          	.endproc _min
 1548  00002140          	.align 2
 1549  00002140          	.proc _max
 1550  00002140          	.global _max
 1551  00002140          	_max:
 1552                      ;  Function 'max'; 0 bytes of locals, 2 regs to save.
 1553  00002140  afbefffc	sw	-4(r29),r30; push fp
 1554  00002144  001df020	add	r30,r0,r29; fp = sp
 1555  00002148  afbffff8	sw	-8(r29),r31; push ret addr
 1556  0000214c  2fbd0010	subui	r29,r29,#16; alloc local storage
 1557  00002150  afa20000	sw	0(r29),r2
 1558  00002154  afa30004	sw	4(r29),r3
 1559  00002158  8fc10000	lw	r1,(r30)
 1560  0000215c  8fc20004	lw	r2,4(r30)
 1561  00002160  0022182d	sge	r3,r1,r2
 1562  00002164  14600008	bnez	r3,L111_LF2
 1563  00002168  54000000	nop; delay slot nop
 1564  0000216c  8fc10004	lw	r1,4(r30)
 1565  00002170          	L111_LF2:
 1566  00002170  08000004	j	L110_LF2
 1567  00002174  54000000	nop; delay slot nop
 1568  00002178          	L110_LF2:
 1569  00002178  8fa20000	lw	r2,0(r29)
 1570  0000217c  8fa30004	lw	r3,4(r29)
 1571  00002180  8fdffff8	lw	r31,-8(r30)
 1572  00002184  001ee820	add	r29,r0,r30
 1573  00002188  8fdefffc	lw	r30,-4(r30)
 1574  0000218c  4be00000	jr	r31
 1575  00002190  54000000	nop
 1576  00002194          	.endproc _max
 1577                      ;;; Ethan L. Miller, 1999.  Released to the public domain
 1578                      ;;;
 1579                      ;;; Most of the traps are called in files from libtraps.
 1582  00002194          	.align 2
 1583  00002194          	.proc _exit
 1584  00002194          	.global _exit
 1585  00002194          	_exit:
 1586  00002194  44000300	trap	#0x300
 1587  00002198  4be00000	jr	r31
 1588  0000219c  54000000	nop
 1589  000021a0          	.endproc _exit
 1591                      ; for the benefit of gcc.
 1592  000021a0          	.proc ___main
 1593  000021a0          	.global ___main
 1594  000021a0          	___main:
 1595  000021a0  4be00000	jr	r31
 1596  000021a4  54000000	nop
 1597  000021a8          	.endproc ___main
 1598  000021a8          	.text
 1599  000021a8          	.global _etext
 1600  000021a8          	_etext:
 1601  000021a8          	.align 3
 1602  000021a8          	.data
 1603  000030c0          	.global _edata
 1604  000030c0          	_edata:
