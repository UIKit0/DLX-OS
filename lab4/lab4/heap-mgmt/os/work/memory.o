; Compiled by GCC
.text
	.align 2
.proc _isspace
.global _isspace
_isspace:
;  Function 'isspace'; 0 bytes of locals, 3 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#24	; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	lb	r2,3(r30)
	addi	r1,r0,#0
	andi	r3,r2,#0x00ff
	seqi	r4,r3,#32
	bnez	r4,L3
	nop	; delay slot nop
	andi	r3,r2,#0x00ff
	seqi	r4,r3,#9
	bnez	r4,L3
	nop	; delay slot nop
	andi	r3,r2,#0x00ff
	seqi	r4,r3,#10
	bnez	r4,L3
	nop	; delay slot nop
	j	L2
	nop	; delay slot nop
L3:
	addi	r1,r0,#1
L2:
	j	L1
	nop	; delay slot nop
L1:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _isspace
	.align 2
.proc _isxdigit
.global _isxdigit
_isxdigit:
;  Function 'isxdigit'; 0 bytes of locals, 3 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#24	; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	lb	r2,3(r30)
	addi	r1,r0,#0
	andi	r3,r2,#0x00ff
	sgtui	r4,r3,#47
	beqz	r4,L7
	nop	; delay slot nop
	andi	r3,r2,#0x00ff
	sleui	r4,r3,#57
	bnez	r4,L6
	nop	; delay slot nop
	j	L7
	nop	; delay slot nop
L7:
	andi	r3,r2,#0x00ff
	sgtui	r4,r3,#96
	beqz	r4,L8
	nop	; delay slot nop
	andi	r3,r2,#0x00ff
	sleui	r4,r3,#102
	bnez	r4,L6
	nop	; delay slot nop
	j	L8
	nop	; delay slot nop
L8:
	andi	r3,r2,#0x00ff
	sgtui	r4,r3,#64
	beqz	r4,L5
	nop	; delay slot nop
	andi	r3,r2,#0x00ff
	sleui	r4,r3,#65
	bnez	r4,L6
	nop	; delay slot nop
	j	L5
	nop	; delay slot nop
L6:
	addi	r1,r0,#1
L5:
	j	L4
	nop	; delay slot nop
L4:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _isxdigit
	.align 2
.proc _DisableIntrs
.global _DisableIntrs
_DisableIntrs:
;  Function 'DisableIntrs'; 0 bytes of locals, 1 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#16	; alloc local storage
	sw	0(r29),r2
	addi	r29,r29,#-8
	add	r1,r0,r29
	addi	r2,r0,#15
	sw	(r1),r2
	jal	_SetIntrs
	nop	; delay slot nop
	addi	r29,r29,#8
	add	r2,r0,r1
	add	r1,r0,r2
	j	L9
	nop	; delay slot nop
L9:
	lw	r2,0(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _DisableIntrs
	.align 2
.proc _EnableIntrs
.global _EnableIntrs
_EnableIntrs:
;  Function 'EnableIntrs'; 0 bytes of locals, 1 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#16	; alloc local storage
	sw	0(r29),r2
	addi	r29,r29,#-8
	add	r1,r0,r29
	addi	r2,r0,#0
	sw	(r1),r2
	jal	_SetIntrs
	nop	; delay slot nop
	addi	r29,r29,#8
	add	r2,r0,r1
	add	r1,r0,r2
	j	L10
	nop	; delay slot nop
L10:
	lw	r2,0(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _EnableIntrs
	.align 2
.proc _RestoreIntrs
.global _RestoreIntrs
_RestoreIntrs:
;  Function 'RestoreIntrs'; 0 bytes of locals, 2 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#16	; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	lw	r2,(r30)
	addi	r29,r29,#-8
	add	r1,r0,r29
	sw	(r1),r2
	jal	_SetIntrs
	nop	; delay slot nop
	addi	r29,r29,#8
	add	r3,r0,r1
	add	r1,r0,r3
	j	L11
	nop	; delay slot nop
L11:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _RestoreIntrs
.data
	.align 2
_nfreepage:
	.word 477
	.align 2
_negativeone:
	.word -1
.text
	.align 2
.proc _MemoryGetSize
.global _MemoryGetSize
_MemoryGetSize:
;  Function 'MemoryGetSize'; 0 bytes of locals, 1 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#16	; alloc local storage
	sw	0(r29),r2
	lhi	r2,#-1
	addui	r2,r2,#0
	lw	r1,(r2)
	j	L14
	nop	; delay slot nop
L14:
	lw	r2,0(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _MemoryGetSize
.data
	.align 2
LC0:
	.ascii "nfreepage is %d\n\000"
.text
	.align 2
.proc _SetPara
.global _SetPara
_SetPara:
;  Function 'SetPara'; 8 bytes of locals, 3 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#32	; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	lhi	r1,((_pagestart)>>16)&0xffff
	addui	r1,r1,(_pagestart)&0xffff
	lhi	r2,((_lastosaddress)>>16)&0xffff
	addui	r2,r2,(_lastosaddress)&0xffff
	lw	r4,(r2)
	addi	r3,r4,#4096
	add	r2,r0,r3
	sgei	r3,r2,#0
	bnez	r3,L16
	nop	; delay slot nop
	addi	r2,r2,#4095
L16:
	srai	r2,r2,#0xc
	sw	(r1),r2
	lhi	r2,((_freemapmax)>>16)&0xffff
	addui	r2,r2,(_freemapmax)&0xffff
	add	r3,r0,r29
	jal	_MemoryGetSize
	nop	; delay slot nop
	add	r3,r0,r1
	add	r1,r0,r3
	sgei	r3,r1,#0
	bnez	r3,L17
	nop	; delay slot nop
	addi	r1,r1,#4095
L17:
	srai	r1,r1,#0xc
	addi	r3,r1,#31
	add	r1,r0,r3
	sgei	r3,r1,#0
	bnez	r3,L18
	nop	; delay slot nop
	addi	r1,r1,#31
L18:
	srai	r1,r1,#0x5
	sw	(r2),r1
	lhi	r2,((_nfreepage)>>16)&0xffff
	addui	r2,r2,(_nfreepage)&0xffff
	add	r3,r0,r29
	jal	_MemoryGetSize
	nop	; delay slot nop
	add	r3,r0,r1
	add	r1,r0,r3
	sgei	r3,r1,#0
	bnez	r3,L19
	nop	; delay slot nop
	addi	r1,r1,#4095
L19:
	srai	r1,r1,#0xc
	lhi	r3,((_pagestart)>>16)&0xffff
	addui	r3,r3,(_pagestart)&0xffff
	lw	r4,(r3)
	sub	r1,r1,r4
	addi	r3,r1,#1
	sw	(r2),r3
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((LC0)>>16)&0xffff
	addui	r2,r2,(LC0)&0xffff
	sw	(r1),r2
	lhi	r2,((_nfreepage)>>16)&0xffff
	addui	r2,r2,(_nfreepage)&0xffff
	lw	r3,(r2)
	sw	4(r1),r3
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#8
L15:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _SetPara
.data
	.align 2
LC1:
	.ascii "MemoryGetsize() is %d\n\000"
	.align 2
LC2:
	.ascii "MEM_PAGESIZE is %d\n\000"
	.align 2
LC3:
	.ascii "freemap is 0x%x\n\000"
.text
	.align 2
.proc _MemoryModuleInit
.global _MemoryModuleInit
_MemoryModuleInit:
;  Function 'MemoryModuleInit'; 8 bytes of locals, 3 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#32	; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((_debugstr)>>16)&0xffff
	addui	r2,r2,(_debugstr)&0xffff
	sw	(r1),r2
	addi	r2,r0,#109
	sw	4(r1),r2
	jal	_dindex
	nop	; delay slot nop
	addi	r29,r29,#8
	snei	r2,r1,#0
	beqz	r2,L21
	nop	; delay slot nop
	add	r2,r0,r29
	jal	_MemoryGetSize
	nop	; delay slot nop
	addi	r29,r29,#-8
	add	r2,r0,r29
	lhi	r3,((LC1)>>16)&0xffff
	addui	r3,r3,(LC1)&0xffff
	sw	(r2),r3
	sw	4(r2),r1
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#8
L21:
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((_debugstr)>>16)&0xffff
	addui	r2,r2,(_debugstr)&0xffff
	sw	(r1),r2
	addi	r2,r0,#43
	sw	4(r1),r2
	jal	_dindex
	nop	; delay slot nop
	addi	r29,r29,#8
	snei	r2,r1,#0
	beqz	r2,L22
	nop	; delay slot nop
	add	r2,r0,r29
	jal	_MemoryGetSize
	nop	; delay slot nop
	addi	r29,r29,#-8
	add	r2,r0,r29
	lhi	r3,((LC1)>>16)&0xffff
	addui	r3,r3,(LC1)&0xffff
	sw	(r2),r3
	sw	4(r2),r1
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#8
L22:
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((_debugstr)>>16)&0xffff
	addui	r2,r2,(_debugstr)&0xffff
	sw	(r1),r2
	addi	r2,r0,#109
	sw	4(r1),r2
	jal	_dindex
	nop	; delay slot nop
	addi	r29,r29,#8
	snei	r2,r1,#0
	beqz	r2,L23
	nop	; delay slot nop
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((LC2)>>16)&0xffff
	addui	r2,r2,(LC2)&0xffff
	sw	(r1),r2
	addi	r2,r0,#4096
	sw	4(r1),r2
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#8
L23:
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((_debugstr)>>16)&0xffff
	addui	r2,r2,(_debugstr)&0xffff
	sw	(r1),r2
	addi	r2,r0,#43
	sw	4(r1),r2
	jal	_dindex
	nop	; delay slot nop
	addi	r29,r29,#8
	snei	r2,r1,#0
	beqz	r2,L24
	nop	; delay slot nop
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((LC2)>>16)&0xffff
	addui	r2,r2,(LC2)&0xffff
	sw	(r1),r2
	addi	r2,r0,#4096
	sw	4(r1),r2
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#8
L24:
	add	r2,r0,r29
	jal	_SetPara
	nop	; delay slot nop
	addi	r1,r0,#0
	sw	-16(r30),r1
L25:
	add	r2,r0,r29
	jal	_MemoryGetSize
	nop	; delay slot nop
	add	r2,r0,r1
	add	r1,r0,r2
	sgei	r2,r1,#0
	bnez	r2,L29
	nop	; delay slot nop
	addi	r1,r1,#4095
L29:
	srai	r1,r1,#0xc
	lw	r2,-16(r30)
	slt	r1,r2,r1
	bnez	r1,L28
	nop	; delay slot nop
	j	L26
	nop	; delay slot nop
L28:
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,-16(r30)
	sw	(r1),r2
	addi	r2,r0,#0
	sw	4(r1),r2
	jal	_MemorySetFreemap
	nop	; delay slot nop
	addi	r29,r29,#8
L27:
	lw	r2,-16(r30)
	addi	r1,r2,#1
	add	r2,r0,r1
	sw	-16(r30),r2
	j	L25
	nop	; delay slot nop
L26:
	nop
	lhi	r1,((_lastosaddress)>>16)&0xffff
	addui	r1,r1,(_lastosaddress)&0xffff
	lw	r3,(r1)
	addi	r2,r3,#4096
	add	r1,r0,r2
	sgei	r2,r1,#0
	bnez	r2,L30
	nop	; delay slot nop
	addi	r1,r1,#4095
L30:
	srai	r1,r1,#0xc
	sw	-16(r30),r1
L31:
	add	r2,r0,r29
	jal	_MemoryGetSize
	nop	; delay slot nop
	add	r2,r0,r1
	add	r1,r0,r2
	sgei	r2,r1,#0
	bnez	r2,L35
	nop	; delay slot nop
	addi	r1,r1,#4095
L35:
	srai	r1,r1,#0xc
	lw	r2,-16(r30)
	slt	r1,r2,r1
	bnez	r1,L34
	nop	; delay slot nop
	j	L32
	nop	; delay slot nop
L34:
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,-16(r30)
	sw	(r1),r2
	addi	r2,r0,#1
	sw	4(r1),r2
	jal	_MemorySetFreemap
	nop	; delay slot nop
	addi	r29,r29,#8
L33:
	lw	r2,-16(r30)
	addi	r1,r2,#1
	add	r2,r0,r1
	sw	-16(r30),r2
	j	L31
	nop	; delay slot nop
L32:
	nop
	addi	r1,r0,#0
	sw	-12(r30),r1
L36:
	lw	r1,-12(r30)
	slei	r2,r1,#15
	bnez	r2,L39
	nop	; delay slot nop
	j	L37
	nop	; delay slot nop
L39:
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((_debugstr)>>16)&0xffff
	addui	r2,r2,(_debugstr)&0xffff
	sw	(r1),r2
	addi	r2,r0,#109
	sw	4(r1),r2
	jal	_dindex
	nop	; delay slot nop
	addi	r29,r29,#8
	snei	r2,r1,#0
	beqz	r2,L40
	nop	; delay slot nop
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((LC3)>>16)&0xffff
	addui	r2,r2,(LC3)&0xffff
	sw	(r1),r2
	lw	r2,-12(r30)
	addi	r3,r0,#4
	movi2fp	f0,r2
	movi2fp	f1,r3
	mult	f0,f0,f1
	movfp2i	r2,f0
	lhi	r4,((_freemap)>>16)&0xffff
	addui	r4,r4,(_freemap)&0xffff
	add	r3,r2,r4
	lw	r2,(r3)
	sw	4(r1),r2
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#8
L40:
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((_debugstr)>>16)&0xffff
	addui	r2,r2,(_debugstr)&0xffff
	sw	(r1),r2
	addi	r2,r0,#43
	sw	4(r1),r2
	jal	_dindex
	nop	; delay slot nop
	addi	r29,r29,#8
	snei	r2,r1,#0
	beqz	r2,L38
	nop	; delay slot nop
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((LC3)>>16)&0xffff
	addui	r2,r2,(LC3)&0xffff
	sw	(r1),r2
	lw	r2,-12(r30)
	addi	r3,r0,#4
	movi2fp	f0,r2
	movi2fp	f1,r3
	mult	f0,f0,f1
	movfp2i	r2,f0
	lhi	r4,((_freemap)>>16)&0xffff
	addui	r4,r4,(_freemap)&0xffff
	add	r3,r2,r4
	lw	r2,(r3)
	sw	4(r1),r2
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#8
L41:
L38:
	lw	r2,-12(r30)
	addi	r1,r2,#1
	add	r2,r0,r1
	sw	-12(r30),r2
	j	L36
	nop	; delay slot nop
L37:
L20:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _MemoryModuleInit
	.align 2
.proc _MemoryTranslateUserToSystem
.global _MemoryTranslateUserToSystem
_MemoryTranslateUserToSystem:
;  Function 'MemoryTranslateUserToSystem'; 8 bytes of locals, 2 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#24	; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	lw	r2,4(r30)
	srli	r1,r2,#0xc
	sw	-12(r30),r1
	lw	r1,4(r30)
	andi	r2,r1,#4095
	sw	-16(r30),r2
	lw	r1,-12(r30)
	sgti	r2,r1,#255
	beqz	r2,L43
	nop	; delay slot nop
	addi	r1,r0,#0
	j	L42
	nop	; delay slot nop
L43:
	lw	r1,(r30)
	lw	r2,-12(r30)
	addi	r3,r0,#4
	movi2fp	f0,r2
	movi2fp	f1,r3
	mult	f0,f0,f1
	movfp2i	r2,f0
	add	r1,r2,r1
	addi	r2,r1,#96
	lw	r3,(r2)
	addi	r31,r0,#-8
	and	r1,r3,r31
	lw	r3,-16(r30)
	add	r2,r1,r3
	add	r1,r0,r2
	j	L42
	nop	; delay slot nop
L42:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _MemoryTranslateUserToSystem
	.align 2
.proc _MemoryMoveBetweenSpaces
.global _MemoryMoveBetweenSpaces
_MemoryMoveBetweenSpaces:
;  Function 'MemoryMoveBetweenSpaces'; 16 bytes of locals, 1 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#32	; alloc local storage
	sw	0(r29),r2
	addi	r1,r0,#0
	sw	-16(r30),r1
L45:
	lw	r1,12(r30)
	sgti	r2,r1,#0
	bnez	r2,L47
	nop	; delay slot nop
	j	L46
	nop	; delay slot nop
L47:
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,(r30)
	sw	(r1),r2
	lw	r2,8(r30)
	sw	4(r1),r2
	jal	_MemoryTranslateUserToSystem
	nop	; delay slot nop
	addi	r29,r29,#8
	sw	-12(r30),r1
	lw	r1,-12(r30)
	snei	r2,r1,#0
	bnez	r2,L48
	nop	; delay slot nop
	j	L46
	nop	; delay slot nop
L48:
	lw	r2,-12(r30)
	andi	r1,r2,#4095
	addi	r2,r0,#4096
	sub	r1,r2,r1
	sw	-20(r30),r1
	lw	r1,-20(r30)
	lw	r2,12(r30)
	sgt	r1,r1,r2
	beqz	r1,L49
	nop	; delay slot nop
	lw	r1,12(r30)
	sw	-20(r30),r1
L49:
	lw	r1,16(r30)
	sgei	r2,r1,#0
	beqz	r2,L50
	nop	; delay slot nop
	addi	r29,r29,#-16
	add	r1,r0,r29
	lw	r2,4(r30)
	sw	(r1),r2
	lw	r2,-12(r30)
	sw	4(r1),r2
	lw	r2,-20(r30)
	sw	8(r1),r2
	jal	_bcopy
	nop	; delay slot nop
	addi	r29,r29,#16
	j	L51
	nop	; delay slot nop
L50:
	addi	r29,r29,#-16
	add	r1,r0,r29
	lw	r2,-12(r30)
	sw	(r1),r2
	lw	r2,4(r30)
	sw	4(r1),r2
	lw	r2,-20(r30)
	sw	8(r1),r2
	jal	_bcopy
	nop	; delay slot nop
	addi	r29,r29,#16
L51:
	lw	r1,12(r30)
	lw	r2,-20(r30)
	sub	r1,r1,r2
	sw	12(r30),r1
	lw	r1,-16(r30)
	lw	r2,-20(r30)
	add	r1,r1,r2
	sw	-16(r30),r1
	lw	r1,4(r30)
	lw	r2,-20(r30)
	add	r1,r1,r2
	sw	4(r30),r1
	lw	r1,8(r30)
	lw	r2,-20(r30)
	add	r1,r1,r2
	sw	8(r30),r1
	j	L45
	nop	; delay slot nop
L46:
	lw	r1,-16(r30)
	j	L44
	nop	; delay slot nop
L44:
	lw	r2,0(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _MemoryMoveBetweenSpaces
	.align 2
.proc _MemoryCopySystemToUser
.global _MemoryCopySystemToUser
_MemoryCopySystemToUser:
;  Function 'MemoryCopySystemToUser'; 0 bytes of locals, 1 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#16	; alloc local storage
	sw	0(r29),r2
	addi	r29,r29,#-24
	add	r1,r0,r29
	lw	r2,(r30)
	sw	(r1),r2
	lw	r2,4(r30)
	sw	4(r1),r2
	lw	r2,8(r30)
	sw	8(r1),r2
	lw	r2,12(r30)
	sw	12(r1),r2
	addi	r2,r0,#1
	sw	16(r1),r2
	jal	_MemoryMoveBetweenSpaces
	nop	; delay slot nop
	addi	r29,r29,#24
	add	r2,r0,r1
	add	r1,r0,r2
	j	L52
	nop	; delay slot nop
L52:
	lw	r2,0(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _MemoryCopySystemToUser
	.align 2
.proc _MemoryCopyUserToSystem
.global _MemoryCopyUserToSystem
_MemoryCopyUserToSystem:
;  Function 'MemoryCopyUserToSystem'; 0 bytes of locals, 1 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#16	; alloc local storage
	sw	0(r29),r2
	addi	r29,r29,#-24
	add	r1,r0,r29
	lw	r2,(r30)
	sw	(r1),r2
	lw	r2,8(r30)
	sw	4(r1),r2
	lw	r2,4(r30)
	sw	8(r1),r2
	lw	r2,12(r30)
	sw	12(r1),r2
	addi	r2,r0,#-1
	sw	16(r1),r2
	jal	_MemoryMoveBetweenSpaces
	nop	; delay slot nop
	addi	r29,r29,#24
	add	r2,r0,r1
	add	r1,r0,r2
	j	L53
	nop	; delay slot nop
L53:
	lw	r2,0(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _MemoryCopyUserToSystem
.data
	.align 2
LC4:
	.ascii "debug into pagefault\n\000"
	.align 2
LC5:
	.ascii "FATAL:couldn\'t allocate memory - no free pages!\n\000"
	.align 2
LC6:
	.ascii "(int)pcb->currentSavedFrame[PROCESS_STACK_FAULT]=0x%x\n\000"
	.align 2
LC7:
	.ascii "pcb->currentSavedFrame[PROCESS_STACK_USER_STACKPOINTER]=0x%x\n\000"
	.align 2
LC8:
	.ascii "Allocate a newpage, the page number is %d\n\000"
	.align 2
LC9:
	.ascii "FATAL: page fault!\n\000"
.text
	.align 2
.proc _MemoryPageFaultHandler
.global _MemoryPageFaultHandler
_MemoryPageFaultHandler:
;  Function 'MemoryPageFaultHandler'; 8 bytes of locals, 3 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#32	; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((LC4)>>16)&0xffff
	addui	r2,r2,(LC4)&0xffff
	sw	(r1),r2
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#8
	lw	r1,(r30)
	lw	r2,(r1)
	addi	r1,r2,#156
	lw	r2,(r30)
	lw	r3,(r2)
	addi	r2,r3,#308
	lw	r1,(r1)
	lw	r2,(r2)
	sgeu	r1,r1,r2
	beqz	r1,L55
	nop	; delay slot nop
	add	r2,r0,r29
	jal	_MemoryAllocPage
	nop	; delay slot nop
	sw	-12(r30),r1
	lw	r1,-12(r30)
	seqi	r2,r1,#-1
	beqz	r2,L56
	nop	; delay slot nop
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((LC5)>>16)&0xffff
	addui	r2,r2,(LC5)&0xffff
	sw	(r1),r2
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#8
	add	r2,r0,r29
	jal	_ProcessKill
	nop	; delay slot nop
L56:
	lw	r1,(r30)
	lw	r2,(r30)
	lw	r3,8288(r2)
	addi	r2,r3,#1
	sw	8288(r1),r2
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((LC6)>>16)&0xffff
	addui	r2,r2,(LC6)&0xffff
	sw	(r1),r2
	lw	r2,(r30)
	lw	r3,(r2)
	addi	r2,r3,#308
	lw	r3,(r2)
	sw	4(r1),r3
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#8
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((LC7)>>16)&0xffff
	addui	r2,r2,(LC7)&0xffff
	sw	(r1),r2
	lw	r2,(r30)
	lw	r3,(r2)
	addi	r2,r3,#156
	lw	r3,(r2)
	sw	4(r1),r3
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#8
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,-12(r30)
	sw	(r1),r2
	jal	_MemorySetupPte
	nop	; delay slot nop
	addi	r29,r29,#8
	lw	r2,(r30)
	lw	r3,(r30)
	lw	r4,(r3)
	addi	r3,r4,#308
	lw	r4,(r3)
	add	r3,r0,r4
	sgei	r4,r3,#0
	bnez	r4,L57
	nop	; delay slot nop
	addi	r3,r3,#4095
L57:
	srai	r3,r3,#0xc
	addi	r4,r0,#4
	movi2fp	f0,r3
	movi2fp	f1,r4
	mult	f0,f0,f1
	movfp2i	r3,f0
	add	r2,r3,r2
	addi	r3,r2,#96
	sw	(r3),r1
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((LC8)>>16)&0xffff
	addui	r2,r2,(LC8)&0xffff
	sw	(r1),r2
	lw	r2,-12(r30)
	sw	4(r1),r2
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#8
	addi	r1,r0,#1
	j	L54
	nop	; delay slot nop
	j	L58
	nop	; delay slot nop
L55:
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((LC9)>>16)&0xffff
	addui	r2,r2,(LC9)&0xffff
	sw	(r1),r2
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#8
	add	r2,r0,r29
	jal	_ProcessKill
	nop	; delay slot nop
	addi	r1,r0,#-1
	j	L54
	nop	; delay slot nop
L58:
L54:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _MemoryPageFaultHandler
.data
	.align 2
LC10:
	.ascii "There are still %d free pages.\n\000"
	.align 2
LC11:
	.ascii "Allocating memory, starting with entry %d\n\000"
	.align 2
LC12:
	.ascii "Allocated memory, from map %d, page 0x%x, map=0x%x.\n\000"
.text
	.align 2
.proc _MemoryAllocPage
.global _MemoryAllocPage
_MemoryAllocPage:
;  Function 'MemoryAllocPage'; 24 bytes of locals, 4 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#48	; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	sw	12(r29),r5
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((_debugstr)>>16)&0xffff
	addui	r2,r2,(_debugstr)&0xffff
	sw	(r1),r2
	addi	r2,r0,#109
	sw	4(r1),r2
	jal	_dindex
	nop	; delay slot nop
	addi	r29,r29,#8
	snei	r2,r1,#0
	beqz	r2,L60
	nop	; delay slot nop
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((LC10)>>16)&0xffff
	addui	r2,r2,(LC10)&0xffff
	sw	(r1),r2
	lhi	r2,((_nfreepage)>>16)&0xffff
	addui	r2,r2,(_nfreepage)&0xffff
	lw	r3,(r2)
	sw	4(r1),r3
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#8
L60:
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((_debugstr)>>16)&0xffff
	addui	r2,r2,(_debugstr)&0xffff
	sw	(r1),r2
	addi	r2,r0,#43
	sw	4(r1),r2
	jal	_dindex
	nop	; delay slot nop
	addi	r29,r29,#8
	snei	r2,r1,#0
	beqz	r2,L61
	nop	; delay slot nop
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((LC10)>>16)&0xffff
	addui	r2,r2,(LC10)&0xffff
	sw	(r1),r2
	lhi	r2,((_nfreepage)>>16)&0xffff
	addui	r2,r2,(_nfreepage)&0xffff
	lw	r3,(r2)
	sw	4(r1),r3
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#8
L61:
	lhi	r1,((_lastosaddress)>>16)&0xffff
	addui	r1,r1,(_lastosaddress)&0xffff
	lw	r3,(r1)
	addi	r2,r3,#4096
	add	r1,r0,r2
	sgei	r2,r1,#0
	bnez	r2,L62
	nop	; delay slot nop
	addi	r1,r1,#4095
L62:
	srai	r1,r1,#0xc
	sw	-24(r30),r1
	lw	r2,-24(r30)
	add	r1,r0,r2
	sgei	r2,r1,#0
	bnez	r2,L63
	nop	; delay slot nop
	addi	r1,r1,#31
L63:
	srai	r1,r1,#0x5
	sw	-12(r30),r1
	lhi	r1,((_nfreepage)>>16)&0xffff
	addui	r1,r1,(_nfreepage)&0xffff
	lw	r2,(r1)
	snei	r1,r2,#0
	bnez	r1,L64
	nop	; delay slot nop
	addi	r1,r0,#-1
	j	L59
	nop	; delay slot nop
L64:
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((_debugstr)>>16)&0xffff
	addui	r2,r2,(_debugstr)&0xffff
	sw	(r1),r2
	addi	r2,r0,#109
	sw	4(r1),r2
	jal	_dindex
	nop	; delay slot nop
	addi	r29,r29,#8
	snei	r2,r1,#0
	beqz	r2,L65
	nop	; delay slot nop
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((LC11)>>16)&0xffff
	addui	r2,r2,(LC11)&0xffff
	sw	(r1),r2
	lw	r2,-12(r30)
	sw	4(r1),r2
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#8
L65:
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((_debugstr)>>16)&0xffff
	addui	r2,r2,(_debugstr)&0xffff
	sw	(r1),r2
	addi	r2,r0,#43
	sw	4(r1),r2
	jal	_dindex
	nop	; delay slot nop
	addi	r29,r29,#8
	snei	r2,r1,#0
	beqz	r2,L66
	nop	; delay slot nop
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((LC11)>>16)&0xffff
	addui	r2,r2,(LC11)&0xffff
	sw	(r1),r2
	lw	r2,-12(r30)
	sw	4(r1),r2
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#8
L66:
	nop
L67:
	lw	r1,-12(r30)
	addi	r2,r0,#4
	movi2fp	f0,r1
	movi2fp	f1,r2
	mult	f0,f0,f1
	movfp2i	r1,f0
	lhi	r5,((_freemap)>>16)&0xffff
	addui	r5,r5,(_freemap)&0xffff
	add	r2,r1,r5
	lw	r1,(r2)
	snei	r2,r1,#0
	beqz	r2,L69
	nop	; delay slot nop
	j	L68
	nop	; delay slot nop
L69:
	lw	r1,-12(r30)
	addi	r2,r1,#1
	sw	-12(r30),r2
	add	r2,r0,r29
	jal	_MemoryGetSize
	nop	; delay slot nop
	add	r2,r0,r1
	add	r1,r0,r2
	sgei	r2,r1,#0
	bnez	r2,L71
	nop	; delay slot nop
	addi	r1,r1,#4095
L71:
	srai	r1,r1,#0xc
	addi	r2,r1,#31
	add	r1,r0,r2
	sgei	r2,r1,#0
	bnez	r2,L72
	nop	; delay slot nop
	addi	r1,r1,#31
L72:
	srai	r1,r1,#0x5
	lw	r2,-12(r30)
	sge	r1,r2,r1
	beqz	r1,L70
	nop	; delay slot nop
	lw	r2,-24(r30)
	add	r1,r0,r2
	sgei	r2,r1,#0
	bnez	r2,L73
	nop	; delay slot nop
	addi	r1,r1,#31
L73:
	srai	r1,r1,#0x5
	sw	-12(r30),r1
L70:
	j	L67
	nop	; delay slot nop
L68:
	lw	r1,-12(r30)
	addi	r2,r0,#4
	movi2fp	f0,r1
	movi2fp	f1,r2
	mult	f0,f0,f1
	movfp2i	r1,f0
	lhi	r5,((_freemap)>>16)&0xffff
	addui	r5,r5,(_freemap)&0xffff
	add	r2,r1,r5
	lw	r1,(r2)
	sw	-28(r30),r1
	addi	r1,r0,#0
	sw	-16(r30),r1
L74:
	addi	r1,r0,#1
	lw	r2,-16(r30)
	sll	r1,r1,r2
	lw	r2,-28(r30)
	and	r1,r1,r2
	snei	r2,r1,#0
	beqz	r2,L76
	nop	; delay slot nop
	j	L75
	nop	; delay slot nop
L77:
L76:
	lw	r2,-16(r30)
	addi	r1,r2,#1
	add	r2,r0,r1
	sw	-16(r30),r2
	j	L74
	nop	; delay slot nop
L75:
	addi	r29,r29,#-8
	add	r1,r0,r29
	addi	r2,r0,#1
	lw	r3,-16(r30)
	sll	r2,r2,r3
	sw	(r1),r2
	jal	_invert
	nop	; delay slot nop
	addi	r29,r29,#8
	lw	r2,-12(r30)
	addi	r4,r0,#4
	movi2fp	f0,r2
	movi2fp	f1,r4
	mult	f0,f0,f1
	movfp2i	r3,f0
	lhi	r5,((_freemap)>>16)&0xffff
	addui	r5,r5,(_freemap)&0xffff
	add	r2,r3,r5
	lw	r3,-12(r30)
	addi	r4,r0,#4
	movi2fp	f0,r3
	movi2fp	f1,r4
	mult	f0,f0,f1
	movfp2i	r3,f0
	lhi	r5,((_freemap)>>16)&0xffff
	addui	r5,r5,(_freemap)&0xffff
	add	r4,r3,r5
	lw	r3,(r4)
	and	r1,r3,r1
	sw	(r2),r1
	lw	r1,-12(r30)
	add	r2,r0,r1
	slli	r1,r2,#0x5
	lw	r2,-16(r30)
	add	r1,r1,r2
	sw	-28(r30),r1
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((_debugstr)>>16)&0xffff
	addui	r2,r2,(_debugstr)&0xffff
	sw	(r1),r2
	addi	r2,r0,#109
	sw	4(r1),r2
	jal	_dindex
	nop	; delay slot nop
	addi	r29,r29,#8
	snei	r2,r1,#0
	beqz	r2,L78
	nop	; delay slot nop
	addi	r29,r29,#-16
	add	r1,r0,r29
	lhi	r2,((LC12)>>16)&0xffff
	addui	r2,r2,(LC12)&0xffff
	sw	(r1),r2
	lw	r2,-12(r30)
	sw	4(r1),r2
	lw	r2,-28(r30)
	sw	8(r1),r2
	lw	r2,-12(r30)
	addi	r3,r0,#4
	movi2fp	f0,r2
	movi2fp	f1,r3
	mult	f0,f0,f1
	movfp2i	r2,f0
	lhi	r5,((_freemap)>>16)&0xffff
	addui	r5,r5,(_freemap)&0xffff
	add	r3,r2,r5
	lw	r2,(r3)
	sw	12(r1),r2
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#16
L78:
	addi	r29,r29,#-8
	add	r1,r0,r29
	lhi	r2,((_debugstr)>>16)&0xffff
	addui	r2,r2,(_debugstr)&0xffff
	sw	(r1),r2
	addi	r2,r0,#43
	sw	4(r1),r2
	jal	_dindex
	nop	; delay slot nop
	addi	r29,r29,#8
	snei	r2,r1,#0
	beqz	r2,L79
	nop	; delay slot nop
	addi	r29,r29,#-16
	add	r1,r0,r29
	lhi	r2,((LC12)>>16)&0xffff
	addui	r2,r2,(LC12)&0xffff
	sw	(r1),r2
	lw	r2,-12(r30)
	sw	4(r1),r2
	lw	r2,-28(r30)
	sw	8(r1),r2
	lw	r2,-12(r30)
	addi	r3,r0,#4
	movi2fp	f0,r2
	movi2fp	f1,r3
	mult	f0,f0,f1
	movfp2i	r2,f0
	lhi	r5,((_freemap)>>16)&0xffff
	addui	r5,r5,(_freemap)&0xffff
	add	r3,r2,r5
	lw	r2,(r3)
	sw	12(r1),r2
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#16
L79:
	lhi	r2,((_nfreepage)>>16)&0xffff
	addui	r2,r2,(_nfreepage)&0xffff
	lhi	r1,((_nfreepage)>>16)&0xffff
	addui	r1,r1,(_nfreepage)&0xffff
	lhi	r2,((_nfreepage)>>16)&0xffff
	addui	r2,r2,(_nfreepage)&0xffff
	lw	r3,(r2)
	addi	r2,r3,#-1
	add	r3,r0,r2
	sw	(r1),r3
	lw	r1,-28(r30)
	j	L59
	nop	; delay slot nop
L59:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r5,12(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _MemoryAllocPage
	.align 2
.proc _MemoryInitPte
.global _MemoryInitPte
_MemoryInitPte:
;  Function 'MemoryInitPte'; 0 bytes of locals, 0 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#8	; alloc local storage
	addi	r1,r0,#0
	j	L80
	nop	; delay slot nop
L80:
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _MemoryInitPte
	.align 2
.proc _MemorySetupPte
.global _MemorySetupPte
_MemorySetupPte:
;  Function 'MemorySetupPte'; 0 bytes of locals, 1 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#16	; alloc local storage
	sw	0(r29),r2
	lw	r2,(r30)
	slli	r1,r2,#0xc
	ori	r2,r1,#1
	add	r1,r0,r2
	j	L81
	nop	; delay slot nop
L81:
	lw	r2,0(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _MemorySetupPte
	.align 2
.proc _MemoryFreePte
.global _MemoryFreePte
_MemoryFreePte:
;  Function 'MemoryFreePte'; 0 bytes of locals, 3 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#24	; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r3,(r30)
	addi	r4,r0,#-8
	and	r2,r3,r4
	srli	r3,r2,#0xc
	sw	(r1),r3
	jal	_MemoryFreePage
	nop	; delay slot nop
	addi	r29,r29,#8
L82:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _MemoryFreePte
	.align 2
.proc _MemoryFreePage
.global _MemoryFreePage
_MemoryFreePage:
;  Function 'MemoryFreePage'; 0 bytes of locals, 2 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#16	; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,(r30)
	sw	(r1),r2
	addi	r2,r0,#1
	sw	4(r1),r2
	jal	_MemorySetFreemap
	nop	; delay slot nop
	addi	r29,r29,#8
	lhi	r1,((_nfreepage)>>16)&0xffff
	addui	r1,r1,(_nfreepage)&0xffff
	lhi	r2,((_nfreepage)>>16)&0xffff
	addui	r2,r2,(_nfreepage)&0xffff
	lw	r3,(r2)
	addi	r2,r3,#1
	sw	(r1),r2
L83:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _MemoryFreePage
	.align 2
.proc _MemorySetFreemap
.global _MemorySetFreemap
_MemorySetFreemap:
;  Function 'MemorySetFreemap'; 8 bytes of locals, 4 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#32	; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	sw	12(r29),r5
	lw	r2,(r30)
	add	r1,r0,r2
	sgei	r2,r1,#0
	bnez	r2,L85
	nop	; delay slot nop
	addi	r1,r1,#31
L85:
	srai	r1,r1,#0x5
	sw	-12(r30),r1
	lw	r1,(r30)
	add	r2,r0,r1
	sgei	r3,r2,#0
	bnez	r3,L86
	nop	; delay slot nop
	addi	r2,r2,#31
L86:
	srai	r2,r2,#0x5
	addi	r3,r0,#32
	movi2fp	f0,r2
	movi2fp	f1,r3
	mult	f0,f0,f1
	movfp2i	r2,f0
	sub	r1,r1,r2
	sw	-16(r30),r1
	addi	r29,r29,#-8
	add	r1,r0,r29
	addi	r2,r0,#1
	lw	r3,-16(r30)
	sll	r2,r2,r3
	sw	(r1),r2
	jal	_invert
	nop	; delay slot nop
	addi	r29,r29,#8
	add	r2,r0,r1
	lw	r1,-12(r30)
	addi	r4,r0,#4
	movi2fp	f0,r1
	movi2fp	f1,r4
	mult	f0,f0,f1
	movfp2i	r3,f0
	lhi	r5,((_freemap)>>16)&0xffff
	addui	r5,r5,(_freemap)&0xffff
	add	r1,r3,r5
	lw	r3,-12(r30)
	addi	r4,r0,#4
	movi2fp	f0,r3
	movi2fp	f1,r4
	mult	f0,f0,f1
	movfp2i	r3,f0
	lhi	r5,((_freemap)>>16)&0xffff
	addui	r5,r5,(_freemap)&0xffff
	add	r4,r3,r5
	lw	r3,(r4)
	and	r2,r2,r3
	lw	r3,4(r30)
	lw	r4,-16(r30)
	sll	r3,r3,r4
	or	r2,r2,r3
	sw	(r1),r2
L84:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r5,12(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _MemorySetFreemap
.data
	.align 2
LC13:
	.ascii "Created a heap block of size <%d> bytes; virtual address <0x%x>, physi"
	.ascii "cal address <0x%x>\n\000"
.text
	.align 2
.proc _malloc
.global _malloc
_malloc:
;  Function 'malloc'; 24 bytes of locals, 2 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#40	; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	addi	r1,r0,#0
	sw	-12(r30),r1
	addi	r1,r0,#32
	sw	-20(r30),r1
	lw	r1,4(r30)
	slei	r2,r1,#0
	beqz	r2,L88
	nop	; delay slot nop
	addi	r1,r0,#0
	j	L87
	nop	; delay slot nop
L88:
	lw	r1,4(r30)
	sgti	r2,r1,#4096
	beqz	r2,L89
	nop	; delay slot nop
	addi	r1,r0,#0
	j	L87
	nop	; delay slot nop
L89:
	lw	r1,4(r30)
	sw	-16(r30),r1
L90:
	lw	r1,-20(r30)
	lw	r2,-16(r30)
	slt	r1,r1,r2
	bnez	r1,L92
	nop	; delay slot nop
	j	L91
	nop	; delay slot nop
L92:
	lw	r1,-20(r30)
	add	r2,r0,r1
	slli	r1,r2,#0x1
	sw	-20(r30),r1
	lw	r2,-12(r30)
	addi	r1,r2,#1
	add	r2,r0,r1
	sw	-12(r30),r2
	j	L90
	nop	; delay slot nop
L91:
	addi	r29,r29,#-16
	add	r1,r0,r29
	lw	r2,-12(r30)
	sw	(r1),r2
	lw	r2,(r30)
	sw	4(r1),r2
	lw	r2,(r30)
	addi	r3,r2,#1120
	sw	8(r1),r3
	lw	r2,4(r30)
	sw	12(r1),r2
	jal	_findtree
	nop	; delay slot nop
	addi	r29,r29,#16
	sw	-24(r30),r1
	lw	r1,-24(r30)
	snei	r2,r1,#-1
	beqz	r2,L93
	nop	; delay slot nop
	lw	r1,-24(r30)
	addi	r2,r1,#16384
	sw	-28(r30),r2
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,(r30)
	sw	(r1),r2
	lw	r2,-28(r30)
	sw	4(r1),r2
	jal	_MemoryTranslateUserToSystem
	nop	; delay slot nop
	addi	r29,r29,#8
	sw	-32(r30),r1
	addi	r29,r29,#-16
	add	r1,r0,r29
	lhi	r2,((LC13)>>16)&0xffff
	addui	r2,r2,(LC13)&0xffff
	sw	(r1),r2
	lw	r2,4(r30)
	sw	4(r1),r2
	lw	r2,-28(r30)
	sw	8(r1),r2
	lw	r2,-32(r30)
	sw	12(r1),r2
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#16
	lw	r1,-28(r30)
	j	L87
	nop	; delay slot nop
	j	L94
	nop	; delay slot nop
L93:
	addi	r1,r0,#0
	j	L87
	nop	; delay slot nop
L94:
L87:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _malloc
	.align 2
.proc _findnode
.global _findnode
_findnode:
;  Function 'findnode'; 8 bytes of locals, 3 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#32	; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	nop
	addi	r1,r0,#1
	sw	-12(r30),r1
L96:
	lw	r1,-12(r30)
	slei	r2,r1,#255
	bnez	r2,L99
	nop	; delay slot nop
	j	L97
	nop	; delay slot nop
L99:
	lw	r1,(r30)
	lw	r2,-12(r30)
	add	r4,r0,r2
	slli	r3,r4,#0x3
	sub	r3,r3,r2
	slli	r2,r3,#0x2
	add	r1,r1,r2
	lw	r2,1144(r1)
	seqi	r1,r2,#1
	beqz	r1,L98
	nop	; delay slot nop
	j	L97
	nop	; delay slot nop
L100:
L98:
	lw	r2,-12(r30)
	addi	r1,r2,#1
	add	r2,r0,r1
	sw	-12(r30),r2
	j	L96
	nop	; delay slot nop
L97:
	lw	r1,(r30)
	lw	r2,-12(r30)
	add	r4,r0,r2
	slli	r3,r4,#0x3
	sub	r3,r3,r2
	slli	r2,r3,#0x2
	add	r1,r1,r2
	addi	r2,r0,#0
	sw	1144(r1),r2
	lw	r1,-12(r30)
	j	L95
	nop	; delay slot nop
L95:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _findnode
.data
	.align 2
LC14:
	.ascii "Allocated the block: order = %d, addr= %d , requested mem size = %d, b"
	.ascii "lock size = %d\n\000"
	.align 2
LC15:
	.ascii "Created a left child node(order= %d, addr= %d, size= %d) of parent (or"
	.ascii "der= %d, addr= %d, size= %d)\n\000"
	.align 2
LC16:
	.ascii "Created a right child node(order= %d, addr= %d, size= %d) of parent (o"
	.ascii "rder= %d, addr= %d, size= %d)\n\000"
.text
	.align 2
.proc _findtree
.global _findtree
_findtree:
;  Function 'findtree'; 8 bytes of locals, 3 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#32	; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	lw	r1,8(r30)
	lw	r2,(r1)
	lw	r1,(r30)
	seq	r2,r2,r1
	beqz	r2,L102
	nop	; delay slot nop
	lw	r1,8(r30)
	lw	r2,12(r1)
	snei	r1,r2,#0
	bnez	r1,L104
	nop	; delay slot nop
	lw	r1,8(r30)
	lw	r2,16(r1)
	snei	r1,r2,#0
	bnez	r1,L104
	nop	; delay slot nop
	j	L103
	nop	; delay slot nop
L104:
	addi	r1,r0,#-1
	j	L101
	nop	; delay slot nop
	j	L105
	nop	; delay slot nop
L103:
	lw	r1,8(r30)
	lw	r2,20(r1)
	snei	r1,r2,#0
	bnez	r1,L106
	nop	; delay slot nop
	addi	r1,r0,#-1
	j	L101
	nop	; delay slot nop
	j	L107
	nop	; delay slot nop
L106:
	lw	r1,8(r30)
	addi	r2,r0,#0
	sw	20(r1),r2
	addi	r29,r29,#-24
	add	r1,r0,r29
	lhi	r2,((LC14)>>16)&0xffff
	addui	r2,r2,(LC14)&0xffff
	sw	(r1),r2
	lw	r2,8(r30)
	lw	r3,(r2)
	sw	4(r1),r3
	lw	r2,8(r30)
	lw	r3,4(r2)
	sw	8(r1),r3
	lw	r2,12(r30)
	sw	12(r1),r2
	lw	r2,8(r30)
	lw	r3,8(r2)
	sw	16(r1),r3
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#24
	lw	r2,8(r30)
	lw	r1,4(r2)
	j	L101
	nop	; delay slot nop
L107:
L105:
	j	L108
	nop	; delay slot nop
L102:
	lw	r1,8(r30)
	lw	r2,12(r1)
	snei	r1,r2,#0
	bnez	r1,L109
	nop	; delay slot nop
	lw	r1,8(r30)
	lw	r2,16(r1)
	snei	r1,r2,#0
	bnez	r1,L109
	nop	; delay slot nop
	lw	r1,8(r30)
	lw	r2,20(r1)
	snei	r1,r2,#0
	bnez	r1,L110
	nop	; delay slot nop
	addi	r1,r0,#-1
	j	L101
	nop	; delay slot nop
	j	L111
	nop	; delay slot nop
L110:
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,4(r30)
	sw	(r1),r2
	jal	_findnode
	nop	; delay slot nop
	addi	r29,r29,#8
	add	r2,r0,r1
	lw	r1,8(r30)
	add	r4,r0,r2
	slli	r3,r4,#0x3
	sub	r3,r3,r2
	slli	r2,r3,#0x2
	addi	r3,r2,#1120
	lw	r2,4(r30)
	add	r3,r2,r3
	sw	12(r1),r3
	lw	r2,8(r30)
	lw	r1,12(r2)
	lw	r2,8(r30)
	lw	r3,(r2)
	addi	r2,r3,#-1
	sw	(r1),r2
	lw	r2,8(r30)
	lw	r1,12(r2)
	lw	r2,8(r30)
	lw	r3,4(r2)
	sw	4(r1),r3
	lw	r2,8(r30)
	lw	r1,12(r2)
	lw	r3,8(r30)
	lw	r2,8(r3)
	srai	r3,r2,#0x1f
	srli	r4,r3,#0x1f
	add	r3,r2,r4
	srai	r2,r3,#0x1
	sw	8(r1),r2
	lw	r1,8(r30)
	lw	r2,12(r1)
	addi	r1,r0,#0
	sw	12(r2),r1
	lw	r1,8(r30)
	lw	r2,12(r1)
	addi	r1,r0,#0
	sw	16(r2),r1
	lw	r1,8(r30)
	lw	r2,12(r1)
	addi	r1,r0,#1
	sw	20(r2),r1
	addi	r29,r29,#-32
	add	r1,r0,r29
	lhi	r2,((LC15)>>16)&0xffff
	addui	r2,r2,(LC15)&0xffff
	sw	(r1),r2
	lw	r2,8(r30)
	lw	r3,12(r2)
	lw	r2,(r3)
	sw	4(r1),r2
	lw	r2,8(r30)
	lw	r3,12(r2)
	lw	r2,4(r3)
	sw	8(r1),r2
	lw	r2,8(r30)
	lw	r3,12(r2)
	lw	r2,8(r3)
	sw	12(r1),r2
	lw	r2,8(r30)
	lw	r3,(r2)
	sw	16(r1),r3
	lw	r2,8(r30)
	lw	r3,4(r2)
	sw	20(r1),r3
	lw	r2,8(r30)
	lw	r3,8(r2)
	sw	24(r1),r3
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#32
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,4(r30)
	sw	(r1),r2
	jal	_findnode
	nop	; delay slot nop
	addi	r29,r29,#8
	add	r2,r0,r1
	lw	r1,8(r30)
	add	r4,r0,r2
	slli	r3,r4,#0x3
	sub	r3,r3,r2
	slli	r2,r3,#0x2
	addi	r3,r2,#1120
	lw	r2,4(r30)
	add	r3,r2,r3
	sw	16(r1),r3
	lw	r2,8(r30)
	lw	r1,16(r2)
	lw	r2,8(r30)
	lw	r3,(r2)
	addi	r2,r3,#-1
	sw	(r1),r2
	lw	r2,8(r30)
	lw	r1,16(r2)
	lw	r2,8(r30)
	lw	r3,8(r30)
	lw	r4,16(r3)
	addi	r3,r0,#32
	lw	r4,(r4)
	sll	r3,r3,r4
	lw	r2,4(r2)
	add	r3,r2,r3
	sw	4(r1),r3
	lw	r2,8(r30)
	lw	r1,16(r2)
	lw	r3,8(r30)
	lw	r2,8(r3)
	srai	r3,r2,#0x1f
	srli	r4,r3,#0x1f
	add	r3,r2,r4
	srai	r2,r3,#0x1
	sw	8(r1),r2
	lw	r1,8(r30)
	lw	r2,16(r1)
	addi	r1,r0,#0
	sw	12(r2),r1
	lw	r1,8(r30)
	lw	r2,16(r1)
	addi	r1,r0,#0
	sw	16(r2),r1
	lw	r1,8(r30)
	lw	r2,16(r1)
	addi	r1,r0,#1
	sw	20(r2),r1
	addi	r29,r29,#-32
	add	r1,r0,r29
	lhi	r2,((LC16)>>16)&0xffff
	addui	r2,r2,(LC16)&0xffff
	sw	(r1),r2
	lw	r2,8(r30)
	lw	r3,16(r2)
	lw	r2,(r3)
	sw	4(r1),r2
	lw	r2,8(r30)
	lw	r3,16(r2)
	lw	r2,4(r3)
	sw	8(r1),r2
	lw	r2,8(r30)
	lw	r3,16(r2)
	lw	r2,8(r3)
	sw	12(r1),r2
	lw	r2,8(r30)
	lw	r3,(r2)
	sw	16(r1),r3
	lw	r2,8(r30)
	lw	r3,4(r2)
	sw	20(r1),r3
	lw	r2,8(r30)
	lw	r3,8(r2)
	sw	24(r1),r3
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#32
	addi	r29,r29,#-16
	add	r1,r0,r29
	lw	r2,(r30)
	sw	(r1),r2
	lhi	r2,((_currentPCB)>>16)&0xffff
	addui	r2,r2,(_currentPCB)&0xffff
	lw	r3,(r2)
	sw	4(r1),r3
	lw	r2,8(r30)
	lw	r3,12(r2)
	sw	8(r1),r3
	lw	r2,12(r30)
	sw	12(r1),r2
	jal	_findtree
	nop	; delay slot nop
	addi	r29,r29,#16
	sw	-12(r30),r1
	lw	r1,-12(r30)
	seqi	r2,r1,#-1
	beqz	r2,L112
	nop	; delay slot nop
	addi	r29,r29,#-16
	add	r1,r0,r29
	lw	r2,(r30)
	sw	(r1),r2
	lhi	r2,((_currentPCB)>>16)&0xffff
	addui	r2,r2,(_currentPCB)&0xffff
	lw	r3,(r2)
	sw	4(r1),r3
	lw	r2,8(r30)
	lw	r3,16(r2)
	sw	8(r1),r3
	lw	r2,12(r30)
	sw	12(r1),r2
	jal	_findtree
	nop	; delay slot nop
	addi	r29,r29,#16
	add	r2,r0,r1
	add	r1,r0,r2
	j	L101
	nop	; delay slot nop
	j	L113
	nop	; delay slot nop
L112:
	lw	r1,-12(r30)
	j	L101
	nop	; delay slot nop
L113:
L111:
	j	L108
	nop	; delay slot nop
L109:
	addi	r29,r29,#-16
	add	r1,r0,r29
	lw	r2,(r30)
	sw	(r1),r2
	lhi	r2,((_currentPCB)>>16)&0xffff
	addui	r2,r2,(_currentPCB)&0xffff
	lw	r3,(r2)
	sw	4(r1),r3
	lw	r2,8(r30)
	lw	r3,12(r2)
	sw	8(r1),r3
	lw	r2,12(r30)
	sw	12(r1),r2
	jal	_findtree
	nop	; delay slot nop
	addi	r29,r29,#16
	sw	-12(r30),r1
	lw	r1,-12(r30)
	seqi	r2,r1,#-1
	beqz	r2,L115
	nop	; delay slot nop
	addi	r29,r29,#-16
	add	r1,r0,r29
	lw	r2,(r30)
	sw	(r1),r2
	lhi	r2,((_currentPCB)>>16)&0xffff
	addui	r2,r2,(_currentPCB)&0xffff
	lw	r3,(r2)
	sw	4(r1),r3
	lw	r2,8(r30)
	lw	r3,16(r2)
	sw	8(r1),r3
	lw	r2,12(r30)
	sw	12(r1),r2
	jal	_findtree
	nop	; delay slot nop
	addi	r29,r29,#16
	add	r2,r0,r1
	add	r1,r0,r2
	j	L101
	nop	; delay slot nop
	j	L116
	nop	; delay slot nop
L115:
	lw	r1,-12(r30)
	j	L101
	nop	; delay slot nop
L116:
L114:
L108:
L101:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _findtree
.data
	.align 2
LC17:
	.ascii "Freeing heap block of size <%d> bytes: virtual address <0x%x> , physic"
	.ascii "al address <0x%x>\n\000"
	.align 2
LC18:
	.ascii "Cannot free the heap block of size<%d> bytes:virtual address <0x%x>, p"
	.ascii "hysicsal address <0x%x>\n\000"
.text
	.align 2
.proc _mfree
.global _mfree
_mfree:
;  Function 'mfree'; 16 bytes of locals, 2 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#32	; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	lw	r1,4(r30)
	snei	r2,r1,#0
	bnez	r2,L118
	nop	; delay slot nop
	addi	r1,r0,#-1
	j	L117
	nop	; delay slot nop
L118:
	lw	r1,4(r30)
	slei	r2,r1,#16383
	bnez	r2,L120
	nop	; delay slot nop
	lw	r1,4(r30)
	sgti	r2,r1,#20479
	bnez	r2,L120
	nop	; delay slot nop
	j	L119
	nop	; delay slot nop
L120:
	addi	r1,r0,#-1
	j	L117
	nop	; delay slot nop
L119:
	lw	r1,4(r30)
	addi	r2,r1,#-16384
	sw	-12(r30),r2
	lw	r1,4(r30)
	sw	-20(r30),r1
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,(r30)
	sw	(r1),r2
	lw	r2,-20(r30)
	sw	4(r1),r2
	jal	_MemoryTranslateUserToSystem
	nop	; delay slot nop
	addi	r29,r29,#8
	sw	-24(r30),r1
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,-12(r30)
	sw	(r1),r2
	lw	r2,(r30)
	addi	r3,r2,#1120
	sw	4(r1),r3
	jal	_freenode
	nop	; delay slot nop
	addi	r29,r29,#8
	sw	-16(r30),r1
	lw	r1,-16(r30)
	snei	r2,r1,#-1
	beqz	r2,L121
	nop	; delay slot nop
	addi	r29,r29,#-16
	add	r1,r0,r29
	lhi	r2,((LC17)>>16)&0xffff
	addui	r2,r2,(LC17)&0xffff
	sw	(r1),r2
	lw	r2,-16(r30)
	sw	4(r1),r2
	lw	r2,-20(r30)
	sw	8(r1),r2
	lw	r2,-24(r30)
	sw	12(r1),r2
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#16
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,(r30)
	addi	r3,r2,#1120
	sw	(r1),r3
	jal	_freetree
	nop	; delay slot nop
	addi	r29,r29,#8
	lw	r1,-16(r30)
	j	L117
	nop	; delay slot nop
	j	L122
	nop	; delay slot nop
L121:
	addi	r29,r29,#-16
	add	r1,r0,r29
	lhi	r2,((LC18)>>16)&0xffff
	addui	r2,r2,(LC18)&0xffff
	sw	(r1),r2
	lw	r2,-16(r30)
	sw	4(r1),r2
	lw	r2,-20(r30)
	sw	8(r1),r2
	lw	r2,-24(r30)
	sw	12(r1),r2
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#16
	addi	r1,r0,#0
	j	L117
	nop	; delay slot nop
L122:
L117:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _mfree
.data
	.align 2
LC19:
	.ascii "Coalesced buddy nodes(order = %d, addr= %d, size= %d) & (order = %d, a"
	.ascii "ddr = %d, size = %d) \000"
	.align 2
LC20:
	.ascii "into the parent node (order= %d, addr= %d, size= %d)\n\000"
	.align 2
LC21:
	.ascii "the other child node is not free now,parent->order = %d, parent->addr "
	.ascii "=%d,parent-> size=%d\n\000"
.text
	.align 2
.proc _freetree
.global _freetree
_freetree:
;  Function 'freetree'; 0 bytes of locals, 2 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#16	; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	lw	r1,(r30)
	lw	r2,12(r1)
	snei	r1,r2,#0
	bnez	r1,L124
	nop	; delay slot nop
	lw	r1,(r30)
	lw	r2,16(r1)
	snei	r1,r2,#0
	bnez	r1,L124
	nop	; delay slot nop
	lw	r1,(r30)
	lw	r2,20(r1)
	seqi	r1,r2,#1
	beqz	r1,L125
	nop	; delay slot nop
	addi	r1,r0,#1
	j	L123
	nop	; delay slot nop
	j	L126
	nop	; delay slot nop
L125:
	addi	r1,r0,#-1
	j	L123
	nop	; delay slot nop
L126:
L124:
	lw	r1,(r30)
	lw	r2,12(r1)
	lw	r1,12(r2)
	snei	r2,r1,#0
	bnez	r2,L127
	nop	; delay slot nop
	lw	r1,(r30)
	lw	r2,12(r1)
	lw	r1,16(r2)
	snei	r2,r1,#0
	bnez	r2,L127
	nop	; delay slot nop
	lw	r1,(r30)
	lw	r2,16(r1)
	lw	r1,12(r2)
	snei	r2,r1,#0
	bnez	r2,L127
	nop	; delay slot nop
	lw	r1,(r30)
	lw	r2,16(r1)
	lw	r1,16(r2)
	snei	r2,r1,#0
	bnez	r2,L127
	nop	; delay slot nop
	lw	r1,(r30)
	lw	r2,12(r1)
	lw	r1,20(r2)
	seqi	r2,r1,#1
	beqz	r2,L128
	nop	; delay slot nop
	lw	r1,(r30)
	lw	r2,16(r1)
	lw	r1,20(r2)
	seqi	r2,r1,#1
	beqz	r2,L128
	nop	; delay slot nop
	addi	r29,r29,#-32
	add	r1,r0,r29
	lhi	r2,((LC19)>>16)&0xffff
	addui	r2,r2,(LC19)&0xffff
	sw	(r1),r2
	lw	r2,(r30)
	lw	r3,12(r2)
	lw	r2,(r3)
	sw	4(r1),r2
	lw	r2,(r30)
	lw	r3,12(r2)
	lw	r2,4(r3)
	sw	8(r1),r2
	lw	r2,(r30)
	lw	r3,12(r2)
	lw	r2,8(r3)
	sw	12(r1),r2
	lw	r2,(r30)
	lw	r3,16(r2)
	lw	r2,(r3)
	sw	16(r1),r2
	lw	r2,(r30)
	lw	r3,16(r2)
	lw	r2,4(r3)
	sw	20(r1),r2
	lw	r2,(r30)
	lw	r3,16(r2)
	lw	r2,8(r3)
	sw	24(r1),r2
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#32
	lw	r1,(r30)
	lw	r2,12(r1)
	addi	r1,r0,#1
	sw	24(r2),r1
	lw	r1,(r30)
	lw	r2,16(r1)
	addi	r1,r0,#1
	sw	24(r2),r1
	lw	r1,(r30)
	addi	r2,r0,#0
	sw	12(r1),r2
	lw	r1,(r30)
	addi	r2,r0,#0
	sw	16(r1),r2
	lw	r1,(r30)
	addi	r2,r0,#1
	sw	20(r1),r2
	addi	r29,r29,#-16
	add	r1,r0,r29
	lhi	r2,((LC20)>>16)&0xffff
	addui	r2,r2,(LC20)&0xffff
	sw	(r1),r2
	lw	r2,(r30)
	lw	r3,(r2)
	sw	4(r1),r3
	lw	r2,(r30)
	lw	r3,4(r2)
	sw	8(r1),r3
	lw	r2,(r30)
	lw	r3,8(r2)
	sw	12(r1),r3
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#16
	addi	r1,r0,#1
	j	L123
	nop	; delay slot nop
	j	L129
	nop	; delay slot nop
L128:
	addi	r29,r29,#-16
	add	r1,r0,r29
	lhi	r2,((LC21)>>16)&0xffff
	addui	r2,r2,(LC21)&0xffff
	sw	(r1),r2
	lw	r2,(r30)
	lw	r3,(r2)
	sw	4(r1),r3
	lw	r2,(r30)
	lw	r3,4(r2)
	sw	8(r1),r3
	lw	r2,(r30)
	lw	r3,8(r2)
	sw	12(r1),r3
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#16
	addi	r1,r0,#-1
	j	L123
	nop	; delay slot nop
L129:
	j	L130
	nop	; delay slot nop
L127:
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,(r30)
	lw	r3,12(r2)
	sw	(r1),r3
	jal	_freetree
	nop	; delay slot nop
	addi	r29,r29,#8
	seqi	r2,r1,#1
	beqz	r2,L131
	nop	; delay slot nop
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,(r30)
	lw	r3,16(r2)
	sw	(r1),r3
	jal	_freetree
	nop	; delay slot nop
	addi	r29,r29,#8
	seqi	r2,r1,#1
	beqz	r2,L131
	nop	; delay slot nop
	addi	r29,r29,#-32
	add	r1,r0,r29
	lhi	r2,((LC19)>>16)&0xffff
	addui	r2,r2,(LC19)&0xffff
	sw	(r1),r2
	lw	r2,(r30)
	lw	r3,12(r2)
	lw	r2,(r3)
	sw	4(r1),r2
	lw	r2,(r30)
	lw	r3,12(r2)
	lw	r2,4(r3)
	sw	8(r1),r2
	lw	r2,(r30)
	lw	r3,12(r2)
	lw	r2,8(r3)
	sw	12(r1),r2
	lw	r2,(r30)
	lw	r3,16(r2)
	lw	r2,(r3)
	sw	16(r1),r2
	lw	r2,(r30)
	lw	r3,16(r2)
	lw	r2,4(r3)
	sw	20(r1),r2
	lw	r2,(r30)
	lw	r3,16(r2)
	lw	r2,8(r3)
	sw	24(r1),r2
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#32
	lw	r1,(r30)
	lw	r2,12(r1)
	addi	r1,r0,#1
	sw	24(r2),r1
	lw	r1,(r30)
	lw	r2,16(r1)
	addi	r1,r0,#1
	sw	24(r2),r1
	lw	r1,(r30)
	addi	r2,r0,#0
	sw	12(r1),r2
	lw	r1,(r30)
	addi	r2,r0,#0
	sw	16(r1),r2
	lw	r1,(r30)
	addi	r2,r0,#1
	sw	20(r1),r2
	addi	r29,r29,#-16
	add	r1,r0,r29
	lhi	r2,((LC20)>>16)&0xffff
	addui	r2,r2,(LC20)&0xffff
	sw	(r1),r2
	lw	r2,(r30)
	lw	r3,(r2)
	sw	4(r1),r3
	lw	r2,(r30)
	lw	r3,4(r2)
	sw	8(r1),r3
	lw	r2,(r30)
	lw	r3,8(r2)
	sw	12(r1),r3
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#16
	addi	r1,r0,#1
	j	L123
	nop	; delay slot nop
	j	L132
	nop	; delay slot nop
L131:
	addi	r1,r0,#-1
	j	L123
	nop	; delay slot nop
L132:
L130:
L123:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _freetree
.data
	.align 2
LC22:
	.ascii "Free the block: order= %d, addr= %d,size= %d\n\000"
.text
	.align 2
.proc _freenode
.global _freenode
_freenode:
;  Function 'freenode'; 8 bytes of locals, 2 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#24	; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	lw	r1,4(r30)
	lw	r2,12(r1)
	snei	r1,r2,#0
	bnez	r1,L134
	nop	; delay slot nop
	lw	r1,4(r30)
	lw	r2,16(r1)
	snei	r1,r2,#0
	bnez	r1,L134
	nop	; delay slot nop
	lw	r1,4(r30)
	lw	r2,4(r1)
	lw	r1,(r30)
	seq	r2,r2,r1
	beqz	r2,L135
	nop	; delay slot nop
	lw	r1,4(r30)
	addi	r2,r0,#1
	sw	20(r1),r2
	addi	r29,r29,#-16
	add	r1,r0,r29
	lhi	r2,((LC22)>>16)&0xffff
	addui	r2,r2,(LC22)&0xffff
	sw	(r1),r2
	lw	r2,4(r30)
	lw	r3,(r2)
	sw	4(r1),r3
	lw	r2,4(r30)
	lw	r3,4(r2)
	sw	8(r1),r3
	lw	r2,4(r30)
	lw	r3,8(r2)
	sw	12(r1),r3
	jal	_printf
	nop	; delay slot nop
	addi	r29,r29,#16
	lw	r2,4(r30)
	lw	r1,8(r2)
	j	L133
	nop	; delay slot nop
	j	L136
	nop	; delay slot nop
L135:
	addi	r1,r0,#-1
	j	L133
	nop	; delay slot nop
L136:
	j	L137
	nop	; delay slot nop
L134:
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,(r30)
	sw	(r1),r2
	lw	r2,4(r30)
	lw	r3,12(r2)
	sw	4(r1),r3
	jal	_freenode
	nop	; delay slot nop
	addi	r29,r29,#8
	sw	-12(r30),r1
	lw	r1,-12(r30)
	seqi	r2,r1,#-1
	beqz	r2,L138
	nop	; delay slot nop
	addi	r29,r29,#-8
	add	r1,r0,r29
	lw	r2,(r30)
	sw	(r1),r2
	lw	r2,4(r30)
	lw	r3,16(r2)
	sw	4(r1),r3
	jal	_freenode
	nop	; delay slot nop
	addi	r29,r29,#8
	add	r2,r0,r1
	add	r1,r0,r2
	j	L133
	nop	; delay slot nop
	j	L139
	nop	; delay slot nop
L138:
	lw	r1,-12(r30)
	j	L133
	nop	; delay slot nop
L139:
L137:
L133:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _freenode
.data
	.align 2
_freemap:
	.space 0
	.align 2
_pagestart:
	.space 4
	.align 2
_freemapmax:
	.space 4
.text
	.align 2
.proc _invert
_invert:
;  Function 'invert'; 0 bytes of locals, 3 regs to save.
	sw	-4(r29),r30	; push fp
	add	r30,r0,r29	; fp = sp
	sw	-8(r29),r31	; push ret addr
	subui	r29,r29,#24	; alloc local storage
	sw	0(r29),r2
	sw	4(r29),r3
	sw	8(r29),r4
	lw	r2,(r30)
	lhi	r1,((_negativeone)>>16)&0xffff
	addui	r1,r1,(_negativeone)&0xffff
	lw	r4,(r1)
	xor	r3,r2,r4
	add	r1,r0,r3
	j	L12
	nop	; delay slot nop
L12:
	lw	r2,0(r29)
	lw	r3,4(r29)
	lw	r4,8(r29)
	lw	r31,-8(r30)
	add	r29,r0,r30
	lw	r30,-4(r30)
	jr	r31
	nop
.endproc _invert
