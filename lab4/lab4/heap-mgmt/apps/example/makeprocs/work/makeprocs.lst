 line   address	contents
    1                      ; Linked by DLX-LD.
    2                      ; MemSize 24576
    3                      ; Data size: 490
    4                      ; Text size: 4656
    5                      ; Stack size: 8192
    6  00000000          	.text 0x1000
    7  00001000          	.data 0x3000
    8                      ; Compiled by GCC
    9  00003000          	.text
   10  00001000          	.align 2
   11  00001000          	.proc _isspace
   12  00001000          	.global _isspace
   13  00001000          	_isspace:
   14                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
   15  00001000  afbefffc	sw	-4(r29),r30; push fp
   16  00001004  001df020	add	r30,r0,r29; fp = sp
   17  00001008  afbffff8	sw	-8(r29),r31; push ret addr
   18  0000100c  2fbd0010	subui	r29,r29,#16; alloc local storage
   19  00001010  afa20000	sw	0(r29),r2
   20  00001014  83c20003	lb	r2,3(r30)
   21  00001018  201f0000	addi	r31,r0,#0
   22  0000101c  304100ff	andi	r1,r2,#0x00ff
   23  00001020  60210020	seqi	r1,r1,#32
   24  00001024  14200018	bnez	r1,L6_LF0
   25  00001028  54000000	nop; not filled.
   26  0000102c  2041fff7	addi	r1,r2,#-9
   27  00001030  302100ff	andi	r1,r1,#0x00ff
   28  00001034  70210001	sleui	r1,r1,#1
   29  00001038  10200008	beqz	r1,L5_LF0
   30  0000103c  54000000	nop; not filled.
   31  00001040          	L6_LF0:
   32  00001040  201f0001	addi	r31,r0,#1
   33  00001044          	L5_LF0:
   34  00001044  001f0820	add	r1,r0,r31
   35  00001048  8fa20000	lw	r2,0(r29)
   36  0000104c  8fdffff8	lw	r31,-8(r30)
   37  00001050  001ee820	add	r29,r0,r30
   38  00001054  8fdefffc	lw	r30,-4(r30)
   39  00001058  4be00000	jr	r31
   40  0000105c  54000000	nop
   41  00001060          	.endproc _isspace
   42  00001060          	.align 2
   43  00001060          	.proc _isxdigit
   44  00001060          	.global _isxdigit
   45  00001060          	_isxdigit:
   46                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
   47  00001060  afbefffc	sw	-4(r29),r30; push fp
   48  00001064  001df020	add	r30,r0,r29; fp = sp
   49  00001068  afbffff8	sw	-8(r29),r31; push ret addr
   50  0000106c  2fbd0010	subui	r29,r29,#16; alloc local storage
   51  00001070  afa20000	sw	0(r29),r2
   52  00001074  83df0003	lb	r31,3(r30)
   53  00001078  20020000	addi	r2,r0,#0
   54  0000107c  23e1ffd0	addi	r1,r31,#-48
   55  00001080  302100ff	andi	r1,r1,#0x00ff
   56  00001084  70210009	sleui	r1,r1,#9
   57  00001088  14200028	bnez	r1,L12_LF0
   58  0000108c  54000000	nop; not filled.
   59  00001090  23e1ff9f	addi	r1,r31,#-97
   60  00001094  302100ff	andi	r1,r1,#0x00ff
   61  00001098  70210005	sleui	r1,r1,#5
   62  0000109c  14200014	bnez	r1,L12_LF0
   63  000010a0  54000000	nop; not filled.
   64  000010a4  33e100ff	andi	r1,r31,#0x00ff
   65  000010a8  64210041	snei	r1,r1,#65
   66  000010ac  14200008	bnez	r1,L11_LF0
   67  000010b0  54000000	nop; not filled.
   68  000010b4          	L12_LF0:
   69  000010b4  20020001	addi	r2,r0,#1
   70  000010b8          	L11_LF0:
   71  000010b8  00020820	add	r1,r0,r2
   72  000010bc  8fa20000	lw	r2,0(r29)
   73  000010c0  8fdffff8	lw	r31,-8(r30)
   74  000010c4  001ee820	add	r29,r0,r30
   75  000010c8  8fdefffc	lw	r30,-4(r30)
   76  000010cc  4be00000	jr	r31
   77  000010d0  54000000	nop
   78  000010d4          	.endproc _isxdigit
   79  000010d4          	.data
   80  00003000          	.align 2
   81  00003000          	LC0_LF0:
   82  00003000  55736167	.ascii "Usage: %s <number of hello world processes to create>\n\000"
   82  00003004  653a2025	
   82  00003008  73203c6e	
   82  0000300c  756d6265	
   82  00003010  72206f66	
   82  00003014  2068656c	
   82  00003018  6c6f2077	
   82  0000301c  6f726c64	
   82  00003020  2070726f	
   82  00003024  63657373	
   82  00003028  65732074	
   82  0000302c  6f206372	
   82  00003030  65617465	
   82  00003034  3e0a00  	
   83  00003037          	.align 2
   84  00003038          	LC1_LF0:
   85  00003038  6d616b65	.ascii "makeprocs (%d): Creating %d hello_world processes\n\000"
   85  0000303c  70726f63	
   85  00003040  73202825	
   85  00003044  64293a20	
   85  00003048  43726561	
   85  0000304c  74696e67	
   85  00003050  20256420	
   85  00003054  68656c6c	
   85  00003058  6f5f776f	
   85  0000305c  726c6420	
   85  00003060  70726f63	
   85  00003064  65737365	
   85  00003068  730a00  	
   86  0000306b          	.align 2
   87  0000306c          	LC2_LF0:
   88  0000306c  6d616b65	.ascii "makeprocs (%d): Bad sem_create\n\000"
   88  00003070  70726f63	
   88  00003074  73202825	
   88  00003078  64293a20	
   88  0000307c  42616420	
   88  00003080  73656d5f	
   88  00003084  63726561	
   88  00003088  74650a00	
   89  0000308c          	.align 2
   90  0000308c          	LC3_LF0:
   91  0000308c  2d2d2d2d	.ascii "----------------------------------------------------------------------"
   91  00003090  2d2d2d2d	
   91  00003094  2d2d2d2d	
   91  00003098  2d2d2d2d	
   91  0000309c  2d2d2d2d	
   91  000030a0  2d2d2d2d	
   91  000030a4  2d2d2d2d	
   91  000030a8  2d2d2d2d	
   91  000030ac  2d2d2d2d	
   91  000030b0  2d2d2d2d	
   91  000030b4  2d2d2d2d	
   91  000030b8  2d2d2d2d	
   91  000030bc  2d2d2d2d	
   91  000030c0  2d2d2d2d	
   91  000030c4  2d2d2d2d	
   91  000030c8  2d2d2d2d	
   91  000030cc  2d2d2d2d	
   91  000030d0  2d2d    	
   92  000030d2  2d2d2d2d	.ascii "---------------\n\000"
   92  000030d6  2d2d2d2d	
   92  000030da  2d2d2d2d	
   92  000030de  2d2d2d0a	
   92  000030e2  00      	
   93  000030e3          	.align 2
   94  000030e4          	LC4_LF0:
   95  000030e4  6d616b65	.ascii "makeprocs (%d): Creating %d hello world\'s in a row, but only one runs"
   95  000030e8  70726f63	
   95  000030ec  73202825	
   95  000030f0  64293a20	
   95  000030f4  43726561	
   95  000030f8  74696e67	
   95  000030fc  20256420	
   95  00003100  68656c6c	
   95  00003104  6f20776f	
   95  00003108  726c6427	
   95  0000310c  7320696e	
   95  00003110  20612072	
   95  00003114  6f772c20	
   95  00003118  62757420	
   95  0000311c  6f6e6c79	
   95  00003120  206f6e65	
   95  00003124  2072756e	
   95  00003128  73      	
   96  00003129  20617420	.ascii " at a time\n\000"
   96  0000312d  61207469	
   96  00003131  6d650a00	
   97  00003135          	.align 2
   98  00003138          	LC5_LF0:
   99  00003138  6d616b65	.ascii "makeprocs (%d): Creating hello world #%d\n\000"
   99  0000313c  70726f63	
   99  00003140  73202825	
   99  00003144  64293a20	
   99  00003148  43726561	
   99  0000314c  74696e67	
   99  00003150  2068656c	
   99  00003154  6c6f2077	
   99  00003158  6f726c64	
   99  0000315c  20232564	
   99  00003160  0a00    	
  100  00003162          	.align 2
  101  00003164          	LC6_LF0:
  102  00003164  68656c6c	.ascii "hello_world.dlx.obj\000"
  102  00003168  6f5f776f	
  102  0000316c  726c642e	
  102  00003170  646c782e	
  102  00003174  6f626a00	
  103  00003178          	.align 2
  104  00003178          	LC7_LF0:
  105  00003178  42616420	.ascii "Bad semaphore s_procs_completed (%d) in %s\n\000"
  105  0000317c  73656d61	
  105  00003180  70686f72	
  105  00003184  6520735f	
  105  00003188  70726f63	
  105  0000318c  735f636f	
  105  00003190  6d706c65	
  105  00003194  74656420	
  105  00003198  28256429	
  105  0000319c  20696e20	
  105  000031a0  25730a00	
  106  000031a4          	.align 2
  107  000031a4          	LC8_LF0:
  108  000031a4  6d616b65	.ascii "makeprocs (%d): All other processes completed, exiting main process.\n"
  108  000031a8  70726f63	
  108  000031ac  73202825	
  108  000031b0  64293a20	
  108  000031b4  416c6c20	
  108  000031b8  6f746865	
  108  000031bc  72207072	
  108  000031c0  6f636573	
  108  000031c4  73657320	
  108  000031c8  636f6d70	
  108  000031cc  6c657465	
  108  000031d0  642c2065	
  108  000031d4  78697469	
  108  000031d8  6e67206d	
  108  000031dc  61696e20	
  108  000031e0  70726f63	
  108  000031e4  6573732e	
  108  000031e8  0a      	
  109  000031e9  00      	.ascii "\000"
  110  000031ea          	.text
  111  000010d4          	.align 2
  112  000010d4          	.proc _main
  113  000010d4          	.global _main
  114  000010d4          	_main:
  115                      ;  Function 'main'; 16 bytes of locals, 0 regs to save.
  116  000010d4  afbefffc	sw	-4(r29),r30; push fp
  117  000010d8  001df020	add	r30,r0,r29; fp = sp
  118  000010dc  afbffff8	sw	-8(r29),r31; push ret addr
  119  000010e0  2fbd0018	subui	r29,r29,#24; alloc local storage
  120  000010e4  8fc20000	lw	r2,(r30)
  121  000010e8  8fc60004	lw	r6,4(r30)
  122  000010ec  0c001138	jal	___main
  123  000010f0  54000000	nop; not filled.
  124  000010f4  64410002	snei	r1,r2,#2
  125  000010f8  10200030	beqz	r1,L14_LF0
  126  000010fc  54000000	nop; not filled.
  127  00001100  23bdfff8	addi	r29,r29,#-8
  128  00001104  3c070000	lhi	r7,((LC0_LF0)>>16)&0xffff
  129  00001108  24e73000	addui	r7,r7,(LC0_LF0)&0xffff
  130  0000110c  afa70000	sw	(r29),r7
  131  00001110  8cc10000	lw	r1,(r6)
  132  00001114  afa10004	sw	4(r29),r1
  133  00001118  0c00024c	jal	_Printf
  134  0000111c  54000000	nop; not filled.
  135  00001120  0c00034c	jal	_Exit
  136  00001124  54000000	nop; not filled.
  137  00001128  23bd0008	addi	r29,r29,#8
  138  0000112c          	L14_LF0:
  139  0000112c  23bdfff0	addi	r29,r29,#-16
  140  00001130  8cc70004	lw	r7,4(r6)
  141  00001134  afa70000	sw	(r29),r7
  142  00001138  20070000	addi	r7,r0,#0
  143  0000113c  afa70004	sw	4(r29),r7
  144  00001140  2007000a	addi	r7,r0,#10
  145  00001144  afa70008	sw	8(r29),r7
  146  00001148  0c000be0	jal	_dstrtol
  147  0000114c  54000000	nop; not filled.
  148  00001150  00012020	add	r4,r0,r1
  149  00001154  0c00021c	jal	_getpid
  150  00001158  54000000	nop; not filled.
  151  0000115c  3c070000	lhi	r7,((LC1_LF0)>>16)&0xffff
  152  00001160  24e73038	addui	r7,r7,(LC1_LF0)&0xffff
  153  00001164  afa70000	sw	(r29),r7
  154  00001168  afa10004	sw	4(r29),r1
  155  0000116c  afa40008	sw	8(r29),r4
  156  00001170  0c0001f4	jal	_Printf
  157  00001174  54000000	nop; not filled.
  158  00001178  20010001	addi	r1,r0,#1
  159  0000117c  00240822	sub	r1,r1,r4
  160  00001180  afa10000	sw	(r29),r1
  161  00001184  0c00021c	jal	_sem_create
  162  00001188  54000000	nop; not filled.
  163  0000118c  00011820	add	r3,r0,r1
  164  00001190  23bd0010	addi	r29,r29,#16
  165  00001194  6061ffff	seqi	r1,r3,#-1
  166  00001198  10200034	beqz	r1,L15_LF0
  167  0000119c  54000000	nop; not filled.
  168  000011a0  0c0001d0	jal	_getpid
  169  000011a4  54000000	nop; not filled.
  170  000011a8  23bdfff8	addi	r29,r29,#-8
  171  000011ac  3c070000	lhi	r7,((LC2_LF0)>>16)&0xffff
  172  000011b0  24e7306c	addui	r7,r7,(LC2_LF0)&0xffff
  173  000011b4  afa70000	sw	(r29),r7
  174  000011b8  afa10004	sw	4(r29),r1
  175  000011bc  0c0001a8	jal	_Printf
  176  000011c0  54000000	nop; not filled.
  177  000011c4  0c0002a8	jal	_Exit
  178  000011c8  54000000	nop; not filled.
  179  000011cc  23bd0008	addi	r29,r29,#8
  180  000011d0          	L15_LF0:
  181  000011d0  23bdfff8	addi	r29,r29,#-8
  182  000011d4  afa30000	sw	(r29),r3
  183  000011d8  23c5ffe8	addi	r5,r30,#-24
  184  000011dc  afa50004	sw	4(r29),r5
  185  000011e0  0c0009bc	jal	_ditoa
  186  000011e4  54000000	nop; not filled.
  187  000011e8  3c070000	lhi	r7,((LC3_LF0)>>16)&0xffff
  188  000011ec  24e7308c	addui	r7,r7,(LC3_LF0)&0xffff
  189  000011f0  afa70000	sw	(r29),r7
  190  000011f4  0c000170	jal	_Printf
  191  000011f8  54000000	nop; not filled.
  192  000011fc  0c000174	jal	_getpid
  193  00001200  54000000	nop; not filled.
  194  00001204  23bdfff8	addi	r29,r29,#-8
  195  00001208  3c070000	lhi	r7,((LC4_LF0)>>16)&0xffff
  196  0000120c  24e730e4	addui	r7,r7,(LC4_LF0)&0xffff
  197  00001210  afa70000	sw	(r29),r7
  198  00001214  afa10004	sw	4(r29),r1
  199  00001218  afa40008	sw	8(r29),r4
  200  0000121c  0c000148	jal	_Printf
  201  00001220  54000000	nop; not filled.
  202  00001224  20020000	addi	r2,r0,#0
  203  00001228  23bd0010	addi	r29,r29,#16
  204  0000122c  0044082a	slt	r1,r2,r4
  205  00001230  102000a8	beqz	r1,L17_LF0
  206  00001234  54000000	nop; not filled.
  207  00001238          	L19_LF0:
  208  00001238  0c000138	jal	_getpid
  209  0000123c  54000000	nop; not filled.
  210  00001240  23bdfff0	addi	r29,r29,#-16
  211  00001244  3c070000	lhi	r7,((LC5_LF0)>>16)&0xffff
  212  00001248  24e73138	addui	r7,r7,(LC5_LF0)&0xffff
  213  0000124c  afa70000	sw	(r29),r7
  214  00001250  afa10004	sw	4(r29),r1
  215  00001254  afa20008	sw	8(r29),r2
  216  00001258  0c00010c	jal	_Printf
  217  0000125c  54000000	nop; not filled.
  218  00001260  3c070000	lhi	r7,((LC6_LF0)>>16)&0xffff
  219  00001264  24e73164	addui	r7,r7,(LC6_LF0)&0xffff
  220  00001268  afa70000	sw	(r29),r7
  221  0000126c  afa50004	sw	4(r29),r5
  222  00001270  20070000	addi	r7,r0,#0
  223  00001274  afa70008	sw	8(r29),r7
  224  00001278  0c000104	jal	_process_create
  225  0000127c  54000000	nop; not filled.
  226  00001280  afa30000	sw	(r29),r3
  227  00001284  0c000128	jal	_sem_wait
  228  00001288  54000000	nop; not filled.
  229  0000128c  23bd0010	addi	r29,r29,#16
  230  00001290  64210001	snei	r1,r1,#1
  231  00001294  10200034	beqz	r1,L18_LF0
  232  00001298  54000000	nop; not filled.
  233  0000129c  23bdfff0	addi	r29,r29,#-16
  234  000012a0  3c070000	lhi	r7,((LC7_LF0)>>16)&0xffff
  235  000012a4  24e73178	addui	r7,r7,(LC7_LF0)&0xffff
  236  000012a8  afa70000	sw	(r29),r7
  237  000012ac  afa30004	sw	4(r29),r3
  238  000012b0  8cc70000	lw	r7,(r6)
  239  000012b4  afa70008	sw	8(r29),r7
  240  000012b8  0c0000ac	jal	_Printf
  241  000012bc  54000000	nop; not filled.
  242  000012c0  0c0001ac	jal	_Exit
  243  000012c4  54000000	nop; not filled.
  244  000012c8  23bd0010	addi	r29,r29,#16
  245  000012cc          	L18_LF0:
  246  000012cc  20420001	addi	r2,r2,#1
  247  000012d0  0044082a	slt	r1,r2,r4
  248  000012d4  1420ff60	bnez	r1,L19_LF0
  249  000012d8  54000000	nop; not filled.
  250  000012dc          	L17_LF0:
  251  000012dc  23bdfff8	addi	r29,r29,#-8
  252  000012e0  3c070000	lhi	r7,((LC3_LF0)>>16)&0xffff
  253  000012e4  24e7308c	addui	r7,r7,(LC3_LF0)&0xffff
  254  000012e8  afa70000	sw	(r29),r7
  255  000012ec  0c000078	jal	_Printf
  256  000012f0  54000000	nop; not filled.
  257  000012f4  0c00007c	jal	_getpid
  258  000012f8  54000000	nop; not filled.
  259  000012fc  3c070000	lhi	r7,((LC8_LF0)>>16)&0xffff
  260  00001300  24e731a4	addui	r7,r7,(LC8_LF0)&0xffff
  261  00001304  afa70000	sw	(r29),r7
  262  00001308  afa10004	sw	4(r29),r1
  263  0000130c  0c000058	jal	_Printf
  264  00001310  54000000	nop; not filled.
  265  00001314  23bd0008	addi	r29,r29,#8
  266  00001318  0c000f00	jal	_exit
  267  0000131c  54000000	nop
  268  00001320          	.endproc _main
  269                      ;;;
  270                      ;;; Stub functions for DLX traps.
  271                      ;;;
  272                      ;;; Ethan L. Miller, 1999.  Released to the public domain.
  273                      ;;;
  274                      ;;; The traps such as Open and Close
  275                      ;;; (note the capital letters) are for use by user programs.  The traps
  276                      ;;; with names such as open and close (lower case) are for use by the OS.
  277                      ;;;
  280  00001320          	.align 2
  282                      ;;; The following are the traps to be used by user-level programs
  283                      ;;;
  285  00001320          	.align 2
  286  00001320          	.proc _Open
  287  00001320          	.global _Open
  288  00001320          	_Open:
  289                      ;;; Note that trap #0x213 actually causes a trap vector in the OS of
  290                      ;;; 0x1213.  The same is true for other user traps.  Thus, a user trap
  291                      ;;; with trap #0x240 will result in a trap vector of 0x1240 in the OS.
  292  00001320  44000213	trap	#0x213
  293  00001324  4be00000	jr	r31
  294  00001328  54000000	nop
  295  0000132c          	.endproc _Open
  297  0000132c          	.proc _Close
  298  0000132c          	.global _Close
  299  0000132c          	_Close:
  300  0000132c  44000214	trap	#0x214
  301  00001330  4be00000	jr	r31
  302  00001334  54000000	nop
  303  00001338          	.endproc _Close
  305  00001338          	.proc _Read
  306  00001338          	.global _Read
  307  00001338          	_Read:
  308  00001338  44000210	trap	#0x210
  309  0000133c  4be00000	jr	r31
  310  00001340  54000000	nop
  311  00001344          	.endproc _Read
  313  00001344          	.proc _Write
  314  00001344          	.global _Write
  315  00001344          	_Write:
  316  00001344  44000211	trap	#0x211
  317  00001348  4be00000	jr	r31
  318  0000134c  54000000	nop
  319  00001350          	.endproc _Write
  321  00001350          	.proc _Lseek
  322  00001350          	.global _Lseek
  323  00001350          	_Lseek:
  324  00001350  44000212	trap	#0x212
  325  00001354  4be00000	jr	r31
  326  00001358  54000000	nop
  327  0000135c          	.endproc _Lseek
  329  0000135c          	.proc _Putchar
  330  0000135c          	.global _Putchar
  331  0000135c          	_Putchar:
  332  0000135c  44000280	trap	#0x280
  333  00001360  4be00000	jr	r31
  334  00001364  54000000	nop
  335  00001368          	.endproc _Putchar
  337  00001368          	.proc _Printf
  338  00001368          	.global _Printf
  339  00001368          	_Printf:
  340  00001368  44000201	trap	#0x201
  341  0000136c  4be00000	jr	r31
  342  00001370  54000000	nop
  343  00001374          	.endproc _Printf
  345  00001374          	.proc _getpid
  346  00001374          	.global _getpid
  347  00001374          	_getpid:
  348  00001374  44000431	trap	#0x431
  349  00001378  4be00000	jr	r31
  350  0000137c  54000000	nop
  351  00001380          	.endproc _getpid
  353  00001380          	.proc _process_create
  354  00001380          	.global _process_create
  355  00001380          	_process_create:
  356  00001380  44000432	trap	#0x432
  357  00001384  4be00000	jr	r31
  358  00001388  54000000	nop
  359  0000138c          	.endproc _process_create
  361  0000138c          	.proc _shmget
  362  0000138c          	.global _shmget
  363  0000138c          	_shmget:
  364  0000138c  44000440	trap	#0x440
  365  00001390  4be00000	jr	r31
  366  00001394  54000000	nop
  367  00001398          	.endproc _shmget
  369  00001398          	.proc _shmat
  370  00001398          	.global _shmat
  371  00001398          	_shmat:
  372  00001398  44000441	trap	#0x441
  373  0000139c  4be00000	jr	r31
  374  000013a0  54000000	nop
  375  000013a4          	.endproc _shmat
  377  000013a4          	.proc _sem_create
  378  000013a4          	.global _sem_create
  379  000013a4          	_sem_create:
  380  000013a4  44000450	trap	#0x450
  381  000013a8  4be00000	jr	r31
  382  000013ac  54000000	nop
  383  000013b0          	.endproc _sem_create
  385  000013b0          	.proc _sem_wait
  386  000013b0          	.global _sem_wait
  387  000013b0          	_sem_wait:
  388  000013b0  44000451	trap	#0x451
  389  000013b4  4be00000	jr	r31
  390  000013b8  54000000	nop
  391  000013bc          	.endproc _sem_wait
  393  000013bc          	.proc _sem_signal
  394  000013bc          	.global _sem_signal
  395  000013bc          	_sem_signal:
  396  000013bc  44000452	trap	#0x452
  397  000013c0  4be00000	jr	r31
  398  000013c4  54000000	nop
  399  000013c8          	.endproc _sem_signal
  401  000013c8          	.proc _lock_create
  402  000013c8          	.global _lock_create
  403  000013c8          	_lock_create:
  404  000013c8  44000453	trap	#0x453
  405  000013cc  4be00000	jr	r31
  406  000013d0  54000000	nop
  407  000013d4          	.endproc _lock_create
  409  000013d4          	.proc _lock_acquire
  410  000013d4          	.global _lock_acquire
  411  000013d4          	_lock_acquire:
  412  000013d4  44000454	trap	#0x454
  413  000013d8  4be00000	jr	r31
  414  000013dc  54000000	nop
  415  000013e0          	.endproc _lock_acquire
  417  000013e0          	.proc _lock_release
  418  000013e0          	.global _lock_release
  419  000013e0          	_lock_release:
  420  000013e0  44000455	trap	#0x455
  421  000013e4  4be00000	jr	r31
  422  000013e8  54000000	nop
  423  000013ec          	.endproc _lock_release
  425  000013ec          	.proc _cond_create
  426  000013ec          	.global _cond_create
  427  000013ec          	_cond_create:
  428  000013ec  44000456	trap	#0x456
  429  000013f0  4be00000	jr	r31
  430  000013f4  54000000	nop
  431  000013f8          	.endproc _cond_create
  433  000013f8          	.proc _cond_wait
  434  000013f8          	.global _cond_wait
  435  000013f8          	_cond_wait:
  436  000013f8  44000457	trap	#0x457
  437  000013fc  4be00000	jr	r31
  438  00001400  54000000	nop
  439  00001404          	.endproc _cond_wait
  441  00001404          	.proc _cond_signal
  442  00001404          	.global _cond_signal
  443  00001404          	_cond_signal:
  444  00001404  44000458	trap	#0x458
  445  00001408  4be00000	jr	r31
  446  0000140c  54000000	nop
  447  00001410          	.endproc _cond_signal
  449  00001410          	.proc _cond_broadcast
  450  00001410          	.global _cond_broadcast
  451  00001410          	_cond_broadcast:
  452  00001410  44000459	trap	#0x459
  453  00001414  4be00000	jr	r31
  454  00001418  54000000	nop
  455  0000141c          	.endproc _cond_broadcast
  457  0000141c          	.proc _mbox_create
  458  0000141c          	.global _mbox_create
  459  0000141c          	_mbox_create:
  460  0000141c  44000460	trap	#0x460
  461  00001420  4be00000	jr	r31
  462  00001424  54000000	nop
  463  00001428          	.endproc _mbox_create
  465  00001428          	.proc _mbox_open
  466  00001428          	.global _mbox_open
  467  00001428          	_mbox_open:
  468  00001428  44000461	trap	#0x461
  469  0000142c  4be00000	jr	r31
  470  00001430  54000000	nop
  471  00001434          	.endproc _mbox_open
  473  00001434          	.proc _mbox_close
  474  00001434          	.global _mbox_close
  475  00001434          	_mbox_close:
  476  00001434  44000462	trap	#0x462
  477  00001438  4be00000	jr	r31
  478  0000143c  54000000	nop
  479  00001440          	.endproc _mbox_close
  481  00001440          	.proc _mbox_send
  482  00001440          	.global _mbox_send
  483  00001440          	_mbox_send:
  484  00001440  44000463	trap	#0x463
  485  00001444  4be00000	jr	r31
  486  00001448  54000000	nop
  487  0000144c          	.endproc _mbox_send
  489  0000144c          	.proc _mbox_recv
  490  0000144c          	.global _mbox_recv
  491  0000144c          	_mbox_recv:
  492  0000144c  44000464	trap	#0x464
  493  00001450  4be00000	jr	r31
  494  00001454  54000000	nop
  495  00001458          	.endproc _mbox_recv
  497  00001458          	.proc _sleep
  498  00001458          	.global _sleep
  499  00001458          	_sleep:
  500  00001458  44000465	trap	#0x465
  501  0000145c  4be00000	jr	r31
  502  00001460  54000000	nop
  503  00001464          	.endproc _sleep
  505  00001464          	.proc _yield
  506  00001464          	.global _yield
  507  00001464          	_yield:
  508  00001464  44000466	trap	#0x466
  509  00001468  4be00000	jr	r31
  510  0000146c  54000000	nop
  511  00001470          	.endproc _yield
  514  00001470          	.proc _Exit
  515  00001470          	.global _Exit
  516  00001470          	_Exit:
  517  00001470  44000500	trap	#0x500
  518  00001474  4be00000	jr	r31
  519  00001478  54000000	nop
  520  0000147c          	.endproc _Exit
  523  0000147c          	.proc _malloc
  524  0000147c          	.global _malloc
  525  0000147c          	_malloc:
  526  0000147c  44000467	trap	#0x467
  527  00001480  4be00000	jr	r31
  528  00001484          	.endproc _malloc
  531  00001484          	.proc _mfree
  532  00001484          	.global _mfree
  533  00001484          	_mfree:
  534  00001484  44000468	trap	#0x468
  535  00001488  4be00000	jr	r31
  536  0000148c          	.endproc _mfree
  537                      ; Compiled by GCC
  539  0000148c          	.align 2
  540  0000148c          	.proc _isspace
  541  0000148c          	.global _isspace
  542  0000148c          	_isspace:
  543                      ;  Function 'isspace'; 0 bytes of locals, 3 regs to save.
  544  0000148c  afbefffc	sw	-4(r29),r30; push fp
  545  00001490  001df020	add	r30,r0,r29; fp = sp
  546  00001494  afbffff8	sw	-8(r29),r31; push ret addr
  547  00001498  2fbd0018	subui	r29,r29,#24; alloc local storage
  548  0000149c  afa20000	sw	0(r29),r2
  549  000014a0  afa30004	sw	4(r29),r3
  550  000014a4  afa40008	sw	8(r29),r4
  551  000014a8  83c20003	lb	r2,3(r30)
  552  000014ac  20010000	addi	r1,r0,#0
  553  000014b0  304300ff	andi	r3,r2,#0x00ff
  554  000014b4  60640020	seqi	r4,r3,#32
  555  000014b8  1480002c	bnez	r4,L3_LF2
  556  000014bc  54000000	nop; delay slot nop
  557  000014c0  304300ff	andi	r3,r2,#0x00ff
  558  000014c4  60640009	seqi	r4,r3,#9
  559  000014c8  1480001c	bnez	r4,L3_LF2
  560  000014cc  54000000	nop; delay slot nop
  561  000014d0  304300ff	andi	r3,r2,#0x00ff
  562  000014d4  6064000a	seqi	r4,r3,#10
  563  000014d8  1480000c	bnez	r4,L3_LF2
  564  000014dc  54000000	nop; delay slot nop
  565  000014e0  08000008	j	L2_LF2
  566  000014e4  54000000	nop; delay slot nop
  567  000014e8          	L3_LF2:
  568  000014e8  20010001	addi	r1,r0,#1
  569  000014ec          	L2_LF2:
  570  000014ec  08000004	j	L1_LF2
  571  000014f0  54000000	nop; delay slot nop
  572  000014f4          	L1_LF2:
  573  000014f4  8fa20000	lw	r2,0(r29)
  574  000014f8  8fa30004	lw	r3,4(r29)
  575  000014fc  8fa40008	lw	r4,8(r29)
  576  00001500  8fdffff8	lw	r31,-8(r30)
  577  00001504  001ee820	add	r29,r0,r30
  578  00001508  8fdefffc	lw	r30,-4(r30)
  579  0000150c  4be00000	jr	r31
  580  00001510  54000000	nop
  581  00001514          	.endproc _isspace
  582  00001514          	.align 2
  583  00001514          	.proc _isxdigit
  584  00001514          	.global _isxdigit
  585  00001514          	_isxdigit:
  586                      ;  Function 'isxdigit'; 0 bytes of locals, 3 regs to save.
  587  00001514  afbefffc	sw	-4(r29),r30; push fp
  588  00001518  001df020	add	r30,r0,r29; fp = sp
  589  0000151c  afbffff8	sw	-8(r29),r31; push ret addr
  590  00001520  2fbd0018	subui	r29,r29,#24; alloc local storage
  591  00001524  afa20000	sw	0(r29),r2
  592  00001528  afa30004	sw	4(r29),r3
  593  0000152c  afa40008	sw	8(r29),r4
  594  00001530  83c20003	lb	r2,3(r30)
  595  00001534  20010000	addi	r1,r0,#0
  596  00001538  304300ff	andi	r3,r2,#0x00ff
  597  0000153c  6c64002f	sgtui	r4,r3,#47
  598  00001540  1080001c	beqz	r4,L7_LF2
  599  00001544  54000000	nop; delay slot nop
  600  00001548  304300ff	andi	r3,r2,#0x00ff
  601  0000154c  70640039	sleui	r4,r3,#57
  602  00001550  1480005c	bnez	r4,L6_LF2
  603  00001554  54000000	nop; delay slot nop
  604  00001558  08000004	j	L7_LF2
  605  0000155c  54000000	nop; delay slot nop
  606  00001560          	L7_LF2:
  607  00001560  304300ff	andi	r3,r2,#0x00ff
  608  00001564  6c640060	sgtui	r4,r3,#96
  609  00001568  1080001c	beqz	r4,L8_LF2
  610  0000156c  54000000	nop; delay slot nop
  611  00001570  304300ff	andi	r3,r2,#0x00ff
  612  00001574  70640066	sleui	r4,r3,#102
  613  00001578  14800034	bnez	r4,L6_LF2
  614  0000157c  54000000	nop; delay slot nop
  615  00001580  08000004	j	L8_LF2
  616  00001584  54000000	nop; delay slot nop
  617  00001588          	L8_LF2:
  618  00001588  304300ff	andi	r3,r2,#0x00ff
  619  0000158c  6c640040	sgtui	r4,r3,#64
  620  00001590  10800020	beqz	r4,L5_LF2
  621  00001594  54000000	nop; delay slot nop
  622  00001598  304300ff	andi	r3,r2,#0x00ff
  623  0000159c  70640041	sleui	r4,r3,#65
  624  000015a0  1480000c	bnez	r4,L6_LF2
  625  000015a4  54000000	nop; delay slot nop
  626  000015a8  08000008	j	L5_LF2
  627  000015ac  54000000	nop; delay slot nop
  628  000015b0          	L6_LF2:
  629  000015b0  20010001	addi	r1,r0,#1
  630  000015b4          	L5_LF2:
  631  000015b4  08000004	j	L4_LF2
  632  000015b8  54000000	nop; delay slot nop
  633  000015bc          	L4_LF2:
  634  000015bc  8fa20000	lw	r2,0(r29)
  635  000015c0  8fa30004	lw	r3,4(r29)
  636  000015c4  8fa40008	lw	r4,8(r29)
  637  000015c8  8fdffff8	lw	r31,-8(r30)
  638  000015cc  001ee820	add	r29,r0,r30
  639  000015d0  8fdefffc	lw	r30,-4(r30)
  640  000015d4  4be00000	jr	r31
  641  000015d8  54000000	nop
  642  000015dc          	.endproc _isxdigit
  643  000015dc          	.align 2
  644  000015dc          	.proc _dstrcpy
  645  000015dc          	.global _dstrcpy
  646  000015dc          	_dstrcpy:
  647                      ;  Function 'dstrcpy'; 8 bytes of locals, 2 regs to save.
  648  000015dc  afbefffc	sw	-4(r29),r30; push fp
  649  000015e0  001df020	add	r30,r0,r29; fp = sp
  650  000015e4  afbffff8	sw	-8(r29),r31; push ret addr
  651  000015e8  2fbd0018	subui	r29,r29,#24; alloc local storage
  652  000015ec  afa20000	sw	0(r29),r2
  653  000015f0  afa30004	sw	4(r29),r3
  654  000015f4  8fc10000	lw	r1,(r30)
  655  000015f8  afc1fff4	sw	-12(r30),r1
  656  000015fc          	L10_LF2:
  657  000015fc  8fc10000	lw	r1,(r30)
  658  00001600  20220001	addi	r2,r1,#1
  659  00001604  afc20000	sw	(r30),r2
  660  00001608  8fc20004	lw	r2,4(r30)
  661  0000160c  20430001	addi	r3,r2,#1
  662  00001610  afc30004	sw	4(r30),r3
  663  00001614  80420000	lb	r2,(r2)
  664  00001618  a0220000	sb	(r1),r2
  665  0000161c  a3c2fff3	sb	-13(r30),r2
  666  00001620          	L12_LF2:
  667  00001620  93c1fff3	lbu	r1,-13(r30)
  668  00001624  64220000	snei	r2,r1,#0
  669  00001628  1440000c	bnez	r2,L13_LF2
  670  0000162c  54000000	nop; delay slot nop
  671  00001630  0800000c	j	L11_LF2
  672  00001634  54000000	nop; delay slot nop
  673  00001638          	L13_LF2:
  674  00001638  0bffffc0	j	L10_LF2
  675  0000163c  54000000	nop; delay slot nop
  676  00001640          	L11_LF2:
  677  00001640  8fc1fff4	lw	r1,-12(r30)
  678  00001644  08000004	j	L9_LF2
  679  00001648  54000000	nop; delay slot nop
  680  0000164c          	L9_LF2:
  681  0000164c  8fa20000	lw	r2,0(r29)
  682  00001650  8fa30004	lw	r3,4(r29)
  683  00001654  8fdffff8	lw	r31,-8(r30)
  684  00001658  001ee820	add	r29,r0,r30
  685  0000165c  8fdefffc	lw	r30,-4(r30)
  686  00001660  4be00000	jr	r31
  687  00001664  54000000	nop
  688  00001668          	.endproc _dstrcpy
  689  00001668          	.align 2
  690  00001668          	.proc _dstrncpy
  691  00001668          	.global _dstrncpy
  692  00001668          	_dstrncpy:
  693                      ;  Function 'dstrncpy'; 8 bytes of locals, 2 regs to save.
  694  00001668  afbefffc	sw	-4(r29),r30; push fp
  695  0000166c  001df020	add	r30,r0,r29; fp = sp
  696  00001670  afbffff8	sw	-8(r29),r31; push ret addr
  697  00001674  2fbd0018	subui	r29,r29,#24; alloc local storage
  698  00001678  afa20000	sw	0(r29),r2
  699  0000167c  afa30004	sw	4(r29),r3
  700  00001680  8fc10000	lw	r1,(r30)
  701  00001684  afc1fff4	sw	-12(r30),r1
  702  00001688          	L15_LF2:
  703  00001688  8fc10008	lw	r1,8(r30)
  704  0000168c  2022ffff	addi	r2,r1,#-1
  705  00001690  afc20008	sw	8(r30),r2
  706  00001694  70210000	slei	r1,r1,#0
  707  00001698  1020000c	beqz	r1,L18_LF2
  708  0000169c  54000000	nop; delay slot nop
  709  000016a0  08000048	j	L16_LF2
  710  000016a4  54000000	nop; delay slot nop
  711  000016a8          	L18_LF2:
  712  000016a8  8fc10000	lw	r1,(r30)
  713  000016ac  20220001	addi	r2,r1,#1
  714  000016b0  afc20000	sw	(r30),r2
  715  000016b4  8fc20004	lw	r2,4(r30)
  716  000016b8  20430001	addi	r3,r2,#1
  717  000016bc  afc30004	sw	4(r30),r3
  718  000016c0  80420000	lb	r2,(r2)
  719  000016c4  a0220000	sb	(r1),r2
  720  000016c8  a3c2fff3	sb	-13(r30),r2
  721  000016cc          	L17_LF2:
  722  000016cc  93c1fff3	lbu	r1,-13(r30)
  723  000016d0  64220000	snei	r2,r1,#0
  724  000016d4  1440000c	bnez	r2,L19_LF2
  725  000016d8  54000000	nop; delay slot nop
  726  000016dc  0800000c	j	L16_LF2
  727  000016e0  54000000	nop; delay slot nop
  728  000016e4          	L19_LF2:
  729  000016e4  0bffffa0	j	L15_LF2
  730  000016e8  54000000	nop; delay slot nop
  731  000016ec          	L16_LF2:
  732  000016ec  8fc1fff4	lw	r1,-12(r30)
  733  000016f0  08000004	j	L14_LF2
  734  000016f4  54000000	nop; delay slot nop
  735  000016f8          	L14_LF2:
  736  000016f8  8fa20000	lw	r2,0(r29)
  737  000016fc  8fa30004	lw	r3,4(r29)
  738  00001700  8fdffff8	lw	r31,-8(r30)
  739  00001704  001ee820	add	r29,r0,r30
  740  00001708  8fdefffc	lw	r30,-4(r30)
  741  0000170c  4be00000	jr	r31
  742  00001710  54000000	nop
  743  00001714          	.endproc _dstrncpy
  744  00001714          	.align 2
  745  00001714          	.proc _dstrcat
  746  00001714          	.global _dstrcat
  747  00001714          	_dstrcat:
  748                      ;  Function 'dstrcat'; 8 bytes of locals, 1 regs to save.
  749  00001714  afbefffc	sw	-4(r29),r30; push fp
  750  00001718  001df020	add	r30,r0,r29; fp = sp
  751  0000171c  afbffff8	sw	-8(r29),r31; push ret addr
  752  00001720  2fbd0018	subui	r29,r29,#24; alloc local storage
  753  00001724  afa20000	sw	0(r29),r2
  754  00001728  8fc10000	lw	r1,(r30)
  755  0000172c  afc1fff4	sw	-12(r30),r1
  756  00001730          	L21_LF2:
  757  00001730  8fc10000	lw	r1,(r30)
  758  00001734  90220000	lbu	r2,(r1)
  759  00001738  64410000	snei	r1,r2,#0
  760  0000173c  1420000c	bnez	r1,L23_LF2
  761  00001740  54000000	nop; delay slot nop
  762  00001744  0800001c	j	L22_LF2
  763  00001748  54000000	nop; delay slot nop
  764  0000174c          	L23_LF2:
  765  0000174c  8fc20000	lw	r2,(r30)
  766  00001750  20410001	addi	r1,r2,#1
  767  00001754  00011020	add	r2,r0,r1
  768  00001758  afc20000	sw	(r30),r2
  769  0000175c  0bffffd0	j	L21_LF2
  770  00001760  54000000	nop; delay slot nop
  771  00001764          	L22_LF2:
  772  00001764  23bdfff8	addi	r29,r29,#-8
  773  00001768  001d0820	add	r1,r0,r29
  774  0000176c  8fc20000	lw	r2,(r30)
  775  00001770  ac220000	sw	(r1),r2
  776  00001774  8fc20004	lw	r2,4(r30)
  777  00001778  ac220004	sw	4(r1),r2
  778  0000177c  0ffffe5c	jal	_dstrcpy
  779  00001780  54000000	nop; delay slot nop
  780  00001784  23bd0008	addi	r29,r29,#8
  781  00001788  8fc1fff4	lw	r1,-12(r30)
  782  0000178c  08000004	j	L20_LF2
  783  00001790  54000000	nop; delay slot nop
  784  00001794          	L20_LF2:
  785  00001794  8fa20000	lw	r2,0(r29)
  786  00001798  8fdffff8	lw	r31,-8(r30)
  787  0000179c  001ee820	add	r29,r0,r30
  788  000017a0  8fdefffc	lw	r30,-4(r30)
  789  000017a4  4be00000	jr	r31
  790  000017a8  54000000	nop
  791  000017ac          	.endproc _dstrcat
  792  000017ac          	.align 2
  793  000017ac          	.proc _dstrncmp
  794  000017ac          	.global _dstrncmp
  795  000017ac          	_dstrncmp:
  796                      ;  Function 'dstrncmp'; 8 bytes of locals, 2 regs to save.
  797  000017ac  afbefffc	sw	-4(r29),r30; push fp
  798  000017b0  001df020	add	r30,r0,r29; fp = sp
  799  000017b4  afbffff8	sw	-8(r29),r31; push ret addr
  800  000017b8  2fbd0018	subui	r29,r29,#24; alloc local storage
  801  000017bc  afa20000	sw	0(r29),r2
  802  000017c0  afa30004	sw	4(r29),r3
  803  000017c4  54000000	nop
  804  000017c8  20010000	addi	r1,r0,#0
  805  000017cc  afc1fff4	sw	-12(r30),r1
  806  000017d0          	L25_LF2:
  807  000017d0  8fc1fff4	lw	r1,-12(r30)
  808  000017d4  8fc20008	lw	r2,8(r30)
  809  000017d8  0022082a	slt	r1,r1,r2
  810  000017dc  1420000c	bnez	r1,L28_LF2
  811  000017e0  54000000	nop; delay slot nop
  812  000017e4  08000088	j	L26_LF2
  813  000017e8  54000000	nop; delay slot nop
  814  000017ec          	L28_LF2:
  815  000017ec  8fc10004	lw	r1,4(r30)
  816  000017f0  90220000	lbu	r2,(r1)
  817  000017f4  64410000	snei	r1,r2,#0
  818  000017f8  14200018	bnez	r1,L29_LF2
  819  000017fc  54000000	nop; delay slot nop
  820  00001800  20010000	addi	r1,r0,#0
  821  00001804  080000d8	j	L24_LF2
  822  00001808  54000000	nop; delay slot nop
  823  0000180c  08000028	j	L30_LF2
  824  00001810  54000000	nop; delay slot nop
  825  00001814          	L29_LF2:
  826  00001814  8fc10000	lw	r1,(r30)
  827  00001818  8fc20004	lw	r2,4(r30)
  828  0000181c  90210000	lbu	r1,(r1)
  829  00001820  90420000	lbu	r2,(r2)
  830  00001824  00220829	sne	r1,r1,r2
  831  00001828  1020000c	beqz	r1,L30_LF2
  832  0000182c  54000000	nop; delay slot nop
  833  00001830  0800003c	j	L26_LF2
  834  00001834  54000000	nop; delay slot nop
  835  00001838          	L31_LF2:
  836  00001838          	L30_LF2:
  837  00001838  8fc20000	lw	r2,(r30)
  838  0000183c  20410001	addi	r1,r2,#1
  839  00001840  00011020	add	r2,r0,r1
  840  00001844  afc20000	sw	(r30),r2
  841  00001848  8fc20004	lw	r2,4(r30)
  842  0000184c  20410001	addi	r1,r2,#1
  843  00001850  00011020	add	r2,r0,r1
  844  00001854  afc20004	sw	4(r30),r2
  845  00001858          	L27_LF2:
  846  00001858  8fc2fff4	lw	r2,-12(r30)
  847  0000185c  20410001	addi	r1,r2,#1
  848  00001860  00011020	add	r2,r0,r1
  849  00001864  afc2fff4	sw	-12(r30),r2
  850  00001868  0bffff64	j	L25_LF2
  851  0000186c  54000000	nop; delay slot nop
  852  00001870          	L26_LF2:
  853  00001870  8fc1fff4	lw	r1,-12(r30)
  854  00001874  8fc20008	lw	r2,8(r30)
  855  00001878  00220828	seq	r1,r1,r2
  856  0000187c  10200018	beqz	r1,L32_LF2
  857  00001880  54000000	nop; delay slot nop
  858  00001884  20010000	addi	r1,r0,#0
  859  00001888  08000054	j	L24_LF2
  860  0000188c  54000000	nop; delay slot nop
  861  00001890  0800004c	j	L33_LF2
  862  00001894  54000000	nop; delay slot nop
  863  00001898          	L32_LF2:
  864  00001898  8fc20000	lw	r2,(r30)
  865  0000189c  90410000	lbu	r1,(r2)
  866  000018a0  8fc20004	lw	r2,4(r30)
  867  000018a4  90430000	lbu	r3,(r2)
  868  000018a8  00230822	sub	r1,r1,r3
  869  000018ac  74220000	sgei	r2,r1,#0
  870  000018b0  10400020	beqz	r2,L34_LF2
  871  000018b4  54000000	nop; delay slot nop
  872  000018b8  8fc10000	lw	r1,(r30)
  873  000018bc  8fc20004	lw	r2,4(r30)
  874  000018c0  90210000	lbu	r1,(r1)
  875  000018c4  90420000	lbu	r2,(r2)
  876  000018c8  00220829	sne	r1,r1,r2
  877  000018cc  08000008	j	L35_LF2
  878  000018d0  54000000	nop; delay slot nop
  879  000018d4          	L34_LF2:
  880  000018d4  2001ffff	addi	r1,r0,#-1
  881  000018d8          	L35_LF2:
  882  000018d8  08000004	j	L24_LF2
  883  000018dc  54000000	nop; delay slot nop
  884  000018e0          	L33_LF2:
  885  000018e0          	L24_LF2:
  886  000018e0  8fa20000	lw	r2,0(r29)
  887  000018e4  8fa30004	lw	r3,4(r29)
  888  000018e8  8fdffff8	lw	r31,-8(r30)
  889  000018ec  001ee820	add	r29,r0,r30
  890  000018f0  8fdefffc	lw	r30,-4(r30)
  891  000018f4  4be00000	jr	r31
  892  000018f8  54000000	nop
  893  000018fc          	.endproc _dstrncmp
  894  000018fc          	.align 2
  895  000018fc          	.proc _dstrlen
  896  000018fc          	.global _dstrlen
  897  000018fc          	_dstrlen:
  898                      ;  Function 'dstrlen'; 8 bytes of locals, 1 regs to save.
  899  000018fc  afbefffc	sw	-4(r29),r30; push fp
  900  00001900  001df020	add	r30,r0,r29; fp = sp
  901  00001904  afbffff8	sw	-8(r29),r31; push ret addr
  902  00001908  2fbd0018	subui	r29,r29,#24; alloc local storage
  903  0000190c  afa20000	sw	0(r29),r2
  904  00001910  20010000	addi	r1,r0,#0
  905  00001914  afc1fff4	sw	-12(r30),r1
  906  00001918          	L37_LF2:
  907  00001918  8fc10000	lw	r1,(r30)
  908  0000191c  20220001	addi	r2,r1,#1
  909  00001920  afc20000	sw	(r30),r2
  910  00001924  90210000	lbu	r1,(r1)
  911  00001928  64220000	snei	r2,r1,#0
  912  0000192c  1440000c	bnez	r2,L39_LF2
  913  00001930  54000000	nop; delay slot nop
  914  00001934  0800001c	j	L38_LF2
  915  00001938  54000000	nop; delay slot nop
  916  0000193c          	L39_LF2:
  917  0000193c  8fc2fff4	lw	r2,-12(r30)
  918  00001940  20410001	addi	r1,r2,#1
  919  00001944  00011020	add	r2,r0,r1
  920  00001948  afc2fff4	sw	-12(r30),r2
  921  0000194c  0bffffc8	j	L37_LF2
  922  00001950  54000000	nop; delay slot nop
  923  00001954          	L38_LF2:
  924  00001954  8fc1fff4	lw	r1,-12(r30)
  925  00001958  08000004	j	L36_LF2
  926  0000195c  54000000	nop; delay slot nop
  927  00001960          	L36_LF2:
  928  00001960  8fa20000	lw	r2,0(r29)
  929  00001964  8fdffff8	lw	r31,-8(r30)
  930  00001968  001ee820	add	r29,r0,r30
  931  0000196c  8fdefffc	lw	r30,-4(r30)
  932  00001970  4be00000	jr	r31
  933  00001974  54000000	nop
  934  00001978          	.endproc _dstrlen
  935  00001978          	.align 2
  936  00001978          	.proc _dstrstr
  937  00001978          	.global _dstrstr
  938  00001978          	_dstrstr:
  939                      ;  Function 'dstrstr'; 8 bytes of locals, 1 regs to save.
  940  00001978  afbefffc	sw	-4(r29),r30; push fp
  941  0000197c  001df020	add	r30,r0,r29; fp = sp
  942  00001980  afbffff8	sw	-8(r29),r31; push ret addr
  943  00001984  2fbd0018	subui	r29,r29,#24; alloc local storage
  944  00001988  afa20000	sw	0(r29),r2
  945  0000198c  23bdfff8	addi	r29,r29,#-8
  946  00001990  001d0820	add	r1,r0,r29
  947  00001994  8fc20004	lw	r2,4(r30)
  948  00001998  ac220000	sw	(r1),r2
  949  0000199c  0fffff5c	jal	_dstrlen
  950  000019a0  54000000	nop; delay slot nop
  951  000019a4  23bd0008	addi	r29,r29,#8
  952  000019a8  afc1fff4	sw	-12(r30),r1
  953  000019ac          	L41_LF2:
  954  000019ac  8fc10000	lw	r1,(r30)
  955  000019b0  90220000	lbu	r2,(r1)
  956  000019b4  64410000	snei	r1,r2,#0
  957  000019b8  1420000c	bnez	r1,L43_LF2
  958  000019bc  54000000	nop; delay slot nop
  959  000019c0  08000060	j	L42_LF2
  960  000019c4  54000000	nop; delay slot nop
  961  000019c8          	L43_LF2:
  962  000019c8  23bdfff0	addi	r29,r29,#-16
  963  000019cc  001d0820	add	r1,r0,r29
  964  000019d0  8fc20000	lw	r2,(r30)
  965  000019d4  ac220000	sw	(r1),r2
  966  000019d8  8fc20004	lw	r2,4(r30)
  967  000019dc  ac220004	sw	4(r1),r2
  968  000019e0  8fc2fff4	lw	r2,-12(r30)
  969  000019e4  ac220008	sw	8(r1),r2
  970  000019e8  0ffffdc0	jal	_dstrncmp
  971  000019ec  54000000	nop; delay slot nop
  972  000019f0  23bd0010	addi	r29,r29,#16
  973  000019f4  64220000	snei	r2,r1,#0
  974  000019f8  14400010	bnez	r2,L44_LF2
  975  000019fc  54000000	nop; delay slot nop
  976  00001a00  8fc10000	lw	r1,(r30)
  977  00001a04  08000028	j	L40_LF2
  978  00001a08  54000000	nop; delay slot nop
  979  00001a0c          	L44_LF2:
  980  00001a0c  8fc20000	lw	r2,(r30)
  981  00001a10  20410001	addi	r1,r2,#1
  982  00001a14  00011020	add	r2,r0,r1
  983  00001a18  afc20000	sw	(r30),r2
  984  00001a1c  0bffff8c	j	L41_LF2
  985  00001a20  54000000	nop; delay slot nop
  986  00001a24          	L42_LF2:
  987  00001a24  20010000	addi	r1,r0,#0
  988  00001a28  08000004	j	L40_LF2
  989  00001a2c  54000000	nop; delay slot nop
  990  00001a30          	L40_LF2:
  991  00001a30  8fa20000	lw	r2,0(r29)
  992  00001a34  8fdffff8	lw	r31,-8(r30)
  993  00001a38  001ee820	add	r29,r0,r30
  994  00001a3c  8fdefffc	lw	r30,-4(r30)
  995  00001a40  4be00000	jr	r31
  996  00001a44  54000000	nop
  997  00001a48          	.endproc _dstrstr
  998  00001a48          	.align 2
  999  00001a48          	.proc _dmindex
 1000  00001a48          	.global _dmindex
 1001  00001a48          	_dmindex:
 1002                      ;  Function 'dmindex'; 8 bytes of locals, 1 regs to save.
 1003  00001a48  afbefffc	sw	-4(r29),r30; push fp
 1004  00001a4c  001df020	add	r30,r0,r29; fp = sp
 1005  00001a50  afbffff8	sw	-8(r29),r31; push ret addr
 1006  00001a54  2fbd0018	subui	r29,r29,#24; alloc local storage
 1007  00001a58  afa20000	sw	0(r29),r2
 1008  00001a5c  54000000	nop
 1009  00001a60          	L46_LF2:
 1010  00001a60  8fc10000	lw	r1,(r30)
 1011  00001a64  90220000	lbu	r2,(r1)
 1012  00001a68  64410000	snei	r1,r2,#0
 1013  00001a6c  1420000c	bnez	r1,L48_LF2
 1014  00001a70  54000000	nop; delay slot nop
 1015  00001a74  08000070	j	L47_LF2
 1016  00001a78  54000000	nop; delay slot nop
 1017  00001a7c          	L48_LF2:
 1018  00001a7c  8fc10004	lw	r1,4(r30)
 1019  00001a80  afc1fff4	sw	-12(r30),r1
 1020  00001a84          	L49_LF2:
 1021  00001a84  8fc1fff4	lw	r1,-12(r30)
 1022  00001a88  90220000	lbu	r2,(r1)
 1023  00001a8c  64410000	snei	r1,r2,#0
 1024  00001a90  1420000c	bnez	r1,L52_LF2
 1025  00001a94  54000000	nop; delay slot nop
 1026  00001a98  08000044	j	L50_LF2
 1027  00001a9c  54000000	nop; delay slot nop
 1028  00001aa0          	L52_LF2:
 1029  00001aa0  8fc10000	lw	r1,(r30)
 1030  00001aa4  8fc2fff4	lw	r2,-12(r30)
 1031  00001aa8  90210000	lbu	r1,(r1)
 1032  00001aac  90420000	lbu	r2,(r2)
 1033  00001ab0  00220828	seq	r1,r1,r2
 1034  00001ab4  10200010	beqz	r1,L51_LF2
 1035  00001ab8  54000000	nop; delay slot nop
 1036  00001abc  8fc10000	lw	r1,(r30)
 1037  00001ac0  08000030	j	L45_LF2
 1038  00001ac4  54000000	nop; delay slot nop
 1039  00001ac8          	L53_LF2:
 1040  00001ac8          	L51_LF2:
 1041  00001ac8  8fc2fff4	lw	r2,-12(r30)
 1042  00001acc  20410001	addi	r1,r2,#1
 1043  00001ad0  00011020	add	r2,r0,r1
 1044  00001ad4  afc2fff4	sw	-12(r30),r2
 1045  00001ad8  0bffffa8	j	L49_LF2
 1046  00001adc  54000000	nop; delay slot nop
 1047  00001ae0          	L50_LF2:
 1048  00001ae0  0bffff7c	j	L46_LF2
 1049  00001ae4  54000000	nop; delay slot nop
 1050  00001ae8          	L47_LF2:
 1051  00001ae8  20010000	addi	r1,r0,#0
 1052  00001aec  08000004	j	L45_LF2
 1053  00001af0  54000000	nop; delay slot nop
 1054  00001af4          	L45_LF2:
 1055  00001af4  8fa20000	lw	r2,0(r29)
 1056  00001af8  8fdffff8	lw	r31,-8(r30)
 1057  00001afc  001ee820	add	r29,r0,r30
 1058  00001b00  8fdefffc	lw	r30,-4(r30)
 1059  00001b04  4be00000	jr	r31
 1060  00001b08  54000000	nop
 1061  00001b0c          	.endproc _dmindex
 1062  00001b0c          	.align 2
 1063  00001b0c          	.proc _dindex
 1064  00001b0c          	.global _dindex
 1065  00001b0c          	_dindex:
 1066                      ;  Function 'dindex'; 0 bytes of locals, 1 regs to save.
 1067  00001b0c  afbefffc	sw	-4(r29),r30; push fp
 1068  00001b10  001df020	add	r30,r0,r29; fp = sp
 1069  00001b14  afbffff8	sw	-8(r29),r31; push ret addr
 1070  00001b18  2fbd0010	subui	r29,r29,#16; alloc local storage
 1071  00001b1c  afa20000	sw	0(r29),r2
 1072  00001b20  54000000	nop
 1073  00001b24          	L55_LF2:
 1074  00001b24  8fc10000	lw	r1,(r30)
 1075  00001b28  90220000	lbu	r2,(r1)
 1076  00001b2c  64410000	snei	r1,r2,#0
 1077  00001b30  1420000c	bnez	r1,L57_LF2
 1078  00001b34  54000000	nop; delay slot nop
 1079  00001b38  08000040	j	L56_LF2
 1080  00001b3c  54000000	nop; delay slot nop
 1081  00001b40          	L57_LF2:
 1082  00001b40  8fc10000	lw	r1,(r30)
 1083  00001b44  90220000	lbu	r2,(r1)
 1084  00001b48  8fc10004	lw	r1,4(r30)
 1085  00001b4c  00411028	seq	r2,r2,r1
 1086  00001b50  10400010	beqz	r2,L58_LF2
 1087  00001b54  54000000	nop; delay slot nop
 1088  00001b58  8fc10000	lw	r1,(r30)
 1089  00001b5c  08000028	j	L54_LF2
 1090  00001b60  54000000	nop; delay slot nop
 1091  00001b64          	L58_LF2:
 1092  00001b64  8fc20000	lw	r2,(r30)
 1093  00001b68  20410001	addi	r1,r2,#1
 1094  00001b6c  00011020	add	r2,r0,r1
 1095  00001b70  afc20000	sw	(r30),r2
 1096  00001b74  0bffffac	j	L55_LF2
 1097  00001b78  54000000	nop; delay slot nop
 1098  00001b7c          	L56_LF2:
 1099  00001b7c  20010000	addi	r1,r0,#0
 1100  00001b80  08000004	j	L54_LF2
 1101  00001b84  54000000	nop; delay slot nop
 1102  00001b88          	L54_LF2:
 1103  00001b88  8fa20000	lw	r2,0(r29)
 1104  00001b8c  8fdffff8	lw	r31,-8(r30)
 1105  00001b90  001ee820	add	r29,r0,r30
 1106  00001b94  8fdefffc	lw	r30,-4(r30)
 1107  00001b98  4be00000	jr	r31
 1108  00001b9c  54000000	nop
 1109  00001ba0          	.endproc _dindex
 1110  00001ba0          	.align 2
 1111  00001ba0          	.proc _ditoa
 1112  00001ba0          	.global _ditoa
 1113  00001ba0          	_ditoa:
 1114                      ;  Function 'ditoa'; 8 bytes of locals, 2 regs to save.
 1115  00001ba0  afbefffc	sw	-4(r29),r30; push fp
 1116  00001ba4  001df020	add	r30,r0,r29; fp = sp
 1117  00001ba8  afbffff8	sw	-8(r29),r31; push ret addr
 1118  00001bac  2fbd0018	subui	r29,r29,#24; alloc local storage
 1119  00001bb0  afa20000	sw	0(r29),r2
 1120  00001bb4  afa30004	sw	4(r29),r3
 1121  00001bb8  8fc10000	lw	r1,(r30)
 1122  00001bbc  68220000	slti	r2,r1,#0
 1123  00001bc0  1040002c	beqz	r2,L60_LF2
 1124  00001bc4  54000000	nop; delay slot nop
 1125  00001bc8  8fc10004	lw	r1,4(r30)
 1126  00001bcc  20220001	addi	r2,r1,#1
 1127  00001bd0  afc20004	sw	4(r30),r2
 1128  00001bd4  2002002d	addi	r2,r0,(#0x2d)&0xff
 1129  00001bd8  a0220000	sb	(r1),r2
 1130  00001bdc  8fc10000	lw	r1,(r30)
 1131  00001be0  00011022	sub	r2,r0,r1
 1132  00001be4  afc20000	sw	(r30),r2
 1133  00001be8  08000118	j	L61_LF2
 1134  00001bec  54000000	nop; delay slot nop
 1135  00001bf0          	L60_LF2:
 1136  00001bf0  8fc10000	lw	r1,(r30)
 1137  00001bf4  64220000	snei	r2,r1,#0
 1138  00001bf8  14400020	bnez	r2,L62_LF2
 1139  00001bfc  54000000	nop; delay slot nop
 1140  00001c00  8fc10004	lw	r1,4(r30)
 1141  00001c04  20220001	addi	r2,r1,#1
 1142  00001c08  afc20004	sw	4(r30),r2
 1143  00001c0c  20020030	addi	r2,r0,(#0x30)&0xff
 1144  00001c10  a0220000	sb	(r1),r2
 1145  00001c14  080000ec	j	L61_LF2
 1146  00001c18  54000000	nop; delay slot nop
 1147  00001c1c          	L62_LF2:
 1148  00001c1c  20010001	addi	r1,r0,#1
 1149  00001c20  afc1fff4	sw	-12(r30),r1
 1150  00001c24          	L64_LF2:
 1151  00001c24  8fc1fff4	lw	r1,-12(r30)
 1152  00001c28  8fc20000	lw	r2,(r30)
 1153  00001c2c  0022082c	sle	r1,r1,r2
 1154  00001c30  1420000c	bnez	r1,L66_LF2
 1155  00001c34  54000000	nop; delay slot nop
 1156  00001c38  08000024	j	L65_LF2
 1157  00001c3c  54000000	nop; delay slot nop
 1158  00001c40          	L67_LF2:
 1159  00001c40          	L66_LF2:
 1160  00001c40  8fc1fff4	lw	r1,-12(r30)
 1161  00001c44  00011820	add	r3,r0,r1
 1162  00001c48  50620002	slli	r2,r3,#0x2
 1163  00001c4c  00411020	add	r2,r2,r1
 1164  00001c50  50410001	slli	r1,r2,#0x1
 1165  00001c54  afc1fff4	sw	-12(r30),r1
 1166  00001c58  0bffffc8	j	L64_LF2
 1167  00001c5c  54000000	nop; delay slot nop
 1168  00001c60          	L65_LF2:
 1169  00001c60  54000000	nop
 1170  00001c64          	L68_LF2:
 1171  00001c64  8fc1fff4	lw	r1,-12(r30)
 1172  00001c68  2002000a	addi	r2,r0,#10
 1173  00001c6c  00200035	movi2fp	f0,r1
 1174  00001c70  00400835	movi2fp	f1,r2
 1175  00001c74  0401000f	div	f0,f0,f1
 1176  00001c78  00000834	movfp2i	r1,f0
 1177  00001c7c  afc1fff4	sw	-12(r30),r1
 1178  00001c80  8fc10004	lw	r1,4(r30)
 1179  00001c84  20220001	addi	r2,r1,#1
 1180  00001c88  afc20004	sw	4(r30),r2
 1181  00001c8c  8fc20000	lw	r2,(r30)
 1182  00001c90  8fc3fff4	lw	r3,-12(r30)
 1183  00001c94  00400035	movi2fp	f0,r2
 1184  00001c98  00600835	movi2fp	f1,r3
 1185  00001c9c  0401000f	div	f0,f0,f1
 1186  00001ca0  00001034	movfp2i	r2,f0
 1187  00001ca4  00021820	add	r3,r0,r2
 1188  00001ca8  20620030	addi	r2,r3,#48
 1189  00001cac  a0220000	sb	(r1),r2
 1190  00001cb0  8fc10000	lw	r1,(r30)
 1191  00001cb4  8fc3fff4	lw	r3,-12(r30)
 1192  00001cb8  00200035	movi2fp	f0,r1
 1193  00001cbc  00600835	movi2fp	f1,r3
 1194  00001cc0  0401000f	div	f0,f0,f1
 1195  00001cc4  00001034	movfp2i	r2,f0
 1196  00001cc8  8fc3fff4	lw	r3,-12(r30)
 1197  00001ccc  00400035	movi2fp	f0,r2
 1198  00001cd0  00600835	movi2fp	f1,r3
 1199  00001cd4  0401000e	mult	f0,f0,f1
 1200  00001cd8  00001034	movfp2i	r2,f0
 1201  00001cdc  00220822	sub	r1,r1,r2
 1202  00001ce0  afc10000	sw	(r30),r1
 1203  00001ce4          	L70_LF2:
 1204  00001ce4  8fc1fff4	lw	r1,-12(r30)
 1205  00001ce8  6c220001	sgti	r2,r1,#1
 1206  00001cec  1440000c	bnez	r2,L71_LF2
 1207  00001cf0  54000000	nop; delay slot nop
 1208  00001cf4  0800000c	j	L61_LF2
 1209  00001cf8  54000000	nop; delay slot nop
 1210  00001cfc          	L71_LF2:
 1211  00001cfc  0bffff64	j	L68_LF2
 1212  00001d00  54000000	nop; delay slot nop
 1213  00001d04          	L69_LF2:
 1214  00001d04          	L63_LF2:
 1215  00001d04          	L61_LF2:
 1216  00001d04  8fc10004	lw	r1,4(r30)
 1217  00001d08  20020000	addi	r2,r0,(#0x0)&0xff
 1218  00001d0c  a0220000	sb	(r1),r2
 1219  00001d10          	L59_LF2:
 1220  00001d10  8fa20000	lw	r2,0(r29)
 1221  00001d14  8fa30004	lw	r3,4(r29)
 1222  00001d18  8fdffff8	lw	r31,-8(r30)
 1223  00001d1c  001ee820	add	r29,r0,r30
 1224  00001d20  8fdefffc	lw	r30,-4(r30)
 1225  00001d24  4be00000	jr	r31
 1226  00001d28  54000000	nop
 1227  00001d2c          	.endproc _ditoa
 1228  00001d2c          	.align 2
 1229  00001d2c          	.proc _dstrtol
 1230  00001d2c          	.global _dstrtol
 1231  00001d2c          	_dstrtol:
 1232                      ;  Function 'dstrtol'; 16 bytes of locals, 1 regs to save.
 1233  00001d2c  afbefffc	sw	-4(r29),r30; push fp
 1234  00001d30  001df020	add	r30,r0,r29; fp = sp
 1235  00001d34  afbffff8	sw	-8(r29),r31; push ret addr
 1236  00001d38  2fbd0020	subui	r29,r29,#32; alloc local storage
 1237  00001d3c  afa20000	sw	0(r29),r2
 1238  00001d40  20010000	addi	r1,r0,#0
 1239  00001d44  afc1fff4	sw	-12(r30),r1
 1240  00001d48          	L73_LF2:
 1241  00001d48  8fc10000	lw	r1,(r30)
 1242  00001d4c  90220000	lbu	r2,(r1)
 1243  00001d50  60410020	seqi	r1,r2,#32
 1244  00001d54  14200034	bnez	r1,L75_LF2
 1245  00001d58  54000000	nop; delay slot nop
 1246  00001d5c  8fc10000	lw	r1,(r30)
 1247  00001d60  90220000	lbu	r2,(r1)
 1248  00001d64  60410009	seqi	r1,r2,#9
 1249  00001d68  14200020	bnez	r1,L75_LF2
 1250  00001d6c  54000000	nop; delay slot nop
 1251  00001d70  8fc10000	lw	r1,(r30)
 1252  00001d74  90220000	lbu	r2,(r1)
 1253  00001d78  6041000a	seqi	r1,r2,#10
 1254  00001d7c  1420000c	bnez	r1,L75_LF2
 1255  00001d80  54000000	nop; delay slot nop
 1256  00001d84  0800001c	j	L74_LF2
 1257  00001d88  54000000	nop; delay slot nop
 1258  00001d8c          	L75_LF2:
 1259  00001d8c  8fc20000	lw	r2,(r30)
 1260  00001d90  20410001	addi	r1,r2,#1
 1261  00001d94  00011020	add	r2,r0,r1
 1262  00001d98  afc20000	sw	(r30),r2
 1263  00001d9c  0bffffa8	j	L73_LF2
 1264  00001da0  54000000	nop; delay slot nop
 1265  00001da4          	L74_LF2:
 1266  00001da4  8fc10004	lw	r1,4(r30)
 1267  00001da8  64220000	snei	r2,r1,#0
 1268  00001dac  10400010	beqz	r2,L76_LF2
 1269  00001db0  54000000	nop; delay slot nop
 1270  00001db4  8fc10004	lw	r1,4(r30)
 1271  00001db8  8fc20000	lw	r2,(r30)
 1272  00001dbc  ac220000	sw	(r1),r2
 1273  00001dc0          	L76_LF2:
 1274  00001dc0  8fc10000	lw	r1,(r30)
 1275  00001dc4  90220000	lbu	r2,(r1)
 1276  00001dc8  64410000	snei	r1,r2,#0
 1277  00001dcc  14200010	bnez	r1,L77_LF2
 1278  00001dd0  54000000	nop; delay slot nop
 1279  00001dd4  8fc1fff4	lw	r1,-12(r30)
 1280  00001dd8  08000294	j	L72_LF2
 1281  00001ddc  54000000	nop; delay slot nop
 1282  00001de0          	L77_LF2:
 1283  00001de0  8fc10000	lw	r1,(r30)
 1284  00001de4  90220000	lbu	r2,(r1)
 1285  00001de8  6041002d	seqi	r1,r2,#45
 1286  00001dec  10200024	beqz	r1,L78_LF2
 1287  00001df0  54000000	nop; delay slot nop
 1288  00001df4  2001ffff	addi	r1,r0,#-1
 1289  00001df8  afc1ffec	sw	-20(r30),r1
 1290  00001dfc  8fc20000	lw	r2,(r30)
 1291  00001e00  20410001	addi	r1,r2,#1
 1292  00001e04  00011020	add	r2,r0,r1
 1293  00001e08  afc20000	sw	(r30),r2
 1294  00001e0c  0800000c	j	L79_LF2
 1295  00001e10  54000000	nop; delay slot nop
 1296  00001e14          	L78_LF2:
 1297  00001e14  20010001	addi	r1,r0,#1
 1298  00001e18  afc1ffec	sw	-20(r30),r1
 1299  00001e1c          	L79_LF2:
 1300  00001e1c  8fc10008	lw	r1,8(r30)
 1301  00001e20  64220000	snei	r2,r1,#0
 1302  00001e24  14400090	bnez	r2,L80_LF2
 1303  00001e28  54000000	nop; delay slot nop
 1304  00001e2c  8fc10000	lw	r1,(r30)
 1305  00001e30  90220000	lbu	r2,(r1)
 1306  00001e34  60410030	seqi	r1,r2,#48
 1307  00001e38  10200074	beqz	r1,L81_LF2
 1308  00001e3c  54000000	nop; delay slot nop
 1309  00001e40  8fc20000	lw	r2,(r30)
 1310  00001e44  20410001	addi	r1,r2,#1
 1311  00001e48  00011020	add	r2,r0,r1
 1312  00001e4c  afc20000	sw	(r30),r2
 1313  00001e50  8fc10000	lw	r1,(r30)
 1314  00001e54  90220000	lbu	r2,(r1)
 1315  00001e58  60410078	seqi	r1,r2,#120
 1316  00001e5c  14200020	bnez	r1,L83_LF2
 1317  00001e60  54000000	nop; delay slot nop
 1318  00001e64  8fc10000	lw	r1,(r30)
 1319  00001e68  90220000	lbu	r2,(r1)
 1320  00001e6c  60410058	seqi	r1,r2,#88
 1321  00001e70  1420000c	bnez	r1,L83_LF2
 1322  00001e74  54000000	nop; delay slot nop
 1323  00001e78  08000024	j	L82_LF2
 1324  00001e7c  54000000	nop; delay slot nop
 1325  00001e80          	L83_LF2:
 1326  00001e80  20010010	addi	r1,r0,#16
 1327  00001e84  afc10008	sw	8(r30),r1
 1328  00001e88  8fc20000	lw	r2,(r30)
 1329  00001e8c  20410001	addi	r1,r2,#1
 1330  00001e90  00011020	add	r2,r0,r1
 1331  00001e94  afc20000	sw	(r30),r2
 1332  00001e98  0800000c	j	L84_LF2
 1333  00001e9c  54000000	nop; delay slot nop
 1334  00001ea0          	L82_LF2:
 1335  00001ea0  20010008	addi	r1,r0,#8
 1336  00001ea4  afc10008	sw	8(r30),r1
 1337  00001ea8          	L84_LF2:
 1338  00001ea8  0800000c	j	L80_LF2
 1339  00001eac  54000000	nop; delay slot nop
 1340  00001eb0          	L81_LF2:
 1341  00001eb0  2001000a	addi	r1,r0,#10
 1342  00001eb4  afc10008	sw	8(r30),r1
 1343  00001eb8          	L85_LF2:
 1344  00001eb8          	L80_LF2:
 1345  00001eb8  8fc10008	lw	r1,8(r30)
 1346  00001ebc  70220000	slei	r2,r1,#0
 1347  00001ec0  1440001c	bnez	r2,L87_LF2
 1348  00001ec4  54000000	nop; delay slot nop
 1349  00001ec8  8fc10008	lw	r1,8(r30)
 1350  00001ecc  6c220010	sgti	r2,r1,#16
 1351  00001ed0  1440000c	bnez	r2,L87_LF2
 1352  00001ed4  54000000	nop; delay slot nop
 1353  00001ed8  08000010	j	L86_LF2
 1354  00001edc  54000000	nop; delay slot nop
 1355  00001ee0          	L87_LF2:
 1356  00001ee0  8fc1fff4	lw	r1,-12(r30)
 1357  00001ee4  08000188	j	L72_LF2
 1358  00001ee8  54000000	nop; delay slot nop
 1359  00001eec          	L86_LF2:
 1360  00001eec  54000000	nop
 1361  00001ef0          	L88_LF2:
 1362  00001ef0  8fc10000	lw	r1,(r30)
 1363  00001ef4  90220000	lbu	r2,(r1)
 1364  00001ef8  6c41002f	sgtui	r1,r2,#47
 1365  00001efc  10200030	beqz	r1,L91_LF2
 1366  00001f00  54000000	nop; delay slot nop
 1367  00001f04  8fc10000	lw	r1,(r30)
 1368  00001f08  90220000	lbu	r2,(r1)
 1369  00001f0c  70410039	sleui	r1,r2,#57
 1370  00001f10  1020001c	beqz	r1,L91_LF2
 1371  00001f14  54000000	nop; delay slot nop
 1372  00001f18  8fc10000	lw	r1,(r30)
 1373  00001f1c  90220000	lbu	r2,(r1)
 1374  00001f20  2041ffd0	addi	r1,r2,#-48
 1375  00001f24  afc1fff0	sw	-16(r30),r1
 1376  00001f28  0800008c	j	L92_LF2
 1377  00001f2c  54000000	nop; delay slot nop
 1378  00001f30          	L91_LF2:
 1379  00001f30  8fc10000	lw	r1,(r30)
 1380  00001f34  90220000	lbu	r2,(r1)
 1381  00001f38  6c410060	sgtui	r1,r2,#96
 1382  00001f3c  10200030	beqz	r1,L93_LF2
 1383  00001f40  54000000	nop; delay slot nop
 1384  00001f44  8fc10000	lw	r1,(r30)
 1385  00001f48  90220000	lbu	r2,(r1)
 1386  00001f4c  7041007a	sleui	r1,r2,#122
 1387  00001f50  1020001c	beqz	r1,L93_LF2
 1388  00001f54  54000000	nop; delay slot nop
 1389  00001f58  8fc10000	lw	r1,(r30)
 1390  00001f5c  90220000	lbu	r2,(r1)
 1391  00001f60  2041ffa9	addi	r1,r2,#-87
 1392  00001f64  afc1fff0	sw	-16(r30),r1
 1393  00001f68  0800004c	j	L92_LF2
 1394  00001f6c  54000000	nop; delay slot nop
 1395  00001f70          	L93_LF2:
 1396  00001f70  8fc10000	lw	r1,(r30)
 1397  00001f74  90220000	lbu	r2,(r1)
 1398  00001f78  6c410040	sgtui	r1,r2,#64
 1399  00001f7c  10200030	beqz	r1,L95_LF2
 1400  00001f80  54000000	nop; delay slot nop
 1401  00001f84  8fc10000	lw	r1,(r30)
 1402  00001f88  90220000	lbu	r2,(r1)
 1403  00001f8c  7041005a	sleui	r1,r2,#90
 1404  00001f90  1020001c	beqz	r1,L95_LF2
 1405  00001f94  54000000	nop; delay slot nop
 1406  00001f98  8fc10000	lw	r1,(r30)
 1407  00001f9c  90220000	lbu	r2,(r1)
 1408  00001fa0  2041ffc9	addi	r1,r2,#-55
 1409  00001fa4  afc1fff0	sw	-16(r30),r1
 1410  00001fa8  0800000c	j	L92_LF2
 1411  00001fac  54000000	nop; delay slot nop
 1412  00001fb0          	L95_LF2:
 1413  00001fb0  200103e8	addi	r1,r0,#1000
 1414  00001fb4  afc1fff0	sw	-16(r30),r1
 1415  00001fb8          	L96_LF2:
 1416  00001fb8          	L94_LF2:
 1417  00001fb8          	L92_LF2:
 1418  00001fb8  8fc1fff0	lw	r1,-16(r30)
 1419  00001fbc  8fc20008	lw	r2,8(r30)
 1420  00001fc0  0022082a	slt	r1,r1,r2
 1421  00001fc4  10200040	beqz	r1,L90_LF2
 1422  00001fc8  54000000	nop; delay slot nop
 1423  00001fcc  8fc1fff4	lw	r1,-12(r30)
 1424  00001fd0  8fc20008	lw	r2,8(r30)
 1425  00001fd4  00200035	movi2fp	f0,r1
 1426  00001fd8  00400835	movi2fp	f1,r2
 1427  00001fdc  0401000e	mult	f0,f0,f1
 1428  00001fe0  00000834	movfp2i	r1,f0
 1429  00001fe4  afc1fff4	sw	-12(r30),r1
 1430  00001fe8  8fc1fff4	lw	r1,-12(r30)
 1431  00001fec  8fc2fff0	lw	r2,-16(r30)
 1432  00001ff0  00220820	add	r1,r1,r2
 1433  00001ff4  afc1fff4	sw	-12(r30),r1
 1434  00001ff8  8fc20000	lw	r2,(r30)
 1435  00001ffc  20410001	addi	r1,r2,#1
 1436  00002000  00011020	add	r2,r0,r1
 1437  00002004  afc20000	sw	(r30),r2
 1438  00002008          	L97_LF2:
 1439  00002008          	L90_LF2:
 1440  00002008  8fc1fff0	lw	r1,-16(r30)
 1441  0000200c  8fc20008	lw	r2,8(r30)
 1442  00002010  0022082a	slt	r1,r1,r2
 1443  00002014  1420000c	bnez	r1,L98_LF2
 1444  00002018  54000000	nop; delay slot nop
 1445  0000201c  0800000c	j	L89_LF2
 1446  00002020  54000000	nop; delay slot nop
 1447  00002024          	L98_LF2:
 1448  00002024  0bfffec8	j	L88_LF2
 1449  00002028  54000000	nop; delay slot nop
 1450  0000202c          	L89_LF2:
 1451  0000202c  8fc10004	lw	r1,4(r30)
 1452  00002030  64220000	snei	r2,r1,#0
 1453  00002034  10400010	beqz	r2,L99_LF2
 1454  00002038  54000000	nop; delay slot nop
 1455  0000203c  8fc10004	lw	r1,4(r30)
 1456  00002040  8fc20000	lw	r2,(r30)
 1457  00002044  ac220000	sw	(r1),r2
 1458  00002048          	L99_LF2:
 1459  00002048  8fc1fff4	lw	r1,-12(r30)
 1460  0000204c  8fc2ffec	lw	r2,-20(r30)
 1461  00002050  00200035	movi2fp	f0,r1
 1462  00002054  00400835	movi2fp	f1,r2
 1463  00002058  0401000e	mult	f0,f0,f1
 1464  0000205c  00000834	movfp2i	r1,f0
 1465  00002060  afc1fff4	sw	-12(r30),r1
 1466  00002064  8fc1fff4	lw	r1,-12(r30)
 1467  00002068  08000004	j	L72_LF2
 1468  0000206c  54000000	nop; delay slot nop
 1469  00002070          	L72_LF2:
 1470  00002070  8fa20000	lw	r2,0(r29)
 1471  00002074  8fdffff8	lw	r31,-8(r30)
 1472  00002078  001ee820	add	r29,r0,r30
 1473  0000207c  8fdefffc	lw	r30,-4(r30)
 1474  00002080  4be00000	jr	r31
 1475  00002084  54000000	nop
 1476  00002088          	.endproc _dstrtol
 1477  00002088          	.align 2
 1478  00002088          	.proc _bcopy
 1479  00002088          	.global _bcopy
 1480  00002088          	_bcopy:
 1481                      ;  Function 'bcopy'; 0 bytes of locals, 2 regs to save.
 1482  00002088  afbefffc	sw	-4(r29),r30; push fp
 1483  0000208c  001df020	add	r30,r0,r29; fp = sp
 1484  00002090  afbffff8	sw	-8(r29),r31; push ret addr
 1485  00002094  2fbd0010	subui	r29,r29,#16; alloc local storage
 1486  00002098  afa20000	sw	0(r29),r2
 1487  0000209c  afa30004	sw	4(r29),r3
 1488  000020a0  54000000	nop
 1489  000020a4          	L101_LF2:
 1490  000020a4  8fc10008	lw	r1,8(r30)
 1491  000020a8  2022ffff	addi	r2,r1,#-1
 1492  000020ac  afc20008	sw	8(r30),r2
 1493  000020b0  6c210000	sgti	r1,r1,#0
 1494  000020b4  1420000c	bnez	r1,L103_LF2
 1495  000020b8  54000000	nop; delay slot nop
 1496  000020bc  0800002c	j	L102_LF2
 1497  000020c0  54000000	nop; delay slot nop
 1498  000020c4          	L103_LF2:
 1499  000020c4  8fc10004	lw	r1,4(r30)
 1500  000020c8  20220001	addi	r2,r1,#1
 1501  000020cc  afc20004	sw	4(r30),r2
 1502  000020d0  8fc20000	lw	r2,(r30)
 1503  000020d4  20430001	addi	r3,r2,#1
 1504  000020d8  afc30000	sw	(r30),r3
 1505  000020dc  80420000	lb	r2,(r2)
 1506  000020e0  a0220000	sb	(r1),r2
 1507  000020e4  0bffffbc	j	L101_LF2
 1508  000020e8  54000000	nop; delay slot nop
 1509  000020ec          	L102_LF2:
 1510  000020ec          	L100_LF2:
 1511  000020ec  8fa20000	lw	r2,0(r29)
 1512  000020f0  8fa30004	lw	r3,4(r29)
 1513  000020f4  8fdffff8	lw	r31,-8(r30)
 1514  000020f8  001ee820	add	r29,r0,r30
 1515  000020fc  8fdefffc	lw	r30,-4(r30)
 1516  00002100  4be00000	jr	r31
 1517  00002104  54000000	nop
 1518  00002108          	.endproc _bcopy
 1519  00002108          	.align 2
 1520  00002108          	.proc _bzero
 1521  00002108          	.global _bzero
 1522  00002108          	_bzero:
 1523                      ;  Function 'bzero'; 0 bytes of locals, 1 regs to save.
 1524  00002108  afbefffc	sw	-4(r29),r30; push fp
 1525  0000210c  001df020	add	r30,r0,r29; fp = sp
 1526  00002110  afbffff8	sw	-8(r29),r31; push ret addr
 1527  00002114  2fbd0010	subui	r29,r29,#16; alloc local storage
 1528  00002118  afa20000	sw	0(r29),r2
 1529  0000211c  54000000	nop
 1530  00002120          	L105_LF2:
 1531  00002120  8fc10004	lw	r1,4(r30)
 1532  00002124  2022ffff	addi	r2,r1,#-1
 1533  00002128  afc20004	sw	4(r30),r2
 1534  0000212c  6c210000	sgti	r1,r1,#0
 1535  00002130  1420000c	bnez	r1,L107_LF2
 1536  00002134  54000000	nop; delay slot nop
 1537  00002138  08000020	j	L106_LF2
 1538  0000213c  54000000	nop; delay slot nop
 1539  00002140          	L107_LF2:
 1540  00002140  8fc10000	lw	r1,(r30)
 1541  00002144  20220001	addi	r2,r1,#1
 1542  00002148  afc20000	sw	(r30),r2
 1543  0000214c  20020000	addi	r2,r0,(#0x0)&0xff
 1544  00002150  a0220000	sb	(r1),r2
 1545  00002154  0bffffc8	j	L105_LF2
 1546  00002158  54000000	nop; delay slot nop
 1547  0000215c          	L106_LF2:
 1548  0000215c          	L104_LF2:
 1549  0000215c  8fa20000	lw	r2,0(r29)
 1550  00002160  8fdffff8	lw	r31,-8(r30)
 1551  00002164  001ee820	add	r29,r0,r30
 1552  00002168  8fdefffc	lw	r30,-4(r30)
 1553  0000216c  4be00000	jr	r31
 1554  00002170  54000000	nop
 1555  00002174          	.endproc _bzero
 1556  00002174          	.align 2
 1557  00002174          	.proc _min
 1558  00002174          	.global _min
 1559  00002174          	_min:
 1560                      ;  Function 'min'; 0 bytes of locals, 2 regs to save.
 1561  00002174  afbefffc	sw	-4(r29),r30; push fp
 1562  00002178  001df020	add	r30,r0,r29; fp = sp
 1563  0000217c  afbffff8	sw	-8(r29),r31; push ret addr
 1564  00002180  2fbd0010	subui	r29,r29,#16; alloc local storage
 1565  00002184  afa20000	sw	0(r29),r2
 1566  00002188  afa30004	sw	4(r29),r3
 1567  0000218c  8fc10000	lw	r1,(r30)
 1568  00002190  8fc20004	lw	r2,4(r30)
 1569  00002194  0022182c	sle	r3,r1,r2
 1570  00002198  14600008	bnez	r3,L109_LF2
 1571  0000219c  54000000	nop; delay slot nop
 1572  000021a0  8fc10004	lw	r1,4(r30)
 1573  000021a4          	L109_LF2:
 1574  000021a4  08000004	j	L108_LF2
 1575  000021a8  54000000	nop; delay slot nop
 1576  000021ac          	L108_LF2:
 1577  000021ac  8fa20000	lw	r2,0(r29)
 1578  000021b0  8fa30004	lw	r3,4(r29)
 1579  000021b4  8fdffff8	lw	r31,-8(r30)
 1580  000021b8  001ee820	add	r29,r0,r30
 1581  000021bc  8fdefffc	lw	r30,-4(r30)
 1582  000021c0  4be00000	jr	r31
 1583  000021c4  54000000	nop
 1584  000021c8          	.endproc _min
 1585  000021c8          	.align 2
 1586  000021c8          	.proc _max
 1587  000021c8          	.global _max
 1588  000021c8          	_max:
 1589                      ;  Function 'max'; 0 bytes of locals, 2 regs to save.
 1590  000021c8  afbefffc	sw	-4(r29),r30; push fp
 1591  000021cc  001df020	add	r30,r0,r29; fp = sp
 1592  000021d0  afbffff8	sw	-8(r29),r31; push ret addr
 1593  000021d4  2fbd0010	subui	r29,r29,#16; alloc local storage
 1594  000021d8  afa20000	sw	0(r29),r2
 1595  000021dc  afa30004	sw	4(r29),r3
 1596  000021e0  8fc10000	lw	r1,(r30)
 1597  000021e4  8fc20004	lw	r2,4(r30)
 1598  000021e8  0022182d	sge	r3,r1,r2
 1599  000021ec  14600008	bnez	r3,L111_LF2
 1600  000021f0  54000000	nop; delay slot nop
 1601  000021f4  8fc10004	lw	r1,4(r30)
 1602  000021f8          	L111_LF2:
 1603  000021f8  08000004	j	L110_LF2
 1604  000021fc  54000000	nop; delay slot nop
 1605  00002200          	L110_LF2:
 1606  00002200  8fa20000	lw	r2,0(r29)
 1607  00002204  8fa30004	lw	r3,4(r29)
 1608  00002208  8fdffff8	lw	r31,-8(r30)
 1609  0000220c  001ee820	add	r29,r0,r30
 1610  00002210  8fdefffc	lw	r30,-4(r30)
 1611  00002214  4be00000	jr	r31
 1612  00002218  54000000	nop
 1613  0000221c          	.endproc _max
 1614                      ;;; Ethan L. Miller, 1999.  Released to the public domain
 1615                      ;;;
 1616                      ;;; Most of the traps are called in files from libtraps.
 1619  0000221c          	.align 2
 1620  0000221c          	.proc _exit
 1621  0000221c          	.global _exit
 1622  0000221c          	_exit:
 1623  0000221c  44000300	trap	#0x300
 1624  00002220  4be00000	jr	r31
 1625  00002224  54000000	nop
 1626  00002228          	.endproc _exit
 1628                      ; for the benefit of gcc.
 1629  00002228          	.proc ___main
 1630  00002228          	.global ___main
 1631  00002228          	___main:
 1632  00002228  4be00000	jr	r31
 1633  0000222c  54000000	nop
 1634  00002230          	.endproc ___main
 1635  00002230          	.text
 1636  00002230          	.global _etext
 1637  00002230          	_etext:
 1638  00002230          	.align 3
 1639  00002230          	.data
 1640  000031ea          	.global _edata
 1641  000031ea          	_edata:
