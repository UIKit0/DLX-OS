 line   address	contents
    1                      ; Linked by DLX-LD.
    2                      ; MemSize 24576
    3                      ; Data size: 164
    4                      ; Text size: 4664
    5                      ; Stack size: 8192
    6  00000000          	.text 0x1000
    7  00001000          	.data 0x3000
    8                      ; Compiled by GCC
    9  00003000          	.text
   10  00001000          	.align 2
   11  00001000          	.proc _isspace
   12  00001000          	.global _isspace
   13  00001000          	_isspace:
   14                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
   15  00001000  afbefffc	sw	-4(r29),r30; push fp
   16  00001004  001df020	add	r30,r0,r29; fp = sp
   17  00001008  afbffff8	sw	-8(r29),r31; push ret addr
   18  0000100c  2fbd0010	subui	r29,r29,#16; alloc local storage
   19  00001010  afa20000	sw	0(r29),r2
   20  00001014  83c20003	lb	r2,3(r30)
   21  00001018  201f0000	addi	r31,r0,#0
   22  0000101c  304100ff	andi	r1,r2,#0x00ff
   23  00001020  60210020	seqi	r1,r1,#32
   24  00001024  14200018	bnez	r1,L6_LF0
   25  00001028  54000000	nop; not filled.
   26  0000102c  2041fff7	addi	r1,r2,#-9
   27  00001030  302100ff	andi	r1,r1,#0x00ff
   28  00001034  70210001	sleui	r1,r1,#1
   29  00001038  10200008	beqz	r1,L5_LF0
   30  0000103c  54000000	nop; not filled.
   31  00001040          	L6_LF0:
   32  00001040  201f0001	addi	r31,r0,#1
   33  00001044          	L5_LF0:
   34  00001044  001f0820	add	r1,r0,r31
   35  00001048  8fa20000	lw	r2,0(r29)
   36  0000104c  8fdffff8	lw	r31,-8(r30)
   37  00001050  001ee820	add	r29,r0,r30
   38  00001054  8fdefffc	lw	r30,-4(r30)
   39  00001058  4be00000	jr	r31
   40  0000105c  54000000	nop
   41  00001060          	.endproc _isspace
   42  00001060          	.align 2
   43  00001060          	.proc _isxdigit
   44  00001060          	.global _isxdigit
   45  00001060          	_isxdigit:
   46                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
   47  00001060  afbefffc	sw	-4(r29),r30; push fp
   48  00001064  001df020	add	r30,r0,r29; fp = sp
   49  00001068  afbffff8	sw	-8(r29),r31; push ret addr
   50  0000106c  2fbd0010	subui	r29,r29,#16; alloc local storage
   51  00001070  afa20000	sw	0(r29),r2
   52  00001074  83df0003	lb	r31,3(r30)
   53  00001078  20020000	addi	r2,r0,#0
   54  0000107c  23e1ffd0	addi	r1,r31,#-48
   55  00001080  302100ff	andi	r1,r1,#0x00ff
   56  00001084  70210009	sleui	r1,r1,#9
   57  00001088  14200028	bnez	r1,L12_LF0
   58  0000108c  54000000	nop; not filled.
   59  00001090  23e1ff9f	addi	r1,r31,#-97
   60  00001094  302100ff	andi	r1,r1,#0x00ff
   61  00001098  70210005	sleui	r1,r1,#5
   62  0000109c  14200014	bnez	r1,L12_LF0
   63  000010a0  54000000	nop; not filled.
   64  000010a4  33e100ff	andi	r1,r31,#0x00ff
   65  000010a8  64210041	snei	r1,r1,#65
   66  000010ac  14200008	bnez	r1,L11_LF0
   67  000010b0  54000000	nop; not filled.
   68  000010b4          	L12_LF0:
   69  000010b4  20020001	addi	r2,r0,#1
   70  000010b8          	L11_LF0:
   71  000010b8  00020820	add	r1,r0,r2
   72  000010bc  8fa20000	lw	r2,0(r29)
   73  000010c0  8fdffff8	lw	r31,-8(r30)
   74  000010c4  001ee820	add	r29,r0,r30
   75  000010c8  8fdefffc	lw	r30,-4(r30)
   76  000010cc  4be00000	jr	r31
   77  000010d0  54000000	nop
   78  000010d4          	.endproc _isxdigit
   79  000010d4          	.data
   80  00003000          	.align 2
   81  00003000          	_p6_LF0:
   82  00003000  00000000	.word 0
   83  00003004          	.align 2
   84  00003004          	LC0_LF0:
   85  00003004  55736167	.ascii "Usage: %s <handle_to_procs_completed_semaphore>\n\000"
   85  00003008  653a2025	
   85  0000300c  73203c68	
   85  00003010  616e646c	
   85  00003014  655f746f	
   85  00003018  5f70726f	
   85  0000301c  63735f63	
   85  00003020  6f6d706c	
   85  00003024  65746564	
   85  00003028  5f73656d	
   85  0000302c  6170686f	
   85  00003030  72653e0a	
   85  00003034  00      	
   86  00003035          	.align 2
   87  00003038          	LC1_LF0:
   88  00003038  68656c6c	.ascii "hello_world (%d): Bad semaphore s_procs_completed (%d)!\n\000"
   88  0000303c  6f5f776f	
   88  00003040  726c6420	
   88  00003044  28256429	
   88  00003048  3a204261	
   88  0000304c  64207365	
   88  00003050  6d617068	
   88  00003054  6f726520	
   88  00003058  735f7072	
   88  0000305c  6f63735f	
   88  00003060  636f6d70	
   88  00003064  6c657465	
   88  00003068  64202825	
   88  0000306c  6429210a	
   88  00003070  00      	
   89  00003071          	.align 2
   90  00003074          	LC2_LF0:
   91  00003074  68656c6c	.ascii "hello_world (%d): Done!\n\000"
   91  00003078  6f5f776f	
   91  0000307c  726c6420	
   91  00003080  28256429	
   91  00003084  3a20446f	
   91  00003088  6e65210a	
   91  0000308c  00      	
   92  0000308d          	.text
   93  000010d4          	.align 2
   94  000010d4          	.proc _main
   95  000010d4          	.global _main
   96  000010d4          	_main:
   97                      ;  Function 'main'; 0 bytes of locals, 0 regs to save.
   98  000010d4  afbefffc	sw	-4(r29),r30; push fp
   99  000010d8  001df020	add	r30,r0,r29; fp = sp
  100  000010dc  afbffff8	sw	-8(r29),r31; push ret addr
  101  000010e0  2fbd0008	subui	r29,r29,#8; alloc local storage
  102  000010e4  8fc20000	lw	r2,(r30)
  103  000010e8  8fc30004	lw	r3,4(r30)
  104  000010ec  0c001140	jal	___main
  105  000010f0  54000000	nop; not filled.
  106  000010f4  64410002	snei	r1,r2,#2
  107  000010f8  10200028	beqz	r1,L14_LF0
  108  000010fc  54000000	nop; not filled.
  109  00001100  23bdfff8	addi	r29,r29,#-8
  110  00001104  3c090000	lhi	r9,((LC0_LF0)>>16)&0xffff
  111  00001108  25293004	addui	r9,r9,(LC0_LF0)&0xffff
  112  0000110c  afa90000	sw	(r29),r9
  113  00001110  0c00025c	jal	_Printf
  114  00001114  54000000	nop; not filled.
  115  00001118  0c00035c	jal	_Exit
  116  0000111c  54000000	nop; not filled.
  117  00001120  23bd0008	addi	r29,r29,#8
  118  00001124          	L14_LF0:
  119  00001124  23bdfff0	addi	r29,r29,#-16
  120  00001128  8c630004	lw	r3,4(r3)
  121  0000112c  afa30000	sw	(r29),r3
  122  00001130  20090000	addi	r9,r0,#0
  123  00001134  afa90004	sw	4(r29),r9
  124  00001138  2009000a	addi	r9,r0,#10
  125  0000113c  afa90008	sw	8(r29),r9
  126  00001140  0c000bf0	jal	_dstrtol
  127  00001144  54000000	nop; not filled.
  128  00001148  00014020	add	r8,r0,r1
  129  0000114c  20090020	addi	r9,r0,#32
  130  00001150  afa90000	sw	(r29),r9
  131  00001154  0c00032c	jal	_malloc
  132  00001158  54000000	nop; not filled.
  133  0000115c  00013820	add	r7,r0,r1
  134  00001160  20090040	addi	r9,r0,#64
  135  00001164  afa90000	sw	(r29),r9
  136  00001168  0c000318	jal	_malloc
  137  0000116c  54000000	nop; not filled.
  138  00001170  00013020	add	r6,r0,r1
  139  00001174  20090017	addi	r9,r0,#23
  140  00001178  afa90000	sw	(r29),r9
  141  0000117c  0c000304	jal	_malloc
  142  00001180  54000000	nop; not filled.
  143  00001184  00012820	add	r5,r0,r1
  144  00001188  20090080	addi	r9,r0,#128
  145  0000118c  afa90000	sw	(r29),r9
  146  00001190  0c0002f0	jal	_malloc
  147  00001194  54000000	nop; not filled.
  148  00001198  00012020	add	r4,r0,r1
  149  0000119c  20090100	addi	r9,r0,#256
  150  000011a0  afa90000	sw	(r29),r9
  151  000011a4  0c0002dc	jal	_malloc
  152  000011a8  54000000	nop; not filled.
  153  000011ac  00011820	add	r3,r0,r1
  154  000011b0  afa90000	sw	(r29),r9
  155  000011b4  0c0002cc	jal	_malloc
  156  000011b8  54000000	nop; not filled.
  157  000011bc  00011020	add	r2,r0,r1
  158  000011c0  afa70000	sw	(r29),r7
  159  000011c4  0c0002c4	jal	_mfree
  160  000011c8  54000000	nop; not filled.
  161  000011cc  afa60000	sw	(r29),r6
  162  000011d0  0c0002b8	jal	_mfree
  163  000011d4  54000000	nop; not filled.
  164  000011d8  afa50000	sw	(r29),r5
  165  000011dc  0c0002ac	jal	_mfree
  166  000011e0  54000000	nop; not filled.
  167  000011e4  afa40000	sw	(r29),r4
  168  000011e8  0c0002a0	jal	_mfree
  169  000011ec  54000000	nop; not filled.
  170  000011f0  afa30000	sw	(r29),r3
  171  000011f4  0c000294	jal	_mfree
  172  000011f8  54000000	nop; not filled.
  173  000011fc  afa20000	sw	(r29),r2
  174  00001200  0c000288	jal	_mfree
  175  00001204  54000000	nop; not filled.
  176  00001208  afa80000	sw	(r29),r8
  177  0000120c  0c0001b4	jal	_sem_signal
  178  00001210  54000000	nop; not filled.
  179  00001214  23bd0010	addi	r29,r29,#16
  180  00001218  64210001	snei	r1,r1,#1
  181  0000121c  10200038	beqz	r1,L15_LF0
  182  00001220  54000000	nop; not filled.
  183  00001224  0c000154	jal	_getpid
  184  00001228  54000000	nop; not filled.
  185  0000122c  23bdfff0	addi	r29,r29,#-16
  186  00001230  3c090000	lhi	r9,((LC1_LF0)>>16)&0xffff
  187  00001234  25293038	addui	r9,r9,(LC1_LF0)&0xffff
  188  00001238  afa90000	sw	(r29),r9
  189  0000123c  afa10004	sw	4(r29),r1
  190  00001240  afa80008	sw	8(r29),r8
  191  00001244  0c000128	jal	_Printf
  192  00001248  54000000	nop; not filled.
  193  0000124c  0c000228	jal	_Exit
  194  00001250  54000000	nop; not filled.
  195  00001254  23bd0010	addi	r29,r29,#16
  196  00001258          	L15_LF0:
  197  00001258  0c000120	jal	_getpid
  198  0000125c  54000000	nop; not filled.
  199  00001260  23bdfff8	addi	r29,r29,#-8
  200  00001264  3c090000	lhi	r9,((LC2_LF0)>>16)&0xffff
  201  00001268  25293074	addui	r9,r9,(LC2_LF0)&0xffff
  202  0000126c  afa90000	sw	(r29),r9
  203  00001270  afa10004	sw	4(r29),r1
  204  00001274  0c0000f8	jal	_Printf
  205  00001278  54000000	nop; not filled.
  206  0000127c  23bd0008	addi	r29,r29,#8
  207  00001280  0c000fa0	jal	_exit
  208  00001284  54000000	nop
  209  00001288          	.endproc _main
  210  00001288          	.data
  211  0000308d          	.align 2
  212  00003090          	LC3_LF0:
  213  00003090  68656c6c	.ascii "hello_world, i= %d\n\000"
  213  00003094  6f5f776f	
  213  00003098  726c642c	
  213  0000309c  20693d20	
  213  000030a0  25640a00	
  214  000030a4          	.text
  215  00001288          	.align 2
  216  00001288          	.proc _hello
  217  00001288          	.global _hello
  218  00001288          	_hello:
  219                      ;  Function 'hello'; 400 bytes of locals, 3 regs to save.
  220  00001288  afbefffc	sw	-4(r29),r30; push fp
  221  0000128c  001df020	add	r30,r0,r29; fp = sp
  222  00001290  afbffff8	sw	-8(r29),r31; push ret addr
  223  00001294  2fbd01a8	subui	r29,r29,#424; alloc local storage
  224  00001298  afa20000	sw	0(r29),r2
  225  0000129c  afa30004	sw	4(r29),r3
  226  000012a0  afa40008	sw	8(r29),r4
  227  000012a4  8fc20000	lw	r2,(r30)
  228  000012a8  23dffff8	addi	r31,r30,#-8
  229  000012ac  23c30184	addi	r3,r30,#388
  230  000012b0          	L27_LF0:
  231  000012b0  afe2fe70	sw	-400(r31),r2
  232  000012b4  23ff0004	addi	r31,r31,#4
  233  000012b8  03e3082c	sle	r1,r31,r3
  234  000012bc  1420fff0	bnez	r1,L27_LF0
  235  000012c0  54000000	nop; not filled.
  236  000012c4  23bdfff8	addi	r29,r29,#-8
  237  000012c8  3c040000	lhi	r4,((LC3_LF0)>>16)&0xffff
  238  000012cc  24843090	addui	r4,r4,(LC3_LF0)&0xffff
  239  000012d0  afa40000	sw	(r29),r4
  240  000012d4  afa20004	sw	4(r29),r2
  241  000012d8  0c000094	jal	_Printf
  242  000012dc  54000000	nop; not filled.
  243  000012e0  23bd0008	addi	r29,r29,#8
  244  000012e4  6c410000	sgti	r1,r2,#0
  245  000012e8  1020001c	beqz	r1,L29_LF0
  246  000012ec  54000000	nop; not filled.
  247  000012f0  2042ffff	addi	r2,r2,#-1
  248  000012f4  23bdfff8	addi	r29,r29,#-8
  249  000012f8  afa20000	sw	(r29),r2
  250  000012fc  0fffff88	jal	_hello
  251  00001300  54000000	nop; not filled.
  252  00001304  23bd0008	addi	r29,r29,#8
  253  00001308          	L29_LF0:
  254  00001308  8fa20000	lw	r2,0(r29)
  255  0000130c  8fa30004	lw	r3,4(r29)
  256  00001310  8fa40008	lw	r4,8(r29)
  257  00001314  8fdffff8	lw	r31,-8(r30)
  258  00001318  001ee820	add	r29,r0,r30
  259  0000131c  8fdefffc	lw	r30,-4(r30)
  260  00001320  4be00000	jr	r31
  261  00001324  54000000	nop
  262  00001328          	.endproc _hello
  263                      ;;;
  264                      ;;; Stub functions for DLX traps.
  265                      ;;;
  266                      ;;; Ethan L. Miller, 1999.  Released to the public domain.
  267                      ;;;
  268                      ;;; The traps such as Open and Close
  269                      ;;; (note the capital letters) are for use by user programs.  The traps
  270                      ;;; with names such as open and close (lower case) are for use by the OS.
  271                      ;;;
  274  00001328          	.align 2
  276                      ;;; The following are the traps to be used by user-level programs
  277                      ;;;
  279  00001328          	.align 2
  280  00001328          	.proc _Open
  281  00001328          	.global _Open
  282  00001328          	_Open:
  283                      ;;; Note that trap #0x213 actually causes a trap vector in the OS of
  284                      ;;; 0x1213.  The same is true for other user traps.  Thus, a user trap
  285                      ;;; with trap #0x240 will result in a trap vector of 0x1240 in the OS.
  286  00001328  44000213	trap	#0x213
  287  0000132c  4be00000	jr	r31
  288  00001330  54000000	nop
  289  00001334          	.endproc _Open
  291  00001334          	.proc _Close
  292  00001334          	.global _Close
  293  00001334          	_Close:
  294  00001334  44000214	trap	#0x214
  295  00001338  4be00000	jr	r31
  296  0000133c  54000000	nop
  297  00001340          	.endproc _Close
  299  00001340          	.proc _Read
  300  00001340          	.global _Read
  301  00001340          	_Read:
  302  00001340  44000210	trap	#0x210
  303  00001344  4be00000	jr	r31
  304  00001348  54000000	nop
  305  0000134c          	.endproc _Read
  307  0000134c          	.proc _Write
  308  0000134c          	.global _Write
  309  0000134c          	_Write:
  310  0000134c  44000211	trap	#0x211
  311  00001350  4be00000	jr	r31
  312  00001354  54000000	nop
  313  00001358          	.endproc _Write
  315  00001358          	.proc _Lseek
  316  00001358          	.global _Lseek
  317  00001358          	_Lseek:
  318  00001358  44000212	trap	#0x212
  319  0000135c  4be00000	jr	r31
  320  00001360  54000000	nop
  321  00001364          	.endproc _Lseek
  323  00001364          	.proc _Putchar
  324  00001364          	.global _Putchar
  325  00001364          	_Putchar:
  326  00001364  44000280	trap	#0x280
  327  00001368  4be00000	jr	r31
  328  0000136c  54000000	nop
  329  00001370          	.endproc _Putchar
  331  00001370          	.proc _Printf
  332  00001370          	.global _Printf
  333  00001370          	_Printf:
  334  00001370  44000201	trap	#0x201
  335  00001374  4be00000	jr	r31
  336  00001378  54000000	nop
  337  0000137c          	.endproc _Printf
  339  0000137c          	.proc _getpid
  340  0000137c          	.global _getpid
  341  0000137c          	_getpid:
  342  0000137c  44000431	trap	#0x431
  343  00001380  4be00000	jr	r31
  344  00001384  54000000	nop
  345  00001388          	.endproc _getpid
  347  00001388          	.proc _process_create
  348  00001388          	.global _process_create
  349  00001388          	_process_create:
  350  00001388  44000432	trap	#0x432
  351  0000138c  4be00000	jr	r31
  352  00001390  54000000	nop
  353  00001394          	.endproc _process_create
  355  00001394          	.proc _shmget
  356  00001394          	.global _shmget
  357  00001394          	_shmget:
  358  00001394  44000440	trap	#0x440
  359  00001398  4be00000	jr	r31
  360  0000139c  54000000	nop
  361  000013a0          	.endproc _shmget
  363  000013a0          	.proc _shmat
  364  000013a0          	.global _shmat
  365  000013a0          	_shmat:
  366  000013a0  44000441	trap	#0x441
  367  000013a4  4be00000	jr	r31
  368  000013a8  54000000	nop
  369  000013ac          	.endproc _shmat
  371  000013ac          	.proc _sem_create
  372  000013ac          	.global _sem_create
  373  000013ac          	_sem_create:
  374  000013ac  44000450	trap	#0x450
  375  000013b0  4be00000	jr	r31
  376  000013b4  54000000	nop
  377  000013b8          	.endproc _sem_create
  379  000013b8          	.proc _sem_wait
  380  000013b8          	.global _sem_wait
  381  000013b8          	_sem_wait:
  382  000013b8  44000451	trap	#0x451
  383  000013bc  4be00000	jr	r31
  384  000013c0  54000000	nop
  385  000013c4          	.endproc _sem_wait
  387  000013c4          	.proc _sem_signal
  388  000013c4          	.global _sem_signal
  389  000013c4          	_sem_signal:
  390  000013c4  44000452	trap	#0x452
  391  000013c8  4be00000	jr	r31
  392  000013cc  54000000	nop
  393  000013d0          	.endproc _sem_signal
  395  000013d0          	.proc _lock_create
  396  000013d0          	.global _lock_create
  397  000013d0          	_lock_create:
  398  000013d0  44000453	trap	#0x453
  399  000013d4  4be00000	jr	r31
  400  000013d8  54000000	nop
  401  000013dc          	.endproc _lock_create
  403  000013dc          	.proc _lock_acquire
  404  000013dc          	.global _lock_acquire
  405  000013dc          	_lock_acquire:
  406  000013dc  44000454	trap	#0x454
  407  000013e0  4be00000	jr	r31
  408  000013e4  54000000	nop
  409  000013e8          	.endproc _lock_acquire
  411  000013e8          	.proc _lock_release
  412  000013e8          	.global _lock_release
  413  000013e8          	_lock_release:
  414  000013e8  44000455	trap	#0x455
  415  000013ec  4be00000	jr	r31
  416  000013f0  54000000	nop
  417  000013f4          	.endproc _lock_release
  419  000013f4          	.proc _cond_create
  420  000013f4          	.global _cond_create
  421  000013f4          	_cond_create:
  422  000013f4  44000456	trap	#0x456
  423  000013f8  4be00000	jr	r31
  424  000013fc  54000000	nop
  425  00001400          	.endproc _cond_create
  427  00001400          	.proc _cond_wait
  428  00001400          	.global _cond_wait
  429  00001400          	_cond_wait:
  430  00001400  44000457	trap	#0x457
  431  00001404  4be00000	jr	r31
  432  00001408  54000000	nop
  433  0000140c          	.endproc _cond_wait
  435  0000140c          	.proc _cond_signal
  436  0000140c          	.global _cond_signal
  437  0000140c          	_cond_signal:
  438  0000140c  44000458	trap	#0x458
  439  00001410  4be00000	jr	r31
  440  00001414  54000000	nop
  441  00001418          	.endproc _cond_signal
  443  00001418          	.proc _cond_broadcast
  444  00001418          	.global _cond_broadcast
  445  00001418          	_cond_broadcast:
  446  00001418  44000459	trap	#0x459
  447  0000141c  4be00000	jr	r31
  448  00001420  54000000	nop
  449  00001424          	.endproc _cond_broadcast
  451  00001424          	.proc _mbox_create
  452  00001424          	.global _mbox_create
  453  00001424          	_mbox_create:
  454  00001424  44000460	trap	#0x460
  455  00001428  4be00000	jr	r31
  456  0000142c  54000000	nop
  457  00001430          	.endproc _mbox_create
  459  00001430          	.proc _mbox_open
  460  00001430          	.global _mbox_open
  461  00001430          	_mbox_open:
  462  00001430  44000461	trap	#0x461
  463  00001434  4be00000	jr	r31
  464  00001438  54000000	nop
  465  0000143c          	.endproc _mbox_open
  467  0000143c          	.proc _mbox_close
  468  0000143c          	.global _mbox_close
  469  0000143c          	_mbox_close:
  470  0000143c  44000462	trap	#0x462
  471  00001440  4be00000	jr	r31
  472  00001444  54000000	nop
  473  00001448          	.endproc _mbox_close
  475  00001448          	.proc _mbox_send
  476  00001448          	.global _mbox_send
  477  00001448          	_mbox_send:
  478  00001448  44000463	trap	#0x463
  479  0000144c  4be00000	jr	r31
  480  00001450  54000000	nop
  481  00001454          	.endproc _mbox_send
  483  00001454          	.proc _mbox_recv
  484  00001454          	.global _mbox_recv
  485  00001454          	_mbox_recv:
  486  00001454  44000464	trap	#0x464
  487  00001458  4be00000	jr	r31
  488  0000145c  54000000	nop
  489  00001460          	.endproc _mbox_recv
  491  00001460          	.proc _sleep
  492  00001460          	.global _sleep
  493  00001460          	_sleep:
  494  00001460  44000465	trap	#0x465
  495  00001464  4be00000	jr	r31
  496  00001468  54000000	nop
  497  0000146c          	.endproc _sleep
  499  0000146c          	.proc _yield
  500  0000146c          	.global _yield
  501  0000146c          	_yield:
  502  0000146c  44000466	trap	#0x466
  503  00001470  4be00000	jr	r31
  504  00001474  54000000	nop
  505  00001478          	.endproc _yield
  508  00001478          	.proc _Exit
  509  00001478          	.global _Exit
  510  00001478          	_Exit:
  511  00001478  44000500	trap	#0x500
  512  0000147c  4be00000	jr	r31
  513  00001480  54000000	nop
  514  00001484          	.endproc _Exit
  517  00001484          	.proc _malloc
  518  00001484          	.global _malloc
  519  00001484          	_malloc:
  520  00001484  44000467	trap	#0x467
  521  00001488  4be00000	jr	r31
  522  0000148c          	.endproc _malloc
  525  0000148c          	.proc _mfree
  526  0000148c          	.global _mfree
  527  0000148c          	_mfree:
  528  0000148c  44000468	trap	#0x468
  529  00001490  4be00000	jr	r31
  530  00001494          	.endproc _mfree
  531                      ; Compiled by GCC
  533  00001494          	.align 2
  534  00001494          	.proc _isspace
  535  00001494          	.global _isspace
  536  00001494          	_isspace:
  537                      ;  Function 'isspace'; 0 bytes of locals, 3 regs to save.
  538  00001494  afbefffc	sw	-4(r29),r30; push fp
  539  00001498  001df020	add	r30,r0,r29; fp = sp
  540  0000149c  afbffff8	sw	-8(r29),r31; push ret addr
  541  000014a0  2fbd0018	subui	r29,r29,#24; alloc local storage
  542  000014a4  afa20000	sw	0(r29),r2
  543  000014a8  afa30004	sw	4(r29),r3
  544  000014ac  afa40008	sw	8(r29),r4
  545  000014b0  83c20003	lb	r2,3(r30)
  546  000014b4  20010000	addi	r1,r0,#0
  547  000014b8  304300ff	andi	r3,r2,#0x00ff
  548  000014bc  60640020	seqi	r4,r3,#32
  549  000014c0  1480002c	bnez	r4,L3_LF2
  550  000014c4  54000000	nop; delay slot nop
  551  000014c8  304300ff	andi	r3,r2,#0x00ff
  552  000014cc  60640009	seqi	r4,r3,#9
  553  000014d0  1480001c	bnez	r4,L3_LF2
  554  000014d4  54000000	nop; delay slot nop
  555  000014d8  304300ff	andi	r3,r2,#0x00ff
  556  000014dc  6064000a	seqi	r4,r3,#10
  557  000014e0  1480000c	bnez	r4,L3_LF2
  558  000014e4  54000000	nop; delay slot nop
  559  000014e8  08000008	j	L2_LF2
  560  000014ec  54000000	nop; delay slot nop
  561  000014f0          	L3_LF2:
  562  000014f0  20010001	addi	r1,r0,#1
  563  000014f4          	L2_LF2:
  564  000014f4  08000004	j	L1_LF2
  565  000014f8  54000000	nop; delay slot nop
  566  000014fc          	L1_LF2:
  567  000014fc  8fa20000	lw	r2,0(r29)
  568  00001500  8fa30004	lw	r3,4(r29)
  569  00001504  8fa40008	lw	r4,8(r29)
  570  00001508  8fdffff8	lw	r31,-8(r30)
  571  0000150c  001ee820	add	r29,r0,r30
  572  00001510  8fdefffc	lw	r30,-4(r30)
  573  00001514  4be00000	jr	r31
  574  00001518  54000000	nop
  575  0000151c          	.endproc _isspace
  576  0000151c          	.align 2
  577  0000151c          	.proc _isxdigit
  578  0000151c          	.global _isxdigit
  579  0000151c          	_isxdigit:
  580                      ;  Function 'isxdigit'; 0 bytes of locals, 3 regs to save.
  581  0000151c  afbefffc	sw	-4(r29),r30; push fp
  582  00001520  001df020	add	r30,r0,r29; fp = sp
  583  00001524  afbffff8	sw	-8(r29),r31; push ret addr
  584  00001528  2fbd0018	subui	r29,r29,#24; alloc local storage
  585  0000152c  afa20000	sw	0(r29),r2
  586  00001530  afa30004	sw	4(r29),r3
  587  00001534  afa40008	sw	8(r29),r4
  588  00001538  83c20003	lb	r2,3(r30)
  589  0000153c  20010000	addi	r1,r0,#0
  590  00001540  304300ff	andi	r3,r2,#0x00ff
  591  00001544  6c64002f	sgtui	r4,r3,#47
  592  00001548  1080001c	beqz	r4,L7_LF2
  593  0000154c  54000000	nop; delay slot nop
  594  00001550  304300ff	andi	r3,r2,#0x00ff
  595  00001554  70640039	sleui	r4,r3,#57
  596  00001558  1480005c	bnez	r4,L6_LF2
  597  0000155c  54000000	nop; delay slot nop
  598  00001560  08000004	j	L7_LF2
  599  00001564  54000000	nop; delay slot nop
  600  00001568          	L7_LF2:
  601  00001568  304300ff	andi	r3,r2,#0x00ff
  602  0000156c  6c640060	sgtui	r4,r3,#96
  603  00001570  1080001c	beqz	r4,L8_LF2
  604  00001574  54000000	nop; delay slot nop
  605  00001578  304300ff	andi	r3,r2,#0x00ff
  606  0000157c  70640066	sleui	r4,r3,#102
  607  00001580  14800034	bnez	r4,L6_LF2
  608  00001584  54000000	nop; delay slot nop
  609  00001588  08000004	j	L8_LF2
  610  0000158c  54000000	nop; delay slot nop
  611  00001590          	L8_LF2:
  612  00001590  304300ff	andi	r3,r2,#0x00ff
  613  00001594  6c640040	sgtui	r4,r3,#64
  614  00001598  10800020	beqz	r4,L5_LF2
  615  0000159c  54000000	nop; delay slot nop
  616  000015a0  304300ff	andi	r3,r2,#0x00ff
  617  000015a4  70640041	sleui	r4,r3,#65
  618  000015a8  1480000c	bnez	r4,L6_LF2
  619  000015ac  54000000	nop; delay slot nop
  620  000015b0  08000008	j	L5_LF2
  621  000015b4  54000000	nop; delay slot nop
  622  000015b8          	L6_LF2:
  623  000015b8  20010001	addi	r1,r0,#1
  624  000015bc          	L5_LF2:
  625  000015bc  08000004	j	L4_LF2
  626  000015c0  54000000	nop; delay slot nop
  627  000015c4          	L4_LF2:
  628  000015c4  8fa20000	lw	r2,0(r29)
  629  000015c8  8fa30004	lw	r3,4(r29)
  630  000015cc  8fa40008	lw	r4,8(r29)
  631  000015d0  8fdffff8	lw	r31,-8(r30)
  632  000015d4  001ee820	add	r29,r0,r30
  633  000015d8  8fdefffc	lw	r30,-4(r30)
  634  000015dc  4be00000	jr	r31
  635  000015e0  54000000	nop
  636  000015e4          	.endproc _isxdigit
  637  000015e4          	.align 2
  638  000015e4          	.proc _dstrcpy
  639  000015e4          	.global _dstrcpy
  640  000015e4          	_dstrcpy:
  641                      ;  Function 'dstrcpy'; 8 bytes of locals, 2 regs to save.
  642  000015e4  afbefffc	sw	-4(r29),r30; push fp
  643  000015e8  001df020	add	r30,r0,r29; fp = sp
  644  000015ec  afbffff8	sw	-8(r29),r31; push ret addr
  645  000015f0  2fbd0018	subui	r29,r29,#24; alloc local storage
  646  000015f4  afa20000	sw	0(r29),r2
  647  000015f8  afa30004	sw	4(r29),r3
  648  000015fc  8fc10000	lw	r1,(r30)
  649  00001600  afc1fff4	sw	-12(r30),r1
  650  00001604          	L10_LF2:
  651  00001604  8fc10000	lw	r1,(r30)
  652  00001608  20220001	addi	r2,r1,#1
  653  0000160c  afc20000	sw	(r30),r2
  654  00001610  8fc20004	lw	r2,4(r30)
  655  00001614  20430001	addi	r3,r2,#1
  656  00001618  afc30004	sw	4(r30),r3
  657  0000161c  80420000	lb	r2,(r2)
  658  00001620  a0220000	sb	(r1),r2
  659  00001624  a3c2fff3	sb	-13(r30),r2
  660  00001628          	L12_LF2:
  661  00001628  93c1fff3	lbu	r1,-13(r30)
  662  0000162c  64220000	snei	r2,r1,#0
  663  00001630  1440000c	bnez	r2,L13_LF2
  664  00001634  54000000	nop; delay slot nop
  665  00001638  0800000c	j	L11_LF2
  666  0000163c  54000000	nop; delay slot nop
  667  00001640          	L13_LF2:
  668  00001640  0bffffc0	j	L10_LF2
  669  00001644  54000000	nop; delay slot nop
  670  00001648          	L11_LF2:
  671  00001648  8fc1fff4	lw	r1,-12(r30)
  672  0000164c  08000004	j	L9_LF2
  673  00001650  54000000	nop; delay slot nop
  674  00001654          	L9_LF2:
  675  00001654  8fa20000	lw	r2,0(r29)
  676  00001658  8fa30004	lw	r3,4(r29)
  677  0000165c  8fdffff8	lw	r31,-8(r30)
  678  00001660  001ee820	add	r29,r0,r30
  679  00001664  8fdefffc	lw	r30,-4(r30)
  680  00001668  4be00000	jr	r31
  681  0000166c  54000000	nop
  682  00001670          	.endproc _dstrcpy
  683  00001670          	.align 2
  684  00001670          	.proc _dstrncpy
  685  00001670          	.global _dstrncpy
  686  00001670          	_dstrncpy:
  687                      ;  Function 'dstrncpy'; 8 bytes of locals, 2 regs to save.
  688  00001670  afbefffc	sw	-4(r29),r30; push fp
  689  00001674  001df020	add	r30,r0,r29; fp = sp
  690  00001678  afbffff8	sw	-8(r29),r31; push ret addr
  691  0000167c  2fbd0018	subui	r29,r29,#24; alloc local storage
  692  00001680  afa20000	sw	0(r29),r2
  693  00001684  afa30004	sw	4(r29),r3
  694  00001688  8fc10000	lw	r1,(r30)
  695  0000168c  afc1fff4	sw	-12(r30),r1
  696  00001690          	L15_LF2:
  697  00001690  8fc10008	lw	r1,8(r30)
  698  00001694  2022ffff	addi	r2,r1,#-1
  699  00001698  afc20008	sw	8(r30),r2
  700  0000169c  70210000	slei	r1,r1,#0
  701  000016a0  1020000c	beqz	r1,L18_LF2
  702  000016a4  54000000	nop; delay slot nop
  703  000016a8  08000048	j	L16_LF2
  704  000016ac  54000000	nop; delay slot nop
  705  000016b0          	L18_LF2:
  706  000016b0  8fc10000	lw	r1,(r30)
  707  000016b4  20220001	addi	r2,r1,#1
  708  000016b8  afc20000	sw	(r30),r2
  709  000016bc  8fc20004	lw	r2,4(r30)
  710  000016c0  20430001	addi	r3,r2,#1
  711  000016c4  afc30004	sw	4(r30),r3
  712  000016c8  80420000	lb	r2,(r2)
  713  000016cc  a0220000	sb	(r1),r2
  714  000016d0  a3c2fff3	sb	-13(r30),r2
  715  000016d4          	L17_LF2:
  716  000016d4  93c1fff3	lbu	r1,-13(r30)
  717  000016d8  64220000	snei	r2,r1,#0
  718  000016dc  1440000c	bnez	r2,L19_LF2
  719  000016e0  54000000	nop; delay slot nop
  720  000016e4  0800000c	j	L16_LF2
  721  000016e8  54000000	nop; delay slot nop
  722  000016ec          	L19_LF2:
  723  000016ec  0bffffa0	j	L15_LF2
  724  000016f0  54000000	nop; delay slot nop
  725  000016f4          	L16_LF2:
  726  000016f4  8fc1fff4	lw	r1,-12(r30)
  727  000016f8  08000004	j	L14_LF2
  728  000016fc  54000000	nop; delay slot nop
  729  00001700          	L14_LF2:
  730  00001700  8fa20000	lw	r2,0(r29)
  731  00001704  8fa30004	lw	r3,4(r29)
  732  00001708  8fdffff8	lw	r31,-8(r30)
  733  0000170c  001ee820	add	r29,r0,r30
  734  00001710  8fdefffc	lw	r30,-4(r30)
  735  00001714  4be00000	jr	r31
  736  00001718  54000000	nop
  737  0000171c          	.endproc _dstrncpy
  738  0000171c          	.align 2
  739  0000171c          	.proc _dstrcat
  740  0000171c          	.global _dstrcat
  741  0000171c          	_dstrcat:
  742                      ;  Function 'dstrcat'; 8 bytes of locals, 1 regs to save.
  743  0000171c  afbefffc	sw	-4(r29),r30; push fp
  744  00001720  001df020	add	r30,r0,r29; fp = sp
  745  00001724  afbffff8	sw	-8(r29),r31; push ret addr
  746  00001728  2fbd0018	subui	r29,r29,#24; alloc local storage
  747  0000172c  afa20000	sw	0(r29),r2
  748  00001730  8fc10000	lw	r1,(r30)
  749  00001734  afc1fff4	sw	-12(r30),r1
  750  00001738          	L21_LF2:
  751  00001738  8fc10000	lw	r1,(r30)
  752  0000173c  90220000	lbu	r2,(r1)
  753  00001740  64410000	snei	r1,r2,#0
  754  00001744  1420000c	bnez	r1,L23_LF2
  755  00001748  54000000	nop; delay slot nop
  756  0000174c  0800001c	j	L22_LF2
  757  00001750  54000000	nop; delay slot nop
  758  00001754          	L23_LF2:
  759  00001754  8fc20000	lw	r2,(r30)
  760  00001758  20410001	addi	r1,r2,#1
  761  0000175c  00011020	add	r2,r0,r1
  762  00001760  afc20000	sw	(r30),r2
  763  00001764  0bffffd0	j	L21_LF2
  764  00001768  54000000	nop; delay slot nop
  765  0000176c          	L22_LF2:
  766  0000176c  23bdfff8	addi	r29,r29,#-8
  767  00001770  001d0820	add	r1,r0,r29
  768  00001774  8fc20000	lw	r2,(r30)
  769  00001778  ac220000	sw	(r1),r2
  770  0000177c  8fc20004	lw	r2,4(r30)
  771  00001780  ac220004	sw	4(r1),r2
  772  00001784  0ffffe5c	jal	_dstrcpy
  773  00001788  54000000	nop; delay slot nop
  774  0000178c  23bd0008	addi	r29,r29,#8
  775  00001790  8fc1fff4	lw	r1,-12(r30)
  776  00001794  08000004	j	L20_LF2
  777  00001798  54000000	nop; delay slot nop
  778  0000179c          	L20_LF2:
  779  0000179c  8fa20000	lw	r2,0(r29)
  780  000017a0  8fdffff8	lw	r31,-8(r30)
  781  000017a4  001ee820	add	r29,r0,r30
  782  000017a8  8fdefffc	lw	r30,-4(r30)
  783  000017ac  4be00000	jr	r31
  784  000017b0  54000000	nop
  785  000017b4          	.endproc _dstrcat
  786  000017b4          	.align 2
  787  000017b4          	.proc _dstrncmp
  788  000017b4          	.global _dstrncmp
  789  000017b4          	_dstrncmp:
  790                      ;  Function 'dstrncmp'; 8 bytes of locals, 2 regs to save.
  791  000017b4  afbefffc	sw	-4(r29),r30; push fp
  792  000017b8  001df020	add	r30,r0,r29; fp = sp
  793  000017bc  afbffff8	sw	-8(r29),r31; push ret addr
  794  000017c0  2fbd0018	subui	r29,r29,#24; alloc local storage
  795  000017c4  afa20000	sw	0(r29),r2
  796  000017c8  afa30004	sw	4(r29),r3
  797  000017cc  54000000	nop
  798  000017d0  20010000	addi	r1,r0,#0
  799  000017d4  afc1fff4	sw	-12(r30),r1
  800  000017d8          	L25_LF2:
  801  000017d8  8fc1fff4	lw	r1,-12(r30)
  802  000017dc  8fc20008	lw	r2,8(r30)
  803  000017e0  0022082a	slt	r1,r1,r2
  804  000017e4  1420000c	bnez	r1,L28_LF2
  805  000017e8  54000000	nop; delay slot nop
  806  000017ec  08000088	j	L26_LF2
  807  000017f0  54000000	nop; delay slot nop
  808  000017f4          	L28_LF2:
  809  000017f4  8fc10004	lw	r1,4(r30)
  810  000017f8  90220000	lbu	r2,(r1)
  811  000017fc  64410000	snei	r1,r2,#0
  812  00001800  14200018	bnez	r1,L29_LF2
  813  00001804  54000000	nop; delay slot nop
  814  00001808  20010000	addi	r1,r0,#0
  815  0000180c  080000d8	j	L24_LF2
  816  00001810  54000000	nop; delay slot nop
  817  00001814  08000028	j	L30_LF2
  818  00001818  54000000	nop; delay slot nop
  819  0000181c          	L29_LF2:
  820  0000181c  8fc10000	lw	r1,(r30)
  821  00001820  8fc20004	lw	r2,4(r30)
  822  00001824  90210000	lbu	r1,(r1)
  823  00001828  90420000	lbu	r2,(r2)
  824  0000182c  00220829	sne	r1,r1,r2
  825  00001830  1020000c	beqz	r1,L30_LF2
  826  00001834  54000000	nop; delay slot nop
  827  00001838  0800003c	j	L26_LF2
  828  0000183c  54000000	nop; delay slot nop
  829  00001840          	L31_LF2:
  830  00001840          	L30_LF2:
  831  00001840  8fc20000	lw	r2,(r30)
  832  00001844  20410001	addi	r1,r2,#1
  833  00001848  00011020	add	r2,r0,r1
  834  0000184c  afc20000	sw	(r30),r2
  835  00001850  8fc20004	lw	r2,4(r30)
  836  00001854  20410001	addi	r1,r2,#1
  837  00001858  00011020	add	r2,r0,r1
  838  0000185c  afc20004	sw	4(r30),r2
  839  00001860          	L27_LF2:
  840  00001860  8fc2fff4	lw	r2,-12(r30)
  841  00001864  20410001	addi	r1,r2,#1
  842  00001868  00011020	add	r2,r0,r1
  843  0000186c  afc2fff4	sw	-12(r30),r2
  844  00001870  0bffff64	j	L25_LF2
  845  00001874  54000000	nop; delay slot nop
  846  00001878          	L26_LF2:
  847  00001878  8fc1fff4	lw	r1,-12(r30)
  848  0000187c  8fc20008	lw	r2,8(r30)
  849  00001880  00220828	seq	r1,r1,r2
  850  00001884  10200018	beqz	r1,L32_LF2
  851  00001888  54000000	nop; delay slot nop
  852  0000188c  20010000	addi	r1,r0,#0
  853  00001890  08000054	j	L24_LF2
  854  00001894  54000000	nop; delay slot nop
  855  00001898  0800004c	j	L33_LF2
  856  0000189c  54000000	nop; delay slot nop
  857  000018a0          	L32_LF2:
  858  000018a0  8fc20000	lw	r2,(r30)
  859  000018a4  90410000	lbu	r1,(r2)
  860  000018a8  8fc20004	lw	r2,4(r30)
  861  000018ac  90430000	lbu	r3,(r2)
  862  000018b0  00230822	sub	r1,r1,r3
  863  000018b4  74220000	sgei	r2,r1,#0
  864  000018b8  10400020	beqz	r2,L34_LF2
  865  000018bc  54000000	nop; delay slot nop
  866  000018c0  8fc10000	lw	r1,(r30)
  867  000018c4  8fc20004	lw	r2,4(r30)
  868  000018c8  90210000	lbu	r1,(r1)
  869  000018cc  90420000	lbu	r2,(r2)
  870  000018d0  00220829	sne	r1,r1,r2
  871  000018d4  08000008	j	L35_LF2
  872  000018d8  54000000	nop; delay slot nop
  873  000018dc          	L34_LF2:
  874  000018dc  2001ffff	addi	r1,r0,#-1
  875  000018e0          	L35_LF2:
  876  000018e0  08000004	j	L24_LF2
  877  000018e4  54000000	nop; delay slot nop
  878  000018e8          	L33_LF2:
  879  000018e8          	L24_LF2:
  880  000018e8  8fa20000	lw	r2,0(r29)
  881  000018ec  8fa30004	lw	r3,4(r29)
  882  000018f0  8fdffff8	lw	r31,-8(r30)
  883  000018f4  001ee820	add	r29,r0,r30
  884  000018f8  8fdefffc	lw	r30,-4(r30)
  885  000018fc  4be00000	jr	r31
  886  00001900  54000000	nop
  887  00001904          	.endproc _dstrncmp
  888  00001904          	.align 2
  889  00001904          	.proc _dstrlen
  890  00001904          	.global _dstrlen
  891  00001904          	_dstrlen:
  892                      ;  Function 'dstrlen'; 8 bytes of locals, 1 regs to save.
  893  00001904  afbefffc	sw	-4(r29),r30; push fp
  894  00001908  001df020	add	r30,r0,r29; fp = sp
  895  0000190c  afbffff8	sw	-8(r29),r31; push ret addr
  896  00001910  2fbd0018	subui	r29,r29,#24; alloc local storage
  897  00001914  afa20000	sw	0(r29),r2
  898  00001918  20010000	addi	r1,r0,#0
  899  0000191c  afc1fff4	sw	-12(r30),r1
  900  00001920          	L37_LF2:
  901  00001920  8fc10000	lw	r1,(r30)
  902  00001924  20220001	addi	r2,r1,#1
  903  00001928  afc20000	sw	(r30),r2
  904  0000192c  90210000	lbu	r1,(r1)
  905  00001930  64220000	snei	r2,r1,#0
  906  00001934  1440000c	bnez	r2,L39_LF2
  907  00001938  54000000	nop; delay slot nop
  908  0000193c  0800001c	j	L38_LF2
  909  00001940  54000000	nop; delay slot nop
  910  00001944          	L39_LF2:
  911  00001944  8fc2fff4	lw	r2,-12(r30)
  912  00001948  20410001	addi	r1,r2,#1
  913  0000194c  00011020	add	r2,r0,r1
  914  00001950  afc2fff4	sw	-12(r30),r2
  915  00001954  0bffffc8	j	L37_LF2
  916  00001958  54000000	nop; delay slot nop
  917  0000195c          	L38_LF2:
  918  0000195c  8fc1fff4	lw	r1,-12(r30)
  919  00001960  08000004	j	L36_LF2
  920  00001964  54000000	nop; delay slot nop
  921  00001968          	L36_LF2:
  922  00001968  8fa20000	lw	r2,0(r29)
  923  0000196c  8fdffff8	lw	r31,-8(r30)
  924  00001970  001ee820	add	r29,r0,r30
  925  00001974  8fdefffc	lw	r30,-4(r30)
  926  00001978  4be00000	jr	r31
  927  0000197c  54000000	nop
  928  00001980          	.endproc _dstrlen
  929  00001980          	.align 2
  930  00001980          	.proc _dstrstr
  931  00001980          	.global _dstrstr
  932  00001980          	_dstrstr:
  933                      ;  Function 'dstrstr'; 8 bytes of locals, 1 regs to save.
  934  00001980  afbefffc	sw	-4(r29),r30; push fp
  935  00001984  001df020	add	r30,r0,r29; fp = sp
  936  00001988  afbffff8	sw	-8(r29),r31; push ret addr
  937  0000198c  2fbd0018	subui	r29,r29,#24; alloc local storage
  938  00001990  afa20000	sw	0(r29),r2
  939  00001994  23bdfff8	addi	r29,r29,#-8
  940  00001998  001d0820	add	r1,r0,r29
  941  0000199c  8fc20004	lw	r2,4(r30)
  942  000019a0  ac220000	sw	(r1),r2
  943  000019a4  0fffff5c	jal	_dstrlen
  944  000019a8  54000000	nop; delay slot nop
  945  000019ac  23bd0008	addi	r29,r29,#8
  946  000019b0  afc1fff4	sw	-12(r30),r1
  947  000019b4          	L41_LF2:
  948  000019b4  8fc10000	lw	r1,(r30)
  949  000019b8  90220000	lbu	r2,(r1)
  950  000019bc  64410000	snei	r1,r2,#0
  951  000019c0  1420000c	bnez	r1,L43_LF2
  952  000019c4  54000000	nop; delay slot nop
  953  000019c8  08000060	j	L42_LF2
  954  000019cc  54000000	nop; delay slot nop
  955  000019d0          	L43_LF2:
  956  000019d0  23bdfff0	addi	r29,r29,#-16
  957  000019d4  001d0820	add	r1,r0,r29
  958  000019d8  8fc20000	lw	r2,(r30)
  959  000019dc  ac220000	sw	(r1),r2
  960  000019e0  8fc20004	lw	r2,4(r30)
  961  000019e4  ac220004	sw	4(r1),r2
  962  000019e8  8fc2fff4	lw	r2,-12(r30)
  963  000019ec  ac220008	sw	8(r1),r2
  964  000019f0  0ffffdc0	jal	_dstrncmp
  965  000019f4  54000000	nop; delay slot nop
  966  000019f8  23bd0010	addi	r29,r29,#16
  967  000019fc  64220000	snei	r2,r1,#0
  968  00001a00  14400010	bnez	r2,L44_LF2
  969  00001a04  54000000	nop; delay slot nop
  970  00001a08  8fc10000	lw	r1,(r30)
  971  00001a0c  08000028	j	L40_LF2
  972  00001a10  54000000	nop; delay slot nop
  973  00001a14          	L44_LF2:
  974  00001a14  8fc20000	lw	r2,(r30)
  975  00001a18  20410001	addi	r1,r2,#1
  976  00001a1c  00011020	add	r2,r0,r1
  977  00001a20  afc20000	sw	(r30),r2
  978  00001a24  0bffff8c	j	L41_LF2
  979  00001a28  54000000	nop; delay slot nop
  980  00001a2c          	L42_LF2:
  981  00001a2c  20010000	addi	r1,r0,#0
  982  00001a30  08000004	j	L40_LF2
  983  00001a34  54000000	nop; delay slot nop
  984  00001a38          	L40_LF2:
  985  00001a38  8fa20000	lw	r2,0(r29)
  986  00001a3c  8fdffff8	lw	r31,-8(r30)
  987  00001a40  001ee820	add	r29,r0,r30
  988  00001a44  8fdefffc	lw	r30,-4(r30)
  989  00001a48  4be00000	jr	r31
  990  00001a4c  54000000	nop
  991  00001a50          	.endproc _dstrstr
  992  00001a50          	.align 2
  993  00001a50          	.proc _dmindex
  994  00001a50          	.global _dmindex
  995  00001a50          	_dmindex:
  996                      ;  Function 'dmindex'; 8 bytes of locals, 1 regs to save.
  997  00001a50  afbefffc	sw	-4(r29),r30; push fp
  998  00001a54  001df020	add	r30,r0,r29; fp = sp
  999  00001a58  afbffff8	sw	-8(r29),r31; push ret addr
 1000  00001a5c  2fbd0018	subui	r29,r29,#24; alloc local storage
 1001  00001a60  afa20000	sw	0(r29),r2
 1002  00001a64  54000000	nop
 1003  00001a68          	L46_LF2:
 1004  00001a68  8fc10000	lw	r1,(r30)
 1005  00001a6c  90220000	lbu	r2,(r1)
 1006  00001a70  64410000	snei	r1,r2,#0
 1007  00001a74  1420000c	bnez	r1,L48_LF2
 1008  00001a78  54000000	nop; delay slot nop
 1009  00001a7c  08000070	j	L47_LF2
 1010  00001a80  54000000	nop; delay slot nop
 1011  00001a84          	L48_LF2:
 1012  00001a84  8fc10004	lw	r1,4(r30)
 1013  00001a88  afc1fff4	sw	-12(r30),r1
 1014  00001a8c          	L49_LF2:
 1015  00001a8c  8fc1fff4	lw	r1,-12(r30)
 1016  00001a90  90220000	lbu	r2,(r1)
 1017  00001a94  64410000	snei	r1,r2,#0
 1018  00001a98  1420000c	bnez	r1,L52_LF2
 1019  00001a9c  54000000	nop; delay slot nop
 1020  00001aa0  08000044	j	L50_LF2
 1021  00001aa4  54000000	nop; delay slot nop
 1022  00001aa8          	L52_LF2:
 1023  00001aa8  8fc10000	lw	r1,(r30)
 1024  00001aac  8fc2fff4	lw	r2,-12(r30)
 1025  00001ab0  90210000	lbu	r1,(r1)
 1026  00001ab4  90420000	lbu	r2,(r2)
 1027  00001ab8  00220828	seq	r1,r1,r2
 1028  00001abc  10200010	beqz	r1,L51_LF2
 1029  00001ac0  54000000	nop; delay slot nop
 1030  00001ac4  8fc10000	lw	r1,(r30)
 1031  00001ac8  08000030	j	L45_LF2
 1032  00001acc  54000000	nop; delay slot nop
 1033  00001ad0          	L53_LF2:
 1034  00001ad0          	L51_LF2:
 1035  00001ad0  8fc2fff4	lw	r2,-12(r30)
 1036  00001ad4  20410001	addi	r1,r2,#1
 1037  00001ad8  00011020	add	r2,r0,r1
 1038  00001adc  afc2fff4	sw	-12(r30),r2
 1039  00001ae0  0bffffa8	j	L49_LF2
 1040  00001ae4  54000000	nop; delay slot nop
 1041  00001ae8          	L50_LF2:
 1042  00001ae8  0bffff7c	j	L46_LF2
 1043  00001aec  54000000	nop; delay slot nop
 1044  00001af0          	L47_LF2:
 1045  00001af0  20010000	addi	r1,r0,#0
 1046  00001af4  08000004	j	L45_LF2
 1047  00001af8  54000000	nop; delay slot nop
 1048  00001afc          	L45_LF2:
 1049  00001afc  8fa20000	lw	r2,0(r29)
 1050  00001b00  8fdffff8	lw	r31,-8(r30)
 1051  00001b04  001ee820	add	r29,r0,r30
 1052  00001b08  8fdefffc	lw	r30,-4(r30)
 1053  00001b0c  4be00000	jr	r31
 1054  00001b10  54000000	nop
 1055  00001b14          	.endproc _dmindex
 1056  00001b14          	.align 2
 1057  00001b14          	.proc _dindex
 1058  00001b14          	.global _dindex
 1059  00001b14          	_dindex:
 1060                      ;  Function 'dindex'; 0 bytes of locals, 1 regs to save.
 1061  00001b14  afbefffc	sw	-4(r29),r30; push fp
 1062  00001b18  001df020	add	r30,r0,r29; fp = sp
 1063  00001b1c  afbffff8	sw	-8(r29),r31; push ret addr
 1064  00001b20  2fbd0010	subui	r29,r29,#16; alloc local storage
 1065  00001b24  afa20000	sw	0(r29),r2
 1066  00001b28  54000000	nop
 1067  00001b2c          	L55_LF2:
 1068  00001b2c  8fc10000	lw	r1,(r30)
 1069  00001b30  90220000	lbu	r2,(r1)
 1070  00001b34  64410000	snei	r1,r2,#0
 1071  00001b38  1420000c	bnez	r1,L57_LF2
 1072  00001b3c  54000000	nop; delay slot nop
 1073  00001b40  08000040	j	L56_LF2
 1074  00001b44  54000000	nop; delay slot nop
 1075  00001b48          	L57_LF2:
 1076  00001b48  8fc10000	lw	r1,(r30)
 1077  00001b4c  90220000	lbu	r2,(r1)
 1078  00001b50  8fc10004	lw	r1,4(r30)
 1079  00001b54  00411028	seq	r2,r2,r1
 1080  00001b58  10400010	beqz	r2,L58_LF2
 1081  00001b5c  54000000	nop; delay slot nop
 1082  00001b60  8fc10000	lw	r1,(r30)
 1083  00001b64  08000028	j	L54_LF2
 1084  00001b68  54000000	nop; delay slot nop
 1085  00001b6c          	L58_LF2:
 1086  00001b6c  8fc20000	lw	r2,(r30)
 1087  00001b70  20410001	addi	r1,r2,#1
 1088  00001b74  00011020	add	r2,r0,r1
 1089  00001b78  afc20000	sw	(r30),r2
 1090  00001b7c  0bffffac	j	L55_LF2
 1091  00001b80  54000000	nop; delay slot nop
 1092  00001b84          	L56_LF2:
 1093  00001b84  20010000	addi	r1,r0,#0
 1094  00001b88  08000004	j	L54_LF2
 1095  00001b8c  54000000	nop; delay slot nop
 1096  00001b90          	L54_LF2:
 1097  00001b90  8fa20000	lw	r2,0(r29)
 1098  00001b94  8fdffff8	lw	r31,-8(r30)
 1099  00001b98  001ee820	add	r29,r0,r30
 1100  00001b9c  8fdefffc	lw	r30,-4(r30)
 1101  00001ba0  4be00000	jr	r31
 1102  00001ba4  54000000	nop
 1103  00001ba8          	.endproc _dindex
 1104  00001ba8          	.align 2
 1105  00001ba8          	.proc _ditoa
 1106  00001ba8          	.global _ditoa
 1107  00001ba8          	_ditoa:
 1108                      ;  Function 'ditoa'; 8 bytes of locals, 2 regs to save.
 1109  00001ba8  afbefffc	sw	-4(r29),r30; push fp
 1110  00001bac  001df020	add	r30,r0,r29; fp = sp
 1111  00001bb0  afbffff8	sw	-8(r29),r31; push ret addr
 1112  00001bb4  2fbd0018	subui	r29,r29,#24; alloc local storage
 1113  00001bb8  afa20000	sw	0(r29),r2
 1114  00001bbc  afa30004	sw	4(r29),r3
 1115  00001bc0  8fc10000	lw	r1,(r30)
 1116  00001bc4  68220000	slti	r2,r1,#0
 1117  00001bc8  1040002c	beqz	r2,L60_LF2
 1118  00001bcc  54000000	nop; delay slot nop
 1119  00001bd0  8fc10004	lw	r1,4(r30)
 1120  00001bd4  20220001	addi	r2,r1,#1
 1121  00001bd8  afc20004	sw	4(r30),r2
 1122  00001bdc  2002002d	addi	r2,r0,(#0x2d)&0xff
 1123  00001be0  a0220000	sb	(r1),r2
 1124  00001be4  8fc10000	lw	r1,(r30)
 1125  00001be8  00011022	sub	r2,r0,r1
 1126  00001bec  afc20000	sw	(r30),r2
 1127  00001bf0  08000118	j	L61_LF2
 1128  00001bf4  54000000	nop; delay slot nop
 1129  00001bf8          	L60_LF2:
 1130  00001bf8  8fc10000	lw	r1,(r30)
 1131  00001bfc  64220000	snei	r2,r1,#0
 1132  00001c00  14400020	bnez	r2,L62_LF2
 1133  00001c04  54000000	nop; delay slot nop
 1134  00001c08  8fc10004	lw	r1,4(r30)
 1135  00001c0c  20220001	addi	r2,r1,#1
 1136  00001c10  afc20004	sw	4(r30),r2
 1137  00001c14  20020030	addi	r2,r0,(#0x30)&0xff
 1138  00001c18  a0220000	sb	(r1),r2
 1139  00001c1c  080000ec	j	L61_LF2
 1140  00001c20  54000000	nop; delay slot nop
 1141  00001c24          	L62_LF2:
 1142  00001c24  20010001	addi	r1,r0,#1
 1143  00001c28  afc1fff4	sw	-12(r30),r1
 1144  00001c2c          	L64_LF2:
 1145  00001c2c  8fc1fff4	lw	r1,-12(r30)
 1146  00001c30  8fc20000	lw	r2,(r30)
 1147  00001c34  0022082c	sle	r1,r1,r2
 1148  00001c38  1420000c	bnez	r1,L66_LF2
 1149  00001c3c  54000000	nop; delay slot nop
 1150  00001c40  08000024	j	L65_LF2
 1151  00001c44  54000000	nop; delay slot nop
 1152  00001c48          	L67_LF2:
 1153  00001c48          	L66_LF2:
 1154  00001c48  8fc1fff4	lw	r1,-12(r30)
 1155  00001c4c  00011820	add	r3,r0,r1
 1156  00001c50  50620002	slli	r2,r3,#0x2
 1157  00001c54  00411020	add	r2,r2,r1
 1158  00001c58  50410001	slli	r1,r2,#0x1
 1159  00001c5c  afc1fff4	sw	-12(r30),r1
 1160  00001c60  0bffffc8	j	L64_LF2
 1161  00001c64  54000000	nop; delay slot nop
 1162  00001c68          	L65_LF2:
 1163  00001c68  54000000	nop
 1164  00001c6c          	L68_LF2:
 1165  00001c6c  8fc1fff4	lw	r1,-12(r30)
 1166  00001c70  2002000a	addi	r2,r0,#10
 1167  00001c74  00200035	movi2fp	f0,r1
 1168  00001c78  00400835	movi2fp	f1,r2
 1169  00001c7c  0401000f	div	f0,f0,f1
 1170  00001c80  00000834	movfp2i	r1,f0
 1171  00001c84  afc1fff4	sw	-12(r30),r1
 1172  00001c88  8fc10004	lw	r1,4(r30)
 1173  00001c8c  20220001	addi	r2,r1,#1
 1174  00001c90  afc20004	sw	4(r30),r2
 1175  00001c94  8fc20000	lw	r2,(r30)
 1176  00001c98  8fc3fff4	lw	r3,-12(r30)
 1177  00001c9c  00400035	movi2fp	f0,r2
 1178  00001ca0  00600835	movi2fp	f1,r3
 1179  00001ca4  0401000f	div	f0,f0,f1
 1180  00001ca8  00001034	movfp2i	r2,f0
 1181  00001cac  00021820	add	r3,r0,r2
 1182  00001cb0  20620030	addi	r2,r3,#48
 1183  00001cb4  a0220000	sb	(r1),r2
 1184  00001cb8  8fc10000	lw	r1,(r30)
 1185  00001cbc  8fc3fff4	lw	r3,-12(r30)
 1186  00001cc0  00200035	movi2fp	f0,r1
 1187  00001cc4  00600835	movi2fp	f1,r3
 1188  00001cc8  0401000f	div	f0,f0,f1
 1189  00001ccc  00001034	movfp2i	r2,f0
 1190  00001cd0  8fc3fff4	lw	r3,-12(r30)
 1191  00001cd4  00400035	movi2fp	f0,r2
 1192  00001cd8  00600835	movi2fp	f1,r3
 1193  00001cdc  0401000e	mult	f0,f0,f1
 1194  00001ce0  00001034	movfp2i	r2,f0
 1195  00001ce4  00220822	sub	r1,r1,r2
 1196  00001ce8  afc10000	sw	(r30),r1
 1197  00001cec          	L70_LF2:
 1198  00001cec  8fc1fff4	lw	r1,-12(r30)
 1199  00001cf0  6c220001	sgti	r2,r1,#1
 1200  00001cf4  1440000c	bnez	r2,L71_LF2
 1201  00001cf8  54000000	nop; delay slot nop
 1202  00001cfc  0800000c	j	L61_LF2
 1203  00001d00  54000000	nop; delay slot nop
 1204  00001d04          	L71_LF2:
 1205  00001d04  0bffff64	j	L68_LF2
 1206  00001d08  54000000	nop; delay slot nop
 1207  00001d0c          	L69_LF2:
 1208  00001d0c          	L63_LF2:
 1209  00001d0c          	L61_LF2:
 1210  00001d0c  8fc10004	lw	r1,4(r30)
 1211  00001d10  20020000	addi	r2,r0,(#0x0)&0xff
 1212  00001d14  a0220000	sb	(r1),r2
 1213  00001d18          	L59_LF2:
 1214  00001d18  8fa20000	lw	r2,0(r29)
 1215  00001d1c  8fa30004	lw	r3,4(r29)
 1216  00001d20  8fdffff8	lw	r31,-8(r30)
 1217  00001d24  001ee820	add	r29,r0,r30
 1218  00001d28  8fdefffc	lw	r30,-4(r30)
 1219  00001d2c  4be00000	jr	r31
 1220  00001d30  54000000	nop
 1221  00001d34          	.endproc _ditoa
 1222  00001d34          	.align 2
 1223  00001d34          	.proc _dstrtol
 1224  00001d34          	.global _dstrtol
 1225  00001d34          	_dstrtol:
 1226                      ;  Function 'dstrtol'; 16 bytes of locals, 1 regs to save.
 1227  00001d34  afbefffc	sw	-4(r29),r30; push fp
 1228  00001d38  001df020	add	r30,r0,r29; fp = sp
 1229  00001d3c  afbffff8	sw	-8(r29),r31; push ret addr
 1230  00001d40  2fbd0020	subui	r29,r29,#32; alloc local storage
 1231  00001d44  afa20000	sw	0(r29),r2
 1232  00001d48  20010000	addi	r1,r0,#0
 1233  00001d4c  afc1fff4	sw	-12(r30),r1
 1234  00001d50          	L73_LF2:
 1235  00001d50  8fc10000	lw	r1,(r30)
 1236  00001d54  90220000	lbu	r2,(r1)
 1237  00001d58  60410020	seqi	r1,r2,#32
 1238  00001d5c  14200034	bnez	r1,L75_LF2
 1239  00001d60  54000000	nop; delay slot nop
 1240  00001d64  8fc10000	lw	r1,(r30)
 1241  00001d68  90220000	lbu	r2,(r1)
 1242  00001d6c  60410009	seqi	r1,r2,#9
 1243  00001d70  14200020	bnez	r1,L75_LF2
 1244  00001d74  54000000	nop; delay slot nop
 1245  00001d78  8fc10000	lw	r1,(r30)
 1246  00001d7c  90220000	lbu	r2,(r1)
 1247  00001d80  6041000a	seqi	r1,r2,#10
 1248  00001d84  1420000c	bnez	r1,L75_LF2
 1249  00001d88  54000000	nop; delay slot nop
 1250  00001d8c  0800001c	j	L74_LF2
 1251  00001d90  54000000	nop; delay slot nop
 1252  00001d94          	L75_LF2:
 1253  00001d94  8fc20000	lw	r2,(r30)
 1254  00001d98  20410001	addi	r1,r2,#1
 1255  00001d9c  00011020	add	r2,r0,r1
 1256  00001da0  afc20000	sw	(r30),r2
 1257  00001da4  0bffffa8	j	L73_LF2
 1258  00001da8  54000000	nop; delay slot nop
 1259  00001dac          	L74_LF2:
 1260  00001dac  8fc10004	lw	r1,4(r30)
 1261  00001db0  64220000	snei	r2,r1,#0
 1262  00001db4  10400010	beqz	r2,L76_LF2
 1263  00001db8  54000000	nop; delay slot nop
 1264  00001dbc  8fc10004	lw	r1,4(r30)
 1265  00001dc0  8fc20000	lw	r2,(r30)
 1266  00001dc4  ac220000	sw	(r1),r2
 1267  00001dc8          	L76_LF2:
 1268  00001dc8  8fc10000	lw	r1,(r30)
 1269  00001dcc  90220000	lbu	r2,(r1)
 1270  00001dd0  64410000	snei	r1,r2,#0
 1271  00001dd4  14200010	bnez	r1,L77_LF2
 1272  00001dd8  54000000	nop; delay slot nop
 1273  00001ddc  8fc1fff4	lw	r1,-12(r30)
 1274  00001de0  08000294	j	L72_LF2
 1275  00001de4  54000000	nop; delay slot nop
 1276  00001de8          	L77_LF2:
 1277  00001de8  8fc10000	lw	r1,(r30)
 1278  00001dec  90220000	lbu	r2,(r1)
 1279  00001df0  6041002d	seqi	r1,r2,#45
 1280  00001df4  10200024	beqz	r1,L78_LF2
 1281  00001df8  54000000	nop; delay slot nop
 1282  00001dfc  2001ffff	addi	r1,r0,#-1
 1283  00001e00  afc1ffec	sw	-20(r30),r1
 1284  00001e04  8fc20000	lw	r2,(r30)
 1285  00001e08  20410001	addi	r1,r2,#1
 1286  00001e0c  00011020	add	r2,r0,r1
 1287  00001e10  afc20000	sw	(r30),r2
 1288  00001e14  0800000c	j	L79_LF2
 1289  00001e18  54000000	nop; delay slot nop
 1290  00001e1c          	L78_LF2:
 1291  00001e1c  20010001	addi	r1,r0,#1
 1292  00001e20  afc1ffec	sw	-20(r30),r1
 1293  00001e24          	L79_LF2:
 1294  00001e24  8fc10008	lw	r1,8(r30)
 1295  00001e28  64220000	snei	r2,r1,#0
 1296  00001e2c  14400090	bnez	r2,L80_LF2
 1297  00001e30  54000000	nop; delay slot nop
 1298  00001e34  8fc10000	lw	r1,(r30)
 1299  00001e38  90220000	lbu	r2,(r1)
 1300  00001e3c  60410030	seqi	r1,r2,#48
 1301  00001e40  10200074	beqz	r1,L81_LF2
 1302  00001e44  54000000	nop; delay slot nop
 1303  00001e48  8fc20000	lw	r2,(r30)
 1304  00001e4c  20410001	addi	r1,r2,#1
 1305  00001e50  00011020	add	r2,r0,r1
 1306  00001e54  afc20000	sw	(r30),r2
 1307  00001e58  8fc10000	lw	r1,(r30)
 1308  00001e5c  90220000	lbu	r2,(r1)
 1309  00001e60  60410078	seqi	r1,r2,#120
 1310  00001e64  14200020	bnez	r1,L83_LF2
 1311  00001e68  54000000	nop; delay slot nop
 1312  00001e6c  8fc10000	lw	r1,(r30)
 1313  00001e70  90220000	lbu	r2,(r1)
 1314  00001e74  60410058	seqi	r1,r2,#88
 1315  00001e78  1420000c	bnez	r1,L83_LF2
 1316  00001e7c  54000000	nop; delay slot nop
 1317  00001e80  08000024	j	L82_LF2
 1318  00001e84  54000000	nop; delay slot nop
 1319  00001e88          	L83_LF2:
 1320  00001e88  20010010	addi	r1,r0,#16
 1321  00001e8c  afc10008	sw	8(r30),r1
 1322  00001e90  8fc20000	lw	r2,(r30)
 1323  00001e94  20410001	addi	r1,r2,#1
 1324  00001e98  00011020	add	r2,r0,r1
 1325  00001e9c  afc20000	sw	(r30),r2
 1326  00001ea0  0800000c	j	L84_LF2
 1327  00001ea4  54000000	nop; delay slot nop
 1328  00001ea8          	L82_LF2:
 1329  00001ea8  20010008	addi	r1,r0,#8
 1330  00001eac  afc10008	sw	8(r30),r1
 1331  00001eb0          	L84_LF2:
 1332  00001eb0  0800000c	j	L80_LF2
 1333  00001eb4  54000000	nop; delay slot nop
 1334  00001eb8          	L81_LF2:
 1335  00001eb8  2001000a	addi	r1,r0,#10
 1336  00001ebc  afc10008	sw	8(r30),r1
 1337  00001ec0          	L85_LF2:
 1338  00001ec0          	L80_LF2:
 1339  00001ec0  8fc10008	lw	r1,8(r30)
 1340  00001ec4  70220000	slei	r2,r1,#0
 1341  00001ec8  1440001c	bnez	r2,L87_LF2
 1342  00001ecc  54000000	nop; delay slot nop
 1343  00001ed0  8fc10008	lw	r1,8(r30)
 1344  00001ed4  6c220010	sgti	r2,r1,#16
 1345  00001ed8  1440000c	bnez	r2,L87_LF2
 1346  00001edc  54000000	nop; delay slot nop
 1347  00001ee0  08000010	j	L86_LF2
 1348  00001ee4  54000000	nop; delay slot nop
 1349  00001ee8          	L87_LF2:
 1350  00001ee8  8fc1fff4	lw	r1,-12(r30)
 1351  00001eec  08000188	j	L72_LF2
 1352  00001ef0  54000000	nop; delay slot nop
 1353  00001ef4          	L86_LF2:
 1354  00001ef4  54000000	nop
 1355  00001ef8          	L88_LF2:
 1356  00001ef8  8fc10000	lw	r1,(r30)
 1357  00001efc  90220000	lbu	r2,(r1)
 1358  00001f00  6c41002f	sgtui	r1,r2,#47
 1359  00001f04  10200030	beqz	r1,L91_LF2
 1360  00001f08  54000000	nop; delay slot nop
 1361  00001f0c  8fc10000	lw	r1,(r30)
 1362  00001f10  90220000	lbu	r2,(r1)
 1363  00001f14  70410039	sleui	r1,r2,#57
 1364  00001f18  1020001c	beqz	r1,L91_LF2
 1365  00001f1c  54000000	nop; delay slot nop
 1366  00001f20  8fc10000	lw	r1,(r30)
 1367  00001f24  90220000	lbu	r2,(r1)
 1368  00001f28  2041ffd0	addi	r1,r2,#-48
 1369  00001f2c  afc1fff0	sw	-16(r30),r1
 1370  00001f30  0800008c	j	L92_LF2
 1371  00001f34  54000000	nop; delay slot nop
 1372  00001f38          	L91_LF2:
 1373  00001f38  8fc10000	lw	r1,(r30)
 1374  00001f3c  90220000	lbu	r2,(r1)
 1375  00001f40  6c410060	sgtui	r1,r2,#96
 1376  00001f44  10200030	beqz	r1,L93_LF2
 1377  00001f48  54000000	nop; delay slot nop
 1378  00001f4c  8fc10000	lw	r1,(r30)
 1379  00001f50  90220000	lbu	r2,(r1)
 1380  00001f54  7041007a	sleui	r1,r2,#122
 1381  00001f58  1020001c	beqz	r1,L93_LF2
 1382  00001f5c  54000000	nop; delay slot nop
 1383  00001f60  8fc10000	lw	r1,(r30)
 1384  00001f64  90220000	lbu	r2,(r1)
 1385  00001f68  2041ffa9	addi	r1,r2,#-87
 1386  00001f6c  afc1fff0	sw	-16(r30),r1
 1387  00001f70  0800004c	j	L92_LF2
 1388  00001f74  54000000	nop; delay slot nop
 1389  00001f78          	L93_LF2:
 1390  00001f78  8fc10000	lw	r1,(r30)
 1391  00001f7c  90220000	lbu	r2,(r1)
 1392  00001f80  6c410040	sgtui	r1,r2,#64
 1393  00001f84  10200030	beqz	r1,L95_LF2
 1394  00001f88  54000000	nop; delay slot nop
 1395  00001f8c  8fc10000	lw	r1,(r30)
 1396  00001f90  90220000	lbu	r2,(r1)
 1397  00001f94  7041005a	sleui	r1,r2,#90
 1398  00001f98  1020001c	beqz	r1,L95_LF2
 1399  00001f9c  54000000	nop; delay slot nop
 1400  00001fa0  8fc10000	lw	r1,(r30)
 1401  00001fa4  90220000	lbu	r2,(r1)
 1402  00001fa8  2041ffc9	addi	r1,r2,#-55
 1403  00001fac  afc1fff0	sw	-16(r30),r1
 1404  00001fb0  0800000c	j	L92_LF2
 1405  00001fb4  54000000	nop; delay slot nop
 1406  00001fb8          	L95_LF2:
 1407  00001fb8  200103e8	addi	r1,r0,#1000
 1408  00001fbc  afc1fff0	sw	-16(r30),r1
 1409  00001fc0          	L96_LF2:
 1410  00001fc0          	L94_LF2:
 1411  00001fc0          	L92_LF2:
 1412  00001fc0  8fc1fff0	lw	r1,-16(r30)
 1413  00001fc4  8fc20008	lw	r2,8(r30)
 1414  00001fc8  0022082a	slt	r1,r1,r2
 1415  00001fcc  10200040	beqz	r1,L90_LF2
 1416  00001fd0  54000000	nop; delay slot nop
 1417  00001fd4  8fc1fff4	lw	r1,-12(r30)
 1418  00001fd8  8fc20008	lw	r2,8(r30)
 1419  00001fdc  00200035	movi2fp	f0,r1
 1420  00001fe0  00400835	movi2fp	f1,r2
 1421  00001fe4  0401000e	mult	f0,f0,f1
 1422  00001fe8  00000834	movfp2i	r1,f0
 1423  00001fec  afc1fff4	sw	-12(r30),r1
 1424  00001ff0  8fc1fff4	lw	r1,-12(r30)
 1425  00001ff4  8fc2fff0	lw	r2,-16(r30)
 1426  00001ff8  00220820	add	r1,r1,r2
 1427  00001ffc  afc1fff4	sw	-12(r30),r1
 1428  00002000  8fc20000	lw	r2,(r30)
 1429  00002004  20410001	addi	r1,r2,#1
 1430  00002008  00011020	add	r2,r0,r1
 1431  0000200c  afc20000	sw	(r30),r2
 1432  00002010          	L97_LF2:
 1433  00002010          	L90_LF2:
 1434  00002010  8fc1fff0	lw	r1,-16(r30)
 1435  00002014  8fc20008	lw	r2,8(r30)
 1436  00002018  0022082a	slt	r1,r1,r2
 1437  0000201c  1420000c	bnez	r1,L98_LF2
 1438  00002020  54000000	nop; delay slot nop
 1439  00002024  0800000c	j	L89_LF2
 1440  00002028  54000000	nop; delay slot nop
 1441  0000202c          	L98_LF2:
 1442  0000202c  0bfffec8	j	L88_LF2
 1443  00002030  54000000	nop; delay slot nop
 1444  00002034          	L89_LF2:
 1445  00002034  8fc10004	lw	r1,4(r30)
 1446  00002038  64220000	snei	r2,r1,#0
 1447  0000203c  10400010	beqz	r2,L99_LF2
 1448  00002040  54000000	nop; delay slot nop
 1449  00002044  8fc10004	lw	r1,4(r30)
 1450  00002048  8fc20000	lw	r2,(r30)
 1451  0000204c  ac220000	sw	(r1),r2
 1452  00002050          	L99_LF2:
 1453  00002050  8fc1fff4	lw	r1,-12(r30)
 1454  00002054  8fc2ffec	lw	r2,-20(r30)
 1455  00002058  00200035	movi2fp	f0,r1
 1456  0000205c  00400835	movi2fp	f1,r2
 1457  00002060  0401000e	mult	f0,f0,f1
 1458  00002064  00000834	movfp2i	r1,f0
 1459  00002068  afc1fff4	sw	-12(r30),r1
 1460  0000206c  8fc1fff4	lw	r1,-12(r30)
 1461  00002070  08000004	j	L72_LF2
 1462  00002074  54000000	nop; delay slot nop
 1463  00002078          	L72_LF2:
 1464  00002078  8fa20000	lw	r2,0(r29)
 1465  0000207c  8fdffff8	lw	r31,-8(r30)
 1466  00002080  001ee820	add	r29,r0,r30
 1467  00002084  8fdefffc	lw	r30,-4(r30)
 1468  00002088  4be00000	jr	r31
 1469  0000208c  54000000	nop
 1470  00002090          	.endproc _dstrtol
 1471  00002090          	.align 2
 1472  00002090          	.proc _bcopy
 1473  00002090          	.global _bcopy
 1474  00002090          	_bcopy:
 1475                      ;  Function 'bcopy'; 0 bytes of locals, 2 regs to save.
 1476  00002090  afbefffc	sw	-4(r29),r30; push fp
 1477  00002094  001df020	add	r30,r0,r29; fp = sp
 1478  00002098  afbffff8	sw	-8(r29),r31; push ret addr
 1479  0000209c  2fbd0010	subui	r29,r29,#16; alloc local storage
 1480  000020a0  afa20000	sw	0(r29),r2
 1481  000020a4  afa30004	sw	4(r29),r3
 1482  000020a8  54000000	nop
 1483  000020ac          	L101_LF2:
 1484  000020ac  8fc10008	lw	r1,8(r30)
 1485  000020b0  2022ffff	addi	r2,r1,#-1
 1486  000020b4  afc20008	sw	8(r30),r2
 1487  000020b8  6c210000	sgti	r1,r1,#0
 1488  000020bc  1420000c	bnez	r1,L103_LF2
 1489  000020c0  54000000	nop; delay slot nop
 1490  000020c4  0800002c	j	L102_LF2
 1491  000020c8  54000000	nop; delay slot nop
 1492  000020cc          	L103_LF2:
 1493  000020cc  8fc10004	lw	r1,4(r30)
 1494  000020d0  20220001	addi	r2,r1,#1
 1495  000020d4  afc20004	sw	4(r30),r2
 1496  000020d8  8fc20000	lw	r2,(r30)
 1497  000020dc  20430001	addi	r3,r2,#1
 1498  000020e0  afc30000	sw	(r30),r3
 1499  000020e4  80420000	lb	r2,(r2)
 1500  000020e8  a0220000	sb	(r1),r2
 1501  000020ec  0bffffbc	j	L101_LF2
 1502  000020f0  54000000	nop; delay slot nop
 1503  000020f4          	L102_LF2:
 1504  000020f4          	L100_LF2:
 1505  000020f4  8fa20000	lw	r2,0(r29)
 1506  000020f8  8fa30004	lw	r3,4(r29)
 1507  000020fc  8fdffff8	lw	r31,-8(r30)
 1508  00002100  001ee820	add	r29,r0,r30
 1509  00002104  8fdefffc	lw	r30,-4(r30)
 1510  00002108  4be00000	jr	r31
 1511  0000210c  54000000	nop
 1512  00002110          	.endproc _bcopy
 1513  00002110          	.align 2
 1514  00002110          	.proc _bzero
 1515  00002110          	.global _bzero
 1516  00002110          	_bzero:
 1517                      ;  Function 'bzero'; 0 bytes of locals, 1 regs to save.
 1518  00002110  afbefffc	sw	-4(r29),r30; push fp
 1519  00002114  001df020	add	r30,r0,r29; fp = sp
 1520  00002118  afbffff8	sw	-8(r29),r31; push ret addr
 1521  0000211c  2fbd0010	subui	r29,r29,#16; alloc local storage
 1522  00002120  afa20000	sw	0(r29),r2
 1523  00002124  54000000	nop
 1524  00002128          	L105_LF2:
 1525  00002128  8fc10004	lw	r1,4(r30)
 1526  0000212c  2022ffff	addi	r2,r1,#-1
 1527  00002130  afc20004	sw	4(r30),r2
 1528  00002134  6c210000	sgti	r1,r1,#0
 1529  00002138  1420000c	bnez	r1,L107_LF2
 1530  0000213c  54000000	nop; delay slot nop
 1531  00002140  08000020	j	L106_LF2
 1532  00002144  54000000	nop; delay slot nop
 1533  00002148          	L107_LF2:
 1534  00002148  8fc10000	lw	r1,(r30)
 1535  0000214c  20220001	addi	r2,r1,#1
 1536  00002150  afc20000	sw	(r30),r2
 1537  00002154  20020000	addi	r2,r0,(#0x0)&0xff
 1538  00002158  a0220000	sb	(r1),r2
 1539  0000215c  0bffffc8	j	L105_LF2
 1540  00002160  54000000	nop; delay slot nop
 1541  00002164          	L106_LF2:
 1542  00002164          	L104_LF2:
 1543  00002164  8fa20000	lw	r2,0(r29)
 1544  00002168  8fdffff8	lw	r31,-8(r30)
 1545  0000216c  001ee820	add	r29,r0,r30
 1546  00002170  8fdefffc	lw	r30,-4(r30)
 1547  00002174  4be00000	jr	r31
 1548  00002178  54000000	nop
 1549  0000217c          	.endproc _bzero
 1550  0000217c          	.align 2
 1551  0000217c          	.proc _min
 1552  0000217c          	.global _min
 1553  0000217c          	_min:
 1554                      ;  Function 'min'; 0 bytes of locals, 2 regs to save.
 1555  0000217c  afbefffc	sw	-4(r29),r30; push fp
 1556  00002180  001df020	add	r30,r0,r29; fp = sp
 1557  00002184  afbffff8	sw	-8(r29),r31; push ret addr
 1558  00002188  2fbd0010	subui	r29,r29,#16; alloc local storage
 1559  0000218c  afa20000	sw	0(r29),r2
 1560  00002190  afa30004	sw	4(r29),r3
 1561  00002194  8fc10000	lw	r1,(r30)
 1562  00002198  8fc20004	lw	r2,4(r30)
 1563  0000219c  0022182c	sle	r3,r1,r2
 1564  000021a0  14600008	bnez	r3,L109_LF2
 1565  000021a4  54000000	nop; delay slot nop
 1566  000021a8  8fc10004	lw	r1,4(r30)
 1567  000021ac          	L109_LF2:
 1568  000021ac  08000004	j	L108_LF2
 1569  000021b0  54000000	nop; delay slot nop
 1570  000021b4          	L108_LF2:
 1571  000021b4  8fa20000	lw	r2,0(r29)
 1572  000021b8  8fa30004	lw	r3,4(r29)
 1573  000021bc  8fdffff8	lw	r31,-8(r30)
 1574  000021c0  001ee820	add	r29,r0,r30
 1575  000021c4  8fdefffc	lw	r30,-4(r30)
 1576  000021c8  4be00000	jr	r31
 1577  000021cc  54000000	nop
 1578  000021d0          	.endproc _min
 1579  000021d0          	.align 2
 1580  000021d0          	.proc _max
 1581  000021d0          	.global _max
 1582  000021d0          	_max:
 1583                      ;  Function 'max'; 0 bytes of locals, 2 regs to save.
 1584  000021d0  afbefffc	sw	-4(r29),r30; push fp
 1585  000021d4  001df020	add	r30,r0,r29; fp = sp
 1586  000021d8  afbffff8	sw	-8(r29),r31; push ret addr
 1587  000021dc  2fbd0010	subui	r29,r29,#16; alloc local storage
 1588  000021e0  afa20000	sw	0(r29),r2
 1589  000021e4  afa30004	sw	4(r29),r3
 1590  000021e8  8fc10000	lw	r1,(r30)
 1591  000021ec  8fc20004	lw	r2,4(r30)
 1592  000021f0  0022182d	sge	r3,r1,r2
 1593  000021f4  14600008	bnez	r3,L111_LF2
 1594  000021f8  54000000	nop; delay slot nop
 1595  000021fc  8fc10004	lw	r1,4(r30)
 1596  00002200          	L111_LF2:
 1597  00002200  08000004	j	L110_LF2
 1598  00002204  54000000	nop; delay slot nop
 1599  00002208          	L110_LF2:
 1600  00002208  8fa20000	lw	r2,0(r29)
 1601  0000220c  8fa30004	lw	r3,4(r29)
 1602  00002210  8fdffff8	lw	r31,-8(r30)
 1603  00002214  001ee820	add	r29,r0,r30
 1604  00002218  8fdefffc	lw	r30,-4(r30)
 1605  0000221c  4be00000	jr	r31
 1606  00002220  54000000	nop
 1607  00002224          	.endproc _max
 1608                      ;;; Ethan L. Miller, 1999.  Released to the public domain
 1609                      ;;;
 1610                      ;;; Most of the traps are called in files from libtraps.
 1613  00002224          	.align 2
 1614  00002224          	.proc _exit
 1615  00002224          	.global _exit
 1616  00002224          	_exit:
 1617  00002224  44000300	trap	#0x300
 1618  00002228  4be00000	jr	r31
 1619  0000222c  54000000	nop
 1620  00002230          	.endproc _exit
 1622                      ; for the benefit of gcc.
 1623  00002230          	.proc ___main
 1624  00002230          	.global ___main
 1625  00002230          	___main:
 1626  00002230  4be00000	jr	r31
 1627  00002234  54000000	nop
 1628  00002238          	.endproc ___main
 1629  00002238          	.text
 1630  00002238          	.global _etext
 1631  00002238          	_etext:
 1632  00002238          	.align 3
 1633  00002238          	.data
 1634  000030a4          	.global _edata
 1635  000030a4          	_edata:
