 line   address	contents
    1                      ; Linked by DLX-LD.
    2                      ; MemSize 24576
    3                      ; Data size: 291
    4                      ; Text size: 4484
    5                      ; Stack size: 8192
    6  00000000          	.text 0x1000
    7  00001000          	.data 0x3000
    8                      ; Compiled by GCC
    9  00003000          	.text
   10  00001000          	.align 2
   11  00001000          	.proc _isspace
   12  00001000          	.global _isspace
   13  00001000          	_isspace:
   14                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
   15  00001000  afbefffc	sw	-4(r29),r30; push fp
   16  00001004  001df020	add	r30,r0,r29; fp = sp
   17  00001008  afbffff8	sw	-8(r29),r31; push ret addr
   18  0000100c  2fbd0010	subui	r29,r29,#16; alloc local storage
   19  00001010  afa20000	sw	0(r29),r2
   20  00001014  83c20003	lb	r2,3(r30)
   21  00001018  201f0000	addi	r31,r0,#0
   22  0000101c  304100ff	andi	r1,r2,#0x00ff
   23  00001020  60210020	seqi	r1,r1,#32
   24  00001024  14200018	bnez	r1,L6_LF0
   25  00001028  54000000	nop; not filled.
   26  0000102c  2041fff7	addi	r1,r2,#-9
   27  00001030  302100ff	andi	r1,r1,#0x00ff
   28  00001034  70210001	sleui	r1,r1,#1
   29  00001038  10200008	beqz	r1,L5_LF0
   30  0000103c  54000000	nop; not filled.
   31  00001040          	L6_LF0:
   32  00001040  201f0001	addi	r31,r0,#1
   33  00001044          	L5_LF0:
   34  00001044  001f0820	add	r1,r0,r31
   35  00001048  8fa20000	lw	r2,0(r29)
   36  0000104c  8fdffff8	lw	r31,-8(r30)
   37  00001050  001ee820	add	r29,r0,r30
   38  00001054  8fdefffc	lw	r30,-4(r30)
   39  00001058  4be00000	jr	r31
   40  0000105c  54000000	nop
   41  00001060          	.endproc _isspace
   42  00001060          	.align 2
   43  00001060          	.proc _isxdigit
   44  00001060          	.global _isxdigit
   45  00001060          	_isxdigit:
   46                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
   47  00001060  afbefffc	sw	-4(r29),r30; push fp
   48  00001064  001df020	add	r30,r0,r29; fp = sp
   49  00001068  afbffff8	sw	-8(r29),r31; push ret addr
   50  0000106c  2fbd0010	subui	r29,r29,#16; alloc local storage
   51  00001070  afa20000	sw	0(r29),r2
   52  00001074  83df0003	lb	r31,3(r30)
   53  00001078  20020000	addi	r2,r0,#0
   54  0000107c  23e1ffd0	addi	r1,r31,#-48
   55  00001080  302100ff	andi	r1,r1,#0x00ff
   56  00001084  70210009	sleui	r1,r1,#9
   57  00001088  14200028	bnez	r1,L12_LF0
   58  0000108c  54000000	nop; not filled.
   59  00001090  23e1ff9f	addi	r1,r31,#-97
   60  00001094  302100ff	andi	r1,r1,#0x00ff
   61  00001098  70210005	sleui	r1,r1,#5
   62  0000109c  14200014	bnez	r1,L12_LF0
   63  000010a0  54000000	nop; not filled.
   64  000010a4  33e100ff	andi	r1,r31,#0x00ff
   65  000010a8  64210041	snei	r1,r1,#65
   66  000010ac  14200008	bnez	r1,L11_LF0
   67  000010b0  54000000	nop; not filled.
   68  000010b4          	L12_LF0:
   69  000010b4  20020001	addi	r2,r0,#1
   70  000010b8          	L11_LF0:
   71  000010b8  00020820	add	r1,r0,r2
   72  000010bc  8fa20000	lw	r2,0(r29)
   73  000010c0  8fdffff8	lw	r31,-8(r30)
   74  000010c4  001ee820	add	r29,r0,r30
   75  000010c8  8fdefffc	lw	r30,-4(r30)
   76  000010cc  4be00000	jr	r31
   77  000010d0  54000000	nop
   78  000010d4          	.endproc _isxdigit
   79  000010d4          	.data
   80  00003000          	.align 2
   81  00003000          	_p6_LF0:
   82  00003000  00000000	.word 0
   83  00003004          	.align 2
   84  00003004          	LC0_LF0:
   85  00003004  55736167	.ascii "Usage: %s <handle_to_procs_completed_semaphore>\n\000"
   85  00003008  653a2025	
   85  0000300c  73203c68	
   85  00003010  616e646c	
   85  00003014  655f746f	
   85  00003018  5f70726f	
   85  0000301c  63735f63	
   85  00003020  6f6d706c	
   85  00003024  65746564	
   85  00003028  5f73656d	
   85  0000302c  6170686f	
   85  00003030  72653e0a	
   85  00003034  00      	
   86  00003035          	.align 2
   87  00003038          	LC1_LF0:
   88  00003038  41636365	.ascii "Accessing address beyond the maximum virtual address\n\000"
   88  0000303c  7373696e	
   88  00003040  67206164	
   88  00003044  64726573	
   88  00003048  73206265	
   88  0000304c  796f6e64	
   88  00003050  20746865	
   88  00003054  206d6178	
   88  00003058  696d756d	
   88  0000305c  20766972	
   88  00003060  7475616c	
   88  00003064  20616464	
   88  00003068  72657373	
   88  0000306c  0a00    	
   89  0000306e          	.align 2
   90  00003070          	LC2_LF0:
   91  00003070  41636365	.ascii "Accessing address: %d\n\000"
   91  00003074  7373696e	
   91  00003078  67206164	
   91  0000307c  64726573	
   91  00003080  733a2025	
   91  00003084  640a00  	
   92  00003087          	.align 2
   93  00003088          	LC3_LF0:
   94  00003088  54657374	.ascii "Test case (1): Done!\n\000"
   94  0000308c  20636173	
   94  00003090  65202831	
   94  00003094  293a2044	
   94  00003098  6f6e6521	
   94  0000309c  0a00    	
   95  0000309e          	.align 2
   96  000030a0          	LC4_LF0:
   97  000030a0  2d2d2d2d	.ascii "----------------------------------------------------------------------"
   97  000030a4  2d2d2d2d	
   97  000030a8  2d2d2d2d	
   97  000030ac  2d2d2d2d	
   97  000030b0  2d2d2d2d	
   97  000030b4  2d2d2d2d	
   97  000030b8  2d2d2d2d	
   97  000030bc  2d2d2d2d	
   97  000030c0  2d2d2d2d	
   97  000030c4  2d2d2d2d	
   97  000030c8  2d2d2d2d	
   97  000030cc  2d2d2d2d	
   97  000030d0  2d2d2d2d	
   97  000030d4  2d2d2d2d	
   97  000030d8  2d2d2d2d	
   97  000030dc  2d2d2d2d	
   97  000030e0  2d2d2d2d	
   97  000030e4  2d2d    	
   98  000030e6  2d2d2d2d	.ascii "----------------------------------\n\000"
   98  000030ea  2d2d2d2d	
   98  000030ee  2d2d2d2d	
   98  000030f2  2d2d2d2d	
   98  000030f6  2d2d2d2d	
   98  000030fa  2d2d2d2d	
   98  000030fe  2d2d2d2d	
   98  00003102  2d2d2d2d	
   98  00003106  2d2d0a00	
   99  0000310a          	.text
  100  000010d4          	.align 2
  101  000010d4          	.proc _main
  102  000010d4          	.global _main
  103  000010d4          	_main:
  104                      ;  Function 'main'; 0 bytes of locals, 0 regs to save.
  105  000010d4  afbefffc	sw	-4(r29),r30; push fp
  106  000010d8  001df020	add	r30,r0,r29; fp = sp
  107  000010dc  afbffff8	sw	-8(r29),r31; push ret addr
  108  000010e0  2fbd0008	subui	r29,r29,#8; alloc local storage
  109  000010e4  8fc20000	lw	r2,(r30)
  110  000010e8  8fc30004	lw	r3,4(r30)
  111  000010ec  0c00108c	jal	___main
  112  000010f0  54000000	nop; not filled.
  113  000010f4  64410002	snei	r1,r2,#2
  114  000010f8  10200028	beqz	r1,L16_LF0
  115  000010fc  54000000	nop; not filled.
  116  00001100  23bdfff8	addi	r29,r29,#-8
  117  00001104  3c040000	lhi	r4,((LC0_LF0)>>16)&0xffff
  118  00001108  24843004	addui	r4,r4,(LC0_LF0)&0xffff
  119  0000110c  afa40000	sw	(r29),r4
  120  00001110  0c0001a8	jal	_Printf
  121  00001114  54000000	nop; not filled.
  122  00001118  0c0002a8	jal	_Exit
  123  0000111c  54000000	nop; not filled.
  124  00001120  23bd0008	addi	r29,r29,#8
  125  00001124          	L16_LF0:
  126  00001124  23bdfff0	addi	r29,r29,#-16
  127  00001128  8c630004	lw	r3,4(r3)
  128  0000112c  afa30000	sw	(r29),r3
  129  00001130  20040000	addi	r4,r0,#0
  130  00001134  afa40004	sw	4(r29),r4
  131  00001138  2004000a	addi	r4,r0,#10
  132  0000113c  afa40008	sw	8(r29),r4
  133  00001140  0c000b3c	jal	_dstrtol
  134  00001144  54000000	nop; not filled.
  135  00001148  3c040000	lhi	r4,((LC1_LF0)>>16)&0xffff
  136  0000114c  24843038	addui	r4,r4,(LC1_LF0)&0xffff
  137  00001150  afa40000	sw	(r29),r4
  138  00001154  0c000164	jal	_Printf
  139  00001158  54000000	nop; not filled.
  140  0000115c  3c030000	lhi	r3,((_p6_LF0)>>16)&0xffff
  141  00001160  24633000	addui	r3,r3,(_p6_LF0)&0xffff
  142  00001164  8c610000	lw	r1,(r3)
  143  00001168  3c020727	lhi	r2,#1831
  144  0000116c  24420e00	addui	r2,r2,#3584
  145  00001170  00220820	add	r1,r1,r2
  146  00001174  20040001	addi	r4,r0,#1
  147  00001178  ac240000	sw	(r1),r4
  148  0000117c  3c040000	lhi	r4,((LC2_LF0)>>16)&0xffff
  149  00001180  24843070	addui	r4,r4,(LC2_LF0)&0xffff
  150  00001184  afa40000	sw	(r29),r4
  151  00001188  8c610000	lw	r1,(r3)
  152  0000118c  00220820	add	r1,r1,r2
  153  00001190  8c210000	lw	r1,(r1)
  154  00001194  afa10004	sw	4(r29),r1
  155  00001198  0c000120	jal	_Printf
  156  0000119c  54000000	nop; not filled.
  157  000011a0  3c040000	lhi	r4,((LC3_LF0)>>16)&0xffff
  158  000011a4  24843088	addui	r4,r4,(LC3_LF0)&0xffff
  159  000011a8  afa40000	sw	(r29),r4
  160  000011ac  0c00010c	jal	_Printf
  161  000011b0  54000000	nop; not filled.
  162  000011b4  3c040000	lhi	r4,((LC4_LF0)>>16)&0xffff
  163  000011b8  248430a0	addui	r4,r4,(LC4_LF0)&0xffff
  164  000011bc  afa40000	sw	(r29),r4
  165  000011c0  0c0000f8	jal	_Printf
  166  000011c4  54000000	nop; not filled.
  167  000011c8  23bd0010	addi	r29,r29,#16
  168  000011cc  0c000fa0	jal	_exit
  169  000011d0  54000000	nop
  170  000011d4          	.endproc _main
  171  000011d4          	.data
  172  0000310a          	.align 2
  173  0000310c          	LC5_LF0:
  174  0000310c  68656c6c	.ascii "hello_world, %d times\n\000"
  174  00003110  6f5f776f	
  174  00003114  726c642c	
  174  00003118  20256420	
  174  0000311c  74696d65	
  174  00003120  730a00  	
  175  00003123          	.text
  176  000011d4          	.align 2
  177  000011d4          	.proc _hello
  178  000011d4          	.global _hello
  179  000011d4          	_hello:
  180                      ;  Function 'hello'; 400 bytes of locals, 3 regs to save.
  181  000011d4  afbefffc	sw	-4(r29),r30; push fp
  182  000011d8  001df020	add	r30,r0,r29; fp = sp
  183  000011dc  afbffff8	sw	-8(r29),r31; push ret addr
  184  000011e0  2fbd01a8	subui	r29,r29,#424; alloc local storage
  185  000011e4  afa20000	sw	0(r29),r2
  186  000011e8  afa30004	sw	4(r29),r3
  187  000011ec  afa40008	sw	8(r29),r4
  188  000011f0  8fc20000	lw	r2,(r30)
  189  000011f4  23dffff8	addi	r31,r30,#-8
  190  000011f8  23c30184	addi	r3,r30,#388
  191  000011fc          	L28_LF0:
  192  000011fc  afe2fe70	sw	-400(r31),r2
  193  00001200  23ff0004	addi	r31,r31,#4
  194  00001204  03e3082c	sle	r1,r31,r3
  195  00001208  1420fff0	bnez	r1,L28_LF0
  196  0000120c  54000000	nop; not filled.
  197  00001210  23bdfff8	addi	r29,r29,#-8
  198  00001214  3c040000	lhi	r4,((LC5_LF0)>>16)&0xffff
  199  00001218  2484310c	addui	r4,r4,(LC5_LF0)&0xffff
  200  0000121c  afa40000	sw	(r29),r4
  201  00001220  afa20004	sw	4(r29),r2
  202  00001224  0c000094	jal	_Printf
  203  00001228  54000000	nop; not filled.
  204  0000122c  23bd0008	addi	r29,r29,#8
  205  00001230  6c410000	sgti	r1,r2,#0
  206  00001234  1020001c	beqz	r1,L30_LF0
  207  00001238  54000000	nop; not filled.
  208  0000123c  2042ffff	addi	r2,r2,#-1
  209  00001240  23bdfff8	addi	r29,r29,#-8
  210  00001244  afa20000	sw	(r29),r2
  211  00001248  0fffff88	jal	_hello
  212  0000124c  54000000	nop; not filled.
  213  00001250  23bd0008	addi	r29,r29,#8
  214  00001254          	L30_LF0:
  215  00001254  8fa20000	lw	r2,0(r29)
  216  00001258  8fa30004	lw	r3,4(r29)
  217  0000125c  8fa40008	lw	r4,8(r29)
  218  00001260  8fdffff8	lw	r31,-8(r30)
  219  00001264  001ee820	add	r29,r0,r30
  220  00001268  8fdefffc	lw	r30,-4(r30)
  221  0000126c  4be00000	jr	r31
  222  00001270  54000000	nop
  223  00001274          	.endproc _hello
  224                      ;;;
  225                      ;;; Stub functions for DLX traps.
  226                      ;;;
  227                      ;;; Ethan L. Miller, 1999.  Released to the public domain.
  228                      ;;;
  229                      ;;; The traps such as Open and Close
  230                      ;;; (note the capital letters) are for use by user programs.  The traps
  231                      ;;; with names such as open and close (lower case) are for use by the OS.
  232                      ;;;
  235  00001274          	.align 2
  237                      ;;; The following are the traps to be used by user-level programs
  238                      ;;;
  240  00001274          	.align 2
  241  00001274          	.proc _Open
  242  00001274          	.global _Open
  243  00001274          	_Open:
  244                      ;;; Note that trap #0x213 actually causes a trap vector in the OS of
  245                      ;;; 0x1213.  The same is true for other user traps.  Thus, a user trap
  246                      ;;; with trap #0x240 will result in a trap vector of 0x1240 in the OS.
  247  00001274  44000213	trap	#0x213
  248  00001278  4be00000	jr	r31
  249  0000127c  54000000	nop
  250  00001280          	.endproc _Open
  252  00001280          	.proc _Close
  253  00001280          	.global _Close
  254  00001280          	_Close:
  255  00001280  44000214	trap	#0x214
  256  00001284  4be00000	jr	r31
  257  00001288  54000000	nop
  258  0000128c          	.endproc _Close
  260  0000128c          	.proc _Read
  261  0000128c          	.global _Read
  262  0000128c          	_Read:
  263  0000128c  44000210	trap	#0x210
  264  00001290  4be00000	jr	r31
  265  00001294  54000000	nop
  266  00001298          	.endproc _Read
  268  00001298          	.proc _Write
  269  00001298          	.global _Write
  270  00001298          	_Write:
  271  00001298  44000211	trap	#0x211
  272  0000129c  4be00000	jr	r31
  273  000012a0  54000000	nop
  274  000012a4          	.endproc _Write
  276  000012a4          	.proc _Lseek
  277  000012a4          	.global _Lseek
  278  000012a4          	_Lseek:
  279  000012a4  44000212	trap	#0x212
  280  000012a8  4be00000	jr	r31
  281  000012ac  54000000	nop
  282  000012b0          	.endproc _Lseek
  284  000012b0          	.proc _Putchar
  285  000012b0          	.global _Putchar
  286  000012b0          	_Putchar:
  287  000012b0  44000280	trap	#0x280
  288  000012b4  4be00000	jr	r31
  289  000012b8  54000000	nop
  290  000012bc          	.endproc _Putchar
  292  000012bc          	.proc _Printf
  293  000012bc          	.global _Printf
  294  000012bc          	_Printf:
  295  000012bc  44000201	trap	#0x201
  296  000012c0  4be00000	jr	r31
  297  000012c4  54000000	nop
  298  000012c8          	.endproc _Printf
  300  000012c8          	.proc _getpid
  301  000012c8          	.global _getpid
  302  000012c8          	_getpid:
  303  000012c8  44000431	trap	#0x431
  304  000012cc  4be00000	jr	r31
  305  000012d0  54000000	nop
  306  000012d4          	.endproc _getpid
  308  000012d4          	.proc _process_create
  309  000012d4          	.global _process_create
  310  000012d4          	_process_create:
  311  000012d4  44000432	trap	#0x432
  312  000012d8  4be00000	jr	r31
  313  000012dc  54000000	nop
  314  000012e0          	.endproc _process_create
  316  000012e0          	.proc _shmget
  317  000012e0          	.global _shmget
  318  000012e0          	_shmget:
  319  000012e0  44000440	trap	#0x440
  320  000012e4  4be00000	jr	r31
  321  000012e8  54000000	nop
  322  000012ec          	.endproc _shmget
  324  000012ec          	.proc _shmat
  325  000012ec          	.global _shmat
  326  000012ec          	_shmat:
  327  000012ec  44000441	trap	#0x441
  328  000012f0  4be00000	jr	r31
  329  000012f4  54000000	nop
  330  000012f8          	.endproc _shmat
  332  000012f8          	.proc _sem_create
  333  000012f8          	.global _sem_create
  334  000012f8          	_sem_create:
  335  000012f8  44000450	trap	#0x450
  336  000012fc  4be00000	jr	r31
  337  00001300  54000000	nop
  338  00001304          	.endproc _sem_create
  340  00001304          	.proc _sem_wait
  341  00001304          	.global _sem_wait
  342  00001304          	_sem_wait:
  343  00001304  44000451	trap	#0x451
  344  00001308  4be00000	jr	r31
  345  0000130c  54000000	nop
  346  00001310          	.endproc _sem_wait
  348  00001310          	.proc _sem_signal
  349  00001310          	.global _sem_signal
  350  00001310          	_sem_signal:
  351  00001310  44000452	trap	#0x452
  352  00001314  4be00000	jr	r31
  353  00001318  54000000	nop
  354  0000131c          	.endproc _sem_signal
  356  0000131c          	.proc _lock_create
  357  0000131c          	.global _lock_create
  358  0000131c          	_lock_create:
  359  0000131c  44000453	trap	#0x453
  360  00001320  4be00000	jr	r31
  361  00001324  54000000	nop
  362  00001328          	.endproc _lock_create
  364  00001328          	.proc _lock_acquire
  365  00001328          	.global _lock_acquire
  366  00001328          	_lock_acquire:
  367  00001328  44000454	trap	#0x454
  368  0000132c  4be00000	jr	r31
  369  00001330  54000000	nop
  370  00001334          	.endproc _lock_acquire
  372  00001334          	.proc _lock_release
  373  00001334          	.global _lock_release
  374  00001334          	_lock_release:
  375  00001334  44000455	trap	#0x455
  376  00001338  4be00000	jr	r31
  377  0000133c  54000000	nop
  378  00001340          	.endproc _lock_release
  380  00001340          	.proc _cond_create
  381  00001340          	.global _cond_create
  382  00001340          	_cond_create:
  383  00001340  44000456	trap	#0x456
  384  00001344  4be00000	jr	r31
  385  00001348  54000000	nop
  386  0000134c          	.endproc _cond_create
  388  0000134c          	.proc _cond_wait
  389  0000134c          	.global _cond_wait
  390  0000134c          	_cond_wait:
  391  0000134c  44000457	trap	#0x457
  392  00001350  4be00000	jr	r31
  393  00001354  54000000	nop
  394  00001358          	.endproc _cond_wait
  396  00001358          	.proc _cond_signal
  397  00001358          	.global _cond_signal
  398  00001358          	_cond_signal:
  399  00001358  44000458	trap	#0x458
  400  0000135c  4be00000	jr	r31
  401  00001360  54000000	nop
  402  00001364          	.endproc _cond_signal
  404  00001364          	.proc _cond_broadcast
  405  00001364          	.global _cond_broadcast
  406  00001364          	_cond_broadcast:
  407  00001364  44000459	trap	#0x459
  408  00001368  4be00000	jr	r31
  409  0000136c  54000000	nop
  410  00001370          	.endproc _cond_broadcast
  412  00001370          	.proc _mbox_create
  413  00001370          	.global _mbox_create
  414  00001370          	_mbox_create:
  415  00001370  44000460	trap	#0x460
  416  00001374  4be00000	jr	r31
  417  00001378  54000000	nop
  418  0000137c          	.endproc _mbox_create
  420  0000137c          	.proc _mbox_open
  421  0000137c          	.global _mbox_open
  422  0000137c          	_mbox_open:
  423  0000137c  44000461	trap	#0x461
  424  00001380  4be00000	jr	r31
  425  00001384  54000000	nop
  426  00001388          	.endproc _mbox_open
  428  00001388          	.proc _mbox_close
  429  00001388          	.global _mbox_close
  430  00001388          	_mbox_close:
  431  00001388  44000462	trap	#0x462
  432  0000138c  4be00000	jr	r31
  433  00001390  54000000	nop
  434  00001394          	.endproc _mbox_close
  436  00001394          	.proc _mbox_send
  437  00001394          	.global _mbox_send
  438  00001394          	_mbox_send:
  439  00001394  44000463	trap	#0x463
  440  00001398  4be00000	jr	r31
  441  0000139c  54000000	nop
  442  000013a0          	.endproc _mbox_send
  444  000013a0          	.proc _mbox_recv
  445  000013a0          	.global _mbox_recv
  446  000013a0          	_mbox_recv:
  447  000013a0  44000464	trap	#0x464
  448  000013a4  4be00000	jr	r31
  449  000013a8  54000000	nop
  450  000013ac          	.endproc _mbox_recv
  452  000013ac          	.proc _sleep
  453  000013ac          	.global _sleep
  454  000013ac          	_sleep:
  455  000013ac  44000465	trap	#0x465
  456  000013b0  4be00000	jr	r31
  457  000013b4  54000000	nop
  458  000013b8          	.endproc _sleep
  460  000013b8          	.proc _yield
  461  000013b8          	.global _yield
  462  000013b8          	_yield:
  463  000013b8  44000466	trap	#0x466
  464  000013bc  4be00000	jr	r31
  465  000013c0  54000000	nop
  466  000013c4          	.endproc _yield
  469  000013c4          	.proc _Exit
  470  000013c4          	.global _Exit
  471  000013c4          	_Exit:
  472  000013c4  44000500	trap	#0x500
  473  000013c8  4be00000	jr	r31
  474  000013cc  54000000	nop
  475  000013d0          	.endproc _Exit
  478  000013d0          	.proc _malloc
  479  000013d0          	.global _malloc
  480  000013d0          	_malloc:
  481  000013d0  44000467	trap	#0x467
  482  000013d4  4be00000	jr	r31
  483  000013d8          	.endproc _malloc
  486  000013d8          	.proc _mfree
  487  000013d8          	.global _mfree
  488  000013d8          	_mfree:
  489  000013d8  44000468	trap	#0x468
  490  000013dc  4be00000	jr	r31
  491  000013e0          	.endproc _mfree
  492                      ; Compiled by GCC
  494  000013e0          	.align 2
  495  000013e0          	.proc _isspace
  496  000013e0          	.global _isspace
  497  000013e0          	_isspace:
  498                      ;  Function 'isspace'; 0 bytes of locals, 3 regs to save.
  499  000013e0  afbefffc	sw	-4(r29),r30; push fp
  500  000013e4  001df020	add	r30,r0,r29; fp = sp
  501  000013e8  afbffff8	sw	-8(r29),r31; push ret addr
  502  000013ec  2fbd0018	subui	r29,r29,#24; alloc local storage
  503  000013f0  afa20000	sw	0(r29),r2
  504  000013f4  afa30004	sw	4(r29),r3
  505  000013f8  afa40008	sw	8(r29),r4
  506  000013fc  83c20003	lb	r2,3(r30)
  507  00001400  20010000	addi	r1,r0,#0
  508  00001404  304300ff	andi	r3,r2,#0x00ff
  509  00001408  60640020	seqi	r4,r3,#32
  510  0000140c  1480002c	bnez	r4,L3_LF2
  511  00001410  54000000	nop; delay slot nop
  512  00001414  304300ff	andi	r3,r2,#0x00ff
  513  00001418  60640009	seqi	r4,r3,#9
  514  0000141c  1480001c	bnez	r4,L3_LF2
  515  00001420  54000000	nop; delay slot nop
  516  00001424  304300ff	andi	r3,r2,#0x00ff
  517  00001428  6064000a	seqi	r4,r3,#10
  518  0000142c  1480000c	bnez	r4,L3_LF2
  519  00001430  54000000	nop; delay slot nop
  520  00001434  08000008	j	L2_LF2
  521  00001438  54000000	nop; delay slot nop
  522  0000143c          	L3_LF2:
  523  0000143c  20010001	addi	r1,r0,#1
  524  00001440          	L2_LF2:
  525  00001440  08000004	j	L1_LF2
  526  00001444  54000000	nop; delay slot nop
  527  00001448          	L1_LF2:
  528  00001448  8fa20000	lw	r2,0(r29)
  529  0000144c  8fa30004	lw	r3,4(r29)
  530  00001450  8fa40008	lw	r4,8(r29)
  531  00001454  8fdffff8	lw	r31,-8(r30)
  532  00001458  001ee820	add	r29,r0,r30
  533  0000145c  8fdefffc	lw	r30,-4(r30)
  534  00001460  4be00000	jr	r31
  535  00001464  54000000	nop
  536  00001468          	.endproc _isspace
  537  00001468          	.align 2
  538  00001468          	.proc _isxdigit
  539  00001468          	.global _isxdigit
  540  00001468          	_isxdigit:
  541                      ;  Function 'isxdigit'; 0 bytes of locals, 3 regs to save.
  542  00001468  afbefffc	sw	-4(r29),r30; push fp
  543  0000146c  001df020	add	r30,r0,r29; fp = sp
  544  00001470  afbffff8	sw	-8(r29),r31; push ret addr
  545  00001474  2fbd0018	subui	r29,r29,#24; alloc local storage
  546  00001478  afa20000	sw	0(r29),r2
  547  0000147c  afa30004	sw	4(r29),r3
  548  00001480  afa40008	sw	8(r29),r4
  549  00001484  83c20003	lb	r2,3(r30)
  550  00001488  20010000	addi	r1,r0,#0
  551  0000148c  304300ff	andi	r3,r2,#0x00ff
  552  00001490  6c64002f	sgtui	r4,r3,#47
  553  00001494  1080001c	beqz	r4,L7_LF2
  554  00001498  54000000	nop; delay slot nop
  555  0000149c  304300ff	andi	r3,r2,#0x00ff
  556  000014a0  70640039	sleui	r4,r3,#57
  557  000014a4  1480005c	bnez	r4,L6_LF2
  558  000014a8  54000000	nop; delay slot nop
  559  000014ac  08000004	j	L7_LF2
  560  000014b0  54000000	nop; delay slot nop
  561  000014b4          	L7_LF2:
  562  000014b4  304300ff	andi	r3,r2,#0x00ff
  563  000014b8  6c640060	sgtui	r4,r3,#96
  564  000014bc  1080001c	beqz	r4,L8_LF2
  565  000014c0  54000000	nop; delay slot nop
  566  000014c4  304300ff	andi	r3,r2,#0x00ff
  567  000014c8  70640066	sleui	r4,r3,#102
  568  000014cc  14800034	bnez	r4,L6_LF2
  569  000014d0  54000000	nop; delay slot nop
  570  000014d4  08000004	j	L8_LF2
  571  000014d8  54000000	nop; delay slot nop
  572  000014dc          	L8_LF2:
  573  000014dc  304300ff	andi	r3,r2,#0x00ff
  574  000014e0  6c640040	sgtui	r4,r3,#64
  575  000014e4  10800020	beqz	r4,L5_LF2
  576  000014e8  54000000	nop; delay slot nop
  577  000014ec  304300ff	andi	r3,r2,#0x00ff
  578  000014f0  70640041	sleui	r4,r3,#65
  579  000014f4  1480000c	bnez	r4,L6_LF2
  580  000014f8  54000000	nop; delay slot nop
  581  000014fc  08000008	j	L5_LF2
  582  00001500  54000000	nop; delay slot nop
  583  00001504          	L6_LF2:
  584  00001504  20010001	addi	r1,r0,#1
  585  00001508          	L5_LF2:
  586  00001508  08000004	j	L4_LF2
  587  0000150c  54000000	nop; delay slot nop
  588  00001510          	L4_LF2:
  589  00001510  8fa20000	lw	r2,0(r29)
  590  00001514  8fa30004	lw	r3,4(r29)
  591  00001518  8fa40008	lw	r4,8(r29)
  592  0000151c  8fdffff8	lw	r31,-8(r30)
  593  00001520  001ee820	add	r29,r0,r30
  594  00001524  8fdefffc	lw	r30,-4(r30)
  595  00001528  4be00000	jr	r31
  596  0000152c  54000000	nop
  597  00001530          	.endproc _isxdigit
  598  00001530          	.align 2
  599  00001530          	.proc _dstrcpy
  600  00001530          	.global _dstrcpy
  601  00001530          	_dstrcpy:
  602                      ;  Function 'dstrcpy'; 8 bytes of locals, 2 regs to save.
  603  00001530  afbefffc	sw	-4(r29),r30; push fp
  604  00001534  001df020	add	r30,r0,r29; fp = sp
  605  00001538  afbffff8	sw	-8(r29),r31; push ret addr
  606  0000153c  2fbd0018	subui	r29,r29,#24; alloc local storage
  607  00001540  afa20000	sw	0(r29),r2
  608  00001544  afa30004	sw	4(r29),r3
  609  00001548  8fc10000	lw	r1,(r30)
  610  0000154c  afc1fff4	sw	-12(r30),r1
  611  00001550          	L10_LF2:
  612  00001550  8fc10000	lw	r1,(r30)
  613  00001554  20220001	addi	r2,r1,#1
  614  00001558  afc20000	sw	(r30),r2
  615  0000155c  8fc20004	lw	r2,4(r30)
  616  00001560  20430001	addi	r3,r2,#1
  617  00001564  afc30004	sw	4(r30),r3
  618  00001568  80420000	lb	r2,(r2)
  619  0000156c  a0220000	sb	(r1),r2
  620  00001570  a3c2fff3	sb	-13(r30),r2
  621  00001574          	L12_LF2:
  622  00001574  93c1fff3	lbu	r1,-13(r30)
  623  00001578  64220000	snei	r2,r1,#0
  624  0000157c  1440000c	bnez	r2,L13_LF2
  625  00001580  54000000	nop; delay slot nop
  626  00001584  0800000c	j	L11_LF2
  627  00001588  54000000	nop; delay slot nop
  628  0000158c          	L13_LF2:
  629  0000158c  0bffffc0	j	L10_LF2
  630  00001590  54000000	nop; delay slot nop
  631  00001594          	L11_LF2:
  632  00001594  8fc1fff4	lw	r1,-12(r30)
  633  00001598  08000004	j	L9_LF2
  634  0000159c  54000000	nop; delay slot nop
  635  000015a0          	L9_LF2:
  636  000015a0  8fa20000	lw	r2,0(r29)
  637  000015a4  8fa30004	lw	r3,4(r29)
  638  000015a8  8fdffff8	lw	r31,-8(r30)
  639  000015ac  001ee820	add	r29,r0,r30
  640  000015b0  8fdefffc	lw	r30,-4(r30)
  641  000015b4  4be00000	jr	r31
  642  000015b8  54000000	nop
  643  000015bc          	.endproc _dstrcpy
  644  000015bc          	.align 2
  645  000015bc          	.proc _dstrncpy
  646  000015bc          	.global _dstrncpy
  647  000015bc          	_dstrncpy:
  648                      ;  Function 'dstrncpy'; 8 bytes of locals, 2 regs to save.
  649  000015bc  afbefffc	sw	-4(r29),r30; push fp
  650  000015c0  001df020	add	r30,r0,r29; fp = sp
  651  000015c4  afbffff8	sw	-8(r29),r31; push ret addr
  652  000015c8  2fbd0018	subui	r29,r29,#24; alloc local storage
  653  000015cc  afa20000	sw	0(r29),r2
  654  000015d0  afa30004	sw	4(r29),r3
  655  000015d4  8fc10000	lw	r1,(r30)
  656  000015d8  afc1fff4	sw	-12(r30),r1
  657  000015dc          	L15_LF2:
  658  000015dc  8fc10008	lw	r1,8(r30)
  659  000015e0  2022ffff	addi	r2,r1,#-1
  660  000015e4  afc20008	sw	8(r30),r2
  661  000015e8  70210000	slei	r1,r1,#0
  662  000015ec  1020000c	beqz	r1,L18_LF2
  663  000015f0  54000000	nop; delay slot nop
  664  000015f4  08000048	j	L16_LF2
  665  000015f8  54000000	nop; delay slot nop
  666  000015fc          	L18_LF2:
  667  000015fc  8fc10000	lw	r1,(r30)
  668  00001600  20220001	addi	r2,r1,#1
  669  00001604  afc20000	sw	(r30),r2
  670  00001608  8fc20004	lw	r2,4(r30)
  671  0000160c  20430001	addi	r3,r2,#1
  672  00001610  afc30004	sw	4(r30),r3
  673  00001614  80420000	lb	r2,(r2)
  674  00001618  a0220000	sb	(r1),r2
  675  0000161c  a3c2fff3	sb	-13(r30),r2
  676  00001620          	L17_LF2:
  677  00001620  93c1fff3	lbu	r1,-13(r30)
  678  00001624  64220000	snei	r2,r1,#0
  679  00001628  1440000c	bnez	r2,L19_LF2
  680  0000162c  54000000	nop; delay slot nop
  681  00001630  0800000c	j	L16_LF2
  682  00001634  54000000	nop; delay slot nop
  683  00001638          	L19_LF2:
  684  00001638  0bffffa0	j	L15_LF2
  685  0000163c  54000000	nop; delay slot nop
  686  00001640          	L16_LF2:
  687  00001640  8fc1fff4	lw	r1,-12(r30)
  688  00001644  08000004	j	L14_LF2
  689  00001648  54000000	nop; delay slot nop
  690  0000164c          	L14_LF2:
  691  0000164c  8fa20000	lw	r2,0(r29)
  692  00001650  8fa30004	lw	r3,4(r29)
  693  00001654  8fdffff8	lw	r31,-8(r30)
  694  00001658  001ee820	add	r29,r0,r30
  695  0000165c  8fdefffc	lw	r30,-4(r30)
  696  00001660  4be00000	jr	r31
  697  00001664  54000000	nop
  698  00001668          	.endproc _dstrncpy
  699  00001668          	.align 2
  700  00001668          	.proc _dstrcat
  701  00001668          	.global _dstrcat
  702  00001668          	_dstrcat:
  703                      ;  Function 'dstrcat'; 8 bytes of locals, 1 regs to save.
  704  00001668  afbefffc	sw	-4(r29),r30; push fp
  705  0000166c  001df020	add	r30,r0,r29; fp = sp
  706  00001670  afbffff8	sw	-8(r29),r31; push ret addr
  707  00001674  2fbd0018	subui	r29,r29,#24; alloc local storage
  708  00001678  afa20000	sw	0(r29),r2
  709  0000167c  8fc10000	lw	r1,(r30)
  710  00001680  afc1fff4	sw	-12(r30),r1
  711  00001684          	L21_LF2:
  712  00001684  8fc10000	lw	r1,(r30)
  713  00001688  90220000	lbu	r2,(r1)
  714  0000168c  64410000	snei	r1,r2,#0
  715  00001690  1420000c	bnez	r1,L23_LF2
  716  00001694  54000000	nop; delay slot nop
  717  00001698  0800001c	j	L22_LF2
  718  0000169c  54000000	nop; delay slot nop
  719  000016a0          	L23_LF2:
  720  000016a0  8fc20000	lw	r2,(r30)
  721  000016a4  20410001	addi	r1,r2,#1
  722  000016a8  00011020	add	r2,r0,r1
  723  000016ac  afc20000	sw	(r30),r2
  724  000016b0  0bffffd0	j	L21_LF2
  725  000016b4  54000000	nop; delay slot nop
  726  000016b8          	L22_LF2:
  727  000016b8  23bdfff8	addi	r29,r29,#-8
  728  000016bc  001d0820	add	r1,r0,r29
  729  000016c0  8fc20000	lw	r2,(r30)
  730  000016c4  ac220000	sw	(r1),r2
  731  000016c8  8fc20004	lw	r2,4(r30)
  732  000016cc  ac220004	sw	4(r1),r2
  733  000016d0  0ffffe5c	jal	_dstrcpy
  734  000016d4  54000000	nop; delay slot nop
  735  000016d8  23bd0008	addi	r29,r29,#8
  736  000016dc  8fc1fff4	lw	r1,-12(r30)
  737  000016e0  08000004	j	L20_LF2
  738  000016e4  54000000	nop; delay slot nop
  739  000016e8          	L20_LF2:
  740  000016e8  8fa20000	lw	r2,0(r29)
  741  000016ec  8fdffff8	lw	r31,-8(r30)
  742  000016f0  001ee820	add	r29,r0,r30
  743  000016f4  8fdefffc	lw	r30,-4(r30)
  744  000016f8  4be00000	jr	r31
  745  000016fc  54000000	nop
  746  00001700          	.endproc _dstrcat
  747  00001700          	.align 2
  748  00001700          	.proc _dstrncmp
  749  00001700          	.global _dstrncmp
  750  00001700          	_dstrncmp:
  751                      ;  Function 'dstrncmp'; 8 bytes of locals, 2 regs to save.
  752  00001700  afbefffc	sw	-4(r29),r30; push fp
  753  00001704  001df020	add	r30,r0,r29; fp = sp
  754  00001708  afbffff8	sw	-8(r29),r31; push ret addr
  755  0000170c  2fbd0018	subui	r29,r29,#24; alloc local storage
  756  00001710  afa20000	sw	0(r29),r2
  757  00001714  afa30004	sw	4(r29),r3
  758  00001718  54000000	nop
  759  0000171c  20010000	addi	r1,r0,#0
  760  00001720  afc1fff4	sw	-12(r30),r1
  761  00001724          	L25_LF2:
  762  00001724  8fc1fff4	lw	r1,-12(r30)
  763  00001728  8fc20008	lw	r2,8(r30)
  764  0000172c  0022082a	slt	r1,r1,r2
  765  00001730  1420000c	bnez	r1,L28_LF2
  766  00001734  54000000	nop; delay slot nop
  767  00001738  08000088	j	L26_LF2
  768  0000173c  54000000	nop; delay slot nop
  769  00001740          	L28_LF2:
  770  00001740  8fc10004	lw	r1,4(r30)
  771  00001744  90220000	lbu	r2,(r1)
  772  00001748  64410000	snei	r1,r2,#0
  773  0000174c  14200018	bnez	r1,L29_LF2
  774  00001750  54000000	nop; delay slot nop
  775  00001754  20010000	addi	r1,r0,#0
  776  00001758  080000d8	j	L24_LF2
  777  0000175c  54000000	nop; delay slot nop
  778  00001760  08000028	j	L30_LF2
  779  00001764  54000000	nop; delay slot nop
  780  00001768          	L29_LF2:
  781  00001768  8fc10000	lw	r1,(r30)
  782  0000176c  8fc20004	lw	r2,4(r30)
  783  00001770  90210000	lbu	r1,(r1)
  784  00001774  90420000	lbu	r2,(r2)
  785  00001778  00220829	sne	r1,r1,r2
  786  0000177c  1020000c	beqz	r1,L30_LF2
  787  00001780  54000000	nop; delay slot nop
  788  00001784  0800003c	j	L26_LF2
  789  00001788  54000000	nop; delay slot nop
  790  0000178c          	L31_LF2:
  791  0000178c          	L30_LF2:
  792  0000178c  8fc20000	lw	r2,(r30)
  793  00001790  20410001	addi	r1,r2,#1
  794  00001794  00011020	add	r2,r0,r1
  795  00001798  afc20000	sw	(r30),r2
  796  0000179c  8fc20004	lw	r2,4(r30)
  797  000017a0  20410001	addi	r1,r2,#1
  798  000017a4  00011020	add	r2,r0,r1
  799  000017a8  afc20004	sw	4(r30),r2
  800  000017ac          	L27_LF2:
  801  000017ac  8fc2fff4	lw	r2,-12(r30)
  802  000017b0  20410001	addi	r1,r2,#1
  803  000017b4  00011020	add	r2,r0,r1
  804  000017b8  afc2fff4	sw	-12(r30),r2
  805  000017bc  0bffff64	j	L25_LF2
  806  000017c0  54000000	nop; delay slot nop
  807  000017c4          	L26_LF2:
  808  000017c4  8fc1fff4	lw	r1,-12(r30)
  809  000017c8  8fc20008	lw	r2,8(r30)
  810  000017cc  00220828	seq	r1,r1,r2
  811  000017d0  10200018	beqz	r1,L32_LF2
  812  000017d4  54000000	nop; delay slot nop
  813  000017d8  20010000	addi	r1,r0,#0
  814  000017dc  08000054	j	L24_LF2
  815  000017e0  54000000	nop; delay slot nop
  816  000017e4  0800004c	j	L33_LF2
  817  000017e8  54000000	nop; delay slot nop
  818  000017ec          	L32_LF2:
  819  000017ec  8fc20000	lw	r2,(r30)
  820  000017f0  90410000	lbu	r1,(r2)
  821  000017f4  8fc20004	lw	r2,4(r30)
  822  000017f8  90430000	lbu	r3,(r2)
  823  000017fc  00230822	sub	r1,r1,r3
  824  00001800  74220000	sgei	r2,r1,#0
  825  00001804  10400020	beqz	r2,L34_LF2
  826  00001808  54000000	nop; delay slot nop
  827  0000180c  8fc10000	lw	r1,(r30)
  828  00001810  8fc20004	lw	r2,4(r30)
  829  00001814  90210000	lbu	r1,(r1)
  830  00001818  90420000	lbu	r2,(r2)
  831  0000181c  00220829	sne	r1,r1,r2
  832  00001820  08000008	j	L35_LF2
  833  00001824  54000000	nop; delay slot nop
  834  00001828          	L34_LF2:
  835  00001828  2001ffff	addi	r1,r0,#-1
  836  0000182c          	L35_LF2:
  837  0000182c  08000004	j	L24_LF2
  838  00001830  54000000	nop; delay slot nop
  839  00001834          	L33_LF2:
  840  00001834          	L24_LF2:
  841  00001834  8fa20000	lw	r2,0(r29)
  842  00001838  8fa30004	lw	r3,4(r29)
  843  0000183c  8fdffff8	lw	r31,-8(r30)
  844  00001840  001ee820	add	r29,r0,r30
  845  00001844  8fdefffc	lw	r30,-4(r30)
  846  00001848  4be00000	jr	r31
  847  0000184c  54000000	nop
  848  00001850          	.endproc _dstrncmp
  849  00001850          	.align 2
  850  00001850          	.proc _dstrlen
  851  00001850          	.global _dstrlen
  852  00001850          	_dstrlen:
  853                      ;  Function 'dstrlen'; 8 bytes of locals, 1 regs to save.
  854  00001850  afbefffc	sw	-4(r29),r30; push fp
  855  00001854  001df020	add	r30,r0,r29; fp = sp
  856  00001858  afbffff8	sw	-8(r29),r31; push ret addr
  857  0000185c  2fbd0018	subui	r29,r29,#24; alloc local storage
  858  00001860  afa20000	sw	0(r29),r2
  859  00001864  20010000	addi	r1,r0,#0
  860  00001868  afc1fff4	sw	-12(r30),r1
  861  0000186c          	L37_LF2:
  862  0000186c  8fc10000	lw	r1,(r30)
  863  00001870  20220001	addi	r2,r1,#1
  864  00001874  afc20000	sw	(r30),r2
  865  00001878  90210000	lbu	r1,(r1)
  866  0000187c  64220000	snei	r2,r1,#0
  867  00001880  1440000c	bnez	r2,L39_LF2
  868  00001884  54000000	nop; delay slot nop
  869  00001888  0800001c	j	L38_LF2
  870  0000188c  54000000	nop; delay slot nop
  871  00001890          	L39_LF2:
  872  00001890  8fc2fff4	lw	r2,-12(r30)
  873  00001894  20410001	addi	r1,r2,#1
  874  00001898  00011020	add	r2,r0,r1
  875  0000189c  afc2fff4	sw	-12(r30),r2
  876  000018a0  0bffffc8	j	L37_LF2
  877  000018a4  54000000	nop; delay slot nop
  878  000018a8          	L38_LF2:
  879  000018a8  8fc1fff4	lw	r1,-12(r30)
  880  000018ac  08000004	j	L36_LF2
  881  000018b0  54000000	nop; delay slot nop
  882  000018b4          	L36_LF2:
  883  000018b4  8fa20000	lw	r2,0(r29)
  884  000018b8  8fdffff8	lw	r31,-8(r30)
  885  000018bc  001ee820	add	r29,r0,r30
  886  000018c0  8fdefffc	lw	r30,-4(r30)
  887  000018c4  4be00000	jr	r31
  888  000018c8  54000000	nop
  889  000018cc          	.endproc _dstrlen
  890  000018cc          	.align 2
  891  000018cc          	.proc _dstrstr
  892  000018cc          	.global _dstrstr
  893  000018cc          	_dstrstr:
  894                      ;  Function 'dstrstr'; 8 bytes of locals, 1 regs to save.
  895  000018cc  afbefffc	sw	-4(r29),r30; push fp
  896  000018d0  001df020	add	r30,r0,r29; fp = sp
  897  000018d4  afbffff8	sw	-8(r29),r31; push ret addr
  898  000018d8  2fbd0018	subui	r29,r29,#24; alloc local storage
  899  000018dc  afa20000	sw	0(r29),r2
  900  000018e0  23bdfff8	addi	r29,r29,#-8
  901  000018e4  001d0820	add	r1,r0,r29
  902  000018e8  8fc20004	lw	r2,4(r30)
  903  000018ec  ac220000	sw	(r1),r2
  904  000018f0  0fffff5c	jal	_dstrlen
  905  000018f4  54000000	nop; delay slot nop
  906  000018f8  23bd0008	addi	r29,r29,#8
  907  000018fc  afc1fff4	sw	-12(r30),r1
  908  00001900          	L41_LF2:
  909  00001900  8fc10000	lw	r1,(r30)
  910  00001904  90220000	lbu	r2,(r1)
  911  00001908  64410000	snei	r1,r2,#0
  912  0000190c  1420000c	bnez	r1,L43_LF2
  913  00001910  54000000	nop; delay slot nop
  914  00001914  08000060	j	L42_LF2
  915  00001918  54000000	nop; delay slot nop
  916  0000191c          	L43_LF2:
  917  0000191c  23bdfff0	addi	r29,r29,#-16
  918  00001920  001d0820	add	r1,r0,r29
  919  00001924  8fc20000	lw	r2,(r30)
  920  00001928  ac220000	sw	(r1),r2
  921  0000192c  8fc20004	lw	r2,4(r30)
  922  00001930  ac220004	sw	4(r1),r2
  923  00001934  8fc2fff4	lw	r2,-12(r30)
  924  00001938  ac220008	sw	8(r1),r2
  925  0000193c  0ffffdc0	jal	_dstrncmp
  926  00001940  54000000	nop; delay slot nop
  927  00001944  23bd0010	addi	r29,r29,#16
  928  00001948  64220000	snei	r2,r1,#0
  929  0000194c  14400010	bnez	r2,L44_LF2
  930  00001950  54000000	nop; delay slot nop
  931  00001954  8fc10000	lw	r1,(r30)
  932  00001958  08000028	j	L40_LF2
  933  0000195c  54000000	nop; delay slot nop
  934  00001960          	L44_LF2:
  935  00001960  8fc20000	lw	r2,(r30)
  936  00001964  20410001	addi	r1,r2,#1
  937  00001968  00011020	add	r2,r0,r1
  938  0000196c  afc20000	sw	(r30),r2
  939  00001970  0bffff8c	j	L41_LF2
  940  00001974  54000000	nop; delay slot nop
  941  00001978          	L42_LF2:
  942  00001978  20010000	addi	r1,r0,#0
  943  0000197c  08000004	j	L40_LF2
  944  00001980  54000000	nop; delay slot nop
  945  00001984          	L40_LF2:
  946  00001984  8fa20000	lw	r2,0(r29)
  947  00001988  8fdffff8	lw	r31,-8(r30)
  948  0000198c  001ee820	add	r29,r0,r30
  949  00001990  8fdefffc	lw	r30,-4(r30)
  950  00001994  4be00000	jr	r31
  951  00001998  54000000	nop
  952  0000199c          	.endproc _dstrstr
  953  0000199c          	.align 2
  954  0000199c          	.proc _dmindex
  955  0000199c          	.global _dmindex
  956  0000199c          	_dmindex:
  957                      ;  Function 'dmindex'; 8 bytes of locals, 1 regs to save.
  958  0000199c  afbefffc	sw	-4(r29),r30; push fp
  959  000019a0  001df020	add	r30,r0,r29; fp = sp
  960  000019a4  afbffff8	sw	-8(r29),r31; push ret addr
  961  000019a8  2fbd0018	subui	r29,r29,#24; alloc local storage
  962  000019ac  afa20000	sw	0(r29),r2
  963  000019b0  54000000	nop
  964  000019b4          	L46_LF2:
  965  000019b4  8fc10000	lw	r1,(r30)
  966  000019b8  90220000	lbu	r2,(r1)
  967  000019bc  64410000	snei	r1,r2,#0
  968  000019c0  1420000c	bnez	r1,L48_LF2
  969  000019c4  54000000	nop; delay slot nop
  970  000019c8  08000070	j	L47_LF2
  971  000019cc  54000000	nop; delay slot nop
  972  000019d0          	L48_LF2:
  973  000019d0  8fc10004	lw	r1,4(r30)
  974  000019d4  afc1fff4	sw	-12(r30),r1
  975  000019d8          	L49_LF2:
  976  000019d8  8fc1fff4	lw	r1,-12(r30)
  977  000019dc  90220000	lbu	r2,(r1)
  978  000019e0  64410000	snei	r1,r2,#0
  979  000019e4  1420000c	bnez	r1,L52_LF2
  980  000019e8  54000000	nop; delay slot nop
  981  000019ec  08000044	j	L50_LF2
  982  000019f0  54000000	nop; delay slot nop
  983  000019f4          	L52_LF2:
  984  000019f4  8fc10000	lw	r1,(r30)
  985  000019f8  8fc2fff4	lw	r2,-12(r30)
  986  000019fc  90210000	lbu	r1,(r1)
  987  00001a00  90420000	lbu	r2,(r2)
  988  00001a04  00220828	seq	r1,r1,r2
  989  00001a08  10200010	beqz	r1,L51_LF2
  990  00001a0c  54000000	nop; delay slot nop
  991  00001a10  8fc10000	lw	r1,(r30)
  992  00001a14  08000030	j	L45_LF2
  993  00001a18  54000000	nop; delay slot nop
  994  00001a1c          	L53_LF2:
  995  00001a1c          	L51_LF2:
  996  00001a1c  8fc2fff4	lw	r2,-12(r30)
  997  00001a20  20410001	addi	r1,r2,#1
  998  00001a24  00011020	add	r2,r0,r1
  999  00001a28  afc2fff4	sw	-12(r30),r2
 1000  00001a2c  0bffffa8	j	L49_LF2
 1001  00001a30  54000000	nop; delay slot nop
 1002  00001a34          	L50_LF2:
 1003  00001a34  0bffff7c	j	L46_LF2
 1004  00001a38  54000000	nop; delay slot nop
 1005  00001a3c          	L47_LF2:
 1006  00001a3c  20010000	addi	r1,r0,#0
 1007  00001a40  08000004	j	L45_LF2
 1008  00001a44  54000000	nop; delay slot nop
 1009  00001a48          	L45_LF2:
 1010  00001a48  8fa20000	lw	r2,0(r29)
 1011  00001a4c  8fdffff8	lw	r31,-8(r30)
 1012  00001a50  001ee820	add	r29,r0,r30
 1013  00001a54  8fdefffc	lw	r30,-4(r30)
 1014  00001a58  4be00000	jr	r31
 1015  00001a5c  54000000	nop
 1016  00001a60          	.endproc _dmindex
 1017  00001a60          	.align 2
 1018  00001a60          	.proc _dindex
 1019  00001a60          	.global _dindex
 1020  00001a60          	_dindex:
 1021                      ;  Function 'dindex'; 0 bytes of locals, 1 regs to save.
 1022  00001a60  afbefffc	sw	-4(r29),r30; push fp
 1023  00001a64  001df020	add	r30,r0,r29; fp = sp
 1024  00001a68  afbffff8	sw	-8(r29),r31; push ret addr
 1025  00001a6c  2fbd0010	subui	r29,r29,#16; alloc local storage
 1026  00001a70  afa20000	sw	0(r29),r2
 1027  00001a74  54000000	nop
 1028  00001a78          	L55_LF2:
 1029  00001a78  8fc10000	lw	r1,(r30)
 1030  00001a7c  90220000	lbu	r2,(r1)
 1031  00001a80  64410000	snei	r1,r2,#0
 1032  00001a84  1420000c	bnez	r1,L57_LF2
 1033  00001a88  54000000	nop; delay slot nop
 1034  00001a8c  08000040	j	L56_LF2
 1035  00001a90  54000000	nop; delay slot nop
 1036  00001a94          	L57_LF2:
 1037  00001a94  8fc10000	lw	r1,(r30)
 1038  00001a98  90220000	lbu	r2,(r1)
 1039  00001a9c  8fc10004	lw	r1,4(r30)
 1040  00001aa0  00411028	seq	r2,r2,r1
 1041  00001aa4  10400010	beqz	r2,L58_LF2
 1042  00001aa8  54000000	nop; delay slot nop
 1043  00001aac  8fc10000	lw	r1,(r30)
 1044  00001ab0  08000028	j	L54_LF2
 1045  00001ab4  54000000	nop; delay slot nop
 1046  00001ab8          	L58_LF2:
 1047  00001ab8  8fc20000	lw	r2,(r30)
 1048  00001abc  20410001	addi	r1,r2,#1
 1049  00001ac0  00011020	add	r2,r0,r1
 1050  00001ac4  afc20000	sw	(r30),r2
 1051  00001ac8  0bffffac	j	L55_LF2
 1052  00001acc  54000000	nop; delay slot nop
 1053  00001ad0          	L56_LF2:
 1054  00001ad0  20010000	addi	r1,r0,#0
 1055  00001ad4  08000004	j	L54_LF2
 1056  00001ad8  54000000	nop; delay slot nop
 1057  00001adc          	L54_LF2:
 1058  00001adc  8fa20000	lw	r2,0(r29)
 1059  00001ae0  8fdffff8	lw	r31,-8(r30)
 1060  00001ae4  001ee820	add	r29,r0,r30
 1061  00001ae8  8fdefffc	lw	r30,-4(r30)
 1062  00001aec  4be00000	jr	r31
 1063  00001af0  54000000	nop
 1064  00001af4          	.endproc _dindex
 1065  00001af4          	.align 2
 1066  00001af4          	.proc _ditoa
 1067  00001af4          	.global _ditoa
 1068  00001af4          	_ditoa:
 1069                      ;  Function 'ditoa'; 8 bytes of locals, 2 regs to save.
 1070  00001af4  afbefffc	sw	-4(r29),r30; push fp
 1071  00001af8  001df020	add	r30,r0,r29; fp = sp
 1072  00001afc  afbffff8	sw	-8(r29),r31; push ret addr
 1073  00001b00  2fbd0018	subui	r29,r29,#24; alloc local storage
 1074  00001b04  afa20000	sw	0(r29),r2
 1075  00001b08  afa30004	sw	4(r29),r3
 1076  00001b0c  8fc10000	lw	r1,(r30)
 1077  00001b10  68220000	slti	r2,r1,#0
 1078  00001b14  1040002c	beqz	r2,L60_LF2
 1079  00001b18  54000000	nop; delay slot nop
 1080  00001b1c  8fc10004	lw	r1,4(r30)
 1081  00001b20  20220001	addi	r2,r1,#1
 1082  00001b24  afc20004	sw	4(r30),r2
 1083  00001b28  2002002d	addi	r2,r0,(#0x2d)&0xff
 1084  00001b2c  a0220000	sb	(r1),r2
 1085  00001b30  8fc10000	lw	r1,(r30)
 1086  00001b34  00011022	sub	r2,r0,r1
 1087  00001b38  afc20000	sw	(r30),r2
 1088  00001b3c  08000118	j	L61_LF2
 1089  00001b40  54000000	nop; delay slot nop
 1090  00001b44          	L60_LF2:
 1091  00001b44  8fc10000	lw	r1,(r30)
 1092  00001b48  64220000	snei	r2,r1,#0
 1093  00001b4c  14400020	bnez	r2,L62_LF2
 1094  00001b50  54000000	nop; delay slot nop
 1095  00001b54  8fc10004	lw	r1,4(r30)
 1096  00001b58  20220001	addi	r2,r1,#1
 1097  00001b5c  afc20004	sw	4(r30),r2
 1098  00001b60  20020030	addi	r2,r0,(#0x30)&0xff
 1099  00001b64  a0220000	sb	(r1),r2
 1100  00001b68  080000ec	j	L61_LF2
 1101  00001b6c  54000000	nop; delay slot nop
 1102  00001b70          	L62_LF2:
 1103  00001b70  20010001	addi	r1,r0,#1
 1104  00001b74  afc1fff4	sw	-12(r30),r1
 1105  00001b78          	L64_LF2:
 1106  00001b78  8fc1fff4	lw	r1,-12(r30)
 1107  00001b7c  8fc20000	lw	r2,(r30)
 1108  00001b80  0022082c	sle	r1,r1,r2
 1109  00001b84  1420000c	bnez	r1,L66_LF2
 1110  00001b88  54000000	nop; delay slot nop
 1111  00001b8c  08000024	j	L65_LF2
 1112  00001b90  54000000	nop; delay slot nop
 1113  00001b94          	L67_LF2:
 1114  00001b94          	L66_LF2:
 1115  00001b94  8fc1fff4	lw	r1,-12(r30)
 1116  00001b98  00011820	add	r3,r0,r1
 1117  00001b9c  50620002	slli	r2,r3,#0x2
 1118  00001ba0  00411020	add	r2,r2,r1
 1119  00001ba4  50410001	slli	r1,r2,#0x1
 1120  00001ba8  afc1fff4	sw	-12(r30),r1
 1121  00001bac  0bffffc8	j	L64_LF2
 1122  00001bb0  54000000	nop; delay slot nop
 1123  00001bb4          	L65_LF2:
 1124  00001bb4  54000000	nop
 1125  00001bb8          	L68_LF2:
 1126  00001bb8  8fc1fff4	lw	r1,-12(r30)
 1127  00001bbc  2002000a	addi	r2,r0,#10
 1128  00001bc0  00200035	movi2fp	f0,r1
 1129  00001bc4  00400835	movi2fp	f1,r2
 1130  00001bc8  0401000f	div	f0,f0,f1
 1131  00001bcc  00000834	movfp2i	r1,f0
 1132  00001bd0  afc1fff4	sw	-12(r30),r1
 1133  00001bd4  8fc10004	lw	r1,4(r30)
 1134  00001bd8  20220001	addi	r2,r1,#1
 1135  00001bdc  afc20004	sw	4(r30),r2
 1136  00001be0  8fc20000	lw	r2,(r30)
 1137  00001be4  8fc3fff4	lw	r3,-12(r30)
 1138  00001be8  00400035	movi2fp	f0,r2
 1139  00001bec  00600835	movi2fp	f1,r3
 1140  00001bf0  0401000f	div	f0,f0,f1
 1141  00001bf4  00001034	movfp2i	r2,f0
 1142  00001bf8  00021820	add	r3,r0,r2
 1143  00001bfc  20620030	addi	r2,r3,#48
 1144  00001c00  a0220000	sb	(r1),r2
 1145  00001c04  8fc10000	lw	r1,(r30)
 1146  00001c08  8fc3fff4	lw	r3,-12(r30)
 1147  00001c0c  00200035	movi2fp	f0,r1
 1148  00001c10  00600835	movi2fp	f1,r3
 1149  00001c14  0401000f	div	f0,f0,f1
 1150  00001c18  00001034	movfp2i	r2,f0
 1151  00001c1c  8fc3fff4	lw	r3,-12(r30)
 1152  00001c20  00400035	movi2fp	f0,r2
 1153  00001c24  00600835	movi2fp	f1,r3
 1154  00001c28  0401000e	mult	f0,f0,f1
 1155  00001c2c  00001034	movfp2i	r2,f0
 1156  00001c30  00220822	sub	r1,r1,r2
 1157  00001c34  afc10000	sw	(r30),r1
 1158  00001c38          	L70_LF2:
 1159  00001c38  8fc1fff4	lw	r1,-12(r30)
 1160  00001c3c  6c220001	sgti	r2,r1,#1
 1161  00001c40  1440000c	bnez	r2,L71_LF2
 1162  00001c44  54000000	nop; delay slot nop
 1163  00001c48  0800000c	j	L61_LF2
 1164  00001c4c  54000000	nop; delay slot nop
 1165  00001c50          	L71_LF2:
 1166  00001c50  0bffff64	j	L68_LF2
 1167  00001c54  54000000	nop; delay slot nop
 1168  00001c58          	L69_LF2:
 1169  00001c58          	L63_LF2:
 1170  00001c58          	L61_LF2:
 1171  00001c58  8fc10004	lw	r1,4(r30)
 1172  00001c5c  20020000	addi	r2,r0,(#0x0)&0xff
 1173  00001c60  a0220000	sb	(r1),r2
 1174  00001c64          	L59_LF2:
 1175  00001c64  8fa20000	lw	r2,0(r29)
 1176  00001c68  8fa30004	lw	r3,4(r29)
 1177  00001c6c  8fdffff8	lw	r31,-8(r30)
 1178  00001c70  001ee820	add	r29,r0,r30
 1179  00001c74  8fdefffc	lw	r30,-4(r30)
 1180  00001c78  4be00000	jr	r31
 1181  00001c7c  54000000	nop
 1182  00001c80          	.endproc _ditoa
 1183  00001c80          	.align 2
 1184  00001c80          	.proc _dstrtol
 1185  00001c80          	.global _dstrtol
 1186  00001c80          	_dstrtol:
 1187                      ;  Function 'dstrtol'; 16 bytes of locals, 1 regs to save.
 1188  00001c80  afbefffc	sw	-4(r29),r30; push fp
 1189  00001c84  001df020	add	r30,r0,r29; fp = sp
 1190  00001c88  afbffff8	sw	-8(r29),r31; push ret addr
 1191  00001c8c  2fbd0020	subui	r29,r29,#32; alloc local storage
 1192  00001c90  afa20000	sw	0(r29),r2
 1193  00001c94  20010000	addi	r1,r0,#0
 1194  00001c98  afc1fff4	sw	-12(r30),r1
 1195  00001c9c          	L73_LF2:
 1196  00001c9c  8fc10000	lw	r1,(r30)
 1197  00001ca0  90220000	lbu	r2,(r1)
 1198  00001ca4  60410020	seqi	r1,r2,#32
 1199  00001ca8  14200034	bnez	r1,L75_LF2
 1200  00001cac  54000000	nop; delay slot nop
 1201  00001cb0  8fc10000	lw	r1,(r30)
 1202  00001cb4  90220000	lbu	r2,(r1)
 1203  00001cb8  60410009	seqi	r1,r2,#9
 1204  00001cbc  14200020	bnez	r1,L75_LF2
 1205  00001cc0  54000000	nop; delay slot nop
 1206  00001cc4  8fc10000	lw	r1,(r30)
 1207  00001cc8  90220000	lbu	r2,(r1)
 1208  00001ccc  6041000a	seqi	r1,r2,#10
 1209  00001cd0  1420000c	bnez	r1,L75_LF2
 1210  00001cd4  54000000	nop; delay slot nop
 1211  00001cd8  0800001c	j	L74_LF2
 1212  00001cdc  54000000	nop; delay slot nop
 1213  00001ce0          	L75_LF2:
 1214  00001ce0  8fc20000	lw	r2,(r30)
 1215  00001ce4  20410001	addi	r1,r2,#1
 1216  00001ce8  00011020	add	r2,r0,r1
 1217  00001cec  afc20000	sw	(r30),r2
 1218  00001cf0  0bffffa8	j	L73_LF2
 1219  00001cf4  54000000	nop; delay slot nop
 1220  00001cf8          	L74_LF2:
 1221  00001cf8  8fc10004	lw	r1,4(r30)
 1222  00001cfc  64220000	snei	r2,r1,#0
 1223  00001d00  10400010	beqz	r2,L76_LF2
 1224  00001d04  54000000	nop; delay slot nop
 1225  00001d08  8fc10004	lw	r1,4(r30)
 1226  00001d0c  8fc20000	lw	r2,(r30)
 1227  00001d10  ac220000	sw	(r1),r2
 1228  00001d14          	L76_LF2:
 1229  00001d14  8fc10000	lw	r1,(r30)
 1230  00001d18  90220000	lbu	r2,(r1)
 1231  00001d1c  64410000	snei	r1,r2,#0
 1232  00001d20  14200010	bnez	r1,L77_LF2
 1233  00001d24  54000000	nop; delay slot nop
 1234  00001d28  8fc1fff4	lw	r1,-12(r30)
 1235  00001d2c  08000294	j	L72_LF2
 1236  00001d30  54000000	nop; delay slot nop
 1237  00001d34          	L77_LF2:
 1238  00001d34  8fc10000	lw	r1,(r30)
 1239  00001d38  90220000	lbu	r2,(r1)
 1240  00001d3c  6041002d	seqi	r1,r2,#45
 1241  00001d40  10200024	beqz	r1,L78_LF2
 1242  00001d44  54000000	nop; delay slot nop
 1243  00001d48  2001ffff	addi	r1,r0,#-1
 1244  00001d4c  afc1ffec	sw	-20(r30),r1
 1245  00001d50  8fc20000	lw	r2,(r30)
 1246  00001d54  20410001	addi	r1,r2,#1
 1247  00001d58  00011020	add	r2,r0,r1
 1248  00001d5c  afc20000	sw	(r30),r2
 1249  00001d60  0800000c	j	L79_LF2
 1250  00001d64  54000000	nop; delay slot nop
 1251  00001d68          	L78_LF2:
 1252  00001d68  20010001	addi	r1,r0,#1
 1253  00001d6c  afc1ffec	sw	-20(r30),r1
 1254  00001d70          	L79_LF2:
 1255  00001d70  8fc10008	lw	r1,8(r30)
 1256  00001d74  64220000	snei	r2,r1,#0
 1257  00001d78  14400090	bnez	r2,L80_LF2
 1258  00001d7c  54000000	nop; delay slot nop
 1259  00001d80  8fc10000	lw	r1,(r30)
 1260  00001d84  90220000	lbu	r2,(r1)
 1261  00001d88  60410030	seqi	r1,r2,#48
 1262  00001d8c  10200074	beqz	r1,L81_LF2
 1263  00001d90  54000000	nop; delay slot nop
 1264  00001d94  8fc20000	lw	r2,(r30)
 1265  00001d98  20410001	addi	r1,r2,#1
 1266  00001d9c  00011020	add	r2,r0,r1
 1267  00001da0  afc20000	sw	(r30),r2
 1268  00001da4  8fc10000	lw	r1,(r30)
 1269  00001da8  90220000	lbu	r2,(r1)
 1270  00001dac  60410078	seqi	r1,r2,#120
 1271  00001db0  14200020	bnez	r1,L83_LF2
 1272  00001db4  54000000	nop; delay slot nop
 1273  00001db8  8fc10000	lw	r1,(r30)
 1274  00001dbc  90220000	lbu	r2,(r1)
 1275  00001dc0  60410058	seqi	r1,r2,#88
 1276  00001dc4  1420000c	bnez	r1,L83_LF2
 1277  00001dc8  54000000	nop; delay slot nop
 1278  00001dcc  08000024	j	L82_LF2
 1279  00001dd0  54000000	nop; delay slot nop
 1280  00001dd4          	L83_LF2:
 1281  00001dd4  20010010	addi	r1,r0,#16
 1282  00001dd8  afc10008	sw	8(r30),r1
 1283  00001ddc  8fc20000	lw	r2,(r30)
 1284  00001de0  20410001	addi	r1,r2,#1
 1285  00001de4  00011020	add	r2,r0,r1
 1286  00001de8  afc20000	sw	(r30),r2
 1287  00001dec  0800000c	j	L84_LF2
 1288  00001df0  54000000	nop; delay slot nop
 1289  00001df4          	L82_LF2:
 1290  00001df4  20010008	addi	r1,r0,#8
 1291  00001df8  afc10008	sw	8(r30),r1
 1292  00001dfc          	L84_LF2:
 1293  00001dfc  0800000c	j	L80_LF2
 1294  00001e00  54000000	nop; delay slot nop
 1295  00001e04          	L81_LF2:
 1296  00001e04  2001000a	addi	r1,r0,#10
 1297  00001e08  afc10008	sw	8(r30),r1
 1298  00001e0c          	L85_LF2:
 1299  00001e0c          	L80_LF2:
 1300  00001e0c  8fc10008	lw	r1,8(r30)
 1301  00001e10  70220000	slei	r2,r1,#0
 1302  00001e14  1440001c	bnez	r2,L87_LF2
 1303  00001e18  54000000	nop; delay slot nop
 1304  00001e1c  8fc10008	lw	r1,8(r30)
 1305  00001e20  6c220010	sgti	r2,r1,#16
 1306  00001e24  1440000c	bnez	r2,L87_LF2
 1307  00001e28  54000000	nop; delay slot nop
 1308  00001e2c  08000010	j	L86_LF2
 1309  00001e30  54000000	nop; delay slot nop
 1310  00001e34          	L87_LF2:
 1311  00001e34  8fc1fff4	lw	r1,-12(r30)
 1312  00001e38  08000188	j	L72_LF2
 1313  00001e3c  54000000	nop; delay slot nop
 1314  00001e40          	L86_LF2:
 1315  00001e40  54000000	nop
 1316  00001e44          	L88_LF2:
 1317  00001e44  8fc10000	lw	r1,(r30)
 1318  00001e48  90220000	lbu	r2,(r1)
 1319  00001e4c  6c41002f	sgtui	r1,r2,#47
 1320  00001e50  10200030	beqz	r1,L91_LF2
 1321  00001e54  54000000	nop; delay slot nop
 1322  00001e58  8fc10000	lw	r1,(r30)
 1323  00001e5c  90220000	lbu	r2,(r1)
 1324  00001e60  70410039	sleui	r1,r2,#57
 1325  00001e64  1020001c	beqz	r1,L91_LF2
 1326  00001e68  54000000	nop; delay slot nop
 1327  00001e6c  8fc10000	lw	r1,(r30)
 1328  00001e70  90220000	lbu	r2,(r1)
 1329  00001e74  2041ffd0	addi	r1,r2,#-48
 1330  00001e78  afc1fff0	sw	-16(r30),r1
 1331  00001e7c  0800008c	j	L92_LF2
 1332  00001e80  54000000	nop; delay slot nop
 1333  00001e84          	L91_LF2:
 1334  00001e84  8fc10000	lw	r1,(r30)
 1335  00001e88  90220000	lbu	r2,(r1)
 1336  00001e8c  6c410060	sgtui	r1,r2,#96
 1337  00001e90  10200030	beqz	r1,L93_LF2
 1338  00001e94  54000000	nop; delay slot nop
 1339  00001e98  8fc10000	lw	r1,(r30)
 1340  00001e9c  90220000	lbu	r2,(r1)
 1341  00001ea0  7041007a	sleui	r1,r2,#122
 1342  00001ea4  1020001c	beqz	r1,L93_LF2
 1343  00001ea8  54000000	nop; delay slot nop
 1344  00001eac  8fc10000	lw	r1,(r30)
 1345  00001eb0  90220000	lbu	r2,(r1)
 1346  00001eb4  2041ffa9	addi	r1,r2,#-87
 1347  00001eb8  afc1fff0	sw	-16(r30),r1
 1348  00001ebc  0800004c	j	L92_LF2
 1349  00001ec0  54000000	nop; delay slot nop
 1350  00001ec4          	L93_LF2:
 1351  00001ec4  8fc10000	lw	r1,(r30)
 1352  00001ec8  90220000	lbu	r2,(r1)
 1353  00001ecc  6c410040	sgtui	r1,r2,#64
 1354  00001ed0  10200030	beqz	r1,L95_LF2
 1355  00001ed4  54000000	nop; delay slot nop
 1356  00001ed8  8fc10000	lw	r1,(r30)
 1357  00001edc  90220000	lbu	r2,(r1)
 1358  00001ee0  7041005a	sleui	r1,r2,#90
 1359  00001ee4  1020001c	beqz	r1,L95_LF2
 1360  00001ee8  54000000	nop; delay slot nop
 1361  00001eec  8fc10000	lw	r1,(r30)
 1362  00001ef0  90220000	lbu	r2,(r1)
 1363  00001ef4  2041ffc9	addi	r1,r2,#-55
 1364  00001ef8  afc1fff0	sw	-16(r30),r1
 1365  00001efc  0800000c	j	L92_LF2
 1366  00001f00  54000000	nop; delay slot nop
 1367  00001f04          	L95_LF2:
 1368  00001f04  200103e8	addi	r1,r0,#1000
 1369  00001f08  afc1fff0	sw	-16(r30),r1
 1370  00001f0c          	L96_LF2:
 1371  00001f0c          	L94_LF2:
 1372  00001f0c          	L92_LF2:
 1373  00001f0c  8fc1fff0	lw	r1,-16(r30)
 1374  00001f10  8fc20008	lw	r2,8(r30)
 1375  00001f14  0022082a	slt	r1,r1,r2
 1376  00001f18  10200040	beqz	r1,L90_LF2
 1377  00001f1c  54000000	nop; delay slot nop
 1378  00001f20  8fc1fff4	lw	r1,-12(r30)
 1379  00001f24  8fc20008	lw	r2,8(r30)
 1380  00001f28  00200035	movi2fp	f0,r1
 1381  00001f2c  00400835	movi2fp	f1,r2
 1382  00001f30  0401000e	mult	f0,f0,f1
 1383  00001f34  00000834	movfp2i	r1,f0
 1384  00001f38  afc1fff4	sw	-12(r30),r1
 1385  00001f3c  8fc1fff4	lw	r1,-12(r30)
 1386  00001f40  8fc2fff0	lw	r2,-16(r30)
 1387  00001f44  00220820	add	r1,r1,r2
 1388  00001f48  afc1fff4	sw	-12(r30),r1
 1389  00001f4c  8fc20000	lw	r2,(r30)
 1390  00001f50  20410001	addi	r1,r2,#1
 1391  00001f54  00011020	add	r2,r0,r1
 1392  00001f58  afc20000	sw	(r30),r2
 1393  00001f5c          	L97_LF2:
 1394  00001f5c          	L90_LF2:
 1395  00001f5c  8fc1fff0	lw	r1,-16(r30)
 1396  00001f60  8fc20008	lw	r2,8(r30)
 1397  00001f64  0022082a	slt	r1,r1,r2
 1398  00001f68  1420000c	bnez	r1,L98_LF2
 1399  00001f6c  54000000	nop; delay slot nop
 1400  00001f70  0800000c	j	L89_LF2
 1401  00001f74  54000000	nop; delay slot nop
 1402  00001f78          	L98_LF2:
 1403  00001f78  0bfffec8	j	L88_LF2
 1404  00001f7c  54000000	nop; delay slot nop
 1405  00001f80          	L89_LF2:
 1406  00001f80  8fc10004	lw	r1,4(r30)
 1407  00001f84  64220000	snei	r2,r1,#0
 1408  00001f88  10400010	beqz	r2,L99_LF2
 1409  00001f8c  54000000	nop; delay slot nop
 1410  00001f90  8fc10004	lw	r1,4(r30)
 1411  00001f94  8fc20000	lw	r2,(r30)
 1412  00001f98  ac220000	sw	(r1),r2
 1413  00001f9c          	L99_LF2:
 1414  00001f9c  8fc1fff4	lw	r1,-12(r30)
 1415  00001fa0  8fc2ffec	lw	r2,-20(r30)
 1416  00001fa4  00200035	movi2fp	f0,r1
 1417  00001fa8  00400835	movi2fp	f1,r2
 1418  00001fac  0401000e	mult	f0,f0,f1
 1419  00001fb0  00000834	movfp2i	r1,f0
 1420  00001fb4  afc1fff4	sw	-12(r30),r1
 1421  00001fb8  8fc1fff4	lw	r1,-12(r30)
 1422  00001fbc  08000004	j	L72_LF2
 1423  00001fc0  54000000	nop; delay slot nop
 1424  00001fc4          	L72_LF2:
 1425  00001fc4  8fa20000	lw	r2,0(r29)
 1426  00001fc8  8fdffff8	lw	r31,-8(r30)
 1427  00001fcc  001ee820	add	r29,r0,r30
 1428  00001fd0  8fdefffc	lw	r30,-4(r30)
 1429  00001fd4  4be00000	jr	r31
 1430  00001fd8  54000000	nop
 1431  00001fdc          	.endproc _dstrtol
 1432  00001fdc          	.align 2
 1433  00001fdc          	.proc _bcopy
 1434  00001fdc          	.global _bcopy
 1435  00001fdc          	_bcopy:
 1436                      ;  Function 'bcopy'; 0 bytes of locals, 2 regs to save.
 1437  00001fdc  afbefffc	sw	-4(r29),r30; push fp
 1438  00001fe0  001df020	add	r30,r0,r29; fp = sp
 1439  00001fe4  afbffff8	sw	-8(r29),r31; push ret addr
 1440  00001fe8  2fbd0010	subui	r29,r29,#16; alloc local storage
 1441  00001fec  afa20000	sw	0(r29),r2
 1442  00001ff0  afa30004	sw	4(r29),r3
 1443  00001ff4  54000000	nop
 1444  00001ff8          	L101_LF2:
 1445  00001ff8  8fc10008	lw	r1,8(r30)
 1446  00001ffc  2022ffff	addi	r2,r1,#-1
 1447  00002000  afc20008	sw	8(r30),r2
 1448  00002004  6c210000	sgti	r1,r1,#0
 1449  00002008  1420000c	bnez	r1,L103_LF2
 1450  0000200c  54000000	nop; delay slot nop
 1451  00002010  0800002c	j	L102_LF2
 1452  00002014  54000000	nop; delay slot nop
 1453  00002018          	L103_LF2:
 1454  00002018  8fc10004	lw	r1,4(r30)
 1455  0000201c  20220001	addi	r2,r1,#1
 1456  00002020  afc20004	sw	4(r30),r2
 1457  00002024  8fc20000	lw	r2,(r30)
 1458  00002028  20430001	addi	r3,r2,#1
 1459  0000202c  afc30000	sw	(r30),r3
 1460  00002030  80420000	lb	r2,(r2)
 1461  00002034  a0220000	sb	(r1),r2
 1462  00002038  0bffffbc	j	L101_LF2
 1463  0000203c  54000000	nop; delay slot nop
 1464  00002040          	L102_LF2:
 1465  00002040          	L100_LF2:
 1466  00002040  8fa20000	lw	r2,0(r29)
 1467  00002044  8fa30004	lw	r3,4(r29)
 1468  00002048  8fdffff8	lw	r31,-8(r30)
 1469  0000204c  001ee820	add	r29,r0,r30
 1470  00002050  8fdefffc	lw	r30,-4(r30)
 1471  00002054  4be00000	jr	r31
 1472  00002058  54000000	nop
 1473  0000205c          	.endproc _bcopy
 1474  0000205c          	.align 2
 1475  0000205c          	.proc _bzero
 1476  0000205c          	.global _bzero
 1477  0000205c          	_bzero:
 1478                      ;  Function 'bzero'; 0 bytes of locals, 1 regs to save.
 1479  0000205c  afbefffc	sw	-4(r29),r30; push fp
 1480  00002060  001df020	add	r30,r0,r29; fp = sp
 1481  00002064  afbffff8	sw	-8(r29),r31; push ret addr
 1482  00002068  2fbd0010	subui	r29,r29,#16; alloc local storage
 1483  0000206c  afa20000	sw	0(r29),r2
 1484  00002070  54000000	nop
 1485  00002074          	L105_LF2:
 1486  00002074  8fc10004	lw	r1,4(r30)
 1487  00002078  2022ffff	addi	r2,r1,#-1
 1488  0000207c  afc20004	sw	4(r30),r2
 1489  00002080  6c210000	sgti	r1,r1,#0
 1490  00002084  1420000c	bnez	r1,L107_LF2
 1491  00002088  54000000	nop; delay slot nop
 1492  0000208c  08000020	j	L106_LF2
 1493  00002090  54000000	nop; delay slot nop
 1494  00002094          	L107_LF2:
 1495  00002094  8fc10000	lw	r1,(r30)
 1496  00002098  20220001	addi	r2,r1,#1
 1497  0000209c  afc20000	sw	(r30),r2
 1498  000020a0  20020000	addi	r2,r0,(#0x0)&0xff
 1499  000020a4  a0220000	sb	(r1),r2
 1500  000020a8  0bffffc8	j	L105_LF2
 1501  000020ac  54000000	nop; delay slot nop
 1502  000020b0          	L106_LF2:
 1503  000020b0          	L104_LF2:
 1504  000020b0  8fa20000	lw	r2,0(r29)
 1505  000020b4  8fdffff8	lw	r31,-8(r30)
 1506  000020b8  001ee820	add	r29,r0,r30
 1507  000020bc  8fdefffc	lw	r30,-4(r30)
 1508  000020c0  4be00000	jr	r31
 1509  000020c4  54000000	nop
 1510  000020c8          	.endproc _bzero
 1511  000020c8          	.align 2
 1512  000020c8          	.proc _min
 1513  000020c8          	.global _min
 1514  000020c8          	_min:
 1515                      ;  Function 'min'; 0 bytes of locals, 2 regs to save.
 1516  000020c8  afbefffc	sw	-4(r29),r30; push fp
 1517  000020cc  001df020	add	r30,r0,r29; fp = sp
 1518  000020d0  afbffff8	sw	-8(r29),r31; push ret addr
 1519  000020d4  2fbd0010	subui	r29,r29,#16; alloc local storage
 1520  000020d8  afa20000	sw	0(r29),r2
 1521  000020dc  afa30004	sw	4(r29),r3
 1522  000020e0  8fc10000	lw	r1,(r30)
 1523  000020e4  8fc20004	lw	r2,4(r30)
 1524  000020e8  0022182c	sle	r3,r1,r2
 1525  000020ec  14600008	bnez	r3,L109_LF2
 1526  000020f0  54000000	nop; delay slot nop
 1527  000020f4  8fc10004	lw	r1,4(r30)
 1528  000020f8          	L109_LF2:
 1529  000020f8  08000004	j	L108_LF2
 1530  000020fc  54000000	nop; delay slot nop
 1531  00002100          	L108_LF2:
 1532  00002100  8fa20000	lw	r2,0(r29)
 1533  00002104  8fa30004	lw	r3,4(r29)
 1534  00002108  8fdffff8	lw	r31,-8(r30)
 1535  0000210c  001ee820	add	r29,r0,r30
 1536  00002110  8fdefffc	lw	r30,-4(r30)
 1537  00002114  4be00000	jr	r31
 1538  00002118  54000000	nop
 1539  0000211c          	.endproc _min
 1540  0000211c          	.align 2
 1541  0000211c          	.proc _max
 1542  0000211c          	.global _max
 1543  0000211c          	_max:
 1544                      ;  Function 'max'; 0 bytes of locals, 2 regs to save.
 1545  0000211c  afbefffc	sw	-4(r29),r30; push fp
 1546  00002120  001df020	add	r30,r0,r29; fp = sp
 1547  00002124  afbffff8	sw	-8(r29),r31; push ret addr
 1548  00002128  2fbd0010	subui	r29,r29,#16; alloc local storage
 1549  0000212c  afa20000	sw	0(r29),r2
 1550  00002130  afa30004	sw	4(r29),r3
 1551  00002134  8fc10000	lw	r1,(r30)
 1552  00002138  8fc20004	lw	r2,4(r30)
 1553  0000213c  0022182d	sge	r3,r1,r2
 1554  00002140  14600008	bnez	r3,L111_LF2
 1555  00002144  54000000	nop; delay slot nop
 1556  00002148  8fc10004	lw	r1,4(r30)
 1557  0000214c          	L111_LF2:
 1558  0000214c  08000004	j	L110_LF2
 1559  00002150  54000000	nop; delay slot nop
 1560  00002154          	L110_LF2:
 1561  00002154  8fa20000	lw	r2,0(r29)
 1562  00002158  8fa30004	lw	r3,4(r29)
 1563  0000215c  8fdffff8	lw	r31,-8(r30)
 1564  00002160  001ee820	add	r29,r0,r30
 1565  00002164  8fdefffc	lw	r30,-4(r30)
 1566  00002168  4be00000	jr	r31
 1567  0000216c  54000000	nop
 1568  00002170          	.endproc _max
 1569                      ;;; Ethan L. Miller, 1999.  Released to the public domain
 1570                      ;;;
 1571                      ;;; Most of the traps are called in files from libtraps.
 1574  00002170          	.align 2
 1575  00002170          	.proc _exit
 1576  00002170          	.global _exit
 1577  00002170          	_exit:
 1578  00002170  44000300	trap	#0x300
 1579  00002174  4be00000	jr	r31
 1580  00002178  54000000	nop
 1581  0000217c          	.endproc _exit
 1583                      ; for the benefit of gcc.
 1584  0000217c          	.proc ___main
 1585  0000217c          	.global ___main
 1586  0000217c          	___main:
 1587  0000217c  4be00000	jr	r31
 1588  00002180  54000000	nop
 1589  00002184          	.endproc ___main
 1590  00002184          	.text
 1591  00002184          	.global _etext
 1592  00002184          	_etext:
 1593  00002184          	.align 3
 1594  00002188          	.data
 1595  00003123          	.global _edata
 1596  00003123          	_edata:
