 line   address	contents
    1                      ; Linked by DLX-LD.
    2                      ; MemSize 24576
    3                      ; Data size: 171
    4                      ; Text size: 4468
    5                      ; Stack size: 8192
    6  00000000          	.text 0x1000
    7  00001000          	.data 0x3000
    8                      ; Compiled by GCC
    9  00003000          	.text
   10  00001000          	.align 2
   11  00001000          	.proc _isspace
   12  00001000          	.global _isspace
   13  00001000          	_isspace:
   14                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
   15  00001000  afbefffc	sw	-4(r29),r30; push fp
   16  00001004  001df020	add	r30,r0,r29; fp = sp
   17  00001008  afbffff8	sw	-8(r29),r31; push ret addr
   18  0000100c  2fbd0010	subui	r29,r29,#16; alloc local storage
   19  00001010  afa20000	sw	0(r29),r2
   20  00001014  83c20003	lb	r2,3(r30)
   21  00001018  201f0000	addi	r31,r0,#0
   22  0000101c  304100ff	andi	r1,r2,#0x00ff
   23  00001020  60210020	seqi	r1,r1,#32
   24  00001024  14200018	bnez	r1,L6_LF0
   25  00001028  54000000	nop; not filled.
   26  0000102c  2041fff7	addi	r1,r2,#-9
   27  00001030  302100ff	andi	r1,r1,#0x00ff
   28  00001034  70210001	sleui	r1,r1,#1
   29  00001038  10200008	beqz	r1,L5_LF0
   30  0000103c  54000000	nop; not filled.
   31  00001040          	L6_LF0:
   32  00001040  201f0001	addi	r31,r0,#1
   33  00001044          	L5_LF0:
   34  00001044  001f0820	add	r1,r0,r31
   35  00001048  8fa20000	lw	r2,0(r29)
   36  0000104c  8fdffff8	lw	r31,-8(r30)
   37  00001050  001ee820	add	r29,r0,r30
   38  00001054  8fdefffc	lw	r30,-4(r30)
   39  00001058  4be00000	jr	r31
   40  0000105c  54000000	nop
   41  00001060          	.endproc _isspace
   42  00001060          	.align 2
   43  00001060          	.proc _isxdigit
   44  00001060          	.global _isxdigit
   45  00001060          	_isxdigit:
   46                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
   47  00001060  afbefffc	sw	-4(r29),r30; push fp
   48  00001064  001df020	add	r30,r0,r29; fp = sp
   49  00001068  afbffff8	sw	-8(r29),r31; push ret addr
   50  0000106c  2fbd0010	subui	r29,r29,#16; alloc local storage
   51  00001070  afa20000	sw	0(r29),r2
   52  00001074  83df0003	lb	r31,3(r30)
   53  00001078  20020000	addi	r2,r0,#0
   54  0000107c  23e1ffd0	addi	r1,r31,#-48
   55  00001080  302100ff	andi	r1,r1,#0x00ff
   56  00001084  70210009	sleui	r1,r1,#9
   57  00001088  14200028	bnez	r1,L12_LF0
   58  0000108c  54000000	nop; not filled.
   59  00001090  23e1ff9f	addi	r1,r31,#-97
   60  00001094  302100ff	andi	r1,r1,#0x00ff
   61  00001098  70210005	sleui	r1,r1,#5
   62  0000109c  14200014	bnez	r1,L12_LF0
   63  000010a0  54000000	nop; not filled.
   64  000010a4  33e100ff	andi	r1,r31,#0x00ff
   65  000010a8  64210041	snei	r1,r1,#65
   66  000010ac  14200008	bnez	r1,L11_LF0
   67  000010b0  54000000	nop; not filled.
   68  000010b4          	L12_LF0:
   69  000010b4  20020001	addi	r2,r0,#1
   70  000010b8          	L11_LF0:
   71  000010b8  00020820	add	r1,r0,r2
   72  000010bc  8fa20000	lw	r2,0(r29)
   73  000010c0  8fdffff8	lw	r31,-8(r30)
   74  000010c4  001ee820	add	r29,r0,r30
   75  000010c8  8fdefffc	lw	r30,-4(r30)
   76  000010cc  4be00000	jr	r31
   77  000010d0  54000000	nop
   78  000010d4          	.endproc _isxdigit
   79  000010d4          	.data
   80  00003000          	.align 2
   81  00003000          	_p6_LF0:
   82  00003000  00000000	.word 0
   83  00003004          	.align 2
   84  00003004          	LC0_LF0:
   85  00003004  55736167	.ascii "Usage: %s <handle_to_procs_completed_semaphore>\n\000"
   85  00003008  653a2025	
   85  0000300c  73203c68	
   85  00003010  616e646c	
   85  00003014  655f746f	
   85  00003018  5f70726f	
   85  0000301c  63735f63	
   85  00003020  6f6d706c	
   85  00003024  65746564	
   85  00003028  5f73656d	
   85  0000302c  6170686f	
   85  00003030  72653e0a	
   85  00003034  00      	
   86  00003035          	.align 2
   87  00003038          	LC1_LF0:
   88  00003038  68656c6c	.ascii "hello_world (%d): Hello world!\n\000"
   88  0000303c  6f5f776f	
   88  00003040  726c6420	
   88  00003044  28256429	
   88  00003048  3a204865	
   88  0000304c  6c6c6f20	
   88  00003050  776f726c	
   88  00003054  64210a00	
   89  00003058          	.align 2
   90  00003058          	LC2_LF0:
   91  00003058  68656c6c	.ascii "hello_world (%d): Bad semaphore s_procs_completed (%d)!\n\000"
   91  0000305c  6f5f776f	
   91  00003060  726c6420	
   91  00003064  28256429	
   91  00003068  3a204261	
   91  0000306c  64207365	
   91  00003070  6d617068	
   91  00003074  6f726520	
   91  00003078  735f7072	
   91  0000307c  6f63735f	
   91  00003080  636f6d70	
   91  00003084  6c657465	
   91  00003088  64202825	
   91  0000308c  6429210a	
   91  00003090  00      	
   92  00003091          	.text
   93  000010d4          	.align 2
   94  000010d4          	.proc _main
   95  000010d4          	.global _main
   96  000010d4          	_main:
   97                      ;  Function 'main'; 0 bytes of locals, 0 regs to save.
   98  000010d4  afbefffc	sw	-4(r29),r30; push fp
   99  000010d8  001df020	add	r30,r0,r29; fp = sp
  100  000010dc  afbffff8	sw	-8(r29),r31; push ret addr
  101  000010e0  2fbd0008	subui	r29,r29,#8; alloc local storage
  102  000010e4  8fc20000	lw	r2,(r30)
  103  000010e8  8fc30004	lw	r3,4(r30)
  104  000010ec  0c00107c	jal	___main
  105  000010f0  54000000	nop; not filled.
  106  000010f4  64410002	snei	r1,r2,#2
  107  000010f8  10200028	beqz	r1,L17_LF0
  108  000010fc  54000000	nop; not filled.
  109  00001100  23bdfff8	addi	r29,r29,#-8
  110  00001104  3c040000	lhi	r4,((LC0_LF0)>>16)&0xffff
  111  00001108  24843004	addui	r4,r4,(LC0_LF0)&0xffff
  112  0000110c  afa40000	sw	(r29),r4
  113  00001110  0c000198	jal	_Printf
  114  00001114  54000000	nop; not filled.
  115  00001118  0c000298	jal	_Exit
  116  0000111c  54000000	nop; not filled.
  117  00001120  23bd0008	addi	r29,r29,#8
  118  00001124          	L17_LF0:
  119  00001124  23bdfff0	addi	r29,r29,#-16
  120  00001128  8c630004	lw	r3,4(r3)
  121  0000112c  afa30000	sw	(r29),r3
  122  00001130  20040000	addi	r4,r0,#0
  123  00001134  afa40004	sw	4(r29),r4
  124  00001138  2004000a	addi	r4,r0,#10
  125  0000113c  afa40008	sw	8(r29),r4
  126  00001140  0c000b2c	jal	_dstrtol
  127  00001144  54000000	nop; not filled.
  128  00001148  00011020	add	r2,r0,r1
  129  0000114c  0c000168	jal	_getpid
  130  00001150  54000000	nop; not filled.
  131  00001154  3c040000	lhi	r4,((LC1_LF0)>>16)&0xffff
  132  00001158  24843038	addui	r4,r4,(LC1_LF0)&0xffff
  133  0000115c  afa40000	sw	(r29),r4
  134  00001160  afa10004	sw	4(r29),r1
  135  00001164  0c000144	jal	_Printf
  136  00001168  54000000	nop; not filled.
  137  0000116c  afa20000	sw	(r29),r2
  138  00001170  0c00018c	jal	_sem_signal
  139  00001174  54000000	nop; not filled.
  140  00001178  23bd0010	addi	r29,r29,#16
  141  0000117c  64210001	snei	r1,r1,#1
  142  00001180  10200038	beqz	r1,L18_LF0
  143  00001184  54000000	nop; not filled.
  144  00001188  0c00012c	jal	_getpid
  145  0000118c  54000000	nop; not filled.
  146  00001190  23bdfff0	addi	r29,r29,#-16
  147  00001194  3c040000	lhi	r4,((LC2_LF0)>>16)&0xffff
  148  00001198  24843058	addui	r4,r4,(LC2_LF0)&0xffff
  149  0000119c  afa40000	sw	(r29),r4
  150  000011a0  afa10004	sw	4(r29),r1
  151  000011a4  afa20008	sw	8(r29),r2
  152  000011a8  0c000100	jal	_Printf
  153  000011ac  54000000	nop; not filled.
  154  000011b0  0c000200	jal	_Exit
  155  000011b4  54000000	nop; not filled.
  156  000011b8  23bd0010	addi	r29,r29,#16
  157  000011bc          	L18_LF0:
  158  000011bc  0c000fa0	jal	_exit
  159  000011c0  54000000	nop
  160  000011c4          	.endproc _main
  161  000011c4          	.data
  162  00003091          	.align 2
  163  00003094          	LC3_LF0:
  164  00003094  68656c6c	.ascii "hello_world, %d times\n\000"
  164  00003098  6f5f776f	
  164  0000309c  726c642c	
  164  000030a0  20256420	
  164  000030a4  74696d65	
  164  000030a8  730a00  	
  165  000030ab          	.text
  166  000011c4          	.align 2
  167  000011c4          	.proc _hello
  168  000011c4          	.global _hello
  169  000011c4          	_hello:
  170                      ;  Function 'hello'; 400 bytes of locals, 3 regs to save.
  171  000011c4  afbefffc	sw	-4(r29),r30; push fp
  172  000011c8  001df020	add	r30,r0,r29; fp = sp
  173  000011cc  afbffff8	sw	-8(r29),r31; push ret addr
  174  000011d0  2fbd01a8	subui	r29,r29,#424; alloc local storage
  175  000011d4  afa20000	sw	0(r29),r2
  176  000011d8  afa30004	sw	4(r29),r3
  177  000011dc  afa40008	sw	8(r29),r4
  178  000011e0  8fc20000	lw	r2,(r30)
  179  000011e4  23dffff8	addi	r31,r30,#-8
  180  000011e8  23c30184	addi	r3,r30,#388
  181  000011ec          	L30_LF0:
  182  000011ec  afe2fe70	sw	-400(r31),r2
  183  000011f0  23ff0004	addi	r31,r31,#4
  184  000011f4  03e3082c	sle	r1,r31,r3
  185  000011f8  1420fff0	bnez	r1,L30_LF0
  186  000011fc  54000000	nop; not filled.
  187  00001200  23bdfff8	addi	r29,r29,#-8
  188  00001204  3c040000	lhi	r4,((LC3_LF0)>>16)&0xffff
  189  00001208  24843094	addui	r4,r4,(LC3_LF0)&0xffff
  190  0000120c  afa40000	sw	(r29),r4
  191  00001210  afa20004	sw	4(r29),r2
  192  00001214  0c000094	jal	_Printf
  193  00001218  54000000	nop; not filled.
  194  0000121c  23bd0008	addi	r29,r29,#8
  195  00001220  6c410000	sgti	r1,r2,#0
  196  00001224  1020001c	beqz	r1,L32_LF0
  197  00001228  54000000	nop; not filled.
  198  0000122c  2042ffff	addi	r2,r2,#-1
  199  00001230  23bdfff8	addi	r29,r29,#-8
  200  00001234  afa20000	sw	(r29),r2
  201  00001238  0fffff88	jal	_hello
  202  0000123c  54000000	nop; not filled.
  203  00001240  23bd0008	addi	r29,r29,#8
  204  00001244          	L32_LF0:
  205  00001244  8fa20000	lw	r2,0(r29)
  206  00001248  8fa30004	lw	r3,4(r29)
  207  0000124c  8fa40008	lw	r4,8(r29)
  208  00001250  8fdffff8	lw	r31,-8(r30)
  209  00001254  001ee820	add	r29,r0,r30
  210  00001258  8fdefffc	lw	r30,-4(r30)
  211  0000125c  4be00000	jr	r31
  212  00001260  54000000	nop
  213  00001264          	.endproc _hello
  214                      ;;;
  215                      ;;; Stub functions for DLX traps.
  216                      ;;;
  217                      ;;; Ethan L. Miller, 1999.  Released to the public domain.
  218                      ;;;
  219                      ;;; The traps such as Open and Close
  220                      ;;; (note the capital letters) are for use by user programs.  The traps
  221                      ;;; with names such as open and close (lower case) are for use by the OS.
  222                      ;;;
  225  00001264          	.align 2
  227                      ;;; The following are the traps to be used by user-level programs
  228                      ;;;
  230  00001264          	.align 2
  231  00001264          	.proc _Open
  232  00001264          	.global _Open
  233  00001264          	_Open:
  234                      ;;; Note that trap #0x213 actually causes a trap vector in the OS of
  235                      ;;; 0x1213.  The same is true for other user traps.  Thus, a user trap
  236                      ;;; with trap #0x240 will result in a trap vector of 0x1240 in the OS.
  237  00001264  44000213	trap	#0x213
  238  00001268  4be00000	jr	r31
  239  0000126c  54000000	nop
  240  00001270          	.endproc _Open
  242  00001270          	.proc _Close
  243  00001270          	.global _Close
  244  00001270          	_Close:
  245  00001270  44000214	trap	#0x214
  246  00001274  4be00000	jr	r31
  247  00001278  54000000	nop
  248  0000127c          	.endproc _Close
  250  0000127c          	.proc _Read
  251  0000127c          	.global _Read
  252  0000127c          	_Read:
  253  0000127c  44000210	trap	#0x210
  254  00001280  4be00000	jr	r31
  255  00001284  54000000	nop
  256  00001288          	.endproc _Read
  258  00001288          	.proc _Write
  259  00001288          	.global _Write
  260  00001288          	_Write:
  261  00001288  44000211	trap	#0x211
  262  0000128c  4be00000	jr	r31
  263  00001290  54000000	nop
  264  00001294          	.endproc _Write
  266  00001294          	.proc _Lseek
  267  00001294          	.global _Lseek
  268  00001294          	_Lseek:
  269  00001294  44000212	trap	#0x212
  270  00001298  4be00000	jr	r31
  271  0000129c  54000000	nop
  272  000012a0          	.endproc _Lseek
  274  000012a0          	.proc _Putchar
  275  000012a0          	.global _Putchar
  276  000012a0          	_Putchar:
  277  000012a0  44000280	trap	#0x280
  278  000012a4  4be00000	jr	r31
  279  000012a8  54000000	nop
  280  000012ac          	.endproc _Putchar
  282  000012ac          	.proc _Printf
  283  000012ac          	.global _Printf
  284  000012ac          	_Printf:
  285  000012ac  44000201	trap	#0x201
  286  000012b0  4be00000	jr	r31
  287  000012b4  54000000	nop
  288  000012b8          	.endproc _Printf
  290  000012b8          	.proc _getpid
  291  000012b8          	.global _getpid
  292  000012b8          	_getpid:
  293  000012b8  44000431	trap	#0x431
  294  000012bc  4be00000	jr	r31
  295  000012c0  54000000	nop
  296  000012c4          	.endproc _getpid
  298  000012c4          	.proc _process_create
  299  000012c4          	.global _process_create
  300  000012c4          	_process_create:
  301  000012c4  44000432	trap	#0x432
  302  000012c8  4be00000	jr	r31
  303  000012cc  54000000	nop
  304  000012d0          	.endproc _process_create
  306  000012d0          	.proc _shmget
  307  000012d0          	.global _shmget
  308  000012d0          	_shmget:
  309  000012d0  44000440	trap	#0x440
  310  000012d4  4be00000	jr	r31
  311  000012d8  54000000	nop
  312  000012dc          	.endproc _shmget
  314  000012dc          	.proc _shmat
  315  000012dc          	.global _shmat
  316  000012dc          	_shmat:
  317  000012dc  44000441	trap	#0x441
  318  000012e0  4be00000	jr	r31
  319  000012e4  54000000	nop
  320  000012e8          	.endproc _shmat
  322  000012e8          	.proc _sem_create
  323  000012e8          	.global _sem_create
  324  000012e8          	_sem_create:
  325  000012e8  44000450	trap	#0x450
  326  000012ec  4be00000	jr	r31
  327  000012f0  54000000	nop
  328  000012f4          	.endproc _sem_create
  330  000012f4          	.proc _sem_wait
  331  000012f4          	.global _sem_wait
  332  000012f4          	_sem_wait:
  333  000012f4  44000451	trap	#0x451
  334  000012f8  4be00000	jr	r31
  335  000012fc  54000000	nop
  336  00001300          	.endproc _sem_wait
  338  00001300          	.proc _sem_signal
  339  00001300          	.global _sem_signal
  340  00001300          	_sem_signal:
  341  00001300  44000452	trap	#0x452
  342  00001304  4be00000	jr	r31
  343  00001308  54000000	nop
  344  0000130c          	.endproc _sem_signal
  346  0000130c          	.proc _lock_create
  347  0000130c          	.global _lock_create
  348  0000130c          	_lock_create:
  349  0000130c  44000453	trap	#0x453
  350  00001310  4be00000	jr	r31
  351  00001314  54000000	nop
  352  00001318          	.endproc _lock_create
  354  00001318          	.proc _lock_acquire
  355  00001318          	.global _lock_acquire
  356  00001318          	_lock_acquire:
  357  00001318  44000454	trap	#0x454
  358  0000131c  4be00000	jr	r31
  359  00001320  54000000	nop
  360  00001324          	.endproc _lock_acquire
  362  00001324          	.proc _lock_release
  363  00001324          	.global _lock_release
  364  00001324          	_lock_release:
  365  00001324  44000455	trap	#0x455
  366  00001328  4be00000	jr	r31
  367  0000132c  54000000	nop
  368  00001330          	.endproc _lock_release
  370  00001330          	.proc _cond_create
  371  00001330          	.global _cond_create
  372  00001330          	_cond_create:
  373  00001330  44000456	trap	#0x456
  374  00001334  4be00000	jr	r31
  375  00001338  54000000	nop
  376  0000133c          	.endproc _cond_create
  378  0000133c          	.proc _cond_wait
  379  0000133c          	.global _cond_wait
  380  0000133c          	_cond_wait:
  381  0000133c  44000457	trap	#0x457
  382  00001340  4be00000	jr	r31
  383  00001344  54000000	nop
  384  00001348          	.endproc _cond_wait
  386  00001348          	.proc _cond_signal
  387  00001348          	.global _cond_signal
  388  00001348          	_cond_signal:
  389  00001348  44000458	trap	#0x458
  390  0000134c  4be00000	jr	r31
  391  00001350  54000000	nop
  392  00001354          	.endproc _cond_signal
  394  00001354          	.proc _cond_broadcast
  395  00001354          	.global _cond_broadcast
  396  00001354          	_cond_broadcast:
  397  00001354  44000459	trap	#0x459
  398  00001358  4be00000	jr	r31
  399  0000135c  54000000	nop
  400  00001360          	.endproc _cond_broadcast
  402  00001360          	.proc _mbox_create
  403  00001360          	.global _mbox_create
  404  00001360          	_mbox_create:
  405  00001360  44000460	trap	#0x460
  406  00001364  4be00000	jr	r31
  407  00001368  54000000	nop
  408  0000136c          	.endproc _mbox_create
  410  0000136c          	.proc _mbox_open
  411  0000136c          	.global _mbox_open
  412  0000136c          	_mbox_open:
  413  0000136c  44000461	trap	#0x461
  414  00001370  4be00000	jr	r31
  415  00001374  54000000	nop
  416  00001378          	.endproc _mbox_open
  418  00001378          	.proc _mbox_close
  419  00001378          	.global _mbox_close
  420  00001378          	_mbox_close:
  421  00001378  44000462	trap	#0x462
  422  0000137c  4be00000	jr	r31
  423  00001380  54000000	nop
  424  00001384          	.endproc _mbox_close
  426  00001384          	.proc _mbox_send
  427  00001384          	.global _mbox_send
  428  00001384          	_mbox_send:
  429  00001384  44000463	trap	#0x463
  430  00001388  4be00000	jr	r31
  431  0000138c  54000000	nop
  432  00001390          	.endproc _mbox_send
  434  00001390          	.proc _mbox_recv
  435  00001390          	.global _mbox_recv
  436  00001390          	_mbox_recv:
  437  00001390  44000464	trap	#0x464
  438  00001394  4be00000	jr	r31
  439  00001398  54000000	nop
  440  0000139c          	.endproc _mbox_recv
  442  0000139c          	.proc _sleep
  443  0000139c          	.global _sleep
  444  0000139c          	_sleep:
  445  0000139c  44000465	trap	#0x465
  446  000013a0  4be00000	jr	r31
  447  000013a4  54000000	nop
  448  000013a8          	.endproc _sleep
  450  000013a8          	.proc _yield
  451  000013a8          	.global _yield
  452  000013a8          	_yield:
  453  000013a8  44000466	trap	#0x466
  454  000013ac  4be00000	jr	r31
  455  000013b0  54000000	nop
  456  000013b4          	.endproc _yield
  459  000013b4          	.proc _Exit
  460  000013b4          	.global _Exit
  461  000013b4          	_Exit:
  462  000013b4  44000500	trap	#0x500
  463  000013b8  4be00000	jr	r31
  464  000013bc  54000000	nop
  465  000013c0          	.endproc _Exit
  468  000013c0          	.proc _malloc
  469  000013c0          	.global _malloc
  470  000013c0          	_malloc:
  471  000013c0  44000467	trap	#0x467
  472  000013c4  4be00000	jr	r31
  473  000013c8          	.endproc _malloc
  476  000013c8          	.proc _mfree
  477  000013c8          	.global _mfree
  478  000013c8          	_mfree:
  479  000013c8  44000468	trap	#0x468
  480  000013cc  4be00000	jr	r31
  481  000013d0          	.endproc _mfree
  482                      ; Compiled by GCC
  484  000013d0          	.align 2
  485  000013d0          	.proc _isspace
  486  000013d0          	.global _isspace
  487  000013d0          	_isspace:
  488                      ;  Function 'isspace'; 0 bytes of locals, 3 regs to save.
  489  000013d0  afbefffc	sw	-4(r29),r30; push fp
  490  000013d4  001df020	add	r30,r0,r29; fp = sp
  491  000013d8  afbffff8	sw	-8(r29),r31; push ret addr
  492  000013dc  2fbd0018	subui	r29,r29,#24; alloc local storage
  493  000013e0  afa20000	sw	0(r29),r2
  494  000013e4  afa30004	sw	4(r29),r3
  495  000013e8  afa40008	sw	8(r29),r4
  496  000013ec  83c20003	lb	r2,3(r30)
  497  000013f0  20010000	addi	r1,r0,#0
  498  000013f4  304300ff	andi	r3,r2,#0x00ff
  499  000013f8  60640020	seqi	r4,r3,#32
  500  000013fc  1480002c	bnez	r4,L3_LF2
  501  00001400  54000000	nop; delay slot nop
  502  00001404  304300ff	andi	r3,r2,#0x00ff
  503  00001408  60640009	seqi	r4,r3,#9
  504  0000140c  1480001c	bnez	r4,L3_LF2
  505  00001410  54000000	nop; delay slot nop
  506  00001414  304300ff	andi	r3,r2,#0x00ff
  507  00001418  6064000a	seqi	r4,r3,#10
  508  0000141c  1480000c	bnez	r4,L3_LF2
  509  00001420  54000000	nop; delay slot nop
  510  00001424  08000008	j	L2_LF2
  511  00001428  54000000	nop; delay slot nop
  512  0000142c          	L3_LF2:
  513  0000142c  20010001	addi	r1,r0,#1
  514  00001430          	L2_LF2:
  515  00001430  08000004	j	L1_LF2
  516  00001434  54000000	nop; delay slot nop
  517  00001438          	L1_LF2:
  518  00001438  8fa20000	lw	r2,0(r29)
  519  0000143c  8fa30004	lw	r3,4(r29)
  520  00001440  8fa40008	lw	r4,8(r29)
  521  00001444  8fdffff8	lw	r31,-8(r30)
  522  00001448  001ee820	add	r29,r0,r30
  523  0000144c  8fdefffc	lw	r30,-4(r30)
  524  00001450  4be00000	jr	r31
  525  00001454  54000000	nop
  526  00001458          	.endproc _isspace
  527  00001458          	.align 2
  528  00001458          	.proc _isxdigit
  529  00001458          	.global _isxdigit
  530  00001458          	_isxdigit:
  531                      ;  Function 'isxdigit'; 0 bytes of locals, 3 regs to save.
  532  00001458  afbefffc	sw	-4(r29),r30; push fp
  533  0000145c  001df020	add	r30,r0,r29; fp = sp
  534  00001460  afbffff8	sw	-8(r29),r31; push ret addr
  535  00001464  2fbd0018	subui	r29,r29,#24; alloc local storage
  536  00001468  afa20000	sw	0(r29),r2
  537  0000146c  afa30004	sw	4(r29),r3
  538  00001470  afa40008	sw	8(r29),r4
  539  00001474  83c20003	lb	r2,3(r30)
  540  00001478  20010000	addi	r1,r0,#0
  541  0000147c  304300ff	andi	r3,r2,#0x00ff
  542  00001480  6c64002f	sgtui	r4,r3,#47
  543  00001484  1080001c	beqz	r4,L7_LF2
  544  00001488  54000000	nop; delay slot nop
  545  0000148c  304300ff	andi	r3,r2,#0x00ff
  546  00001490  70640039	sleui	r4,r3,#57
  547  00001494  1480005c	bnez	r4,L6_LF2
  548  00001498  54000000	nop; delay slot nop
  549  0000149c  08000004	j	L7_LF2
  550  000014a0  54000000	nop; delay slot nop
  551  000014a4          	L7_LF2:
  552  000014a4  304300ff	andi	r3,r2,#0x00ff
  553  000014a8  6c640060	sgtui	r4,r3,#96
  554  000014ac  1080001c	beqz	r4,L8_LF2
  555  000014b0  54000000	nop; delay slot nop
  556  000014b4  304300ff	andi	r3,r2,#0x00ff
  557  000014b8  70640066	sleui	r4,r3,#102
  558  000014bc  14800034	bnez	r4,L6_LF2
  559  000014c0  54000000	nop; delay slot nop
  560  000014c4  08000004	j	L8_LF2
  561  000014c8  54000000	nop; delay slot nop
  562  000014cc          	L8_LF2:
  563  000014cc  304300ff	andi	r3,r2,#0x00ff
  564  000014d0  6c640040	sgtui	r4,r3,#64
  565  000014d4  10800020	beqz	r4,L5_LF2
  566  000014d8  54000000	nop; delay slot nop
  567  000014dc  304300ff	andi	r3,r2,#0x00ff
  568  000014e0  70640041	sleui	r4,r3,#65
  569  000014e4  1480000c	bnez	r4,L6_LF2
  570  000014e8  54000000	nop; delay slot nop
  571  000014ec  08000008	j	L5_LF2
  572  000014f0  54000000	nop; delay slot nop
  573  000014f4          	L6_LF2:
  574  000014f4  20010001	addi	r1,r0,#1
  575  000014f8          	L5_LF2:
  576  000014f8  08000004	j	L4_LF2
  577  000014fc  54000000	nop; delay slot nop
  578  00001500          	L4_LF2:
  579  00001500  8fa20000	lw	r2,0(r29)
  580  00001504  8fa30004	lw	r3,4(r29)
  581  00001508  8fa40008	lw	r4,8(r29)
  582  0000150c  8fdffff8	lw	r31,-8(r30)
  583  00001510  001ee820	add	r29,r0,r30
  584  00001514  8fdefffc	lw	r30,-4(r30)
  585  00001518  4be00000	jr	r31
  586  0000151c  54000000	nop
  587  00001520          	.endproc _isxdigit
  588  00001520          	.align 2
  589  00001520          	.proc _dstrcpy
  590  00001520          	.global _dstrcpy
  591  00001520          	_dstrcpy:
  592                      ;  Function 'dstrcpy'; 8 bytes of locals, 2 regs to save.
  593  00001520  afbefffc	sw	-4(r29),r30; push fp
  594  00001524  001df020	add	r30,r0,r29; fp = sp
  595  00001528  afbffff8	sw	-8(r29),r31; push ret addr
  596  0000152c  2fbd0018	subui	r29,r29,#24; alloc local storage
  597  00001530  afa20000	sw	0(r29),r2
  598  00001534  afa30004	sw	4(r29),r3
  599  00001538  8fc10000	lw	r1,(r30)
  600  0000153c  afc1fff4	sw	-12(r30),r1
  601  00001540          	L10_LF2:
  602  00001540  8fc10000	lw	r1,(r30)
  603  00001544  20220001	addi	r2,r1,#1
  604  00001548  afc20000	sw	(r30),r2
  605  0000154c  8fc20004	lw	r2,4(r30)
  606  00001550  20430001	addi	r3,r2,#1
  607  00001554  afc30004	sw	4(r30),r3
  608  00001558  80420000	lb	r2,(r2)
  609  0000155c  a0220000	sb	(r1),r2
  610  00001560  a3c2fff3	sb	-13(r30),r2
  611  00001564          	L12_LF2:
  612  00001564  93c1fff3	lbu	r1,-13(r30)
  613  00001568  64220000	snei	r2,r1,#0
  614  0000156c  1440000c	bnez	r2,L13_LF2
  615  00001570  54000000	nop; delay slot nop
  616  00001574  0800000c	j	L11_LF2
  617  00001578  54000000	nop; delay slot nop
  618  0000157c          	L13_LF2:
  619  0000157c  0bffffc0	j	L10_LF2
  620  00001580  54000000	nop; delay slot nop
  621  00001584          	L11_LF2:
  622  00001584  8fc1fff4	lw	r1,-12(r30)
  623  00001588  08000004	j	L9_LF2
  624  0000158c  54000000	nop; delay slot nop
  625  00001590          	L9_LF2:
  626  00001590  8fa20000	lw	r2,0(r29)
  627  00001594  8fa30004	lw	r3,4(r29)
  628  00001598  8fdffff8	lw	r31,-8(r30)
  629  0000159c  001ee820	add	r29,r0,r30
  630  000015a0  8fdefffc	lw	r30,-4(r30)
  631  000015a4  4be00000	jr	r31
  632  000015a8  54000000	nop
  633  000015ac          	.endproc _dstrcpy
  634  000015ac          	.align 2
  635  000015ac          	.proc _dstrncpy
  636  000015ac          	.global _dstrncpy
  637  000015ac          	_dstrncpy:
  638                      ;  Function 'dstrncpy'; 8 bytes of locals, 2 regs to save.
  639  000015ac  afbefffc	sw	-4(r29),r30; push fp
  640  000015b0  001df020	add	r30,r0,r29; fp = sp
  641  000015b4  afbffff8	sw	-8(r29),r31; push ret addr
  642  000015b8  2fbd0018	subui	r29,r29,#24; alloc local storage
  643  000015bc  afa20000	sw	0(r29),r2
  644  000015c0  afa30004	sw	4(r29),r3
  645  000015c4  8fc10000	lw	r1,(r30)
  646  000015c8  afc1fff4	sw	-12(r30),r1
  647  000015cc          	L15_LF2:
  648  000015cc  8fc10008	lw	r1,8(r30)
  649  000015d0  2022ffff	addi	r2,r1,#-1
  650  000015d4  afc20008	sw	8(r30),r2
  651  000015d8  70210000	slei	r1,r1,#0
  652  000015dc  1020000c	beqz	r1,L18_LF2
  653  000015e0  54000000	nop; delay slot nop
  654  000015e4  08000048	j	L16_LF2
  655  000015e8  54000000	nop; delay slot nop
  656  000015ec          	L18_LF2:
  657  000015ec  8fc10000	lw	r1,(r30)
  658  000015f0  20220001	addi	r2,r1,#1
  659  000015f4  afc20000	sw	(r30),r2
  660  000015f8  8fc20004	lw	r2,4(r30)
  661  000015fc  20430001	addi	r3,r2,#1
  662  00001600  afc30004	sw	4(r30),r3
  663  00001604  80420000	lb	r2,(r2)
  664  00001608  a0220000	sb	(r1),r2
  665  0000160c  a3c2fff3	sb	-13(r30),r2
  666  00001610          	L17_LF2:
  667  00001610  93c1fff3	lbu	r1,-13(r30)
  668  00001614  64220000	snei	r2,r1,#0
  669  00001618  1440000c	bnez	r2,L19_LF2
  670  0000161c  54000000	nop; delay slot nop
  671  00001620  0800000c	j	L16_LF2
  672  00001624  54000000	nop; delay slot nop
  673  00001628          	L19_LF2:
  674  00001628  0bffffa0	j	L15_LF2
  675  0000162c  54000000	nop; delay slot nop
  676  00001630          	L16_LF2:
  677  00001630  8fc1fff4	lw	r1,-12(r30)
  678  00001634  08000004	j	L14_LF2
  679  00001638  54000000	nop; delay slot nop
  680  0000163c          	L14_LF2:
  681  0000163c  8fa20000	lw	r2,0(r29)
  682  00001640  8fa30004	lw	r3,4(r29)
  683  00001644  8fdffff8	lw	r31,-8(r30)
  684  00001648  001ee820	add	r29,r0,r30
  685  0000164c  8fdefffc	lw	r30,-4(r30)
  686  00001650  4be00000	jr	r31
  687  00001654  54000000	nop
  688  00001658          	.endproc _dstrncpy
  689  00001658          	.align 2
  690  00001658          	.proc _dstrcat
  691  00001658          	.global _dstrcat
  692  00001658          	_dstrcat:
  693                      ;  Function 'dstrcat'; 8 bytes of locals, 1 regs to save.
  694  00001658  afbefffc	sw	-4(r29),r30; push fp
  695  0000165c  001df020	add	r30,r0,r29; fp = sp
  696  00001660  afbffff8	sw	-8(r29),r31; push ret addr
  697  00001664  2fbd0018	subui	r29,r29,#24; alloc local storage
  698  00001668  afa20000	sw	0(r29),r2
  699  0000166c  8fc10000	lw	r1,(r30)
  700  00001670  afc1fff4	sw	-12(r30),r1
  701  00001674          	L21_LF2:
  702  00001674  8fc10000	lw	r1,(r30)
  703  00001678  90220000	lbu	r2,(r1)
  704  0000167c  64410000	snei	r1,r2,#0
  705  00001680  1420000c	bnez	r1,L23_LF2
  706  00001684  54000000	nop; delay slot nop
  707  00001688  0800001c	j	L22_LF2
  708  0000168c  54000000	nop; delay slot nop
  709  00001690          	L23_LF2:
  710  00001690  8fc20000	lw	r2,(r30)
  711  00001694  20410001	addi	r1,r2,#1
  712  00001698  00011020	add	r2,r0,r1
  713  0000169c  afc20000	sw	(r30),r2
  714  000016a0  0bffffd0	j	L21_LF2
  715  000016a4  54000000	nop; delay slot nop
  716  000016a8          	L22_LF2:
  717  000016a8  23bdfff8	addi	r29,r29,#-8
  718  000016ac  001d0820	add	r1,r0,r29
  719  000016b0  8fc20000	lw	r2,(r30)
  720  000016b4  ac220000	sw	(r1),r2
  721  000016b8  8fc20004	lw	r2,4(r30)
  722  000016bc  ac220004	sw	4(r1),r2
  723  000016c0  0ffffe5c	jal	_dstrcpy
  724  000016c4  54000000	nop; delay slot nop
  725  000016c8  23bd0008	addi	r29,r29,#8
  726  000016cc  8fc1fff4	lw	r1,-12(r30)
  727  000016d0  08000004	j	L20_LF2
  728  000016d4  54000000	nop; delay slot nop
  729  000016d8          	L20_LF2:
  730  000016d8  8fa20000	lw	r2,0(r29)
  731  000016dc  8fdffff8	lw	r31,-8(r30)
  732  000016e0  001ee820	add	r29,r0,r30
  733  000016e4  8fdefffc	lw	r30,-4(r30)
  734  000016e8  4be00000	jr	r31
  735  000016ec  54000000	nop
  736  000016f0          	.endproc _dstrcat
  737  000016f0          	.align 2
  738  000016f0          	.proc _dstrncmp
  739  000016f0          	.global _dstrncmp
  740  000016f0          	_dstrncmp:
  741                      ;  Function 'dstrncmp'; 8 bytes of locals, 2 regs to save.
  742  000016f0  afbefffc	sw	-4(r29),r30; push fp
  743  000016f4  001df020	add	r30,r0,r29; fp = sp
  744  000016f8  afbffff8	sw	-8(r29),r31; push ret addr
  745  000016fc  2fbd0018	subui	r29,r29,#24; alloc local storage
  746  00001700  afa20000	sw	0(r29),r2
  747  00001704  afa30004	sw	4(r29),r3
  748  00001708  54000000	nop
  749  0000170c  20010000	addi	r1,r0,#0
  750  00001710  afc1fff4	sw	-12(r30),r1
  751  00001714          	L25_LF2:
  752  00001714  8fc1fff4	lw	r1,-12(r30)
  753  00001718  8fc20008	lw	r2,8(r30)
  754  0000171c  0022082a	slt	r1,r1,r2
  755  00001720  1420000c	bnez	r1,L28_LF2
  756  00001724  54000000	nop; delay slot nop
  757  00001728  08000088	j	L26_LF2
  758  0000172c  54000000	nop; delay slot nop
  759  00001730          	L28_LF2:
  760  00001730  8fc10004	lw	r1,4(r30)
  761  00001734  90220000	lbu	r2,(r1)
  762  00001738  64410000	snei	r1,r2,#0
  763  0000173c  14200018	bnez	r1,L29_LF2
  764  00001740  54000000	nop; delay slot nop
  765  00001744  20010000	addi	r1,r0,#0
  766  00001748  080000d8	j	L24_LF2
  767  0000174c  54000000	nop; delay slot nop
  768  00001750  08000028	j	L30_LF2
  769  00001754  54000000	nop; delay slot nop
  770  00001758          	L29_LF2:
  771  00001758  8fc10000	lw	r1,(r30)
  772  0000175c  8fc20004	lw	r2,4(r30)
  773  00001760  90210000	lbu	r1,(r1)
  774  00001764  90420000	lbu	r2,(r2)
  775  00001768  00220829	sne	r1,r1,r2
  776  0000176c  1020000c	beqz	r1,L30_LF2
  777  00001770  54000000	nop; delay slot nop
  778  00001774  0800003c	j	L26_LF2
  779  00001778  54000000	nop; delay slot nop
  780  0000177c          	L31_LF2:
  781  0000177c          	L30_LF2:
  782  0000177c  8fc20000	lw	r2,(r30)
  783  00001780  20410001	addi	r1,r2,#1
  784  00001784  00011020	add	r2,r0,r1
  785  00001788  afc20000	sw	(r30),r2
  786  0000178c  8fc20004	lw	r2,4(r30)
  787  00001790  20410001	addi	r1,r2,#1
  788  00001794  00011020	add	r2,r0,r1
  789  00001798  afc20004	sw	4(r30),r2
  790  0000179c          	L27_LF2:
  791  0000179c  8fc2fff4	lw	r2,-12(r30)
  792  000017a0  20410001	addi	r1,r2,#1
  793  000017a4  00011020	add	r2,r0,r1
  794  000017a8  afc2fff4	sw	-12(r30),r2
  795  000017ac  0bffff64	j	L25_LF2
  796  000017b0  54000000	nop; delay slot nop
  797  000017b4          	L26_LF2:
  798  000017b4  8fc1fff4	lw	r1,-12(r30)
  799  000017b8  8fc20008	lw	r2,8(r30)
  800  000017bc  00220828	seq	r1,r1,r2
  801  000017c0  10200018	beqz	r1,L32_LF2
  802  000017c4  54000000	nop; delay slot nop
  803  000017c8  20010000	addi	r1,r0,#0
  804  000017cc  08000054	j	L24_LF2
  805  000017d0  54000000	nop; delay slot nop
  806  000017d4  0800004c	j	L33_LF2
  807  000017d8  54000000	nop; delay slot nop
  808  000017dc          	L32_LF2:
  809  000017dc  8fc20000	lw	r2,(r30)
  810  000017e0  90410000	lbu	r1,(r2)
  811  000017e4  8fc20004	lw	r2,4(r30)
  812  000017e8  90430000	lbu	r3,(r2)
  813  000017ec  00230822	sub	r1,r1,r3
  814  000017f0  74220000	sgei	r2,r1,#0
  815  000017f4  10400020	beqz	r2,L34_LF2
  816  000017f8  54000000	nop; delay slot nop
  817  000017fc  8fc10000	lw	r1,(r30)
  818  00001800  8fc20004	lw	r2,4(r30)
  819  00001804  90210000	lbu	r1,(r1)
  820  00001808  90420000	lbu	r2,(r2)
  821  0000180c  00220829	sne	r1,r1,r2
  822  00001810  08000008	j	L35_LF2
  823  00001814  54000000	nop; delay slot nop
  824  00001818          	L34_LF2:
  825  00001818  2001ffff	addi	r1,r0,#-1
  826  0000181c          	L35_LF2:
  827  0000181c  08000004	j	L24_LF2
  828  00001820  54000000	nop; delay slot nop
  829  00001824          	L33_LF2:
  830  00001824          	L24_LF2:
  831  00001824  8fa20000	lw	r2,0(r29)
  832  00001828  8fa30004	lw	r3,4(r29)
  833  0000182c  8fdffff8	lw	r31,-8(r30)
  834  00001830  001ee820	add	r29,r0,r30
  835  00001834  8fdefffc	lw	r30,-4(r30)
  836  00001838  4be00000	jr	r31
  837  0000183c  54000000	nop
  838  00001840          	.endproc _dstrncmp
  839  00001840          	.align 2
  840  00001840          	.proc _dstrlen
  841  00001840          	.global _dstrlen
  842  00001840          	_dstrlen:
  843                      ;  Function 'dstrlen'; 8 bytes of locals, 1 regs to save.
  844  00001840  afbefffc	sw	-4(r29),r30; push fp
  845  00001844  001df020	add	r30,r0,r29; fp = sp
  846  00001848  afbffff8	sw	-8(r29),r31; push ret addr
  847  0000184c  2fbd0018	subui	r29,r29,#24; alloc local storage
  848  00001850  afa20000	sw	0(r29),r2
  849  00001854  20010000	addi	r1,r0,#0
  850  00001858  afc1fff4	sw	-12(r30),r1
  851  0000185c          	L37_LF2:
  852  0000185c  8fc10000	lw	r1,(r30)
  853  00001860  20220001	addi	r2,r1,#1
  854  00001864  afc20000	sw	(r30),r2
  855  00001868  90210000	lbu	r1,(r1)
  856  0000186c  64220000	snei	r2,r1,#0
  857  00001870  1440000c	bnez	r2,L39_LF2
  858  00001874  54000000	nop; delay slot nop
  859  00001878  0800001c	j	L38_LF2
  860  0000187c  54000000	nop; delay slot nop
  861  00001880          	L39_LF2:
  862  00001880  8fc2fff4	lw	r2,-12(r30)
  863  00001884  20410001	addi	r1,r2,#1
  864  00001888  00011020	add	r2,r0,r1
  865  0000188c  afc2fff4	sw	-12(r30),r2
  866  00001890  0bffffc8	j	L37_LF2
  867  00001894  54000000	nop; delay slot nop
  868  00001898          	L38_LF2:
  869  00001898  8fc1fff4	lw	r1,-12(r30)
  870  0000189c  08000004	j	L36_LF2
  871  000018a0  54000000	nop; delay slot nop
  872  000018a4          	L36_LF2:
  873  000018a4  8fa20000	lw	r2,0(r29)
  874  000018a8  8fdffff8	lw	r31,-8(r30)
  875  000018ac  001ee820	add	r29,r0,r30
  876  000018b0  8fdefffc	lw	r30,-4(r30)
  877  000018b4  4be00000	jr	r31
  878  000018b8  54000000	nop
  879  000018bc          	.endproc _dstrlen
  880  000018bc          	.align 2
  881  000018bc          	.proc _dstrstr
  882  000018bc          	.global _dstrstr
  883  000018bc          	_dstrstr:
  884                      ;  Function 'dstrstr'; 8 bytes of locals, 1 regs to save.
  885  000018bc  afbefffc	sw	-4(r29),r30; push fp
  886  000018c0  001df020	add	r30,r0,r29; fp = sp
  887  000018c4  afbffff8	sw	-8(r29),r31; push ret addr
  888  000018c8  2fbd0018	subui	r29,r29,#24; alloc local storage
  889  000018cc  afa20000	sw	0(r29),r2
  890  000018d0  23bdfff8	addi	r29,r29,#-8
  891  000018d4  001d0820	add	r1,r0,r29
  892  000018d8  8fc20004	lw	r2,4(r30)
  893  000018dc  ac220000	sw	(r1),r2
  894  000018e0  0fffff5c	jal	_dstrlen
  895  000018e4  54000000	nop; delay slot nop
  896  000018e8  23bd0008	addi	r29,r29,#8
  897  000018ec  afc1fff4	sw	-12(r30),r1
  898  000018f0          	L41_LF2:
  899  000018f0  8fc10000	lw	r1,(r30)
  900  000018f4  90220000	lbu	r2,(r1)
  901  000018f8  64410000	snei	r1,r2,#0
  902  000018fc  1420000c	bnez	r1,L43_LF2
  903  00001900  54000000	nop; delay slot nop
  904  00001904  08000060	j	L42_LF2
  905  00001908  54000000	nop; delay slot nop
  906  0000190c          	L43_LF2:
  907  0000190c  23bdfff0	addi	r29,r29,#-16
  908  00001910  001d0820	add	r1,r0,r29
  909  00001914  8fc20000	lw	r2,(r30)
  910  00001918  ac220000	sw	(r1),r2
  911  0000191c  8fc20004	lw	r2,4(r30)
  912  00001920  ac220004	sw	4(r1),r2
  913  00001924  8fc2fff4	lw	r2,-12(r30)
  914  00001928  ac220008	sw	8(r1),r2
  915  0000192c  0ffffdc0	jal	_dstrncmp
  916  00001930  54000000	nop; delay slot nop
  917  00001934  23bd0010	addi	r29,r29,#16
  918  00001938  64220000	snei	r2,r1,#0
  919  0000193c  14400010	bnez	r2,L44_LF2
  920  00001940  54000000	nop; delay slot nop
  921  00001944  8fc10000	lw	r1,(r30)
  922  00001948  08000028	j	L40_LF2
  923  0000194c  54000000	nop; delay slot nop
  924  00001950          	L44_LF2:
  925  00001950  8fc20000	lw	r2,(r30)
  926  00001954  20410001	addi	r1,r2,#1
  927  00001958  00011020	add	r2,r0,r1
  928  0000195c  afc20000	sw	(r30),r2
  929  00001960  0bffff8c	j	L41_LF2
  930  00001964  54000000	nop; delay slot nop
  931  00001968          	L42_LF2:
  932  00001968  20010000	addi	r1,r0,#0
  933  0000196c  08000004	j	L40_LF2
  934  00001970  54000000	nop; delay slot nop
  935  00001974          	L40_LF2:
  936  00001974  8fa20000	lw	r2,0(r29)
  937  00001978  8fdffff8	lw	r31,-8(r30)
  938  0000197c  001ee820	add	r29,r0,r30
  939  00001980  8fdefffc	lw	r30,-4(r30)
  940  00001984  4be00000	jr	r31
  941  00001988  54000000	nop
  942  0000198c          	.endproc _dstrstr
  943  0000198c          	.align 2
  944  0000198c          	.proc _dmindex
  945  0000198c          	.global _dmindex
  946  0000198c          	_dmindex:
  947                      ;  Function 'dmindex'; 8 bytes of locals, 1 regs to save.
  948  0000198c  afbefffc	sw	-4(r29),r30; push fp
  949  00001990  001df020	add	r30,r0,r29; fp = sp
  950  00001994  afbffff8	sw	-8(r29),r31; push ret addr
  951  00001998  2fbd0018	subui	r29,r29,#24; alloc local storage
  952  0000199c  afa20000	sw	0(r29),r2
  953  000019a0  54000000	nop
  954  000019a4          	L46_LF2:
  955  000019a4  8fc10000	lw	r1,(r30)
  956  000019a8  90220000	lbu	r2,(r1)
  957  000019ac  64410000	snei	r1,r2,#0
  958  000019b0  1420000c	bnez	r1,L48_LF2
  959  000019b4  54000000	nop; delay slot nop
  960  000019b8  08000070	j	L47_LF2
  961  000019bc  54000000	nop; delay slot nop
  962  000019c0          	L48_LF2:
  963  000019c0  8fc10004	lw	r1,4(r30)
  964  000019c4  afc1fff4	sw	-12(r30),r1
  965  000019c8          	L49_LF2:
  966  000019c8  8fc1fff4	lw	r1,-12(r30)
  967  000019cc  90220000	lbu	r2,(r1)
  968  000019d0  64410000	snei	r1,r2,#0
  969  000019d4  1420000c	bnez	r1,L52_LF2
  970  000019d8  54000000	nop; delay slot nop
  971  000019dc  08000044	j	L50_LF2
  972  000019e0  54000000	nop; delay slot nop
  973  000019e4          	L52_LF2:
  974  000019e4  8fc10000	lw	r1,(r30)
  975  000019e8  8fc2fff4	lw	r2,-12(r30)
  976  000019ec  90210000	lbu	r1,(r1)
  977  000019f0  90420000	lbu	r2,(r2)
  978  000019f4  00220828	seq	r1,r1,r2
  979  000019f8  10200010	beqz	r1,L51_LF2
  980  000019fc  54000000	nop; delay slot nop
  981  00001a00  8fc10000	lw	r1,(r30)
  982  00001a04  08000030	j	L45_LF2
  983  00001a08  54000000	nop; delay slot nop
  984  00001a0c          	L53_LF2:
  985  00001a0c          	L51_LF2:
  986  00001a0c  8fc2fff4	lw	r2,-12(r30)
  987  00001a10  20410001	addi	r1,r2,#1
  988  00001a14  00011020	add	r2,r0,r1
  989  00001a18  afc2fff4	sw	-12(r30),r2
  990  00001a1c  0bffffa8	j	L49_LF2
  991  00001a20  54000000	nop; delay slot nop
  992  00001a24          	L50_LF2:
  993  00001a24  0bffff7c	j	L46_LF2
  994  00001a28  54000000	nop; delay slot nop
  995  00001a2c          	L47_LF2:
  996  00001a2c  20010000	addi	r1,r0,#0
  997  00001a30  08000004	j	L45_LF2
  998  00001a34  54000000	nop; delay slot nop
  999  00001a38          	L45_LF2:
 1000  00001a38  8fa20000	lw	r2,0(r29)
 1001  00001a3c  8fdffff8	lw	r31,-8(r30)
 1002  00001a40  001ee820	add	r29,r0,r30
 1003  00001a44  8fdefffc	lw	r30,-4(r30)
 1004  00001a48  4be00000	jr	r31
 1005  00001a4c  54000000	nop
 1006  00001a50          	.endproc _dmindex
 1007  00001a50          	.align 2
 1008  00001a50          	.proc _dindex
 1009  00001a50          	.global _dindex
 1010  00001a50          	_dindex:
 1011                      ;  Function 'dindex'; 0 bytes of locals, 1 regs to save.
 1012  00001a50  afbefffc	sw	-4(r29),r30; push fp
 1013  00001a54  001df020	add	r30,r0,r29; fp = sp
 1014  00001a58  afbffff8	sw	-8(r29),r31; push ret addr
 1015  00001a5c  2fbd0010	subui	r29,r29,#16; alloc local storage
 1016  00001a60  afa20000	sw	0(r29),r2
 1017  00001a64  54000000	nop
 1018  00001a68          	L55_LF2:
 1019  00001a68  8fc10000	lw	r1,(r30)
 1020  00001a6c  90220000	lbu	r2,(r1)
 1021  00001a70  64410000	snei	r1,r2,#0
 1022  00001a74  1420000c	bnez	r1,L57_LF2
 1023  00001a78  54000000	nop; delay slot nop
 1024  00001a7c  08000040	j	L56_LF2
 1025  00001a80  54000000	nop; delay slot nop
 1026  00001a84          	L57_LF2:
 1027  00001a84  8fc10000	lw	r1,(r30)
 1028  00001a88  90220000	lbu	r2,(r1)
 1029  00001a8c  8fc10004	lw	r1,4(r30)
 1030  00001a90  00411028	seq	r2,r2,r1
 1031  00001a94  10400010	beqz	r2,L58_LF2
 1032  00001a98  54000000	nop; delay slot nop
 1033  00001a9c  8fc10000	lw	r1,(r30)
 1034  00001aa0  08000028	j	L54_LF2
 1035  00001aa4  54000000	nop; delay slot nop
 1036  00001aa8          	L58_LF2:
 1037  00001aa8  8fc20000	lw	r2,(r30)
 1038  00001aac  20410001	addi	r1,r2,#1
 1039  00001ab0  00011020	add	r2,r0,r1
 1040  00001ab4  afc20000	sw	(r30),r2
 1041  00001ab8  0bffffac	j	L55_LF2
 1042  00001abc  54000000	nop; delay slot nop
 1043  00001ac0          	L56_LF2:
 1044  00001ac0  20010000	addi	r1,r0,#0
 1045  00001ac4  08000004	j	L54_LF2
 1046  00001ac8  54000000	nop; delay slot nop
 1047  00001acc          	L54_LF2:
 1048  00001acc  8fa20000	lw	r2,0(r29)
 1049  00001ad0  8fdffff8	lw	r31,-8(r30)
 1050  00001ad4  001ee820	add	r29,r0,r30
 1051  00001ad8  8fdefffc	lw	r30,-4(r30)
 1052  00001adc  4be00000	jr	r31
 1053  00001ae0  54000000	nop
 1054  00001ae4          	.endproc _dindex
 1055  00001ae4          	.align 2
 1056  00001ae4          	.proc _ditoa
 1057  00001ae4          	.global _ditoa
 1058  00001ae4          	_ditoa:
 1059                      ;  Function 'ditoa'; 8 bytes of locals, 2 regs to save.
 1060  00001ae4  afbefffc	sw	-4(r29),r30; push fp
 1061  00001ae8  001df020	add	r30,r0,r29; fp = sp
 1062  00001aec  afbffff8	sw	-8(r29),r31; push ret addr
 1063  00001af0  2fbd0018	subui	r29,r29,#24; alloc local storage
 1064  00001af4  afa20000	sw	0(r29),r2
 1065  00001af8  afa30004	sw	4(r29),r3
 1066  00001afc  8fc10000	lw	r1,(r30)
 1067  00001b00  68220000	slti	r2,r1,#0
 1068  00001b04  1040002c	beqz	r2,L60_LF2
 1069  00001b08  54000000	nop; delay slot nop
 1070  00001b0c  8fc10004	lw	r1,4(r30)
 1071  00001b10  20220001	addi	r2,r1,#1
 1072  00001b14  afc20004	sw	4(r30),r2
 1073  00001b18  2002002d	addi	r2,r0,(#0x2d)&0xff
 1074  00001b1c  a0220000	sb	(r1),r2
 1075  00001b20  8fc10000	lw	r1,(r30)
 1076  00001b24  00011022	sub	r2,r0,r1
 1077  00001b28  afc20000	sw	(r30),r2
 1078  00001b2c  08000118	j	L61_LF2
 1079  00001b30  54000000	nop; delay slot nop
 1080  00001b34          	L60_LF2:
 1081  00001b34  8fc10000	lw	r1,(r30)
 1082  00001b38  64220000	snei	r2,r1,#0
 1083  00001b3c  14400020	bnez	r2,L62_LF2
 1084  00001b40  54000000	nop; delay slot nop
 1085  00001b44  8fc10004	lw	r1,4(r30)
 1086  00001b48  20220001	addi	r2,r1,#1
 1087  00001b4c  afc20004	sw	4(r30),r2
 1088  00001b50  20020030	addi	r2,r0,(#0x30)&0xff
 1089  00001b54  a0220000	sb	(r1),r2
 1090  00001b58  080000ec	j	L61_LF2
 1091  00001b5c  54000000	nop; delay slot nop
 1092  00001b60          	L62_LF2:
 1093  00001b60  20010001	addi	r1,r0,#1
 1094  00001b64  afc1fff4	sw	-12(r30),r1
 1095  00001b68          	L64_LF2:
 1096  00001b68  8fc1fff4	lw	r1,-12(r30)
 1097  00001b6c  8fc20000	lw	r2,(r30)
 1098  00001b70  0022082c	sle	r1,r1,r2
 1099  00001b74  1420000c	bnez	r1,L66_LF2
 1100  00001b78  54000000	nop; delay slot nop
 1101  00001b7c  08000024	j	L65_LF2
 1102  00001b80  54000000	nop; delay slot nop
 1103  00001b84          	L67_LF2:
 1104  00001b84          	L66_LF2:
 1105  00001b84  8fc1fff4	lw	r1,-12(r30)
 1106  00001b88  00011820	add	r3,r0,r1
 1107  00001b8c  50620002	slli	r2,r3,#0x2
 1108  00001b90  00411020	add	r2,r2,r1
 1109  00001b94  50410001	slli	r1,r2,#0x1
 1110  00001b98  afc1fff4	sw	-12(r30),r1
 1111  00001b9c  0bffffc8	j	L64_LF2
 1112  00001ba0  54000000	nop; delay slot nop
 1113  00001ba4          	L65_LF2:
 1114  00001ba4  54000000	nop
 1115  00001ba8          	L68_LF2:
 1116  00001ba8  8fc1fff4	lw	r1,-12(r30)
 1117  00001bac  2002000a	addi	r2,r0,#10
 1118  00001bb0  00200035	movi2fp	f0,r1
 1119  00001bb4  00400835	movi2fp	f1,r2
 1120  00001bb8  0401000f	div	f0,f0,f1
 1121  00001bbc  00000834	movfp2i	r1,f0
 1122  00001bc0  afc1fff4	sw	-12(r30),r1
 1123  00001bc4  8fc10004	lw	r1,4(r30)
 1124  00001bc8  20220001	addi	r2,r1,#1
 1125  00001bcc  afc20004	sw	4(r30),r2
 1126  00001bd0  8fc20000	lw	r2,(r30)
 1127  00001bd4  8fc3fff4	lw	r3,-12(r30)
 1128  00001bd8  00400035	movi2fp	f0,r2
 1129  00001bdc  00600835	movi2fp	f1,r3
 1130  00001be0  0401000f	div	f0,f0,f1
 1131  00001be4  00001034	movfp2i	r2,f0
 1132  00001be8  00021820	add	r3,r0,r2
 1133  00001bec  20620030	addi	r2,r3,#48
 1134  00001bf0  a0220000	sb	(r1),r2
 1135  00001bf4  8fc10000	lw	r1,(r30)
 1136  00001bf8  8fc3fff4	lw	r3,-12(r30)
 1137  00001bfc  00200035	movi2fp	f0,r1
 1138  00001c00  00600835	movi2fp	f1,r3
 1139  00001c04  0401000f	div	f0,f0,f1
 1140  00001c08  00001034	movfp2i	r2,f0
 1141  00001c0c  8fc3fff4	lw	r3,-12(r30)
 1142  00001c10  00400035	movi2fp	f0,r2
 1143  00001c14  00600835	movi2fp	f1,r3
 1144  00001c18  0401000e	mult	f0,f0,f1
 1145  00001c1c  00001034	movfp2i	r2,f0
 1146  00001c20  00220822	sub	r1,r1,r2
 1147  00001c24  afc10000	sw	(r30),r1
 1148  00001c28          	L70_LF2:
 1149  00001c28  8fc1fff4	lw	r1,-12(r30)
 1150  00001c2c  6c220001	sgti	r2,r1,#1
 1151  00001c30  1440000c	bnez	r2,L71_LF2
 1152  00001c34  54000000	nop; delay slot nop
 1153  00001c38  0800000c	j	L61_LF2
 1154  00001c3c  54000000	nop; delay slot nop
 1155  00001c40          	L71_LF2:
 1156  00001c40  0bffff64	j	L68_LF2
 1157  00001c44  54000000	nop; delay slot nop
 1158  00001c48          	L69_LF2:
 1159  00001c48          	L63_LF2:
 1160  00001c48          	L61_LF2:
 1161  00001c48  8fc10004	lw	r1,4(r30)
 1162  00001c4c  20020000	addi	r2,r0,(#0x0)&0xff
 1163  00001c50  a0220000	sb	(r1),r2
 1164  00001c54          	L59_LF2:
 1165  00001c54  8fa20000	lw	r2,0(r29)
 1166  00001c58  8fa30004	lw	r3,4(r29)
 1167  00001c5c  8fdffff8	lw	r31,-8(r30)
 1168  00001c60  001ee820	add	r29,r0,r30
 1169  00001c64  8fdefffc	lw	r30,-4(r30)
 1170  00001c68  4be00000	jr	r31
 1171  00001c6c  54000000	nop
 1172  00001c70          	.endproc _ditoa
 1173  00001c70          	.align 2
 1174  00001c70          	.proc _dstrtol
 1175  00001c70          	.global _dstrtol
 1176  00001c70          	_dstrtol:
 1177                      ;  Function 'dstrtol'; 16 bytes of locals, 1 regs to save.
 1178  00001c70  afbefffc	sw	-4(r29),r30; push fp
 1179  00001c74  001df020	add	r30,r0,r29; fp = sp
 1180  00001c78  afbffff8	sw	-8(r29),r31; push ret addr
 1181  00001c7c  2fbd0020	subui	r29,r29,#32; alloc local storage
 1182  00001c80  afa20000	sw	0(r29),r2
 1183  00001c84  20010000	addi	r1,r0,#0
 1184  00001c88  afc1fff4	sw	-12(r30),r1
 1185  00001c8c          	L73_LF2:
 1186  00001c8c  8fc10000	lw	r1,(r30)
 1187  00001c90  90220000	lbu	r2,(r1)
 1188  00001c94  60410020	seqi	r1,r2,#32
 1189  00001c98  14200034	bnez	r1,L75_LF2
 1190  00001c9c  54000000	nop; delay slot nop
 1191  00001ca0  8fc10000	lw	r1,(r30)
 1192  00001ca4  90220000	lbu	r2,(r1)
 1193  00001ca8  60410009	seqi	r1,r2,#9
 1194  00001cac  14200020	bnez	r1,L75_LF2
 1195  00001cb0  54000000	nop; delay slot nop
 1196  00001cb4  8fc10000	lw	r1,(r30)
 1197  00001cb8  90220000	lbu	r2,(r1)
 1198  00001cbc  6041000a	seqi	r1,r2,#10
 1199  00001cc0  1420000c	bnez	r1,L75_LF2
 1200  00001cc4  54000000	nop; delay slot nop
 1201  00001cc8  0800001c	j	L74_LF2
 1202  00001ccc  54000000	nop; delay slot nop
 1203  00001cd0          	L75_LF2:
 1204  00001cd0  8fc20000	lw	r2,(r30)
 1205  00001cd4  20410001	addi	r1,r2,#1
 1206  00001cd8  00011020	add	r2,r0,r1
 1207  00001cdc  afc20000	sw	(r30),r2
 1208  00001ce0  0bffffa8	j	L73_LF2
 1209  00001ce4  54000000	nop; delay slot nop
 1210  00001ce8          	L74_LF2:
 1211  00001ce8  8fc10004	lw	r1,4(r30)
 1212  00001cec  64220000	snei	r2,r1,#0
 1213  00001cf0  10400010	beqz	r2,L76_LF2
 1214  00001cf4  54000000	nop; delay slot nop
 1215  00001cf8  8fc10004	lw	r1,4(r30)
 1216  00001cfc  8fc20000	lw	r2,(r30)
 1217  00001d00  ac220000	sw	(r1),r2
 1218  00001d04          	L76_LF2:
 1219  00001d04  8fc10000	lw	r1,(r30)
 1220  00001d08  90220000	lbu	r2,(r1)
 1221  00001d0c  64410000	snei	r1,r2,#0
 1222  00001d10  14200010	bnez	r1,L77_LF2
 1223  00001d14  54000000	nop; delay slot nop
 1224  00001d18  8fc1fff4	lw	r1,-12(r30)
 1225  00001d1c  08000294	j	L72_LF2
 1226  00001d20  54000000	nop; delay slot nop
 1227  00001d24          	L77_LF2:
 1228  00001d24  8fc10000	lw	r1,(r30)
 1229  00001d28  90220000	lbu	r2,(r1)
 1230  00001d2c  6041002d	seqi	r1,r2,#45
 1231  00001d30  10200024	beqz	r1,L78_LF2
 1232  00001d34  54000000	nop; delay slot nop
 1233  00001d38  2001ffff	addi	r1,r0,#-1
 1234  00001d3c  afc1ffec	sw	-20(r30),r1
 1235  00001d40  8fc20000	lw	r2,(r30)
 1236  00001d44  20410001	addi	r1,r2,#1
 1237  00001d48  00011020	add	r2,r0,r1
 1238  00001d4c  afc20000	sw	(r30),r2
 1239  00001d50  0800000c	j	L79_LF2
 1240  00001d54  54000000	nop; delay slot nop
 1241  00001d58          	L78_LF2:
 1242  00001d58  20010001	addi	r1,r0,#1
 1243  00001d5c  afc1ffec	sw	-20(r30),r1
 1244  00001d60          	L79_LF2:
 1245  00001d60  8fc10008	lw	r1,8(r30)
 1246  00001d64  64220000	snei	r2,r1,#0
 1247  00001d68  14400090	bnez	r2,L80_LF2
 1248  00001d6c  54000000	nop; delay slot nop
 1249  00001d70  8fc10000	lw	r1,(r30)
 1250  00001d74  90220000	lbu	r2,(r1)
 1251  00001d78  60410030	seqi	r1,r2,#48
 1252  00001d7c  10200074	beqz	r1,L81_LF2
 1253  00001d80  54000000	nop; delay slot nop
 1254  00001d84  8fc20000	lw	r2,(r30)
 1255  00001d88  20410001	addi	r1,r2,#1
 1256  00001d8c  00011020	add	r2,r0,r1
 1257  00001d90  afc20000	sw	(r30),r2
 1258  00001d94  8fc10000	lw	r1,(r30)
 1259  00001d98  90220000	lbu	r2,(r1)
 1260  00001d9c  60410078	seqi	r1,r2,#120
 1261  00001da0  14200020	bnez	r1,L83_LF2
 1262  00001da4  54000000	nop; delay slot nop
 1263  00001da8  8fc10000	lw	r1,(r30)
 1264  00001dac  90220000	lbu	r2,(r1)
 1265  00001db0  60410058	seqi	r1,r2,#88
 1266  00001db4  1420000c	bnez	r1,L83_LF2
 1267  00001db8  54000000	nop; delay slot nop
 1268  00001dbc  08000024	j	L82_LF2
 1269  00001dc0  54000000	nop; delay slot nop
 1270  00001dc4          	L83_LF2:
 1271  00001dc4  20010010	addi	r1,r0,#16
 1272  00001dc8  afc10008	sw	8(r30),r1
 1273  00001dcc  8fc20000	lw	r2,(r30)
 1274  00001dd0  20410001	addi	r1,r2,#1
 1275  00001dd4  00011020	add	r2,r0,r1
 1276  00001dd8  afc20000	sw	(r30),r2
 1277  00001ddc  0800000c	j	L84_LF2
 1278  00001de0  54000000	nop; delay slot nop
 1279  00001de4          	L82_LF2:
 1280  00001de4  20010008	addi	r1,r0,#8
 1281  00001de8  afc10008	sw	8(r30),r1
 1282  00001dec          	L84_LF2:
 1283  00001dec  0800000c	j	L80_LF2
 1284  00001df0  54000000	nop; delay slot nop
 1285  00001df4          	L81_LF2:
 1286  00001df4  2001000a	addi	r1,r0,#10
 1287  00001df8  afc10008	sw	8(r30),r1
 1288  00001dfc          	L85_LF2:
 1289  00001dfc          	L80_LF2:
 1290  00001dfc  8fc10008	lw	r1,8(r30)
 1291  00001e00  70220000	slei	r2,r1,#0
 1292  00001e04  1440001c	bnez	r2,L87_LF2
 1293  00001e08  54000000	nop; delay slot nop
 1294  00001e0c  8fc10008	lw	r1,8(r30)
 1295  00001e10  6c220010	sgti	r2,r1,#16
 1296  00001e14  1440000c	bnez	r2,L87_LF2
 1297  00001e18  54000000	nop; delay slot nop
 1298  00001e1c  08000010	j	L86_LF2
 1299  00001e20  54000000	nop; delay slot nop
 1300  00001e24          	L87_LF2:
 1301  00001e24  8fc1fff4	lw	r1,-12(r30)
 1302  00001e28  08000188	j	L72_LF2
 1303  00001e2c  54000000	nop; delay slot nop
 1304  00001e30          	L86_LF2:
 1305  00001e30  54000000	nop
 1306  00001e34          	L88_LF2:
 1307  00001e34  8fc10000	lw	r1,(r30)
 1308  00001e38  90220000	lbu	r2,(r1)
 1309  00001e3c  6c41002f	sgtui	r1,r2,#47
 1310  00001e40  10200030	beqz	r1,L91_LF2
 1311  00001e44  54000000	nop; delay slot nop
 1312  00001e48  8fc10000	lw	r1,(r30)
 1313  00001e4c  90220000	lbu	r2,(r1)
 1314  00001e50  70410039	sleui	r1,r2,#57
 1315  00001e54  1020001c	beqz	r1,L91_LF2
 1316  00001e58  54000000	nop; delay slot nop
 1317  00001e5c  8fc10000	lw	r1,(r30)
 1318  00001e60  90220000	lbu	r2,(r1)
 1319  00001e64  2041ffd0	addi	r1,r2,#-48
 1320  00001e68  afc1fff0	sw	-16(r30),r1
 1321  00001e6c  0800008c	j	L92_LF2
 1322  00001e70  54000000	nop; delay slot nop
 1323  00001e74          	L91_LF2:
 1324  00001e74  8fc10000	lw	r1,(r30)
 1325  00001e78  90220000	lbu	r2,(r1)
 1326  00001e7c  6c410060	sgtui	r1,r2,#96
 1327  00001e80  10200030	beqz	r1,L93_LF2
 1328  00001e84  54000000	nop; delay slot nop
 1329  00001e88  8fc10000	lw	r1,(r30)
 1330  00001e8c  90220000	lbu	r2,(r1)
 1331  00001e90  7041007a	sleui	r1,r2,#122
 1332  00001e94  1020001c	beqz	r1,L93_LF2
 1333  00001e98  54000000	nop; delay slot nop
 1334  00001e9c  8fc10000	lw	r1,(r30)
 1335  00001ea0  90220000	lbu	r2,(r1)
 1336  00001ea4  2041ffa9	addi	r1,r2,#-87
 1337  00001ea8  afc1fff0	sw	-16(r30),r1
 1338  00001eac  0800004c	j	L92_LF2
 1339  00001eb0  54000000	nop; delay slot nop
 1340  00001eb4          	L93_LF2:
 1341  00001eb4  8fc10000	lw	r1,(r30)
 1342  00001eb8  90220000	lbu	r2,(r1)
 1343  00001ebc  6c410040	sgtui	r1,r2,#64
 1344  00001ec0  10200030	beqz	r1,L95_LF2
 1345  00001ec4  54000000	nop; delay slot nop
 1346  00001ec8  8fc10000	lw	r1,(r30)
 1347  00001ecc  90220000	lbu	r2,(r1)
 1348  00001ed0  7041005a	sleui	r1,r2,#90
 1349  00001ed4  1020001c	beqz	r1,L95_LF2
 1350  00001ed8  54000000	nop; delay slot nop
 1351  00001edc  8fc10000	lw	r1,(r30)
 1352  00001ee0  90220000	lbu	r2,(r1)
 1353  00001ee4  2041ffc9	addi	r1,r2,#-55
 1354  00001ee8  afc1fff0	sw	-16(r30),r1
 1355  00001eec  0800000c	j	L92_LF2
 1356  00001ef0  54000000	nop; delay slot nop
 1357  00001ef4          	L95_LF2:
 1358  00001ef4  200103e8	addi	r1,r0,#1000
 1359  00001ef8  afc1fff0	sw	-16(r30),r1
 1360  00001efc          	L96_LF2:
 1361  00001efc          	L94_LF2:
 1362  00001efc          	L92_LF2:
 1363  00001efc  8fc1fff0	lw	r1,-16(r30)
 1364  00001f00  8fc20008	lw	r2,8(r30)
 1365  00001f04  0022082a	slt	r1,r1,r2
 1366  00001f08  10200040	beqz	r1,L90_LF2
 1367  00001f0c  54000000	nop; delay slot nop
 1368  00001f10  8fc1fff4	lw	r1,-12(r30)
 1369  00001f14  8fc20008	lw	r2,8(r30)
 1370  00001f18  00200035	movi2fp	f0,r1
 1371  00001f1c  00400835	movi2fp	f1,r2
 1372  00001f20  0401000e	mult	f0,f0,f1
 1373  00001f24  00000834	movfp2i	r1,f0
 1374  00001f28  afc1fff4	sw	-12(r30),r1
 1375  00001f2c  8fc1fff4	lw	r1,-12(r30)
 1376  00001f30  8fc2fff0	lw	r2,-16(r30)
 1377  00001f34  00220820	add	r1,r1,r2
 1378  00001f38  afc1fff4	sw	-12(r30),r1
 1379  00001f3c  8fc20000	lw	r2,(r30)
 1380  00001f40  20410001	addi	r1,r2,#1
 1381  00001f44  00011020	add	r2,r0,r1
 1382  00001f48  afc20000	sw	(r30),r2
 1383  00001f4c          	L97_LF2:
 1384  00001f4c          	L90_LF2:
 1385  00001f4c  8fc1fff0	lw	r1,-16(r30)
 1386  00001f50  8fc20008	lw	r2,8(r30)
 1387  00001f54  0022082a	slt	r1,r1,r2
 1388  00001f58  1420000c	bnez	r1,L98_LF2
 1389  00001f5c  54000000	nop; delay slot nop
 1390  00001f60  0800000c	j	L89_LF2
 1391  00001f64  54000000	nop; delay slot nop
 1392  00001f68          	L98_LF2:
 1393  00001f68  0bfffec8	j	L88_LF2
 1394  00001f6c  54000000	nop; delay slot nop
 1395  00001f70          	L89_LF2:
 1396  00001f70  8fc10004	lw	r1,4(r30)
 1397  00001f74  64220000	snei	r2,r1,#0
 1398  00001f78  10400010	beqz	r2,L99_LF2
 1399  00001f7c  54000000	nop; delay slot nop
 1400  00001f80  8fc10004	lw	r1,4(r30)
 1401  00001f84  8fc20000	lw	r2,(r30)
 1402  00001f88  ac220000	sw	(r1),r2
 1403  00001f8c          	L99_LF2:
 1404  00001f8c  8fc1fff4	lw	r1,-12(r30)
 1405  00001f90  8fc2ffec	lw	r2,-20(r30)
 1406  00001f94  00200035	movi2fp	f0,r1
 1407  00001f98  00400835	movi2fp	f1,r2
 1408  00001f9c  0401000e	mult	f0,f0,f1
 1409  00001fa0  00000834	movfp2i	r1,f0
 1410  00001fa4  afc1fff4	sw	-12(r30),r1
 1411  00001fa8  8fc1fff4	lw	r1,-12(r30)
 1412  00001fac  08000004	j	L72_LF2
 1413  00001fb0  54000000	nop; delay slot nop
 1414  00001fb4          	L72_LF2:
 1415  00001fb4  8fa20000	lw	r2,0(r29)
 1416  00001fb8  8fdffff8	lw	r31,-8(r30)
 1417  00001fbc  001ee820	add	r29,r0,r30
 1418  00001fc0  8fdefffc	lw	r30,-4(r30)
 1419  00001fc4  4be00000	jr	r31
 1420  00001fc8  54000000	nop
 1421  00001fcc          	.endproc _dstrtol
 1422  00001fcc          	.align 2
 1423  00001fcc          	.proc _bcopy
 1424  00001fcc          	.global _bcopy
 1425  00001fcc          	_bcopy:
 1426                      ;  Function 'bcopy'; 0 bytes of locals, 2 regs to save.
 1427  00001fcc  afbefffc	sw	-4(r29),r30; push fp
 1428  00001fd0  001df020	add	r30,r0,r29; fp = sp
 1429  00001fd4  afbffff8	sw	-8(r29),r31; push ret addr
 1430  00001fd8  2fbd0010	subui	r29,r29,#16; alloc local storage
 1431  00001fdc  afa20000	sw	0(r29),r2
 1432  00001fe0  afa30004	sw	4(r29),r3
 1433  00001fe4  54000000	nop
 1434  00001fe8          	L101_LF2:
 1435  00001fe8  8fc10008	lw	r1,8(r30)
 1436  00001fec  2022ffff	addi	r2,r1,#-1
 1437  00001ff0  afc20008	sw	8(r30),r2
 1438  00001ff4  6c210000	sgti	r1,r1,#0
 1439  00001ff8  1420000c	bnez	r1,L103_LF2
 1440  00001ffc  54000000	nop; delay slot nop
 1441  00002000  0800002c	j	L102_LF2
 1442  00002004  54000000	nop; delay slot nop
 1443  00002008          	L103_LF2:
 1444  00002008  8fc10004	lw	r1,4(r30)
 1445  0000200c  20220001	addi	r2,r1,#1
 1446  00002010  afc20004	sw	4(r30),r2
 1447  00002014  8fc20000	lw	r2,(r30)
 1448  00002018  20430001	addi	r3,r2,#1
 1449  0000201c  afc30000	sw	(r30),r3
 1450  00002020  80420000	lb	r2,(r2)
 1451  00002024  a0220000	sb	(r1),r2
 1452  00002028  0bffffbc	j	L101_LF2
 1453  0000202c  54000000	nop; delay slot nop
 1454  00002030          	L102_LF2:
 1455  00002030          	L100_LF2:
 1456  00002030  8fa20000	lw	r2,0(r29)
 1457  00002034  8fa30004	lw	r3,4(r29)
 1458  00002038  8fdffff8	lw	r31,-8(r30)
 1459  0000203c  001ee820	add	r29,r0,r30
 1460  00002040  8fdefffc	lw	r30,-4(r30)
 1461  00002044  4be00000	jr	r31
 1462  00002048  54000000	nop
 1463  0000204c          	.endproc _bcopy
 1464  0000204c          	.align 2
 1465  0000204c          	.proc _bzero
 1466  0000204c          	.global _bzero
 1467  0000204c          	_bzero:
 1468                      ;  Function 'bzero'; 0 bytes of locals, 1 regs to save.
 1469  0000204c  afbefffc	sw	-4(r29),r30; push fp
 1470  00002050  001df020	add	r30,r0,r29; fp = sp
 1471  00002054  afbffff8	sw	-8(r29),r31; push ret addr
 1472  00002058  2fbd0010	subui	r29,r29,#16; alloc local storage
 1473  0000205c  afa20000	sw	0(r29),r2
 1474  00002060  54000000	nop
 1475  00002064          	L105_LF2:
 1476  00002064  8fc10004	lw	r1,4(r30)
 1477  00002068  2022ffff	addi	r2,r1,#-1
 1478  0000206c  afc20004	sw	4(r30),r2
 1479  00002070  6c210000	sgti	r1,r1,#0
 1480  00002074  1420000c	bnez	r1,L107_LF2
 1481  00002078  54000000	nop; delay slot nop
 1482  0000207c  08000020	j	L106_LF2
 1483  00002080  54000000	nop; delay slot nop
 1484  00002084          	L107_LF2:
 1485  00002084  8fc10000	lw	r1,(r30)
 1486  00002088  20220001	addi	r2,r1,#1
 1487  0000208c  afc20000	sw	(r30),r2
 1488  00002090  20020000	addi	r2,r0,(#0x0)&0xff
 1489  00002094  a0220000	sb	(r1),r2
 1490  00002098  0bffffc8	j	L105_LF2
 1491  0000209c  54000000	nop; delay slot nop
 1492  000020a0          	L106_LF2:
 1493  000020a0          	L104_LF2:
 1494  000020a0  8fa20000	lw	r2,0(r29)
 1495  000020a4  8fdffff8	lw	r31,-8(r30)
 1496  000020a8  001ee820	add	r29,r0,r30
 1497  000020ac  8fdefffc	lw	r30,-4(r30)
 1498  000020b0  4be00000	jr	r31
 1499  000020b4  54000000	nop
 1500  000020b8          	.endproc _bzero
 1501  000020b8          	.align 2
 1502  000020b8          	.proc _min
 1503  000020b8          	.global _min
 1504  000020b8          	_min:
 1505                      ;  Function 'min'; 0 bytes of locals, 2 regs to save.
 1506  000020b8  afbefffc	sw	-4(r29),r30; push fp
 1507  000020bc  001df020	add	r30,r0,r29; fp = sp
 1508  000020c0  afbffff8	sw	-8(r29),r31; push ret addr
 1509  000020c4  2fbd0010	subui	r29,r29,#16; alloc local storage
 1510  000020c8  afa20000	sw	0(r29),r2
 1511  000020cc  afa30004	sw	4(r29),r3
 1512  000020d0  8fc10000	lw	r1,(r30)
 1513  000020d4  8fc20004	lw	r2,4(r30)
 1514  000020d8  0022182c	sle	r3,r1,r2
 1515  000020dc  14600008	bnez	r3,L109_LF2
 1516  000020e0  54000000	nop; delay slot nop
 1517  000020e4  8fc10004	lw	r1,4(r30)
 1518  000020e8          	L109_LF2:
 1519  000020e8  08000004	j	L108_LF2
 1520  000020ec  54000000	nop; delay slot nop
 1521  000020f0          	L108_LF2:
 1522  000020f0  8fa20000	lw	r2,0(r29)
 1523  000020f4  8fa30004	lw	r3,4(r29)
 1524  000020f8  8fdffff8	lw	r31,-8(r30)
 1525  000020fc  001ee820	add	r29,r0,r30
 1526  00002100  8fdefffc	lw	r30,-4(r30)
 1527  00002104  4be00000	jr	r31
 1528  00002108  54000000	nop
 1529  0000210c          	.endproc _min
 1530  0000210c          	.align 2
 1531  0000210c          	.proc _max
 1532  0000210c          	.global _max
 1533  0000210c          	_max:
 1534                      ;  Function 'max'; 0 bytes of locals, 2 regs to save.
 1535  0000210c  afbefffc	sw	-4(r29),r30; push fp
 1536  00002110  001df020	add	r30,r0,r29; fp = sp
 1537  00002114  afbffff8	sw	-8(r29),r31; push ret addr
 1538  00002118  2fbd0010	subui	r29,r29,#16; alloc local storage
 1539  0000211c  afa20000	sw	0(r29),r2
 1540  00002120  afa30004	sw	4(r29),r3
 1541  00002124  8fc10000	lw	r1,(r30)
 1542  00002128  8fc20004	lw	r2,4(r30)
 1543  0000212c  0022182d	sge	r3,r1,r2
 1544  00002130  14600008	bnez	r3,L111_LF2
 1545  00002134  54000000	nop; delay slot nop
 1546  00002138  8fc10004	lw	r1,4(r30)
 1547  0000213c          	L111_LF2:
 1548  0000213c  08000004	j	L110_LF2
 1549  00002140  54000000	nop; delay slot nop
 1550  00002144          	L110_LF2:
 1551  00002144  8fa20000	lw	r2,0(r29)
 1552  00002148  8fa30004	lw	r3,4(r29)
 1553  0000214c  8fdffff8	lw	r31,-8(r30)
 1554  00002150  001ee820	add	r29,r0,r30
 1555  00002154  8fdefffc	lw	r30,-4(r30)
 1556  00002158  4be00000	jr	r31
 1557  0000215c  54000000	nop
 1558  00002160          	.endproc _max
 1559                      ;;; Ethan L. Miller, 1999.  Released to the public domain
 1560                      ;;;
 1561                      ;;; Most of the traps are called in files from libtraps.
 1564  00002160          	.align 2
 1565  00002160          	.proc _exit
 1566  00002160          	.global _exit
 1567  00002160          	_exit:
 1568  00002160  44000300	trap	#0x300
 1569  00002164  4be00000	jr	r31
 1570  00002168  54000000	nop
 1571  0000216c          	.endproc _exit
 1573                      ; for the benefit of gcc.
 1574  0000216c          	.proc ___main
 1575  0000216c          	.global ___main
 1576  0000216c          	___main:
 1577  0000216c  4be00000	jr	r31
 1578  00002170  54000000	nop
 1579  00002174          	.endproc ___main
 1580  00002174          	.text
 1581  00002174          	.global _etext
 1582  00002174          	_etext:
 1583  00002174          	.align 3
 1584  00002178          	.data
 1585  000030ab          	.global _edata
 1586  000030ab          	_edata:
