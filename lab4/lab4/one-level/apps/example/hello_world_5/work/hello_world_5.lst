 line   address	contents
    1                      ; Linked by DLX-LD.
    2                      ; MemSize 24576
    3                      ; Data size: 187
    4                      ; Text size: 4544
    5                      ; Stack size: 8192
    6  00000000          	.text 0x1000
    7  00001000          	.data 0x3000
    8                      ; Compiled by GCC
    9  00003000          	.text
   10  00001000          	.align 2
   11  00001000          	.proc _isspace
   12  00001000          	.global _isspace
   13  00001000          	_isspace:
   14                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
   15  00001000  afbefffc	sw	-4(r29),r30; push fp
   16  00001004  001df020	add	r30,r0,r29; fp = sp
   17  00001008  afbffff8	sw	-8(r29),r31; push ret addr
   18  0000100c  2fbd0010	subui	r29,r29,#16; alloc local storage
   19  00001010  afa20000	sw	0(r29),r2
   20  00001014  83c20003	lb	r2,3(r30)
   21  00001018  201f0000	addi	r31,r0,#0
   22  0000101c  304100ff	andi	r1,r2,#0x00ff
   23  00001020  60210020	seqi	r1,r1,#32
   24  00001024  14200018	bnez	r1,L6_LF0
   25  00001028  54000000	nop; not filled.
   26  0000102c  2041fff7	addi	r1,r2,#-9
   27  00001030  302100ff	andi	r1,r1,#0x00ff
   28  00001034  70210001	sleui	r1,r1,#1
   29  00001038  10200008	beqz	r1,L5_LF0
   30  0000103c  54000000	nop; not filled.
   31  00001040          	L6_LF0:
   32  00001040  201f0001	addi	r31,r0,#1
   33  00001044          	L5_LF0:
   34  00001044  001f0820	add	r1,r0,r31
   35  00001048  8fa20000	lw	r2,0(r29)
   36  0000104c  8fdffff8	lw	r31,-8(r30)
   37  00001050  001ee820	add	r29,r0,r30
   38  00001054  8fdefffc	lw	r30,-4(r30)
   39  00001058  4be00000	jr	r31
   40  0000105c  54000000	nop
   41  00001060          	.endproc _isspace
   42  00001060          	.align 2
   43  00001060          	.proc _isxdigit
   44  00001060          	.global _isxdigit
   45  00001060          	_isxdigit:
   46                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
   47  00001060  afbefffc	sw	-4(r29),r30; push fp
   48  00001064  001df020	add	r30,r0,r29; fp = sp
   49  00001068  afbffff8	sw	-8(r29),r31; push ret addr
   50  0000106c  2fbd0010	subui	r29,r29,#16; alloc local storage
   51  00001070  afa20000	sw	0(r29),r2
   52  00001074  83df0003	lb	r31,3(r30)
   53  00001078  20020000	addi	r2,r0,#0
   54  0000107c  23e1ffd0	addi	r1,r31,#-48
   55  00001080  302100ff	andi	r1,r1,#0x00ff
   56  00001084  70210009	sleui	r1,r1,#9
   57  00001088  14200028	bnez	r1,L12_LF0
   58  0000108c  54000000	nop; not filled.
   59  00001090  23e1ff9f	addi	r1,r31,#-97
   60  00001094  302100ff	andi	r1,r1,#0x00ff
   61  00001098  70210005	sleui	r1,r1,#5
   62  0000109c  14200014	bnez	r1,L12_LF0
   63  000010a0  54000000	nop; not filled.
   64  000010a4  33e100ff	andi	r1,r31,#0x00ff
   65  000010a8  64210041	snei	r1,r1,#65
   66  000010ac  14200008	bnez	r1,L11_LF0
   67  000010b0  54000000	nop; not filled.
   68  000010b4          	L12_LF0:
   69  000010b4  20020001	addi	r2,r0,#1
   70  000010b8          	L11_LF0:
   71  000010b8  00020820	add	r1,r0,r2
   72  000010bc  8fa20000	lw	r2,0(r29)
   73  000010c0  8fdffff8	lw	r31,-8(r30)
   74  000010c4  001ee820	add	r29,r0,r30
   75  000010c8  8fdefffc	lw	r30,-4(r30)
   76  000010cc  4be00000	jr	r31
   77  000010d0  54000000	nop
   78  000010d4          	.endproc _isxdigit
   79  000010d4          	.data
   80  00003000          	.align 2
   81  00003000          	_p6_LF0:
   82  00003000  00000000	.word 0
   83  00003004          	.align 2
   84  00003004          	LC0_LF0:
   85  00003004  55736167	.ascii "Usage: %s <handle_to_procs_completed_semaphore>\n\000"
   85  00003008  653a2025	
   85  0000300c  73203c68	
   85  00003010  616e646c	
   85  00003014  655f746f	
   85  00003018  5f70726f	
   85  0000301c  63735f63	
   85  00003020  6f6d706c	
   85  00003024  65746564	
   85  00003028  5f73656d	
   85  0000302c  6170686f	
   85  00003030  72653e0a	
   85  00003034  00      	
   86  00003035          	.align 2
   87  00003038          	LC1_LF0:
   88  00003038  50726f63	.ascii "Process (%d): Begin!\n\000"
   88  0000303c  65737320	
   88  00003040  28256429	
   88  00003044  3a204265	
   88  00003048  67696e21	
   88  0000304c  0a00    	
   89  0000304e          	.align 2
   90  00003050          	LC2_LF0:
   91  00003050  68656c6c	.ascii "hello_world (%d): Bad semaphore s_procs_completed (%d)!\n\000"
   91  00003054  6f5f776f	
   91  00003058  726c6420	
   91  0000305c  28256429	
   91  00003060  3a204261	
   91  00003064  64207365	
   91  00003068  6d617068	
   91  0000306c  6f726520	
   91  00003070  735f7072	
   91  00003074  6f63735f	
   91  00003078  636f6d70	
   91  0000307c  6c657465	
   91  00003080  64202825	
   91  00003084  6429210a	
   91  00003088  00      	
   92  00003089          	.align 2
   93  0000308c          	LC3_LF0:
   94  0000308c  50726f63	.ascii "Process (%d): Done!\n\000"
   94  00003090  65737320	
   94  00003094  28256429	
   94  00003098  3a20446f	
   94  0000309c  6e65210a	
   94  000030a0  00      	
   95  000030a1          	.text
   96  000010d4          	.align 2
   97  000010d4          	.proc _main
   98  000010d4          	.global _main
   99  000010d4          	_main:
  100                      ;  Function 'main'; 0 bytes of locals, 0 regs to save.
  101  000010d4  afbefffc	sw	-4(r29),r30; push fp
  102  000010d8  001df020	add	r30,r0,r29; fp = sp
  103  000010dc  afbffff8	sw	-8(r29),r31; push ret addr
  104  000010e0  2fbd0008	subui	r29,r29,#8; alloc local storage
  105  000010e4  8fc20000	lw	r2,(r30)
  106  000010e8  8fc30004	lw	r3,4(r30)
  107  000010ec  0c0010c8	jal	___main
  108  000010f0  54000000	nop; not filled.
  109  000010f4  64410002	snei	r1,r2,#2
  110  000010f8  10200028	beqz	r1,L22_LF0
  111  000010fc  54000000	nop; not filled.
  112  00001100  23bdfff8	addi	r29,r29,#-8
  113  00001104  3c040000	lhi	r4,((LC0_LF0)>>16)&0xffff
  114  00001108  24843004	addui	r4,r4,(LC0_LF0)&0xffff
  115  0000110c  afa40000	sw	(r29),r4
  116  00001110  0c0001e4	jal	_Printf
  117  00001114  54000000	nop; not filled.
  118  00001118  0c0002e4	jal	_Exit
  119  0000111c  54000000	nop; not filled.
  120  00001120  23bd0008	addi	r29,r29,#8
  121  00001124          	L22_LF0:
  122  00001124  23bdfff0	addi	r29,r29,#-16
  123  00001128  8c630004	lw	r3,4(r3)
  124  0000112c  afa30000	sw	(r29),r3
  125  00001130  20040000	addi	r4,r0,#0
  126  00001134  afa40004	sw	4(r29),r4
  127  00001138  2004000a	addi	r4,r0,#10
  128  0000113c  afa40008	sw	8(r29),r4
  129  00001140  0c000b78	jal	_dstrtol
  130  00001144  54000000	nop; not filled.
  131  00001148  00011820	add	r3,r0,r1
  132  0000114c  0c0001b4	jal	_getpid
  133  00001150  54000000	nop; not filled.
  134  00001154  3c040000	lhi	r4,((LC1_LF0)>>16)&0xffff
  135  00001158  24843038	addui	r4,r4,(LC1_LF0)&0xffff
  136  0000115c  afa40000	sw	(r29),r4
  137  00001160  afa10004	sw	4(r29),r1
  138  00001164  0c000190	jal	_Printf
  139  00001168  54000000	nop; not filled.
  140  0000116c  20020000	addi	r2,r0,#0
  141  00001170  23bd0010	addi	r29,r29,#16
  142  00001174  3c1f0001	lhi	r31,#1
  143  00001178  27ff869f	addui	r31,r31,#34463
  144  0000117c          	L25_LF0:
  145  0000117c  20420001	addi	r2,r2,#1
  146  00001180  005f082c	sle	r1,r2,r31
  147  00001184  1420fff4	bnez	r1,L25_LF0
  148  00001188  54000000	nop; not filled.
  149  0000118c  23bdfff8	addi	r29,r29,#-8
  150  00001190  afa30000	sw	(r29),r3
  151  00001194  0c0001b4	jal	_sem_signal
  152  00001198  54000000	nop; not filled.
  153  0000119c  23bd0008	addi	r29,r29,#8
  154  000011a0  64210001	snei	r1,r1,#1
  155  000011a4  10200038	beqz	r1,L28_LF0
  156  000011a8  54000000	nop; not filled.
  157  000011ac  0c000154	jal	_getpid
  158  000011b0  54000000	nop; not filled.
  159  000011b4  23bdfff0	addi	r29,r29,#-16
  160  000011b8  3c040000	lhi	r4,((LC2_LF0)>>16)&0xffff
  161  000011bc  24843050	addui	r4,r4,(LC2_LF0)&0xffff
  162  000011c0  afa40000	sw	(r29),r4
  163  000011c4  afa10004	sw	4(r29),r1
  164  000011c8  afa30008	sw	8(r29),r3
  165  000011cc  0c000128	jal	_Printf
  166  000011d0  54000000	nop; not filled.
  167  000011d4  0c000228	jal	_Exit
  168  000011d8  54000000	nop; not filled.
  169  000011dc  23bd0010	addi	r29,r29,#16
  170  000011e0          	L28_LF0:
  171  000011e0  0c000120	jal	_getpid
  172  000011e4  54000000	nop; not filled.
  173  000011e8  23bdfff8	addi	r29,r29,#-8
  174  000011ec  3c040000	lhi	r4,((LC3_LF0)>>16)&0xffff
  175  000011f0  2484308c	addui	r4,r4,(LC3_LF0)&0xffff
  176  000011f4  afa40000	sw	(r29),r4
  177  000011f8  afa10004	sw	4(r29),r1
  178  000011fc  0c0000f8	jal	_Printf
  179  00001200  54000000	nop; not filled.
  180  00001204  23bd0008	addi	r29,r29,#8
  181  00001208  0c000fa0	jal	_exit
  182  0000120c  54000000	nop
  183  00001210          	.endproc _main
  184  00001210          	.data
  185  000030a1          	.align 2
  186  000030a4          	LC4_LF0:
  187  000030a4  68656c6c	.ascii "hello_world, %d times\n\000"
  187  000030a8  6f5f776f	
  187  000030ac  726c642c	
  187  000030b0  20256420	
  187  000030b4  74696d65	
  187  000030b8  730a00  	
  188  000030bb          	.text
  189  00001210          	.align 2
  190  00001210          	.proc _hello
  191  00001210          	.global _hello
  192  00001210          	_hello:
  193                      ;  Function 'hello'; 400 bytes of locals, 3 regs to save.
  194  00001210  afbefffc	sw	-4(r29),r30; push fp
  195  00001214  001df020	add	r30,r0,r29; fp = sp
  196  00001218  afbffff8	sw	-8(r29),r31; push ret addr
  197  0000121c  2fbd01a8	subui	r29,r29,#424; alloc local storage
  198  00001220  afa20000	sw	0(r29),r2
  199  00001224  afa30004	sw	4(r29),r3
  200  00001228  afa40008	sw	8(r29),r4
  201  0000122c  8fc20000	lw	r2,(r30)
  202  00001230  23dffff8	addi	r31,r30,#-8
  203  00001234  23c30184	addi	r3,r30,#388
  204  00001238          	L40_LF0:
  205  00001238  afe2fe70	sw	-400(r31),r2
  206  0000123c  23ff0004	addi	r31,r31,#4
  207  00001240  03e3082c	sle	r1,r31,r3
  208  00001244  1420fff0	bnez	r1,L40_LF0
  209  00001248  54000000	nop; not filled.
  210  0000124c  23bdfff8	addi	r29,r29,#-8
  211  00001250  3c040000	lhi	r4,((LC4_LF0)>>16)&0xffff
  212  00001254  248430a4	addui	r4,r4,(LC4_LF0)&0xffff
  213  00001258  afa40000	sw	(r29),r4
  214  0000125c  afa20004	sw	4(r29),r2
  215  00001260  0c000094	jal	_Printf
  216  00001264  54000000	nop; not filled.
  217  00001268  23bd0008	addi	r29,r29,#8
  218  0000126c  6c410000	sgti	r1,r2,#0
  219  00001270  1020001c	beqz	r1,L42_LF0
  220  00001274  54000000	nop; not filled.
  221  00001278  2042ffff	addi	r2,r2,#-1
  222  0000127c  23bdfff8	addi	r29,r29,#-8
  223  00001280  afa20000	sw	(r29),r2
  224  00001284  0fffff88	jal	_hello
  225  00001288  54000000	nop; not filled.
  226  0000128c  23bd0008	addi	r29,r29,#8
  227  00001290          	L42_LF0:
  228  00001290  8fa20000	lw	r2,0(r29)
  229  00001294  8fa30004	lw	r3,4(r29)
  230  00001298  8fa40008	lw	r4,8(r29)
  231  0000129c  8fdffff8	lw	r31,-8(r30)
  232  000012a0  001ee820	add	r29,r0,r30
  233  000012a4  8fdefffc	lw	r30,-4(r30)
  234  000012a8  4be00000	jr	r31
  235  000012ac  54000000	nop
  236  000012b0          	.endproc _hello
  237                      ;;;
  238                      ;;; Stub functions for DLX traps.
  239                      ;;;
  240                      ;;; Ethan L. Miller, 1999.  Released to the public domain.
  241                      ;;;
  242                      ;;; The traps such as Open and Close
  243                      ;;; (note the capital letters) are for use by user programs.  The traps
  244                      ;;; with names such as open and close (lower case) are for use by the OS.
  245                      ;;;
  248  000012b0          	.align 2
  250                      ;;; The following are the traps to be used by user-level programs
  251                      ;;;
  253  000012b0          	.align 2
  254  000012b0          	.proc _Open
  255  000012b0          	.global _Open
  256  000012b0          	_Open:
  257                      ;;; Note that trap #0x213 actually causes a trap vector in the OS of
  258                      ;;; 0x1213.  The same is true for other user traps.  Thus, a user trap
  259                      ;;; with trap #0x240 will result in a trap vector of 0x1240 in the OS.
  260  000012b0  44000213	trap	#0x213
  261  000012b4  4be00000	jr	r31
  262  000012b8  54000000	nop
  263  000012bc          	.endproc _Open
  265  000012bc          	.proc _Close
  266  000012bc          	.global _Close
  267  000012bc          	_Close:
  268  000012bc  44000214	trap	#0x214
  269  000012c0  4be00000	jr	r31
  270  000012c4  54000000	nop
  271  000012c8          	.endproc _Close
  273  000012c8          	.proc _Read
  274  000012c8          	.global _Read
  275  000012c8          	_Read:
  276  000012c8  44000210	trap	#0x210
  277  000012cc  4be00000	jr	r31
  278  000012d0  54000000	nop
  279  000012d4          	.endproc _Read
  281  000012d4          	.proc _Write
  282  000012d4          	.global _Write
  283  000012d4          	_Write:
  284  000012d4  44000211	trap	#0x211
  285  000012d8  4be00000	jr	r31
  286  000012dc  54000000	nop
  287  000012e0          	.endproc _Write
  289  000012e0          	.proc _Lseek
  290  000012e0          	.global _Lseek
  291  000012e0          	_Lseek:
  292  000012e0  44000212	trap	#0x212
  293  000012e4  4be00000	jr	r31
  294  000012e8  54000000	nop
  295  000012ec          	.endproc _Lseek
  297  000012ec          	.proc _Putchar
  298  000012ec          	.global _Putchar
  299  000012ec          	_Putchar:
  300  000012ec  44000280	trap	#0x280
  301  000012f0  4be00000	jr	r31
  302  000012f4  54000000	nop
  303  000012f8          	.endproc _Putchar
  305  000012f8          	.proc _Printf
  306  000012f8          	.global _Printf
  307  000012f8          	_Printf:
  308  000012f8  44000201	trap	#0x201
  309  000012fc  4be00000	jr	r31
  310  00001300  54000000	nop
  311  00001304          	.endproc _Printf
  313  00001304          	.proc _getpid
  314  00001304          	.global _getpid
  315  00001304          	_getpid:
  316  00001304  44000431	trap	#0x431
  317  00001308  4be00000	jr	r31
  318  0000130c  54000000	nop
  319  00001310          	.endproc _getpid
  321  00001310          	.proc _process_create
  322  00001310          	.global _process_create
  323  00001310          	_process_create:
  324  00001310  44000432	trap	#0x432
  325  00001314  4be00000	jr	r31
  326  00001318  54000000	nop
  327  0000131c          	.endproc _process_create
  329  0000131c          	.proc _shmget
  330  0000131c          	.global _shmget
  331  0000131c          	_shmget:
  332  0000131c  44000440	trap	#0x440
  333  00001320  4be00000	jr	r31
  334  00001324  54000000	nop
  335  00001328          	.endproc _shmget
  337  00001328          	.proc _shmat
  338  00001328          	.global _shmat
  339  00001328          	_shmat:
  340  00001328  44000441	trap	#0x441
  341  0000132c  4be00000	jr	r31
  342  00001330  54000000	nop
  343  00001334          	.endproc _shmat
  345  00001334          	.proc _sem_create
  346  00001334          	.global _sem_create
  347  00001334          	_sem_create:
  348  00001334  44000450	trap	#0x450
  349  00001338  4be00000	jr	r31
  350  0000133c  54000000	nop
  351  00001340          	.endproc _sem_create
  353  00001340          	.proc _sem_wait
  354  00001340          	.global _sem_wait
  355  00001340          	_sem_wait:
  356  00001340  44000451	trap	#0x451
  357  00001344  4be00000	jr	r31
  358  00001348  54000000	nop
  359  0000134c          	.endproc _sem_wait
  361  0000134c          	.proc _sem_signal
  362  0000134c          	.global _sem_signal
  363  0000134c          	_sem_signal:
  364  0000134c  44000452	trap	#0x452
  365  00001350  4be00000	jr	r31
  366  00001354  54000000	nop
  367  00001358          	.endproc _sem_signal
  369  00001358          	.proc _lock_create
  370  00001358          	.global _lock_create
  371  00001358          	_lock_create:
  372  00001358  44000453	trap	#0x453
  373  0000135c  4be00000	jr	r31
  374  00001360  54000000	nop
  375  00001364          	.endproc _lock_create
  377  00001364          	.proc _lock_acquire
  378  00001364          	.global _lock_acquire
  379  00001364          	_lock_acquire:
  380  00001364  44000454	trap	#0x454
  381  00001368  4be00000	jr	r31
  382  0000136c  54000000	nop
  383  00001370          	.endproc _lock_acquire
  385  00001370          	.proc _lock_release
  386  00001370          	.global _lock_release
  387  00001370          	_lock_release:
  388  00001370  44000455	trap	#0x455
  389  00001374  4be00000	jr	r31
  390  00001378  54000000	nop
  391  0000137c          	.endproc _lock_release
  393  0000137c          	.proc _cond_create
  394  0000137c          	.global _cond_create
  395  0000137c          	_cond_create:
  396  0000137c  44000456	trap	#0x456
  397  00001380  4be00000	jr	r31
  398  00001384  54000000	nop
  399  00001388          	.endproc _cond_create
  401  00001388          	.proc _cond_wait
  402  00001388          	.global _cond_wait
  403  00001388          	_cond_wait:
  404  00001388  44000457	trap	#0x457
  405  0000138c  4be00000	jr	r31
  406  00001390  54000000	nop
  407  00001394          	.endproc _cond_wait
  409  00001394          	.proc _cond_signal
  410  00001394          	.global _cond_signal
  411  00001394          	_cond_signal:
  412  00001394  44000458	trap	#0x458
  413  00001398  4be00000	jr	r31
  414  0000139c  54000000	nop
  415  000013a0          	.endproc _cond_signal
  417  000013a0          	.proc _cond_broadcast
  418  000013a0          	.global _cond_broadcast
  419  000013a0          	_cond_broadcast:
  420  000013a0  44000459	trap	#0x459
  421  000013a4  4be00000	jr	r31
  422  000013a8  54000000	nop
  423  000013ac          	.endproc _cond_broadcast
  425  000013ac          	.proc _mbox_create
  426  000013ac          	.global _mbox_create
  427  000013ac          	_mbox_create:
  428  000013ac  44000460	trap	#0x460
  429  000013b0  4be00000	jr	r31
  430  000013b4  54000000	nop
  431  000013b8          	.endproc _mbox_create
  433  000013b8          	.proc _mbox_open
  434  000013b8          	.global _mbox_open
  435  000013b8          	_mbox_open:
  436  000013b8  44000461	trap	#0x461
  437  000013bc  4be00000	jr	r31
  438  000013c0  54000000	nop
  439  000013c4          	.endproc _mbox_open
  441  000013c4          	.proc _mbox_close
  442  000013c4          	.global _mbox_close
  443  000013c4          	_mbox_close:
  444  000013c4  44000462	trap	#0x462
  445  000013c8  4be00000	jr	r31
  446  000013cc  54000000	nop
  447  000013d0          	.endproc _mbox_close
  449  000013d0          	.proc _mbox_send
  450  000013d0          	.global _mbox_send
  451  000013d0          	_mbox_send:
  452  000013d0  44000463	trap	#0x463
  453  000013d4  4be00000	jr	r31
  454  000013d8  54000000	nop
  455  000013dc          	.endproc _mbox_send
  457  000013dc          	.proc _mbox_recv
  458  000013dc          	.global _mbox_recv
  459  000013dc          	_mbox_recv:
  460  000013dc  44000464	trap	#0x464
  461  000013e0  4be00000	jr	r31
  462  000013e4  54000000	nop
  463  000013e8          	.endproc _mbox_recv
  465  000013e8          	.proc _sleep
  466  000013e8          	.global _sleep
  467  000013e8          	_sleep:
  468  000013e8  44000465	trap	#0x465
  469  000013ec  4be00000	jr	r31
  470  000013f0  54000000	nop
  471  000013f4          	.endproc _sleep
  473  000013f4          	.proc _yield
  474  000013f4          	.global _yield
  475  000013f4          	_yield:
  476  000013f4  44000466	trap	#0x466
  477  000013f8  4be00000	jr	r31
  478  000013fc  54000000	nop
  479  00001400          	.endproc _yield
  482  00001400          	.proc _Exit
  483  00001400          	.global _Exit
  484  00001400          	_Exit:
  485  00001400  44000500	trap	#0x500
  486  00001404  4be00000	jr	r31
  487  00001408  54000000	nop
  488  0000140c          	.endproc _Exit
  491  0000140c          	.proc _malloc
  492  0000140c          	.global _malloc
  493  0000140c          	_malloc:
  494  0000140c  44000467	trap	#0x467
  495  00001410  4be00000	jr	r31
  496  00001414          	.endproc _malloc
  499  00001414          	.proc _mfree
  500  00001414          	.global _mfree
  501  00001414          	_mfree:
  502  00001414  44000468	trap	#0x468
  503  00001418  4be00000	jr	r31
  504  0000141c          	.endproc _mfree
  505                      ; Compiled by GCC
  507  0000141c          	.align 2
  508  0000141c          	.proc _isspace
  509  0000141c          	.global _isspace
  510  0000141c          	_isspace:
  511                      ;  Function 'isspace'; 0 bytes of locals, 3 regs to save.
  512  0000141c  afbefffc	sw	-4(r29),r30; push fp
  513  00001420  001df020	add	r30,r0,r29; fp = sp
  514  00001424  afbffff8	sw	-8(r29),r31; push ret addr
  515  00001428  2fbd0018	subui	r29,r29,#24; alloc local storage
  516  0000142c  afa20000	sw	0(r29),r2
  517  00001430  afa30004	sw	4(r29),r3
  518  00001434  afa40008	sw	8(r29),r4
  519  00001438  83c20003	lb	r2,3(r30)
  520  0000143c  20010000	addi	r1,r0,#0
  521  00001440  304300ff	andi	r3,r2,#0x00ff
  522  00001444  60640020	seqi	r4,r3,#32
  523  00001448  1480002c	bnez	r4,L3_LF2
  524  0000144c  54000000	nop; delay slot nop
  525  00001450  304300ff	andi	r3,r2,#0x00ff
  526  00001454  60640009	seqi	r4,r3,#9
  527  00001458  1480001c	bnez	r4,L3_LF2
  528  0000145c  54000000	nop; delay slot nop
  529  00001460  304300ff	andi	r3,r2,#0x00ff
  530  00001464  6064000a	seqi	r4,r3,#10
  531  00001468  1480000c	bnez	r4,L3_LF2
  532  0000146c  54000000	nop; delay slot nop
  533  00001470  08000008	j	L2_LF2
  534  00001474  54000000	nop; delay slot nop
  535  00001478          	L3_LF2:
  536  00001478  20010001	addi	r1,r0,#1
  537  0000147c          	L2_LF2:
  538  0000147c  08000004	j	L1_LF2
  539  00001480  54000000	nop; delay slot nop
  540  00001484          	L1_LF2:
  541  00001484  8fa20000	lw	r2,0(r29)
  542  00001488  8fa30004	lw	r3,4(r29)
  543  0000148c  8fa40008	lw	r4,8(r29)
  544  00001490  8fdffff8	lw	r31,-8(r30)
  545  00001494  001ee820	add	r29,r0,r30
  546  00001498  8fdefffc	lw	r30,-4(r30)
  547  0000149c  4be00000	jr	r31
  548  000014a0  54000000	nop
  549  000014a4          	.endproc _isspace
  550  000014a4          	.align 2
  551  000014a4          	.proc _isxdigit
  552  000014a4          	.global _isxdigit
  553  000014a4          	_isxdigit:
  554                      ;  Function 'isxdigit'; 0 bytes of locals, 3 regs to save.
  555  000014a4  afbefffc	sw	-4(r29),r30; push fp
  556  000014a8  001df020	add	r30,r0,r29; fp = sp
  557  000014ac  afbffff8	sw	-8(r29),r31; push ret addr
  558  000014b0  2fbd0018	subui	r29,r29,#24; alloc local storage
  559  000014b4  afa20000	sw	0(r29),r2
  560  000014b8  afa30004	sw	4(r29),r3
  561  000014bc  afa40008	sw	8(r29),r4
  562  000014c0  83c20003	lb	r2,3(r30)
  563  000014c4  20010000	addi	r1,r0,#0
  564  000014c8  304300ff	andi	r3,r2,#0x00ff
  565  000014cc  6c64002f	sgtui	r4,r3,#47
  566  000014d0  1080001c	beqz	r4,L7_LF2
  567  000014d4  54000000	nop; delay slot nop
  568  000014d8  304300ff	andi	r3,r2,#0x00ff
  569  000014dc  70640039	sleui	r4,r3,#57
  570  000014e0  1480005c	bnez	r4,L6_LF2
  571  000014e4  54000000	nop; delay slot nop
  572  000014e8  08000004	j	L7_LF2
  573  000014ec  54000000	nop; delay slot nop
  574  000014f0          	L7_LF2:
  575  000014f0  304300ff	andi	r3,r2,#0x00ff
  576  000014f4  6c640060	sgtui	r4,r3,#96
  577  000014f8  1080001c	beqz	r4,L8_LF2
  578  000014fc  54000000	nop; delay slot nop
  579  00001500  304300ff	andi	r3,r2,#0x00ff
  580  00001504  70640066	sleui	r4,r3,#102
  581  00001508  14800034	bnez	r4,L6_LF2
  582  0000150c  54000000	nop; delay slot nop
  583  00001510  08000004	j	L8_LF2
  584  00001514  54000000	nop; delay slot nop
  585  00001518          	L8_LF2:
  586  00001518  304300ff	andi	r3,r2,#0x00ff
  587  0000151c  6c640040	sgtui	r4,r3,#64
  588  00001520  10800020	beqz	r4,L5_LF2
  589  00001524  54000000	nop; delay slot nop
  590  00001528  304300ff	andi	r3,r2,#0x00ff
  591  0000152c  70640041	sleui	r4,r3,#65
  592  00001530  1480000c	bnez	r4,L6_LF2
  593  00001534  54000000	nop; delay slot nop
  594  00001538  08000008	j	L5_LF2
  595  0000153c  54000000	nop; delay slot nop
  596  00001540          	L6_LF2:
  597  00001540  20010001	addi	r1,r0,#1
  598  00001544          	L5_LF2:
  599  00001544  08000004	j	L4_LF2
  600  00001548  54000000	nop; delay slot nop
  601  0000154c          	L4_LF2:
  602  0000154c  8fa20000	lw	r2,0(r29)
  603  00001550  8fa30004	lw	r3,4(r29)
  604  00001554  8fa40008	lw	r4,8(r29)
  605  00001558  8fdffff8	lw	r31,-8(r30)
  606  0000155c  001ee820	add	r29,r0,r30
  607  00001560  8fdefffc	lw	r30,-4(r30)
  608  00001564  4be00000	jr	r31
  609  00001568  54000000	nop
  610  0000156c          	.endproc _isxdigit
  611  0000156c          	.align 2
  612  0000156c          	.proc _dstrcpy
  613  0000156c          	.global _dstrcpy
  614  0000156c          	_dstrcpy:
  615                      ;  Function 'dstrcpy'; 8 bytes of locals, 2 regs to save.
  616  0000156c  afbefffc	sw	-4(r29),r30; push fp
  617  00001570  001df020	add	r30,r0,r29; fp = sp
  618  00001574  afbffff8	sw	-8(r29),r31; push ret addr
  619  00001578  2fbd0018	subui	r29,r29,#24; alloc local storage
  620  0000157c  afa20000	sw	0(r29),r2
  621  00001580  afa30004	sw	4(r29),r3
  622  00001584  8fc10000	lw	r1,(r30)
  623  00001588  afc1fff4	sw	-12(r30),r1
  624  0000158c          	L10_LF2:
  625  0000158c  8fc10000	lw	r1,(r30)
  626  00001590  20220001	addi	r2,r1,#1
  627  00001594  afc20000	sw	(r30),r2
  628  00001598  8fc20004	lw	r2,4(r30)
  629  0000159c  20430001	addi	r3,r2,#1
  630  000015a0  afc30004	sw	4(r30),r3
  631  000015a4  80420000	lb	r2,(r2)
  632  000015a8  a0220000	sb	(r1),r2
  633  000015ac  a3c2fff3	sb	-13(r30),r2
  634  000015b0          	L12_LF2:
  635  000015b0  93c1fff3	lbu	r1,-13(r30)
  636  000015b4  64220000	snei	r2,r1,#0
  637  000015b8  1440000c	bnez	r2,L13_LF2
  638  000015bc  54000000	nop; delay slot nop
  639  000015c0  0800000c	j	L11_LF2
  640  000015c4  54000000	nop; delay slot nop
  641  000015c8          	L13_LF2:
  642  000015c8  0bffffc0	j	L10_LF2
  643  000015cc  54000000	nop; delay slot nop
  644  000015d0          	L11_LF2:
  645  000015d0  8fc1fff4	lw	r1,-12(r30)
  646  000015d4  08000004	j	L9_LF2
  647  000015d8  54000000	nop; delay slot nop
  648  000015dc          	L9_LF2:
  649  000015dc  8fa20000	lw	r2,0(r29)
  650  000015e0  8fa30004	lw	r3,4(r29)
  651  000015e4  8fdffff8	lw	r31,-8(r30)
  652  000015e8  001ee820	add	r29,r0,r30
  653  000015ec  8fdefffc	lw	r30,-4(r30)
  654  000015f0  4be00000	jr	r31
  655  000015f4  54000000	nop
  656  000015f8          	.endproc _dstrcpy
  657  000015f8          	.align 2
  658  000015f8          	.proc _dstrncpy
  659  000015f8          	.global _dstrncpy
  660  000015f8          	_dstrncpy:
  661                      ;  Function 'dstrncpy'; 8 bytes of locals, 2 regs to save.
  662  000015f8  afbefffc	sw	-4(r29),r30; push fp
  663  000015fc  001df020	add	r30,r0,r29; fp = sp
  664  00001600  afbffff8	sw	-8(r29),r31; push ret addr
  665  00001604  2fbd0018	subui	r29,r29,#24; alloc local storage
  666  00001608  afa20000	sw	0(r29),r2
  667  0000160c  afa30004	sw	4(r29),r3
  668  00001610  8fc10000	lw	r1,(r30)
  669  00001614  afc1fff4	sw	-12(r30),r1
  670  00001618          	L15_LF2:
  671  00001618  8fc10008	lw	r1,8(r30)
  672  0000161c  2022ffff	addi	r2,r1,#-1
  673  00001620  afc20008	sw	8(r30),r2
  674  00001624  70210000	slei	r1,r1,#0
  675  00001628  1020000c	beqz	r1,L18_LF2
  676  0000162c  54000000	nop; delay slot nop
  677  00001630  08000048	j	L16_LF2
  678  00001634  54000000	nop; delay slot nop
  679  00001638          	L18_LF2:
  680  00001638  8fc10000	lw	r1,(r30)
  681  0000163c  20220001	addi	r2,r1,#1
  682  00001640  afc20000	sw	(r30),r2
  683  00001644  8fc20004	lw	r2,4(r30)
  684  00001648  20430001	addi	r3,r2,#1
  685  0000164c  afc30004	sw	4(r30),r3
  686  00001650  80420000	lb	r2,(r2)
  687  00001654  a0220000	sb	(r1),r2
  688  00001658  a3c2fff3	sb	-13(r30),r2
  689  0000165c          	L17_LF2:
  690  0000165c  93c1fff3	lbu	r1,-13(r30)
  691  00001660  64220000	snei	r2,r1,#0
  692  00001664  1440000c	bnez	r2,L19_LF2
  693  00001668  54000000	nop; delay slot nop
  694  0000166c  0800000c	j	L16_LF2
  695  00001670  54000000	nop; delay slot nop
  696  00001674          	L19_LF2:
  697  00001674  0bffffa0	j	L15_LF2
  698  00001678  54000000	nop; delay slot nop
  699  0000167c          	L16_LF2:
  700  0000167c  8fc1fff4	lw	r1,-12(r30)
  701  00001680  08000004	j	L14_LF2
  702  00001684  54000000	nop; delay slot nop
  703  00001688          	L14_LF2:
  704  00001688  8fa20000	lw	r2,0(r29)
  705  0000168c  8fa30004	lw	r3,4(r29)
  706  00001690  8fdffff8	lw	r31,-8(r30)
  707  00001694  001ee820	add	r29,r0,r30
  708  00001698  8fdefffc	lw	r30,-4(r30)
  709  0000169c  4be00000	jr	r31
  710  000016a0  54000000	nop
  711  000016a4          	.endproc _dstrncpy
  712  000016a4          	.align 2
  713  000016a4          	.proc _dstrcat
  714  000016a4          	.global _dstrcat
  715  000016a4          	_dstrcat:
  716                      ;  Function 'dstrcat'; 8 bytes of locals, 1 regs to save.
  717  000016a4  afbefffc	sw	-4(r29),r30; push fp
  718  000016a8  001df020	add	r30,r0,r29; fp = sp
  719  000016ac  afbffff8	sw	-8(r29),r31; push ret addr
  720  000016b0  2fbd0018	subui	r29,r29,#24; alloc local storage
  721  000016b4  afa20000	sw	0(r29),r2
  722  000016b8  8fc10000	lw	r1,(r30)
  723  000016bc  afc1fff4	sw	-12(r30),r1
  724  000016c0          	L21_LF2:
  725  000016c0  8fc10000	lw	r1,(r30)
  726  000016c4  90220000	lbu	r2,(r1)
  727  000016c8  64410000	snei	r1,r2,#0
  728  000016cc  1420000c	bnez	r1,L23_LF2
  729  000016d0  54000000	nop; delay slot nop
  730  000016d4  0800001c	j	L22_LF2
  731  000016d8  54000000	nop; delay slot nop
  732  000016dc          	L23_LF2:
  733  000016dc  8fc20000	lw	r2,(r30)
  734  000016e0  20410001	addi	r1,r2,#1
  735  000016e4  00011020	add	r2,r0,r1
  736  000016e8  afc20000	sw	(r30),r2
  737  000016ec  0bffffd0	j	L21_LF2
  738  000016f0  54000000	nop; delay slot nop
  739  000016f4          	L22_LF2:
  740  000016f4  23bdfff8	addi	r29,r29,#-8
  741  000016f8  001d0820	add	r1,r0,r29
  742  000016fc  8fc20000	lw	r2,(r30)
  743  00001700  ac220000	sw	(r1),r2
  744  00001704  8fc20004	lw	r2,4(r30)
  745  00001708  ac220004	sw	4(r1),r2
  746  0000170c  0ffffe5c	jal	_dstrcpy
  747  00001710  54000000	nop; delay slot nop
  748  00001714  23bd0008	addi	r29,r29,#8
  749  00001718  8fc1fff4	lw	r1,-12(r30)
  750  0000171c  08000004	j	L20_LF2
  751  00001720  54000000	nop; delay slot nop
  752  00001724          	L20_LF2:
  753  00001724  8fa20000	lw	r2,0(r29)
  754  00001728  8fdffff8	lw	r31,-8(r30)
  755  0000172c  001ee820	add	r29,r0,r30
  756  00001730  8fdefffc	lw	r30,-4(r30)
  757  00001734  4be00000	jr	r31
  758  00001738  54000000	nop
  759  0000173c          	.endproc _dstrcat
  760  0000173c          	.align 2
  761  0000173c          	.proc _dstrncmp
  762  0000173c          	.global _dstrncmp
  763  0000173c          	_dstrncmp:
  764                      ;  Function 'dstrncmp'; 8 bytes of locals, 2 regs to save.
  765  0000173c  afbefffc	sw	-4(r29),r30; push fp
  766  00001740  001df020	add	r30,r0,r29; fp = sp
  767  00001744  afbffff8	sw	-8(r29),r31; push ret addr
  768  00001748  2fbd0018	subui	r29,r29,#24; alloc local storage
  769  0000174c  afa20000	sw	0(r29),r2
  770  00001750  afa30004	sw	4(r29),r3
  771  00001754  54000000	nop
  772  00001758  20010000	addi	r1,r0,#0
  773  0000175c  afc1fff4	sw	-12(r30),r1
  774  00001760          	L25_LF2:
  775  00001760  8fc1fff4	lw	r1,-12(r30)
  776  00001764  8fc20008	lw	r2,8(r30)
  777  00001768  0022082a	slt	r1,r1,r2
  778  0000176c  1420000c	bnez	r1,L28_LF2
  779  00001770  54000000	nop; delay slot nop
  780  00001774  08000088	j	L26_LF2
  781  00001778  54000000	nop; delay slot nop
  782  0000177c          	L28_LF2:
  783  0000177c  8fc10004	lw	r1,4(r30)
  784  00001780  90220000	lbu	r2,(r1)
  785  00001784  64410000	snei	r1,r2,#0
  786  00001788  14200018	bnez	r1,L29_LF2
  787  0000178c  54000000	nop; delay slot nop
  788  00001790  20010000	addi	r1,r0,#0
  789  00001794  080000d8	j	L24_LF2
  790  00001798  54000000	nop; delay slot nop
  791  0000179c  08000028	j	L30_LF2
  792  000017a0  54000000	nop; delay slot nop
  793  000017a4          	L29_LF2:
  794  000017a4  8fc10000	lw	r1,(r30)
  795  000017a8  8fc20004	lw	r2,4(r30)
  796  000017ac  90210000	lbu	r1,(r1)
  797  000017b0  90420000	lbu	r2,(r2)
  798  000017b4  00220829	sne	r1,r1,r2
  799  000017b8  1020000c	beqz	r1,L30_LF2
  800  000017bc  54000000	nop; delay slot nop
  801  000017c0  0800003c	j	L26_LF2
  802  000017c4  54000000	nop; delay slot nop
  803  000017c8          	L31_LF2:
  804  000017c8          	L30_LF2:
  805  000017c8  8fc20000	lw	r2,(r30)
  806  000017cc  20410001	addi	r1,r2,#1
  807  000017d0  00011020	add	r2,r0,r1
  808  000017d4  afc20000	sw	(r30),r2
  809  000017d8  8fc20004	lw	r2,4(r30)
  810  000017dc  20410001	addi	r1,r2,#1
  811  000017e0  00011020	add	r2,r0,r1
  812  000017e4  afc20004	sw	4(r30),r2
  813  000017e8          	L27_LF2:
  814  000017e8  8fc2fff4	lw	r2,-12(r30)
  815  000017ec  20410001	addi	r1,r2,#1
  816  000017f0  00011020	add	r2,r0,r1
  817  000017f4  afc2fff4	sw	-12(r30),r2
  818  000017f8  0bffff64	j	L25_LF2
  819  000017fc  54000000	nop; delay slot nop
  820  00001800          	L26_LF2:
  821  00001800  8fc1fff4	lw	r1,-12(r30)
  822  00001804  8fc20008	lw	r2,8(r30)
  823  00001808  00220828	seq	r1,r1,r2
  824  0000180c  10200018	beqz	r1,L32_LF2
  825  00001810  54000000	nop; delay slot nop
  826  00001814  20010000	addi	r1,r0,#0
  827  00001818  08000054	j	L24_LF2
  828  0000181c  54000000	nop; delay slot nop
  829  00001820  0800004c	j	L33_LF2
  830  00001824  54000000	nop; delay slot nop
  831  00001828          	L32_LF2:
  832  00001828  8fc20000	lw	r2,(r30)
  833  0000182c  90410000	lbu	r1,(r2)
  834  00001830  8fc20004	lw	r2,4(r30)
  835  00001834  90430000	lbu	r3,(r2)
  836  00001838  00230822	sub	r1,r1,r3
  837  0000183c  74220000	sgei	r2,r1,#0
  838  00001840  10400020	beqz	r2,L34_LF2
  839  00001844  54000000	nop; delay slot nop
  840  00001848  8fc10000	lw	r1,(r30)
  841  0000184c  8fc20004	lw	r2,4(r30)
  842  00001850  90210000	lbu	r1,(r1)
  843  00001854  90420000	lbu	r2,(r2)
  844  00001858  00220829	sne	r1,r1,r2
  845  0000185c  08000008	j	L35_LF2
  846  00001860  54000000	nop; delay slot nop
  847  00001864          	L34_LF2:
  848  00001864  2001ffff	addi	r1,r0,#-1
  849  00001868          	L35_LF2:
  850  00001868  08000004	j	L24_LF2
  851  0000186c  54000000	nop; delay slot nop
  852  00001870          	L33_LF2:
  853  00001870          	L24_LF2:
  854  00001870  8fa20000	lw	r2,0(r29)
  855  00001874  8fa30004	lw	r3,4(r29)
  856  00001878  8fdffff8	lw	r31,-8(r30)
  857  0000187c  001ee820	add	r29,r0,r30
  858  00001880  8fdefffc	lw	r30,-4(r30)
  859  00001884  4be00000	jr	r31
  860  00001888  54000000	nop
  861  0000188c          	.endproc _dstrncmp
  862  0000188c          	.align 2
  863  0000188c          	.proc _dstrlen
  864  0000188c          	.global _dstrlen
  865  0000188c          	_dstrlen:
  866                      ;  Function 'dstrlen'; 8 bytes of locals, 1 regs to save.
  867  0000188c  afbefffc	sw	-4(r29),r30; push fp
  868  00001890  001df020	add	r30,r0,r29; fp = sp
  869  00001894  afbffff8	sw	-8(r29),r31; push ret addr
  870  00001898  2fbd0018	subui	r29,r29,#24; alloc local storage
  871  0000189c  afa20000	sw	0(r29),r2
  872  000018a0  20010000	addi	r1,r0,#0
  873  000018a4  afc1fff4	sw	-12(r30),r1
  874  000018a8          	L37_LF2:
  875  000018a8  8fc10000	lw	r1,(r30)
  876  000018ac  20220001	addi	r2,r1,#1
  877  000018b0  afc20000	sw	(r30),r2
  878  000018b4  90210000	lbu	r1,(r1)
  879  000018b8  64220000	snei	r2,r1,#0
  880  000018bc  1440000c	bnez	r2,L39_LF2
  881  000018c0  54000000	nop; delay slot nop
  882  000018c4  0800001c	j	L38_LF2
  883  000018c8  54000000	nop; delay slot nop
  884  000018cc          	L39_LF2:
  885  000018cc  8fc2fff4	lw	r2,-12(r30)
  886  000018d0  20410001	addi	r1,r2,#1
  887  000018d4  00011020	add	r2,r0,r1
  888  000018d8  afc2fff4	sw	-12(r30),r2
  889  000018dc  0bffffc8	j	L37_LF2
  890  000018e0  54000000	nop; delay slot nop
  891  000018e4          	L38_LF2:
  892  000018e4  8fc1fff4	lw	r1,-12(r30)
  893  000018e8  08000004	j	L36_LF2
  894  000018ec  54000000	nop; delay slot nop
  895  000018f0          	L36_LF2:
  896  000018f0  8fa20000	lw	r2,0(r29)
  897  000018f4  8fdffff8	lw	r31,-8(r30)
  898  000018f8  001ee820	add	r29,r0,r30
  899  000018fc  8fdefffc	lw	r30,-4(r30)
  900  00001900  4be00000	jr	r31
  901  00001904  54000000	nop
  902  00001908          	.endproc _dstrlen
  903  00001908          	.align 2
  904  00001908          	.proc _dstrstr
  905  00001908          	.global _dstrstr
  906  00001908          	_dstrstr:
  907                      ;  Function 'dstrstr'; 8 bytes of locals, 1 regs to save.
  908  00001908  afbefffc	sw	-4(r29),r30; push fp
  909  0000190c  001df020	add	r30,r0,r29; fp = sp
  910  00001910  afbffff8	sw	-8(r29),r31; push ret addr
  911  00001914  2fbd0018	subui	r29,r29,#24; alloc local storage
  912  00001918  afa20000	sw	0(r29),r2
  913  0000191c  23bdfff8	addi	r29,r29,#-8
  914  00001920  001d0820	add	r1,r0,r29
  915  00001924  8fc20004	lw	r2,4(r30)
  916  00001928  ac220000	sw	(r1),r2
  917  0000192c  0fffff5c	jal	_dstrlen
  918  00001930  54000000	nop; delay slot nop
  919  00001934  23bd0008	addi	r29,r29,#8
  920  00001938  afc1fff4	sw	-12(r30),r1
  921  0000193c          	L41_LF2:
  922  0000193c  8fc10000	lw	r1,(r30)
  923  00001940  90220000	lbu	r2,(r1)
  924  00001944  64410000	snei	r1,r2,#0
  925  00001948  1420000c	bnez	r1,L43_LF2
  926  0000194c  54000000	nop; delay slot nop
  927  00001950  08000060	j	L42_LF2
  928  00001954  54000000	nop; delay slot nop
  929  00001958          	L43_LF2:
  930  00001958  23bdfff0	addi	r29,r29,#-16
  931  0000195c  001d0820	add	r1,r0,r29
  932  00001960  8fc20000	lw	r2,(r30)
  933  00001964  ac220000	sw	(r1),r2
  934  00001968  8fc20004	lw	r2,4(r30)
  935  0000196c  ac220004	sw	4(r1),r2
  936  00001970  8fc2fff4	lw	r2,-12(r30)
  937  00001974  ac220008	sw	8(r1),r2
  938  00001978  0ffffdc0	jal	_dstrncmp
  939  0000197c  54000000	nop; delay slot nop
  940  00001980  23bd0010	addi	r29,r29,#16
  941  00001984  64220000	snei	r2,r1,#0
  942  00001988  14400010	bnez	r2,L44_LF2
  943  0000198c  54000000	nop; delay slot nop
  944  00001990  8fc10000	lw	r1,(r30)
  945  00001994  08000028	j	L40_LF2
  946  00001998  54000000	nop; delay slot nop
  947  0000199c          	L44_LF2:
  948  0000199c  8fc20000	lw	r2,(r30)
  949  000019a0  20410001	addi	r1,r2,#1
  950  000019a4  00011020	add	r2,r0,r1
  951  000019a8  afc20000	sw	(r30),r2
  952  000019ac  0bffff8c	j	L41_LF2
  953  000019b0  54000000	nop; delay slot nop
  954  000019b4          	L42_LF2:
  955  000019b4  20010000	addi	r1,r0,#0
  956  000019b8  08000004	j	L40_LF2
  957  000019bc  54000000	nop; delay slot nop
  958  000019c0          	L40_LF2:
  959  000019c0  8fa20000	lw	r2,0(r29)
  960  000019c4  8fdffff8	lw	r31,-8(r30)
  961  000019c8  001ee820	add	r29,r0,r30
  962  000019cc  8fdefffc	lw	r30,-4(r30)
  963  000019d0  4be00000	jr	r31
  964  000019d4  54000000	nop
  965  000019d8          	.endproc _dstrstr
  966  000019d8          	.align 2
  967  000019d8          	.proc _dmindex
  968  000019d8          	.global _dmindex
  969  000019d8          	_dmindex:
  970                      ;  Function 'dmindex'; 8 bytes of locals, 1 regs to save.
  971  000019d8  afbefffc	sw	-4(r29),r30; push fp
  972  000019dc  001df020	add	r30,r0,r29; fp = sp
  973  000019e0  afbffff8	sw	-8(r29),r31; push ret addr
  974  000019e4  2fbd0018	subui	r29,r29,#24; alloc local storage
  975  000019e8  afa20000	sw	0(r29),r2
  976  000019ec  54000000	nop
  977  000019f0          	L46_LF2:
  978  000019f0  8fc10000	lw	r1,(r30)
  979  000019f4  90220000	lbu	r2,(r1)
  980  000019f8  64410000	snei	r1,r2,#0
  981  000019fc  1420000c	bnez	r1,L48_LF2
  982  00001a00  54000000	nop; delay slot nop
  983  00001a04  08000070	j	L47_LF2
  984  00001a08  54000000	nop; delay slot nop
  985  00001a0c          	L48_LF2:
  986  00001a0c  8fc10004	lw	r1,4(r30)
  987  00001a10  afc1fff4	sw	-12(r30),r1
  988  00001a14          	L49_LF2:
  989  00001a14  8fc1fff4	lw	r1,-12(r30)
  990  00001a18  90220000	lbu	r2,(r1)
  991  00001a1c  64410000	snei	r1,r2,#0
  992  00001a20  1420000c	bnez	r1,L52_LF2
  993  00001a24  54000000	nop; delay slot nop
  994  00001a28  08000044	j	L50_LF2
  995  00001a2c  54000000	nop; delay slot nop
  996  00001a30          	L52_LF2:
  997  00001a30  8fc10000	lw	r1,(r30)
  998  00001a34  8fc2fff4	lw	r2,-12(r30)
  999  00001a38  90210000	lbu	r1,(r1)
 1000  00001a3c  90420000	lbu	r2,(r2)
 1001  00001a40  00220828	seq	r1,r1,r2
 1002  00001a44  10200010	beqz	r1,L51_LF2
 1003  00001a48  54000000	nop; delay slot nop
 1004  00001a4c  8fc10000	lw	r1,(r30)
 1005  00001a50  08000030	j	L45_LF2
 1006  00001a54  54000000	nop; delay slot nop
 1007  00001a58          	L53_LF2:
 1008  00001a58          	L51_LF2:
 1009  00001a58  8fc2fff4	lw	r2,-12(r30)
 1010  00001a5c  20410001	addi	r1,r2,#1
 1011  00001a60  00011020	add	r2,r0,r1
 1012  00001a64  afc2fff4	sw	-12(r30),r2
 1013  00001a68  0bffffa8	j	L49_LF2
 1014  00001a6c  54000000	nop; delay slot nop
 1015  00001a70          	L50_LF2:
 1016  00001a70  0bffff7c	j	L46_LF2
 1017  00001a74  54000000	nop; delay slot nop
 1018  00001a78          	L47_LF2:
 1019  00001a78  20010000	addi	r1,r0,#0
 1020  00001a7c  08000004	j	L45_LF2
 1021  00001a80  54000000	nop; delay slot nop
 1022  00001a84          	L45_LF2:
 1023  00001a84  8fa20000	lw	r2,0(r29)
 1024  00001a88  8fdffff8	lw	r31,-8(r30)
 1025  00001a8c  001ee820	add	r29,r0,r30
 1026  00001a90  8fdefffc	lw	r30,-4(r30)
 1027  00001a94  4be00000	jr	r31
 1028  00001a98  54000000	nop
 1029  00001a9c          	.endproc _dmindex
 1030  00001a9c          	.align 2
 1031  00001a9c          	.proc _dindex
 1032  00001a9c          	.global _dindex
 1033  00001a9c          	_dindex:
 1034                      ;  Function 'dindex'; 0 bytes of locals, 1 regs to save.
 1035  00001a9c  afbefffc	sw	-4(r29),r30; push fp
 1036  00001aa0  001df020	add	r30,r0,r29; fp = sp
 1037  00001aa4  afbffff8	sw	-8(r29),r31; push ret addr
 1038  00001aa8  2fbd0010	subui	r29,r29,#16; alloc local storage
 1039  00001aac  afa20000	sw	0(r29),r2
 1040  00001ab0  54000000	nop
 1041  00001ab4          	L55_LF2:
 1042  00001ab4  8fc10000	lw	r1,(r30)
 1043  00001ab8  90220000	lbu	r2,(r1)
 1044  00001abc  64410000	snei	r1,r2,#0
 1045  00001ac0  1420000c	bnez	r1,L57_LF2
 1046  00001ac4  54000000	nop; delay slot nop
 1047  00001ac8  08000040	j	L56_LF2
 1048  00001acc  54000000	nop; delay slot nop
 1049  00001ad0          	L57_LF2:
 1050  00001ad0  8fc10000	lw	r1,(r30)
 1051  00001ad4  90220000	lbu	r2,(r1)
 1052  00001ad8  8fc10004	lw	r1,4(r30)
 1053  00001adc  00411028	seq	r2,r2,r1
 1054  00001ae0  10400010	beqz	r2,L58_LF2
 1055  00001ae4  54000000	nop; delay slot nop
 1056  00001ae8  8fc10000	lw	r1,(r30)
 1057  00001aec  08000028	j	L54_LF2
 1058  00001af0  54000000	nop; delay slot nop
 1059  00001af4          	L58_LF2:
 1060  00001af4  8fc20000	lw	r2,(r30)
 1061  00001af8  20410001	addi	r1,r2,#1
 1062  00001afc  00011020	add	r2,r0,r1
 1063  00001b00  afc20000	sw	(r30),r2
 1064  00001b04  0bffffac	j	L55_LF2
 1065  00001b08  54000000	nop; delay slot nop
 1066  00001b0c          	L56_LF2:
 1067  00001b0c  20010000	addi	r1,r0,#0
 1068  00001b10  08000004	j	L54_LF2
 1069  00001b14  54000000	nop; delay slot nop
 1070  00001b18          	L54_LF2:
 1071  00001b18  8fa20000	lw	r2,0(r29)
 1072  00001b1c  8fdffff8	lw	r31,-8(r30)
 1073  00001b20  001ee820	add	r29,r0,r30
 1074  00001b24  8fdefffc	lw	r30,-4(r30)
 1075  00001b28  4be00000	jr	r31
 1076  00001b2c  54000000	nop
 1077  00001b30          	.endproc _dindex
 1078  00001b30          	.align 2
 1079  00001b30          	.proc _ditoa
 1080  00001b30          	.global _ditoa
 1081  00001b30          	_ditoa:
 1082                      ;  Function 'ditoa'; 8 bytes of locals, 2 regs to save.
 1083  00001b30  afbefffc	sw	-4(r29),r30; push fp
 1084  00001b34  001df020	add	r30,r0,r29; fp = sp
 1085  00001b38  afbffff8	sw	-8(r29),r31; push ret addr
 1086  00001b3c  2fbd0018	subui	r29,r29,#24; alloc local storage
 1087  00001b40  afa20000	sw	0(r29),r2
 1088  00001b44  afa30004	sw	4(r29),r3
 1089  00001b48  8fc10000	lw	r1,(r30)
 1090  00001b4c  68220000	slti	r2,r1,#0
 1091  00001b50  1040002c	beqz	r2,L60_LF2
 1092  00001b54  54000000	nop; delay slot nop
 1093  00001b58  8fc10004	lw	r1,4(r30)
 1094  00001b5c  20220001	addi	r2,r1,#1
 1095  00001b60  afc20004	sw	4(r30),r2
 1096  00001b64  2002002d	addi	r2,r0,(#0x2d)&0xff
 1097  00001b68  a0220000	sb	(r1),r2
 1098  00001b6c  8fc10000	lw	r1,(r30)
 1099  00001b70  00011022	sub	r2,r0,r1
 1100  00001b74  afc20000	sw	(r30),r2
 1101  00001b78  08000118	j	L61_LF2
 1102  00001b7c  54000000	nop; delay slot nop
 1103  00001b80          	L60_LF2:
 1104  00001b80  8fc10000	lw	r1,(r30)
 1105  00001b84  64220000	snei	r2,r1,#0
 1106  00001b88  14400020	bnez	r2,L62_LF2
 1107  00001b8c  54000000	nop; delay slot nop
 1108  00001b90  8fc10004	lw	r1,4(r30)
 1109  00001b94  20220001	addi	r2,r1,#1
 1110  00001b98  afc20004	sw	4(r30),r2
 1111  00001b9c  20020030	addi	r2,r0,(#0x30)&0xff
 1112  00001ba0  a0220000	sb	(r1),r2
 1113  00001ba4  080000ec	j	L61_LF2
 1114  00001ba8  54000000	nop; delay slot nop
 1115  00001bac          	L62_LF2:
 1116  00001bac  20010001	addi	r1,r0,#1
 1117  00001bb0  afc1fff4	sw	-12(r30),r1
 1118  00001bb4          	L64_LF2:
 1119  00001bb4  8fc1fff4	lw	r1,-12(r30)
 1120  00001bb8  8fc20000	lw	r2,(r30)
 1121  00001bbc  0022082c	sle	r1,r1,r2
 1122  00001bc0  1420000c	bnez	r1,L66_LF2
 1123  00001bc4  54000000	nop; delay slot nop
 1124  00001bc8  08000024	j	L65_LF2
 1125  00001bcc  54000000	nop; delay slot nop
 1126  00001bd0          	L67_LF2:
 1127  00001bd0          	L66_LF2:
 1128  00001bd0  8fc1fff4	lw	r1,-12(r30)
 1129  00001bd4  00011820	add	r3,r0,r1
 1130  00001bd8  50620002	slli	r2,r3,#0x2
 1131  00001bdc  00411020	add	r2,r2,r1
 1132  00001be0  50410001	slli	r1,r2,#0x1
 1133  00001be4  afc1fff4	sw	-12(r30),r1
 1134  00001be8  0bffffc8	j	L64_LF2
 1135  00001bec  54000000	nop; delay slot nop
 1136  00001bf0          	L65_LF2:
 1137  00001bf0  54000000	nop
 1138  00001bf4          	L68_LF2:
 1139  00001bf4  8fc1fff4	lw	r1,-12(r30)
 1140  00001bf8  2002000a	addi	r2,r0,#10
 1141  00001bfc  00200035	movi2fp	f0,r1
 1142  00001c00  00400835	movi2fp	f1,r2
 1143  00001c04  0401000f	div	f0,f0,f1
 1144  00001c08  00000834	movfp2i	r1,f0
 1145  00001c0c  afc1fff4	sw	-12(r30),r1
 1146  00001c10  8fc10004	lw	r1,4(r30)
 1147  00001c14  20220001	addi	r2,r1,#1
 1148  00001c18  afc20004	sw	4(r30),r2
 1149  00001c1c  8fc20000	lw	r2,(r30)
 1150  00001c20  8fc3fff4	lw	r3,-12(r30)
 1151  00001c24  00400035	movi2fp	f0,r2
 1152  00001c28  00600835	movi2fp	f1,r3
 1153  00001c2c  0401000f	div	f0,f0,f1
 1154  00001c30  00001034	movfp2i	r2,f0
 1155  00001c34  00021820	add	r3,r0,r2
 1156  00001c38  20620030	addi	r2,r3,#48
 1157  00001c3c  a0220000	sb	(r1),r2
 1158  00001c40  8fc10000	lw	r1,(r30)
 1159  00001c44  8fc3fff4	lw	r3,-12(r30)
 1160  00001c48  00200035	movi2fp	f0,r1
 1161  00001c4c  00600835	movi2fp	f1,r3
 1162  00001c50  0401000f	div	f0,f0,f1
 1163  00001c54  00001034	movfp2i	r2,f0
 1164  00001c58  8fc3fff4	lw	r3,-12(r30)
 1165  00001c5c  00400035	movi2fp	f0,r2
 1166  00001c60  00600835	movi2fp	f1,r3
 1167  00001c64  0401000e	mult	f0,f0,f1
 1168  00001c68  00001034	movfp2i	r2,f0
 1169  00001c6c  00220822	sub	r1,r1,r2
 1170  00001c70  afc10000	sw	(r30),r1
 1171  00001c74          	L70_LF2:
 1172  00001c74  8fc1fff4	lw	r1,-12(r30)
 1173  00001c78  6c220001	sgti	r2,r1,#1
 1174  00001c7c  1440000c	bnez	r2,L71_LF2
 1175  00001c80  54000000	nop; delay slot nop
 1176  00001c84  0800000c	j	L61_LF2
 1177  00001c88  54000000	nop; delay slot nop
 1178  00001c8c          	L71_LF2:
 1179  00001c8c  0bffff64	j	L68_LF2
 1180  00001c90  54000000	nop; delay slot nop
 1181  00001c94          	L69_LF2:
 1182  00001c94          	L63_LF2:
 1183  00001c94          	L61_LF2:
 1184  00001c94  8fc10004	lw	r1,4(r30)
 1185  00001c98  20020000	addi	r2,r0,(#0x0)&0xff
 1186  00001c9c  a0220000	sb	(r1),r2
 1187  00001ca0          	L59_LF2:
 1188  00001ca0  8fa20000	lw	r2,0(r29)
 1189  00001ca4  8fa30004	lw	r3,4(r29)
 1190  00001ca8  8fdffff8	lw	r31,-8(r30)
 1191  00001cac  001ee820	add	r29,r0,r30
 1192  00001cb0  8fdefffc	lw	r30,-4(r30)
 1193  00001cb4  4be00000	jr	r31
 1194  00001cb8  54000000	nop
 1195  00001cbc          	.endproc _ditoa
 1196  00001cbc          	.align 2
 1197  00001cbc          	.proc _dstrtol
 1198  00001cbc          	.global _dstrtol
 1199  00001cbc          	_dstrtol:
 1200                      ;  Function 'dstrtol'; 16 bytes of locals, 1 regs to save.
 1201  00001cbc  afbefffc	sw	-4(r29),r30; push fp
 1202  00001cc0  001df020	add	r30,r0,r29; fp = sp
 1203  00001cc4  afbffff8	sw	-8(r29),r31; push ret addr
 1204  00001cc8  2fbd0020	subui	r29,r29,#32; alloc local storage
 1205  00001ccc  afa20000	sw	0(r29),r2
 1206  00001cd0  20010000	addi	r1,r0,#0
 1207  00001cd4  afc1fff4	sw	-12(r30),r1
 1208  00001cd8          	L73_LF2:
 1209  00001cd8  8fc10000	lw	r1,(r30)
 1210  00001cdc  90220000	lbu	r2,(r1)
 1211  00001ce0  60410020	seqi	r1,r2,#32
 1212  00001ce4  14200034	bnez	r1,L75_LF2
 1213  00001ce8  54000000	nop; delay slot nop
 1214  00001cec  8fc10000	lw	r1,(r30)
 1215  00001cf0  90220000	lbu	r2,(r1)
 1216  00001cf4  60410009	seqi	r1,r2,#9
 1217  00001cf8  14200020	bnez	r1,L75_LF2
 1218  00001cfc  54000000	nop; delay slot nop
 1219  00001d00  8fc10000	lw	r1,(r30)
 1220  00001d04  90220000	lbu	r2,(r1)
 1221  00001d08  6041000a	seqi	r1,r2,#10
 1222  00001d0c  1420000c	bnez	r1,L75_LF2
 1223  00001d10  54000000	nop; delay slot nop
 1224  00001d14  0800001c	j	L74_LF2
 1225  00001d18  54000000	nop; delay slot nop
 1226  00001d1c          	L75_LF2:
 1227  00001d1c  8fc20000	lw	r2,(r30)
 1228  00001d20  20410001	addi	r1,r2,#1
 1229  00001d24  00011020	add	r2,r0,r1
 1230  00001d28  afc20000	sw	(r30),r2
 1231  00001d2c  0bffffa8	j	L73_LF2
 1232  00001d30  54000000	nop; delay slot nop
 1233  00001d34          	L74_LF2:
 1234  00001d34  8fc10004	lw	r1,4(r30)
 1235  00001d38  64220000	snei	r2,r1,#0
 1236  00001d3c  10400010	beqz	r2,L76_LF2
 1237  00001d40  54000000	nop; delay slot nop
 1238  00001d44  8fc10004	lw	r1,4(r30)
 1239  00001d48  8fc20000	lw	r2,(r30)
 1240  00001d4c  ac220000	sw	(r1),r2
 1241  00001d50          	L76_LF2:
 1242  00001d50  8fc10000	lw	r1,(r30)
 1243  00001d54  90220000	lbu	r2,(r1)
 1244  00001d58  64410000	snei	r1,r2,#0
 1245  00001d5c  14200010	bnez	r1,L77_LF2
 1246  00001d60  54000000	nop; delay slot nop
 1247  00001d64  8fc1fff4	lw	r1,-12(r30)
 1248  00001d68  08000294	j	L72_LF2
 1249  00001d6c  54000000	nop; delay slot nop
 1250  00001d70          	L77_LF2:
 1251  00001d70  8fc10000	lw	r1,(r30)
 1252  00001d74  90220000	lbu	r2,(r1)
 1253  00001d78  6041002d	seqi	r1,r2,#45
 1254  00001d7c  10200024	beqz	r1,L78_LF2
 1255  00001d80  54000000	nop; delay slot nop
 1256  00001d84  2001ffff	addi	r1,r0,#-1
 1257  00001d88  afc1ffec	sw	-20(r30),r1
 1258  00001d8c  8fc20000	lw	r2,(r30)
 1259  00001d90  20410001	addi	r1,r2,#1
 1260  00001d94  00011020	add	r2,r0,r1
 1261  00001d98  afc20000	sw	(r30),r2
 1262  00001d9c  0800000c	j	L79_LF2
 1263  00001da0  54000000	nop; delay slot nop
 1264  00001da4          	L78_LF2:
 1265  00001da4  20010001	addi	r1,r0,#1
 1266  00001da8  afc1ffec	sw	-20(r30),r1
 1267  00001dac          	L79_LF2:
 1268  00001dac  8fc10008	lw	r1,8(r30)
 1269  00001db0  64220000	snei	r2,r1,#0
 1270  00001db4  14400090	bnez	r2,L80_LF2
 1271  00001db8  54000000	nop; delay slot nop
 1272  00001dbc  8fc10000	lw	r1,(r30)
 1273  00001dc0  90220000	lbu	r2,(r1)
 1274  00001dc4  60410030	seqi	r1,r2,#48
 1275  00001dc8  10200074	beqz	r1,L81_LF2
 1276  00001dcc  54000000	nop; delay slot nop
 1277  00001dd0  8fc20000	lw	r2,(r30)
 1278  00001dd4  20410001	addi	r1,r2,#1
 1279  00001dd8  00011020	add	r2,r0,r1
 1280  00001ddc  afc20000	sw	(r30),r2
 1281  00001de0  8fc10000	lw	r1,(r30)
 1282  00001de4  90220000	lbu	r2,(r1)
 1283  00001de8  60410078	seqi	r1,r2,#120
 1284  00001dec  14200020	bnez	r1,L83_LF2
 1285  00001df0  54000000	nop; delay slot nop
 1286  00001df4  8fc10000	lw	r1,(r30)
 1287  00001df8  90220000	lbu	r2,(r1)
 1288  00001dfc  60410058	seqi	r1,r2,#88
 1289  00001e00  1420000c	bnez	r1,L83_LF2
 1290  00001e04  54000000	nop; delay slot nop
 1291  00001e08  08000024	j	L82_LF2
 1292  00001e0c  54000000	nop; delay slot nop
 1293  00001e10          	L83_LF2:
 1294  00001e10  20010010	addi	r1,r0,#16
 1295  00001e14  afc10008	sw	8(r30),r1
 1296  00001e18  8fc20000	lw	r2,(r30)
 1297  00001e1c  20410001	addi	r1,r2,#1
 1298  00001e20  00011020	add	r2,r0,r1
 1299  00001e24  afc20000	sw	(r30),r2
 1300  00001e28  0800000c	j	L84_LF2
 1301  00001e2c  54000000	nop; delay slot nop
 1302  00001e30          	L82_LF2:
 1303  00001e30  20010008	addi	r1,r0,#8
 1304  00001e34  afc10008	sw	8(r30),r1
 1305  00001e38          	L84_LF2:
 1306  00001e38  0800000c	j	L80_LF2
 1307  00001e3c  54000000	nop; delay slot nop
 1308  00001e40          	L81_LF2:
 1309  00001e40  2001000a	addi	r1,r0,#10
 1310  00001e44  afc10008	sw	8(r30),r1
 1311  00001e48          	L85_LF2:
 1312  00001e48          	L80_LF2:
 1313  00001e48  8fc10008	lw	r1,8(r30)
 1314  00001e4c  70220000	slei	r2,r1,#0
 1315  00001e50  1440001c	bnez	r2,L87_LF2
 1316  00001e54  54000000	nop; delay slot nop
 1317  00001e58  8fc10008	lw	r1,8(r30)
 1318  00001e5c  6c220010	sgti	r2,r1,#16
 1319  00001e60  1440000c	bnez	r2,L87_LF2
 1320  00001e64  54000000	nop; delay slot nop
 1321  00001e68  08000010	j	L86_LF2
 1322  00001e6c  54000000	nop; delay slot nop
 1323  00001e70          	L87_LF2:
 1324  00001e70  8fc1fff4	lw	r1,-12(r30)
 1325  00001e74  08000188	j	L72_LF2
 1326  00001e78  54000000	nop; delay slot nop
 1327  00001e7c          	L86_LF2:
 1328  00001e7c  54000000	nop
 1329  00001e80          	L88_LF2:
 1330  00001e80  8fc10000	lw	r1,(r30)
 1331  00001e84  90220000	lbu	r2,(r1)
 1332  00001e88  6c41002f	sgtui	r1,r2,#47
 1333  00001e8c  10200030	beqz	r1,L91_LF2
 1334  00001e90  54000000	nop; delay slot nop
 1335  00001e94  8fc10000	lw	r1,(r30)
 1336  00001e98  90220000	lbu	r2,(r1)
 1337  00001e9c  70410039	sleui	r1,r2,#57
 1338  00001ea0  1020001c	beqz	r1,L91_LF2
 1339  00001ea4  54000000	nop; delay slot nop
 1340  00001ea8  8fc10000	lw	r1,(r30)
 1341  00001eac  90220000	lbu	r2,(r1)
 1342  00001eb0  2041ffd0	addi	r1,r2,#-48
 1343  00001eb4  afc1fff0	sw	-16(r30),r1
 1344  00001eb8  0800008c	j	L92_LF2
 1345  00001ebc  54000000	nop; delay slot nop
 1346  00001ec0          	L91_LF2:
 1347  00001ec0  8fc10000	lw	r1,(r30)
 1348  00001ec4  90220000	lbu	r2,(r1)
 1349  00001ec8  6c410060	sgtui	r1,r2,#96
 1350  00001ecc  10200030	beqz	r1,L93_LF2
 1351  00001ed0  54000000	nop; delay slot nop
 1352  00001ed4  8fc10000	lw	r1,(r30)
 1353  00001ed8  90220000	lbu	r2,(r1)
 1354  00001edc  7041007a	sleui	r1,r2,#122
 1355  00001ee0  1020001c	beqz	r1,L93_LF2
 1356  00001ee4  54000000	nop; delay slot nop
 1357  00001ee8  8fc10000	lw	r1,(r30)
 1358  00001eec  90220000	lbu	r2,(r1)
 1359  00001ef0  2041ffa9	addi	r1,r2,#-87
 1360  00001ef4  afc1fff0	sw	-16(r30),r1
 1361  00001ef8  0800004c	j	L92_LF2
 1362  00001efc  54000000	nop; delay slot nop
 1363  00001f00          	L93_LF2:
 1364  00001f00  8fc10000	lw	r1,(r30)
 1365  00001f04  90220000	lbu	r2,(r1)
 1366  00001f08  6c410040	sgtui	r1,r2,#64
 1367  00001f0c  10200030	beqz	r1,L95_LF2
 1368  00001f10  54000000	nop; delay slot nop
 1369  00001f14  8fc10000	lw	r1,(r30)
 1370  00001f18  90220000	lbu	r2,(r1)
 1371  00001f1c  7041005a	sleui	r1,r2,#90
 1372  00001f20  1020001c	beqz	r1,L95_LF2
 1373  00001f24  54000000	nop; delay slot nop
 1374  00001f28  8fc10000	lw	r1,(r30)
 1375  00001f2c  90220000	lbu	r2,(r1)
 1376  00001f30  2041ffc9	addi	r1,r2,#-55
 1377  00001f34  afc1fff0	sw	-16(r30),r1
 1378  00001f38  0800000c	j	L92_LF2
 1379  00001f3c  54000000	nop; delay slot nop
 1380  00001f40          	L95_LF2:
 1381  00001f40  200103e8	addi	r1,r0,#1000
 1382  00001f44  afc1fff0	sw	-16(r30),r1
 1383  00001f48          	L96_LF2:
 1384  00001f48          	L94_LF2:
 1385  00001f48          	L92_LF2:
 1386  00001f48  8fc1fff0	lw	r1,-16(r30)
 1387  00001f4c  8fc20008	lw	r2,8(r30)
 1388  00001f50  0022082a	slt	r1,r1,r2
 1389  00001f54  10200040	beqz	r1,L90_LF2
 1390  00001f58  54000000	nop; delay slot nop
 1391  00001f5c  8fc1fff4	lw	r1,-12(r30)
 1392  00001f60  8fc20008	lw	r2,8(r30)
 1393  00001f64  00200035	movi2fp	f0,r1
 1394  00001f68  00400835	movi2fp	f1,r2
 1395  00001f6c  0401000e	mult	f0,f0,f1
 1396  00001f70  00000834	movfp2i	r1,f0
 1397  00001f74  afc1fff4	sw	-12(r30),r1
 1398  00001f78  8fc1fff4	lw	r1,-12(r30)
 1399  00001f7c  8fc2fff0	lw	r2,-16(r30)
 1400  00001f80  00220820	add	r1,r1,r2
 1401  00001f84  afc1fff4	sw	-12(r30),r1
 1402  00001f88  8fc20000	lw	r2,(r30)
 1403  00001f8c  20410001	addi	r1,r2,#1
 1404  00001f90  00011020	add	r2,r0,r1
 1405  00001f94  afc20000	sw	(r30),r2
 1406  00001f98          	L97_LF2:
 1407  00001f98          	L90_LF2:
 1408  00001f98  8fc1fff0	lw	r1,-16(r30)
 1409  00001f9c  8fc20008	lw	r2,8(r30)
 1410  00001fa0  0022082a	slt	r1,r1,r2
 1411  00001fa4  1420000c	bnez	r1,L98_LF2
 1412  00001fa8  54000000	nop; delay slot nop
 1413  00001fac  0800000c	j	L89_LF2
 1414  00001fb0  54000000	nop; delay slot nop
 1415  00001fb4          	L98_LF2:
 1416  00001fb4  0bfffec8	j	L88_LF2
 1417  00001fb8  54000000	nop; delay slot nop
 1418  00001fbc          	L89_LF2:
 1419  00001fbc  8fc10004	lw	r1,4(r30)
 1420  00001fc0  64220000	snei	r2,r1,#0
 1421  00001fc4  10400010	beqz	r2,L99_LF2
 1422  00001fc8  54000000	nop; delay slot nop
 1423  00001fcc  8fc10004	lw	r1,4(r30)
 1424  00001fd0  8fc20000	lw	r2,(r30)
 1425  00001fd4  ac220000	sw	(r1),r2
 1426  00001fd8          	L99_LF2:
 1427  00001fd8  8fc1fff4	lw	r1,-12(r30)
 1428  00001fdc  8fc2ffec	lw	r2,-20(r30)
 1429  00001fe0  00200035	movi2fp	f0,r1
 1430  00001fe4  00400835	movi2fp	f1,r2
 1431  00001fe8  0401000e	mult	f0,f0,f1
 1432  00001fec  00000834	movfp2i	r1,f0
 1433  00001ff0  afc1fff4	sw	-12(r30),r1
 1434  00001ff4  8fc1fff4	lw	r1,-12(r30)
 1435  00001ff8  08000004	j	L72_LF2
 1436  00001ffc  54000000	nop; delay slot nop
 1437  00002000          	L72_LF2:
 1438  00002000  8fa20000	lw	r2,0(r29)
 1439  00002004  8fdffff8	lw	r31,-8(r30)
 1440  00002008  001ee820	add	r29,r0,r30
 1441  0000200c  8fdefffc	lw	r30,-4(r30)
 1442  00002010  4be00000	jr	r31
 1443  00002014  54000000	nop
 1444  00002018          	.endproc _dstrtol
 1445  00002018          	.align 2
 1446  00002018          	.proc _bcopy
 1447  00002018          	.global _bcopy
 1448  00002018          	_bcopy:
 1449                      ;  Function 'bcopy'; 0 bytes of locals, 2 regs to save.
 1450  00002018  afbefffc	sw	-4(r29),r30; push fp
 1451  0000201c  001df020	add	r30,r0,r29; fp = sp
 1452  00002020  afbffff8	sw	-8(r29),r31; push ret addr
 1453  00002024  2fbd0010	subui	r29,r29,#16; alloc local storage
 1454  00002028  afa20000	sw	0(r29),r2
 1455  0000202c  afa30004	sw	4(r29),r3
 1456  00002030  54000000	nop
 1457  00002034          	L101_LF2:
 1458  00002034  8fc10008	lw	r1,8(r30)
 1459  00002038  2022ffff	addi	r2,r1,#-1
 1460  0000203c  afc20008	sw	8(r30),r2
 1461  00002040  6c210000	sgti	r1,r1,#0
 1462  00002044  1420000c	bnez	r1,L103_LF2
 1463  00002048  54000000	nop; delay slot nop
 1464  0000204c  0800002c	j	L102_LF2
 1465  00002050  54000000	nop; delay slot nop
 1466  00002054          	L103_LF2:
 1467  00002054  8fc10004	lw	r1,4(r30)
 1468  00002058  20220001	addi	r2,r1,#1
 1469  0000205c  afc20004	sw	4(r30),r2
 1470  00002060  8fc20000	lw	r2,(r30)
 1471  00002064  20430001	addi	r3,r2,#1
 1472  00002068  afc30000	sw	(r30),r3
 1473  0000206c  80420000	lb	r2,(r2)
 1474  00002070  a0220000	sb	(r1),r2
 1475  00002074  0bffffbc	j	L101_LF2
 1476  00002078  54000000	nop; delay slot nop
 1477  0000207c          	L102_LF2:
 1478  0000207c          	L100_LF2:
 1479  0000207c  8fa20000	lw	r2,0(r29)
 1480  00002080  8fa30004	lw	r3,4(r29)
 1481  00002084  8fdffff8	lw	r31,-8(r30)
 1482  00002088  001ee820	add	r29,r0,r30
 1483  0000208c  8fdefffc	lw	r30,-4(r30)
 1484  00002090  4be00000	jr	r31
 1485  00002094  54000000	nop
 1486  00002098          	.endproc _bcopy
 1487  00002098          	.align 2
 1488  00002098          	.proc _bzero
 1489  00002098          	.global _bzero
 1490  00002098          	_bzero:
 1491                      ;  Function 'bzero'; 0 bytes of locals, 1 regs to save.
 1492  00002098  afbefffc	sw	-4(r29),r30; push fp
 1493  0000209c  001df020	add	r30,r0,r29; fp = sp
 1494  000020a0  afbffff8	sw	-8(r29),r31; push ret addr
 1495  000020a4  2fbd0010	subui	r29,r29,#16; alloc local storage
 1496  000020a8  afa20000	sw	0(r29),r2
 1497  000020ac  54000000	nop
 1498  000020b0          	L105_LF2:
 1499  000020b0  8fc10004	lw	r1,4(r30)
 1500  000020b4  2022ffff	addi	r2,r1,#-1
 1501  000020b8  afc20004	sw	4(r30),r2
 1502  000020bc  6c210000	sgti	r1,r1,#0
 1503  000020c0  1420000c	bnez	r1,L107_LF2
 1504  000020c4  54000000	nop; delay slot nop
 1505  000020c8  08000020	j	L106_LF2
 1506  000020cc  54000000	nop; delay slot nop
 1507  000020d0          	L107_LF2:
 1508  000020d0  8fc10000	lw	r1,(r30)
 1509  000020d4  20220001	addi	r2,r1,#1
 1510  000020d8  afc20000	sw	(r30),r2
 1511  000020dc  20020000	addi	r2,r0,(#0x0)&0xff
 1512  000020e0  a0220000	sb	(r1),r2
 1513  000020e4  0bffffc8	j	L105_LF2
 1514  000020e8  54000000	nop; delay slot nop
 1515  000020ec          	L106_LF2:
 1516  000020ec          	L104_LF2:
 1517  000020ec  8fa20000	lw	r2,0(r29)
 1518  000020f0  8fdffff8	lw	r31,-8(r30)
 1519  000020f4  001ee820	add	r29,r0,r30
 1520  000020f8  8fdefffc	lw	r30,-4(r30)
 1521  000020fc  4be00000	jr	r31
 1522  00002100  54000000	nop
 1523  00002104          	.endproc _bzero
 1524  00002104          	.align 2
 1525  00002104          	.proc _min
 1526  00002104          	.global _min
 1527  00002104          	_min:
 1528                      ;  Function 'min'; 0 bytes of locals, 2 regs to save.
 1529  00002104  afbefffc	sw	-4(r29),r30; push fp
 1530  00002108  001df020	add	r30,r0,r29; fp = sp
 1531  0000210c  afbffff8	sw	-8(r29),r31; push ret addr
 1532  00002110  2fbd0010	subui	r29,r29,#16; alloc local storage
 1533  00002114  afa20000	sw	0(r29),r2
 1534  00002118  afa30004	sw	4(r29),r3
 1535  0000211c  8fc10000	lw	r1,(r30)
 1536  00002120  8fc20004	lw	r2,4(r30)
 1537  00002124  0022182c	sle	r3,r1,r2
 1538  00002128  14600008	bnez	r3,L109_LF2
 1539  0000212c  54000000	nop; delay slot nop
 1540  00002130  8fc10004	lw	r1,4(r30)
 1541  00002134          	L109_LF2:
 1542  00002134  08000004	j	L108_LF2
 1543  00002138  54000000	nop; delay slot nop
 1544  0000213c          	L108_LF2:
 1545  0000213c  8fa20000	lw	r2,0(r29)
 1546  00002140  8fa30004	lw	r3,4(r29)
 1547  00002144  8fdffff8	lw	r31,-8(r30)
 1548  00002148  001ee820	add	r29,r0,r30
 1549  0000214c  8fdefffc	lw	r30,-4(r30)
 1550  00002150  4be00000	jr	r31
 1551  00002154  54000000	nop
 1552  00002158          	.endproc _min
 1553  00002158          	.align 2
 1554  00002158          	.proc _max
 1555  00002158          	.global _max
 1556  00002158          	_max:
 1557                      ;  Function 'max'; 0 bytes of locals, 2 regs to save.
 1558  00002158  afbefffc	sw	-4(r29),r30; push fp
 1559  0000215c  001df020	add	r30,r0,r29; fp = sp
 1560  00002160  afbffff8	sw	-8(r29),r31; push ret addr
 1561  00002164  2fbd0010	subui	r29,r29,#16; alloc local storage
 1562  00002168  afa20000	sw	0(r29),r2
 1563  0000216c  afa30004	sw	4(r29),r3
 1564  00002170  8fc10000	lw	r1,(r30)
 1565  00002174  8fc20004	lw	r2,4(r30)
 1566  00002178  0022182d	sge	r3,r1,r2
 1567  0000217c  14600008	bnez	r3,L111_LF2
 1568  00002180  54000000	nop; delay slot nop
 1569  00002184  8fc10004	lw	r1,4(r30)
 1570  00002188          	L111_LF2:
 1571  00002188  08000004	j	L110_LF2
 1572  0000218c  54000000	nop; delay slot nop
 1573  00002190          	L110_LF2:
 1574  00002190  8fa20000	lw	r2,0(r29)
 1575  00002194  8fa30004	lw	r3,4(r29)
 1576  00002198  8fdffff8	lw	r31,-8(r30)
 1577  0000219c  001ee820	add	r29,r0,r30
 1578  000021a0  8fdefffc	lw	r30,-4(r30)
 1579  000021a4  4be00000	jr	r31
 1580  000021a8  54000000	nop
 1581  000021ac          	.endproc _max
 1582                      ;;; Ethan L. Miller, 1999.  Released to the public domain
 1583                      ;;;
 1584                      ;;; Most of the traps are called in files from libtraps.
 1587  000021ac          	.align 2
 1588  000021ac          	.proc _exit
 1589  000021ac          	.global _exit
 1590  000021ac          	_exit:
 1591  000021ac  44000300	trap	#0x300
 1592  000021b0  4be00000	jr	r31
 1593  000021b4  54000000	nop
 1594  000021b8          	.endproc _exit
 1596                      ; for the benefit of gcc.
 1597  000021b8          	.proc ___main
 1598  000021b8          	.global ___main
 1599  000021b8          	___main:
 1600  000021b8  4be00000	jr	r31
 1601  000021bc  54000000	nop
 1602  000021c0          	.endproc ___main
 1603  000021c0          	.text
 1604  000021c0          	.global _etext
 1605  000021c0          	_etext:
 1606  000021c0          	.align 3
 1607  000021c0          	.data
 1608  000030bb          	.global _edata
 1609  000030bb          	_edata:
