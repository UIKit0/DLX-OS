 line   address	contents
    1                      ; Linked by DLX-LD.
    2                      ; MemSize 24576
    3                      ; Data size: 311
    4                      ; Text size: 4516
    5                      ; Stack size: 8192
    6  00000000          	.text 0x1000
    7  00001000          	.data 0x3000
    8                      ; Compiled by GCC
    9  00003000          	.text
   10  00001000          	.align 2
   11  00001000          	.proc _isspace
   12  00001000          	.global _isspace
   13  00001000          	_isspace:
   14                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
   15  00001000  afbefffc	sw	-4(r29),r30; push fp
   16  00001004  001df020	add	r30,r0,r29; fp = sp
   17  00001008  afbffff8	sw	-8(r29),r31; push ret addr
   18  0000100c  2fbd0010	subui	r29,r29,#16; alloc local storage
   19  00001010  afa20000	sw	0(r29),r2
   20  00001014  83c20003	lb	r2,3(r30)
   21  00001018  201f0000	addi	r31,r0,#0
   22  0000101c  304100ff	andi	r1,r2,#0x00ff
   23  00001020  60210020	seqi	r1,r1,#32
   24  00001024  14200018	bnez	r1,L6_LF0
   25  00001028  54000000	nop; not filled.
   26  0000102c  2041fff7	addi	r1,r2,#-9
   27  00001030  302100ff	andi	r1,r1,#0x00ff
   28  00001034  70210001	sleui	r1,r1,#1
   29  00001038  10200008	beqz	r1,L5_LF0
   30  0000103c  54000000	nop; not filled.
   31  00001040          	L6_LF0:
   32  00001040  201f0001	addi	r31,r0,#1
   33  00001044          	L5_LF0:
   34  00001044  001f0820	add	r1,r0,r31
   35  00001048  8fa20000	lw	r2,0(r29)
   36  0000104c  8fdffff8	lw	r31,-8(r30)
   37  00001050  001ee820	add	r29,r0,r30
   38  00001054  8fdefffc	lw	r30,-4(r30)
   39  00001058  4be00000	jr	r31
   40  0000105c  54000000	nop
   41  00001060          	.endproc _isspace
   42  00001060          	.align 2
   43  00001060          	.proc _isxdigit
   44  00001060          	.global _isxdigit
   45  00001060          	_isxdigit:
   46                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
   47  00001060  afbefffc	sw	-4(r29),r30; push fp
   48  00001064  001df020	add	r30,r0,r29; fp = sp
   49  00001068  afbffff8	sw	-8(r29),r31; push ret addr
   50  0000106c  2fbd0010	subui	r29,r29,#16; alloc local storage
   51  00001070  afa20000	sw	0(r29),r2
   52  00001074  83df0003	lb	r31,3(r30)
   53  00001078  20020000	addi	r2,r0,#0
   54  0000107c  23e1ffd0	addi	r1,r31,#-48
   55  00001080  302100ff	andi	r1,r1,#0x00ff
   56  00001084  70210009	sleui	r1,r1,#9
   57  00001088  14200028	bnez	r1,L12_LF0
   58  0000108c  54000000	nop; not filled.
   59  00001090  23e1ff9f	addi	r1,r31,#-97
   60  00001094  302100ff	andi	r1,r1,#0x00ff
   61  00001098  70210005	sleui	r1,r1,#5
   62  0000109c  14200014	bnez	r1,L12_LF0
   63  000010a0  54000000	nop; not filled.
   64  000010a4  33e100ff	andi	r1,r31,#0x00ff
   65  000010a8  64210041	snei	r1,r1,#65
   66  000010ac  14200008	bnez	r1,L11_LF0
   67  000010b0  54000000	nop; not filled.
   68  000010b4          	L12_LF0:
   69  000010b4  20020001	addi	r2,r0,#1
   70  000010b8          	L11_LF0:
   71  000010b8  00020820	add	r1,r0,r2
   72  000010bc  8fa20000	lw	r2,0(r29)
   73  000010c0  8fdffff8	lw	r31,-8(r30)
   74  000010c4  001ee820	add	r29,r0,r30
   75  000010c8  8fdefffc	lw	r30,-4(r30)
   76  000010cc  4be00000	jr	r31
   77  000010d0  54000000	nop
   78  000010d4          	.endproc _isxdigit
   79  000010d4          	.data
   80  00003000          	.align 2
   81  00003000          	_p6_LF0:
   82  00003000  00000000	.word 0
   83  00003004          	.align 2
   84  00003004          	LC0_LF0:
   85  00003004  55736167	.ascii "Usage: %s <handle_to_procs_completed_semaphore>\n\000"
   85  00003008  653a2025	
   85  0000300c  73203c68	
   85  00003010  616e646c	
   85  00003014  655f746f	
   85  00003018  5f70726f	
   85  0000301c  63735f63	
   85  00003020  6f6d706c	
   85  00003024  65746564	
   85  00003028  5f73656d	
   85  0000302c  6170686f	
   85  00003030  72653e0a	
   85  00003034  00      	
   86  00003035          	.align 2
   87  00003038          	LC1_LF0:
   88  00003038  68656c6c	.ascii "hello_world (%d): Hello world!\n\000"
   88  0000303c  6f5f776f	
   88  00003040  726c6420	
   88  00003044  28256429	
   88  00003048  3a204865	
   88  0000304c  6c6c6f20	
   88  00003050  776f726c	
   88  00003054  64210a00	
   89  00003058          	.align 2
   90  00003058          	LC2_LF0:
   91  00003058  68656c6c	.ascii "hello_world (%d): Bad semaphore s_procs_completed (%d)!\n\000"
   91  0000305c  6f5f776f	
   91  00003060  726c6420	
   91  00003064  28256429	
   91  00003068  3a204261	
   91  0000306c  64207365	
   91  00003070  6d617068	
   91  00003074  6f726520	
   91  00003078  735f7072	
   91  0000307c  6f63735f	
   91  00003080  636f6d70	
   91  00003084  6c657465	
   91  00003088  64202825	
   91  0000308c  6429210a	
   91  00003090  00      	
   92  00003091          	.align 2
   93  00003094          	LC3_LF0:
   94  00003094  54657374	.ascii "Test case (0): Done!\n\000"
   94  00003098  20636173	
   94  0000309c  65202830	
   94  000030a0  293a2044	
   94  000030a4  6f6e6521	
   94  000030a8  0a00    	
   95  000030aa          	.align 2
   96  000030ac          	LC4_LF0:
   97  000030ac  2d2d2d2d	.ascii "----------------------------------------------------------------------"
   97  000030b0  2d2d2d2d	
   97  000030b4  2d2d2d2d	
   97  000030b8  2d2d2d2d	
   97  000030bc  2d2d2d2d	
   97  000030c0  2d2d2d2d	
   97  000030c4  2d2d2d2d	
   97  000030c8  2d2d2d2d	
   97  000030cc  2d2d2d2d	
   97  000030d0  2d2d2d2d	
   97  000030d4  2d2d2d2d	
   97  000030d8  2d2d2d2d	
   97  000030dc  2d2d2d2d	
   97  000030e0  2d2d2d2d	
   97  000030e4  2d2d2d2d	
   97  000030e8  2d2d2d2d	
   97  000030ec  2d2d2d2d	
   97  000030f0  2d2d    	
   98  000030f2  2d2d2d2d	.ascii "-------------------------------------------\n\000"
   98  000030f6  2d2d2d2d	
   98  000030fa  2d2d2d2d	
   98  000030fe  2d2d2d2d	
   98  00003102  2d2d2d2d	
   98  00003106  2d2d2d2d	
   98  0000310a  2d2d2d2d	
   98  0000310e  2d2d2d2d	
   98  00003112  2d2d2d2d	
   98  00003116  2d2d2d2d	
   98  0000311a  2d2d2d0a	
   98  0000311e  00      	
   99  0000311f          	.text
  100  000010d4          	.align 2
  101  000010d4          	.proc _main
  102  000010d4          	.global _main
  103  000010d4          	_main:
  104                      ;  Function 'main'; 0 bytes of locals, 0 regs to save.
  105  000010d4  afbefffc	sw	-4(r29),r30; push fp
  106  000010d8  001df020	add	r30,r0,r29; fp = sp
  107  000010dc  afbffff8	sw	-8(r29),r31; push ret addr
  108  000010e0  2fbd0008	subui	r29,r29,#8; alloc local storage
  109  000010e4  8fc20000	lw	r2,(r30)
  110  000010e8  8fc30004	lw	r3,4(r30)
  111  000010ec  0c0010ac	jal	___main
  112  000010f0  54000000	nop; not filled.
  113  000010f4  64410002	snei	r1,r2,#2
  114  000010f8  10200028	beqz	r1,L17_LF0
  115  000010fc  54000000	nop; not filled.
  116  00001100  23bdfff8	addi	r29,r29,#-8
  117  00001104  3c040000	lhi	r4,((LC0_LF0)>>16)&0xffff
  118  00001108  24843004	addui	r4,r4,(LC0_LF0)&0xffff
  119  0000110c  afa40000	sw	(r29),r4
  120  00001110  0c0001c8	jal	_Printf
  121  00001114  54000000	nop; not filled.
  122  00001118  0c0002c8	jal	_Exit
  123  0000111c  54000000	nop; not filled.
  124  00001120  23bd0008	addi	r29,r29,#8
  125  00001124          	L17_LF0:
  126  00001124  23bdfff0	addi	r29,r29,#-16
  127  00001128  8c630004	lw	r3,4(r3)
  128  0000112c  afa30000	sw	(r29),r3
  129  00001130  20040000	addi	r4,r0,#0
  130  00001134  afa40004	sw	4(r29),r4
  131  00001138  2004000a	addi	r4,r0,#10
  132  0000113c  afa40008	sw	8(r29),r4
  133  00001140  0c000b5c	jal	_dstrtol
  134  00001144  54000000	nop; not filled.
  135  00001148  00011020	add	r2,r0,r1
  136  0000114c  0c000198	jal	_getpid
  137  00001150  54000000	nop; not filled.
  138  00001154  3c040000	lhi	r4,((LC1_LF0)>>16)&0xffff
  139  00001158  24843038	addui	r4,r4,(LC1_LF0)&0xffff
  140  0000115c  afa40000	sw	(r29),r4
  141  00001160  afa10004	sw	4(r29),r1
  142  00001164  0c000174	jal	_Printf
  143  00001168  54000000	nop; not filled.
  144  0000116c  afa20000	sw	(r29),r2
  145  00001170  0c0001bc	jal	_sem_signal
  146  00001174  54000000	nop; not filled.
  147  00001178  23bd0010	addi	r29,r29,#16
  148  0000117c  64210001	snei	r1,r1,#1
  149  00001180  10200038	beqz	r1,L18_LF0
  150  00001184  54000000	nop; not filled.
  151  00001188  0c00015c	jal	_getpid
  152  0000118c  54000000	nop; not filled.
  153  00001190  23bdfff0	addi	r29,r29,#-16
  154  00001194  3c040000	lhi	r4,((LC2_LF0)>>16)&0xffff
  155  00001198  24843058	addui	r4,r4,(LC2_LF0)&0xffff
  156  0000119c  afa40000	sw	(r29),r4
  157  000011a0  afa10004	sw	4(r29),r1
  158  000011a4  afa20008	sw	8(r29),r2
  159  000011a8  0c000130	jal	_Printf
  160  000011ac  54000000	nop; not filled.
  161  000011b0  0c000230	jal	_Exit
  162  000011b4  54000000	nop; not filled.
  163  000011b8  23bd0010	addi	r29,r29,#16
  164  000011bc          	L18_LF0:
  165  000011bc  23bdfff8	addi	r29,r29,#-8
  166  000011c0  3c040000	lhi	r4,((LC3_LF0)>>16)&0xffff
  167  000011c4  24843094	addui	r4,r4,(LC3_LF0)&0xffff
  168  000011c8  afa40000	sw	(r29),r4
  169  000011cc  0c00010c	jal	_Printf
  170  000011d0  54000000	nop; not filled.
  171  000011d4  3c040000	lhi	r4,((LC4_LF0)>>16)&0xffff
  172  000011d8  248430ac	addui	r4,r4,(LC4_LF0)&0xffff
  173  000011dc  afa40000	sw	(r29),r4
  174  000011e0  0c0000f8	jal	_Printf
  175  000011e4  54000000	nop; not filled.
  176  000011e8  23bd0008	addi	r29,r29,#8
  177  000011ec  0c000fa0	jal	_exit
  178  000011f0  54000000	nop
  179  000011f4          	.endproc _main
  180  000011f4          	.data
  181  0000311f          	.align 2
  182  00003120          	LC5_LF0:
  183  00003120  68656c6c	.ascii "hello_world, %d times\n\000"
  183  00003124  6f5f776f	
  183  00003128  726c642c	
  183  0000312c  20256420	
  183  00003130  74696d65	
  183  00003134  730a00  	
  184  00003137          	.text
  185  000011f4          	.align 2
  186  000011f4          	.proc _hello
  187  000011f4          	.global _hello
  188  000011f4          	_hello:
  189                      ;  Function 'hello'; 400 bytes of locals, 3 regs to save.
  190  000011f4  afbefffc	sw	-4(r29),r30; push fp
  191  000011f8  001df020	add	r30,r0,r29; fp = sp
  192  000011fc  afbffff8	sw	-8(r29),r31; push ret addr
  193  00001200  2fbd01a8	subui	r29,r29,#424; alloc local storage
  194  00001204  afa20000	sw	0(r29),r2
  195  00001208  afa30004	sw	4(r29),r3
  196  0000120c  afa40008	sw	8(r29),r4
  197  00001210  8fc20000	lw	r2,(r30)
  198  00001214  23dffff8	addi	r31,r30,#-8
  199  00001218  23c30184	addi	r3,r30,#388
  200  0000121c          	L30_LF0:
  201  0000121c  afe2fe70	sw	-400(r31),r2
  202  00001220  23ff0004	addi	r31,r31,#4
  203  00001224  03e3082c	sle	r1,r31,r3
  204  00001228  1420fff0	bnez	r1,L30_LF0
  205  0000122c  54000000	nop; not filled.
  206  00001230  23bdfff8	addi	r29,r29,#-8
  207  00001234  3c040000	lhi	r4,((LC5_LF0)>>16)&0xffff
  208  00001238  24843120	addui	r4,r4,(LC5_LF0)&0xffff
  209  0000123c  afa40000	sw	(r29),r4
  210  00001240  afa20004	sw	4(r29),r2
  211  00001244  0c000094	jal	_Printf
  212  00001248  54000000	nop; not filled.
  213  0000124c  23bd0008	addi	r29,r29,#8
  214  00001250  6c410000	sgti	r1,r2,#0
  215  00001254  1020001c	beqz	r1,L32_LF0
  216  00001258  54000000	nop; not filled.
  217  0000125c  2042ffff	addi	r2,r2,#-1
  218  00001260  23bdfff8	addi	r29,r29,#-8
  219  00001264  afa20000	sw	(r29),r2
  220  00001268  0fffff88	jal	_hello
  221  0000126c  54000000	nop; not filled.
  222  00001270  23bd0008	addi	r29,r29,#8
  223  00001274          	L32_LF0:
  224  00001274  8fa20000	lw	r2,0(r29)
  225  00001278  8fa30004	lw	r3,4(r29)
  226  0000127c  8fa40008	lw	r4,8(r29)
  227  00001280  8fdffff8	lw	r31,-8(r30)
  228  00001284  001ee820	add	r29,r0,r30
  229  00001288  8fdefffc	lw	r30,-4(r30)
  230  0000128c  4be00000	jr	r31
  231  00001290  54000000	nop
  232  00001294          	.endproc _hello
  233                      ;;;
  234                      ;;; Stub functions for DLX traps.
  235                      ;;;
  236                      ;;; Ethan L. Miller, 1999.  Released to the public domain.
  237                      ;;;
  238                      ;;; The traps such as Open and Close
  239                      ;;; (note the capital letters) are for use by user programs.  The traps
  240                      ;;; with names such as open and close (lower case) are for use by the OS.
  241                      ;;;
  244  00001294          	.align 2
  246                      ;;; The following are the traps to be used by user-level programs
  247                      ;;;
  249  00001294          	.align 2
  250  00001294          	.proc _Open
  251  00001294          	.global _Open
  252  00001294          	_Open:
  253                      ;;; Note that trap #0x213 actually causes a trap vector in the OS of
  254                      ;;; 0x1213.  The same is true for other user traps.  Thus, a user trap
  255                      ;;; with trap #0x240 will result in a trap vector of 0x1240 in the OS.
  256  00001294  44000213	trap	#0x213
  257  00001298  4be00000	jr	r31
  258  0000129c  54000000	nop
  259  000012a0          	.endproc _Open
  261  000012a0          	.proc _Close
  262  000012a0          	.global _Close
  263  000012a0          	_Close:
  264  000012a0  44000214	trap	#0x214
  265  000012a4  4be00000	jr	r31
  266  000012a8  54000000	nop
  267  000012ac          	.endproc _Close
  269  000012ac          	.proc _Read
  270  000012ac          	.global _Read
  271  000012ac          	_Read:
  272  000012ac  44000210	trap	#0x210
  273  000012b0  4be00000	jr	r31
  274  000012b4  54000000	nop
  275  000012b8          	.endproc _Read
  277  000012b8          	.proc _Write
  278  000012b8          	.global _Write
  279  000012b8          	_Write:
  280  000012b8  44000211	trap	#0x211
  281  000012bc  4be00000	jr	r31
  282  000012c0  54000000	nop
  283  000012c4          	.endproc _Write
  285  000012c4          	.proc _Lseek
  286  000012c4          	.global _Lseek
  287  000012c4          	_Lseek:
  288  000012c4  44000212	trap	#0x212
  289  000012c8  4be00000	jr	r31
  290  000012cc  54000000	nop
  291  000012d0          	.endproc _Lseek
  293  000012d0          	.proc _Putchar
  294  000012d0          	.global _Putchar
  295  000012d0          	_Putchar:
  296  000012d0  44000280	trap	#0x280
  297  000012d4  4be00000	jr	r31
  298  000012d8  54000000	nop
  299  000012dc          	.endproc _Putchar
  301  000012dc          	.proc _Printf
  302  000012dc          	.global _Printf
  303  000012dc          	_Printf:
  304  000012dc  44000201	trap	#0x201
  305  000012e0  4be00000	jr	r31
  306  000012e4  54000000	nop
  307  000012e8          	.endproc _Printf
  309  000012e8          	.proc _getpid
  310  000012e8          	.global _getpid
  311  000012e8          	_getpid:
  312  000012e8  44000431	trap	#0x431
  313  000012ec  4be00000	jr	r31
  314  000012f0  54000000	nop
  315  000012f4          	.endproc _getpid
  317  000012f4          	.proc _process_create
  318  000012f4          	.global _process_create
  319  000012f4          	_process_create:
  320  000012f4  44000432	trap	#0x432
  321  000012f8  4be00000	jr	r31
  322  000012fc  54000000	nop
  323  00001300          	.endproc _process_create
  325  00001300          	.proc _shmget
  326  00001300          	.global _shmget
  327  00001300          	_shmget:
  328  00001300  44000440	trap	#0x440
  329  00001304  4be00000	jr	r31
  330  00001308  54000000	nop
  331  0000130c          	.endproc _shmget
  333  0000130c          	.proc _shmat
  334  0000130c          	.global _shmat
  335  0000130c          	_shmat:
  336  0000130c  44000441	trap	#0x441
  337  00001310  4be00000	jr	r31
  338  00001314  54000000	nop
  339  00001318          	.endproc _shmat
  341  00001318          	.proc _sem_create
  342  00001318          	.global _sem_create
  343  00001318          	_sem_create:
  344  00001318  44000450	trap	#0x450
  345  0000131c  4be00000	jr	r31
  346  00001320  54000000	nop
  347  00001324          	.endproc _sem_create
  349  00001324          	.proc _sem_wait
  350  00001324          	.global _sem_wait
  351  00001324          	_sem_wait:
  352  00001324  44000451	trap	#0x451
  353  00001328  4be00000	jr	r31
  354  0000132c  54000000	nop
  355  00001330          	.endproc _sem_wait
  357  00001330          	.proc _sem_signal
  358  00001330          	.global _sem_signal
  359  00001330          	_sem_signal:
  360  00001330  44000452	trap	#0x452
  361  00001334  4be00000	jr	r31
  362  00001338  54000000	nop
  363  0000133c          	.endproc _sem_signal
  365  0000133c          	.proc _lock_create
  366  0000133c          	.global _lock_create
  367  0000133c          	_lock_create:
  368  0000133c  44000453	trap	#0x453
  369  00001340  4be00000	jr	r31
  370  00001344  54000000	nop
  371  00001348          	.endproc _lock_create
  373  00001348          	.proc _lock_acquire
  374  00001348          	.global _lock_acquire
  375  00001348          	_lock_acquire:
  376  00001348  44000454	trap	#0x454
  377  0000134c  4be00000	jr	r31
  378  00001350  54000000	nop
  379  00001354          	.endproc _lock_acquire
  381  00001354          	.proc _lock_release
  382  00001354          	.global _lock_release
  383  00001354          	_lock_release:
  384  00001354  44000455	trap	#0x455
  385  00001358  4be00000	jr	r31
  386  0000135c  54000000	nop
  387  00001360          	.endproc _lock_release
  389  00001360          	.proc _cond_create
  390  00001360          	.global _cond_create
  391  00001360          	_cond_create:
  392  00001360  44000456	trap	#0x456
  393  00001364  4be00000	jr	r31
  394  00001368  54000000	nop
  395  0000136c          	.endproc _cond_create
  397  0000136c          	.proc _cond_wait
  398  0000136c          	.global _cond_wait
  399  0000136c          	_cond_wait:
  400  0000136c  44000457	trap	#0x457
  401  00001370  4be00000	jr	r31
  402  00001374  54000000	nop
  403  00001378          	.endproc _cond_wait
  405  00001378          	.proc _cond_signal
  406  00001378          	.global _cond_signal
  407  00001378          	_cond_signal:
  408  00001378  44000458	trap	#0x458
  409  0000137c  4be00000	jr	r31
  410  00001380  54000000	nop
  411  00001384          	.endproc _cond_signal
  413  00001384          	.proc _cond_broadcast
  414  00001384          	.global _cond_broadcast
  415  00001384          	_cond_broadcast:
  416  00001384  44000459	trap	#0x459
  417  00001388  4be00000	jr	r31
  418  0000138c  54000000	nop
  419  00001390          	.endproc _cond_broadcast
  421  00001390          	.proc _mbox_create
  422  00001390          	.global _mbox_create
  423  00001390          	_mbox_create:
  424  00001390  44000460	trap	#0x460
  425  00001394  4be00000	jr	r31
  426  00001398  54000000	nop
  427  0000139c          	.endproc _mbox_create
  429  0000139c          	.proc _mbox_open
  430  0000139c          	.global _mbox_open
  431  0000139c          	_mbox_open:
  432  0000139c  44000461	trap	#0x461
  433  000013a0  4be00000	jr	r31
  434  000013a4  54000000	nop
  435  000013a8          	.endproc _mbox_open
  437  000013a8          	.proc _mbox_close
  438  000013a8          	.global _mbox_close
  439  000013a8          	_mbox_close:
  440  000013a8  44000462	trap	#0x462
  441  000013ac  4be00000	jr	r31
  442  000013b0  54000000	nop
  443  000013b4          	.endproc _mbox_close
  445  000013b4          	.proc _mbox_send
  446  000013b4          	.global _mbox_send
  447  000013b4          	_mbox_send:
  448  000013b4  44000463	trap	#0x463
  449  000013b8  4be00000	jr	r31
  450  000013bc  54000000	nop
  451  000013c0          	.endproc _mbox_send
  453  000013c0          	.proc _mbox_recv
  454  000013c0          	.global _mbox_recv
  455  000013c0          	_mbox_recv:
  456  000013c0  44000464	trap	#0x464
  457  000013c4  4be00000	jr	r31
  458  000013c8  54000000	nop
  459  000013cc          	.endproc _mbox_recv
  461  000013cc          	.proc _sleep
  462  000013cc          	.global _sleep
  463  000013cc          	_sleep:
  464  000013cc  44000465	trap	#0x465
  465  000013d0  4be00000	jr	r31
  466  000013d4  54000000	nop
  467  000013d8          	.endproc _sleep
  469  000013d8          	.proc _yield
  470  000013d8          	.global _yield
  471  000013d8          	_yield:
  472  000013d8  44000466	trap	#0x466
  473  000013dc  4be00000	jr	r31
  474  000013e0  54000000	nop
  475  000013e4          	.endproc _yield
  478  000013e4          	.proc _Exit
  479  000013e4          	.global _Exit
  480  000013e4          	_Exit:
  481  000013e4  44000500	trap	#0x500
  482  000013e8  4be00000	jr	r31
  483  000013ec  54000000	nop
  484  000013f0          	.endproc _Exit
  487  000013f0          	.proc _malloc
  488  000013f0          	.global _malloc
  489  000013f0          	_malloc:
  490  000013f0  44000467	trap	#0x467
  491  000013f4  4be00000	jr	r31
  492  000013f8          	.endproc _malloc
  495  000013f8          	.proc _mfree
  496  000013f8          	.global _mfree
  497  000013f8          	_mfree:
  498  000013f8  44000468	trap	#0x468
  499  000013fc  4be00000	jr	r31
  500  00001400          	.endproc _mfree
  501                      ; Compiled by GCC
  503  00001400          	.align 2
  504  00001400          	.proc _isspace
  505  00001400          	.global _isspace
  506  00001400          	_isspace:
  507                      ;  Function 'isspace'; 0 bytes of locals, 3 regs to save.
  508  00001400  afbefffc	sw	-4(r29),r30; push fp
  509  00001404  001df020	add	r30,r0,r29; fp = sp
  510  00001408  afbffff8	sw	-8(r29),r31; push ret addr
  511  0000140c  2fbd0018	subui	r29,r29,#24; alloc local storage
  512  00001410  afa20000	sw	0(r29),r2
  513  00001414  afa30004	sw	4(r29),r3
  514  00001418  afa40008	sw	8(r29),r4
  515  0000141c  83c20003	lb	r2,3(r30)
  516  00001420  20010000	addi	r1,r0,#0
  517  00001424  304300ff	andi	r3,r2,#0x00ff
  518  00001428  60640020	seqi	r4,r3,#32
  519  0000142c  1480002c	bnez	r4,L3_LF2
  520  00001430  54000000	nop; delay slot nop
  521  00001434  304300ff	andi	r3,r2,#0x00ff
  522  00001438  60640009	seqi	r4,r3,#9
  523  0000143c  1480001c	bnez	r4,L3_LF2
  524  00001440  54000000	nop; delay slot nop
  525  00001444  304300ff	andi	r3,r2,#0x00ff
  526  00001448  6064000a	seqi	r4,r3,#10
  527  0000144c  1480000c	bnez	r4,L3_LF2
  528  00001450  54000000	nop; delay slot nop
  529  00001454  08000008	j	L2_LF2
  530  00001458  54000000	nop; delay slot nop
  531  0000145c          	L3_LF2:
  532  0000145c  20010001	addi	r1,r0,#1
  533  00001460          	L2_LF2:
  534  00001460  08000004	j	L1_LF2
  535  00001464  54000000	nop; delay slot nop
  536  00001468          	L1_LF2:
  537  00001468  8fa20000	lw	r2,0(r29)
  538  0000146c  8fa30004	lw	r3,4(r29)
  539  00001470  8fa40008	lw	r4,8(r29)
  540  00001474  8fdffff8	lw	r31,-8(r30)
  541  00001478  001ee820	add	r29,r0,r30
  542  0000147c  8fdefffc	lw	r30,-4(r30)
  543  00001480  4be00000	jr	r31
  544  00001484  54000000	nop
  545  00001488          	.endproc _isspace
  546  00001488          	.align 2
  547  00001488          	.proc _isxdigit
  548  00001488          	.global _isxdigit
  549  00001488          	_isxdigit:
  550                      ;  Function 'isxdigit'; 0 bytes of locals, 3 regs to save.
  551  00001488  afbefffc	sw	-4(r29),r30; push fp
  552  0000148c  001df020	add	r30,r0,r29; fp = sp
  553  00001490  afbffff8	sw	-8(r29),r31; push ret addr
  554  00001494  2fbd0018	subui	r29,r29,#24; alloc local storage
  555  00001498  afa20000	sw	0(r29),r2
  556  0000149c  afa30004	sw	4(r29),r3
  557  000014a0  afa40008	sw	8(r29),r4
  558  000014a4  83c20003	lb	r2,3(r30)
  559  000014a8  20010000	addi	r1,r0,#0
  560  000014ac  304300ff	andi	r3,r2,#0x00ff
  561  000014b0  6c64002f	sgtui	r4,r3,#47
  562  000014b4  1080001c	beqz	r4,L7_LF2
  563  000014b8  54000000	nop; delay slot nop
  564  000014bc  304300ff	andi	r3,r2,#0x00ff
  565  000014c0  70640039	sleui	r4,r3,#57
  566  000014c4  1480005c	bnez	r4,L6_LF2
  567  000014c8  54000000	nop; delay slot nop
  568  000014cc  08000004	j	L7_LF2
  569  000014d0  54000000	nop; delay slot nop
  570  000014d4          	L7_LF2:
  571  000014d4  304300ff	andi	r3,r2,#0x00ff
  572  000014d8  6c640060	sgtui	r4,r3,#96
  573  000014dc  1080001c	beqz	r4,L8_LF2
  574  000014e0  54000000	nop; delay slot nop
  575  000014e4  304300ff	andi	r3,r2,#0x00ff
  576  000014e8  70640066	sleui	r4,r3,#102
  577  000014ec  14800034	bnez	r4,L6_LF2
  578  000014f0  54000000	nop; delay slot nop
  579  000014f4  08000004	j	L8_LF2
  580  000014f8  54000000	nop; delay slot nop
  581  000014fc          	L8_LF2:
  582  000014fc  304300ff	andi	r3,r2,#0x00ff
  583  00001500  6c640040	sgtui	r4,r3,#64
  584  00001504  10800020	beqz	r4,L5_LF2
  585  00001508  54000000	nop; delay slot nop
  586  0000150c  304300ff	andi	r3,r2,#0x00ff
  587  00001510  70640041	sleui	r4,r3,#65
  588  00001514  1480000c	bnez	r4,L6_LF2
  589  00001518  54000000	nop; delay slot nop
  590  0000151c  08000008	j	L5_LF2
  591  00001520  54000000	nop; delay slot nop
  592  00001524          	L6_LF2:
  593  00001524  20010001	addi	r1,r0,#1
  594  00001528          	L5_LF2:
  595  00001528  08000004	j	L4_LF2
  596  0000152c  54000000	nop; delay slot nop
  597  00001530          	L4_LF2:
  598  00001530  8fa20000	lw	r2,0(r29)
  599  00001534  8fa30004	lw	r3,4(r29)
  600  00001538  8fa40008	lw	r4,8(r29)
  601  0000153c  8fdffff8	lw	r31,-8(r30)
  602  00001540  001ee820	add	r29,r0,r30
  603  00001544  8fdefffc	lw	r30,-4(r30)
  604  00001548  4be00000	jr	r31
  605  0000154c  54000000	nop
  606  00001550          	.endproc _isxdigit
  607  00001550          	.align 2
  608  00001550          	.proc _dstrcpy
  609  00001550          	.global _dstrcpy
  610  00001550          	_dstrcpy:
  611                      ;  Function 'dstrcpy'; 8 bytes of locals, 2 regs to save.
  612  00001550  afbefffc	sw	-4(r29),r30; push fp
  613  00001554  001df020	add	r30,r0,r29; fp = sp
  614  00001558  afbffff8	sw	-8(r29),r31; push ret addr
  615  0000155c  2fbd0018	subui	r29,r29,#24; alloc local storage
  616  00001560  afa20000	sw	0(r29),r2
  617  00001564  afa30004	sw	4(r29),r3
  618  00001568  8fc10000	lw	r1,(r30)
  619  0000156c  afc1fff4	sw	-12(r30),r1
  620  00001570          	L10_LF2:
  621  00001570  8fc10000	lw	r1,(r30)
  622  00001574  20220001	addi	r2,r1,#1
  623  00001578  afc20000	sw	(r30),r2
  624  0000157c  8fc20004	lw	r2,4(r30)
  625  00001580  20430001	addi	r3,r2,#1
  626  00001584  afc30004	sw	4(r30),r3
  627  00001588  80420000	lb	r2,(r2)
  628  0000158c  a0220000	sb	(r1),r2
  629  00001590  a3c2fff3	sb	-13(r30),r2
  630  00001594          	L12_LF2:
  631  00001594  93c1fff3	lbu	r1,-13(r30)
  632  00001598  64220000	snei	r2,r1,#0
  633  0000159c  1440000c	bnez	r2,L13_LF2
  634  000015a0  54000000	nop; delay slot nop
  635  000015a4  0800000c	j	L11_LF2
  636  000015a8  54000000	nop; delay slot nop
  637  000015ac          	L13_LF2:
  638  000015ac  0bffffc0	j	L10_LF2
  639  000015b0  54000000	nop; delay slot nop
  640  000015b4          	L11_LF2:
  641  000015b4  8fc1fff4	lw	r1,-12(r30)
  642  000015b8  08000004	j	L9_LF2
  643  000015bc  54000000	nop; delay slot nop
  644  000015c0          	L9_LF2:
  645  000015c0  8fa20000	lw	r2,0(r29)
  646  000015c4  8fa30004	lw	r3,4(r29)
  647  000015c8  8fdffff8	lw	r31,-8(r30)
  648  000015cc  001ee820	add	r29,r0,r30
  649  000015d0  8fdefffc	lw	r30,-4(r30)
  650  000015d4  4be00000	jr	r31
  651  000015d8  54000000	nop
  652  000015dc          	.endproc _dstrcpy
  653  000015dc          	.align 2
  654  000015dc          	.proc _dstrncpy
  655  000015dc          	.global _dstrncpy
  656  000015dc          	_dstrncpy:
  657                      ;  Function 'dstrncpy'; 8 bytes of locals, 2 regs to save.
  658  000015dc  afbefffc	sw	-4(r29),r30; push fp
  659  000015e0  001df020	add	r30,r0,r29; fp = sp
  660  000015e4  afbffff8	sw	-8(r29),r31; push ret addr
  661  000015e8  2fbd0018	subui	r29,r29,#24; alloc local storage
  662  000015ec  afa20000	sw	0(r29),r2
  663  000015f0  afa30004	sw	4(r29),r3
  664  000015f4  8fc10000	lw	r1,(r30)
  665  000015f8  afc1fff4	sw	-12(r30),r1
  666  000015fc          	L15_LF2:
  667  000015fc  8fc10008	lw	r1,8(r30)
  668  00001600  2022ffff	addi	r2,r1,#-1
  669  00001604  afc20008	sw	8(r30),r2
  670  00001608  70210000	slei	r1,r1,#0
  671  0000160c  1020000c	beqz	r1,L18_LF2
  672  00001610  54000000	nop; delay slot nop
  673  00001614  08000048	j	L16_LF2
  674  00001618  54000000	nop; delay slot nop
  675  0000161c          	L18_LF2:
  676  0000161c  8fc10000	lw	r1,(r30)
  677  00001620  20220001	addi	r2,r1,#1
  678  00001624  afc20000	sw	(r30),r2
  679  00001628  8fc20004	lw	r2,4(r30)
  680  0000162c  20430001	addi	r3,r2,#1
  681  00001630  afc30004	sw	4(r30),r3
  682  00001634  80420000	lb	r2,(r2)
  683  00001638  a0220000	sb	(r1),r2
  684  0000163c  a3c2fff3	sb	-13(r30),r2
  685  00001640          	L17_LF2:
  686  00001640  93c1fff3	lbu	r1,-13(r30)
  687  00001644  64220000	snei	r2,r1,#0
  688  00001648  1440000c	bnez	r2,L19_LF2
  689  0000164c  54000000	nop; delay slot nop
  690  00001650  0800000c	j	L16_LF2
  691  00001654  54000000	nop; delay slot nop
  692  00001658          	L19_LF2:
  693  00001658  0bffffa0	j	L15_LF2
  694  0000165c  54000000	nop; delay slot nop
  695  00001660          	L16_LF2:
  696  00001660  8fc1fff4	lw	r1,-12(r30)
  697  00001664  08000004	j	L14_LF2
  698  00001668  54000000	nop; delay slot nop
  699  0000166c          	L14_LF2:
  700  0000166c  8fa20000	lw	r2,0(r29)
  701  00001670  8fa30004	lw	r3,4(r29)
  702  00001674  8fdffff8	lw	r31,-8(r30)
  703  00001678  001ee820	add	r29,r0,r30
  704  0000167c  8fdefffc	lw	r30,-4(r30)
  705  00001680  4be00000	jr	r31
  706  00001684  54000000	nop
  707  00001688          	.endproc _dstrncpy
  708  00001688          	.align 2
  709  00001688          	.proc _dstrcat
  710  00001688          	.global _dstrcat
  711  00001688          	_dstrcat:
  712                      ;  Function 'dstrcat'; 8 bytes of locals, 1 regs to save.
  713  00001688  afbefffc	sw	-4(r29),r30; push fp
  714  0000168c  001df020	add	r30,r0,r29; fp = sp
  715  00001690  afbffff8	sw	-8(r29),r31; push ret addr
  716  00001694  2fbd0018	subui	r29,r29,#24; alloc local storage
  717  00001698  afa20000	sw	0(r29),r2
  718  0000169c  8fc10000	lw	r1,(r30)
  719  000016a0  afc1fff4	sw	-12(r30),r1
  720  000016a4          	L21_LF2:
  721  000016a4  8fc10000	lw	r1,(r30)
  722  000016a8  90220000	lbu	r2,(r1)
  723  000016ac  64410000	snei	r1,r2,#0
  724  000016b0  1420000c	bnez	r1,L23_LF2
  725  000016b4  54000000	nop; delay slot nop
  726  000016b8  0800001c	j	L22_LF2
  727  000016bc  54000000	nop; delay slot nop
  728  000016c0          	L23_LF2:
  729  000016c0  8fc20000	lw	r2,(r30)
  730  000016c4  20410001	addi	r1,r2,#1
  731  000016c8  00011020	add	r2,r0,r1
  732  000016cc  afc20000	sw	(r30),r2
  733  000016d0  0bffffd0	j	L21_LF2
  734  000016d4  54000000	nop; delay slot nop
  735  000016d8          	L22_LF2:
  736  000016d8  23bdfff8	addi	r29,r29,#-8
  737  000016dc  001d0820	add	r1,r0,r29
  738  000016e0  8fc20000	lw	r2,(r30)
  739  000016e4  ac220000	sw	(r1),r2
  740  000016e8  8fc20004	lw	r2,4(r30)
  741  000016ec  ac220004	sw	4(r1),r2
  742  000016f0  0ffffe5c	jal	_dstrcpy
  743  000016f4  54000000	nop; delay slot nop
  744  000016f8  23bd0008	addi	r29,r29,#8
  745  000016fc  8fc1fff4	lw	r1,-12(r30)
  746  00001700  08000004	j	L20_LF2
  747  00001704  54000000	nop; delay slot nop
  748  00001708          	L20_LF2:
  749  00001708  8fa20000	lw	r2,0(r29)
  750  0000170c  8fdffff8	lw	r31,-8(r30)
  751  00001710  001ee820	add	r29,r0,r30
  752  00001714  8fdefffc	lw	r30,-4(r30)
  753  00001718  4be00000	jr	r31
  754  0000171c  54000000	nop
  755  00001720          	.endproc _dstrcat
  756  00001720          	.align 2
  757  00001720          	.proc _dstrncmp
  758  00001720          	.global _dstrncmp
  759  00001720          	_dstrncmp:
  760                      ;  Function 'dstrncmp'; 8 bytes of locals, 2 regs to save.
  761  00001720  afbefffc	sw	-4(r29),r30; push fp
  762  00001724  001df020	add	r30,r0,r29; fp = sp
  763  00001728  afbffff8	sw	-8(r29),r31; push ret addr
  764  0000172c  2fbd0018	subui	r29,r29,#24; alloc local storage
  765  00001730  afa20000	sw	0(r29),r2
  766  00001734  afa30004	sw	4(r29),r3
  767  00001738  54000000	nop
  768  0000173c  20010000	addi	r1,r0,#0
  769  00001740  afc1fff4	sw	-12(r30),r1
  770  00001744          	L25_LF2:
  771  00001744  8fc1fff4	lw	r1,-12(r30)
  772  00001748  8fc20008	lw	r2,8(r30)
  773  0000174c  0022082a	slt	r1,r1,r2
  774  00001750  1420000c	bnez	r1,L28_LF2
  775  00001754  54000000	nop; delay slot nop
  776  00001758  08000088	j	L26_LF2
  777  0000175c  54000000	nop; delay slot nop
  778  00001760          	L28_LF2:
  779  00001760  8fc10004	lw	r1,4(r30)
  780  00001764  90220000	lbu	r2,(r1)
  781  00001768  64410000	snei	r1,r2,#0
  782  0000176c  14200018	bnez	r1,L29_LF2
  783  00001770  54000000	nop; delay slot nop
  784  00001774  20010000	addi	r1,r0,#0
  785  00001778  080000d8	j	L24_LF2
  786  0000177c  54000000	nop; delay slot nop
  787  00001780  08000028	j	L30_LF2
  788  00001784  54000000	nop; delay slot nop
  789  00001788          	L29_LF2:
  790  00001788  8fc10000	lw	r1,(r30)
  791  0000178c  8fc20004	lw	r2,4(r30)
  792  00001790  90210000	lbu	r1,(r1)
  793  00001794  90420000	lbu	r2,(r2)
  794  00001798  00220829	sne	r1,r1,r2
  795  0000179c  1020000c	beqz	r1,L30_LF2
  796  000017a0  54000000	nop; delay slot nop
  797  000017a4  0800003c	j	L26_LF2
  798  000017a8  54000000	nop; delay slot nop
  799  000017ac          	L31_LF2:
  800  000017ac          	L30_LF2:
  801  000017ac  8fc20000	lw	r2,(r30)
  802  000017b0  20410001	addi	r1,r2,#1
  803  000017b4  00011020	add	r2,r0,r1
  804  000017b8  afc20000	sw	(r30),r2
  805  000017bc  8fc20004	lw	r2,4(r30)
  806  000017c0  20410001	addi	r1,r2,#1
  807  000017c4  00011020	add	r2,r0,r1
  808  000017c8  afc20004	sw	4(r30),r2
  809  000017cc          	L27_LF2:
  810  000017cc  8fc2fff4	lw	r2,-12(r30)
  811  000017d0  20410001	addi	r1,r2,#1
  812  000017d4  00011020	add	r2,r0,r1
  813  000017d8  afc2fff4	sw	-12(r30),r2
  814  000017dc  0bffff64	j	L25_LF2
  815  000017e0  54000000	nop; delay slot nop
  816  000017e4          	L26_LF2:
  817  000017e4  8fc1fff4	lw	r1,-12(r30)
  818  000017e8  8fc20008	lw	r2,8(r30)
  819  000017ec  00220828	seq	r1,r1,r2
  820  000017f0  10200018	beqz	r1,L32_LF2
  821  000017f4  54000000	nop; delay slot nop
  822  000017f8  20010000	addi	r1,r0,#0
  823  000017fc  08000054	j	L24_LF2
  824  00001800  54000000	nop; delay slot nop
  825  00001804  0800004c	j	L33_LF2
  826  00001808  54000000	nop; delay slot nop
  827  0000180c          	L32_LF2:
  828  0000180c  8fc20000	lw	r2,(r30)
  829  00001810  90410000	lbu	r1,(r2)
  830  00001814  8fc20004	lw	r2,4(r30)
  831  00001818  90430000	lbu	r3,(r2)
  832  0000181c  00230822	sub	r1,r1,r3
  833  00001820  74220000	sgei	r2,r1,#0
  834  00001824  10400020	beqz	r2,L34_LF2
  835  00001828  54000000	nop; delay slot nop
  836  0000182c  8fc10000	lw	r1,(r30)
  837  00001830  8fc20004	lw	r2,4(r30)
  838  00001834  90210000	lbu	r1,(r1)
  839  00001838  90420000	lbu	r2,(r2)
  840  0000183c  00220829	sne	r1,r1,r2
  841  00001840  08000008	j	L35_LF2
  842  00001844  54000000	nop; delay slot nop
  843  00001848          	L34_LF2:
  844  00001848  2001ffff	addi	r1,r0,#-1
  845  0000184c          	L35_LF2:
  846  0000184c  08000004	j	L24_LF2
  847  00001850  54000000	nop; delay slot nop
  848  00001854          	L33_LF2:
  849  00001854          	L24_LF2:
  850  00001854  8fa20000	lw	r2,0(r29)
  851  00001858  8fa30004	lw	r3,4(r29)
  852  0000185c  8fdffff8	lw	r31,-8(r30)
  853  00001860  001ee820	add	r29,r0,r30
  854  00001864  8fdefffc	lw	r30,-4(r30)
  855  00001868  4be00000	jr	r31
  856  0000186c  54000000	nop
  857  00001870          	.endproc _dstrncmp
  858  00001870          	.align 2
  859  00001870          	.proc _dstrlen
  860  00001870          	.global _dstrlen
  861  00001870          	_dstrlen:
  862                      ;  Function 'dstrlen'; 8 bytes of locals, 1 regs to save.
  863  00001870  afbefffc	sw	-4(r29),r30; push fp
  864  00001874  001df020	add	r30,r0,r29; fp = sp
  865  00001878  afbffff8	sw	-8(r29),r31; push ret addr
  866  0000187c  2fbd0018	subui	r29,r29,#24; alloc local storage
  867  00001880  afa20000	sw	0(r29),r2
  868  00001884  20010000	addi	r1,r0,#0
  869  00001888  afc1fff4	sw	-12(r30),r1
  870  0000188c          	L37_LF2:
  871  0000188c  8fc10000	lw	r1,(r30)
  872  00001890  20220001	addi	r2,r1,#1
  873  00001894  afc20000	sw	(r30),r2
  874  00001898  90210000	lbu	r1,(r1)
  875  0000189c  64220000	snei	r2,r1,#0
  876  000018a0  1440000c	bnez	r2,L39_LF2
  877  000018a4  54000000	nop; delay slot nop
  878  000018a8  0800001c	j	L38_LF2
  879  000018ac  54000000	nop; delay slot nop
  880  000018b0          	L39_LF2:
  881  000018b0  8fc2fff4	lw	r2,-12(r30)
  882  000018b4  20410001	addi	r1,r2,#1
  883  000018b8  00011020	add	r2,r0,r1
  884  000018bc  afc2fff4	sw	-12(r30),r2
  885  000018c0  0bffffc8	j	L37_LF2
  886  000018c4  54000000	nop; delay slot nop
  887  000018c8          	L38_LF2:
  888  000018c8  8fc1fff4	lw	r1,-12(r30)
  889  000018cc  08000004	j	L36_LF2
  890  000018d0  54000000	nop; delay slot nop
  891  000018d4          	L36_LF2:
  892  000018d4  8fa20000	lw	r2,0(r29)
  893  000018d8  8fdffff8	lw	r31,-8(r30)
  894  000018dc  001ee820	add	r29,r0,r30
  895  000018e0  8fdefffc	lw	r30,-4(r30)
  896  000018e4  4be00000	jr	r31
  897  000018e8  54000000	nop
  898  000018ec          	.endproc _dstrlen
  899  000018ec          	.align 2
  900  000018ec          	.proc _dstrstr
  901  000018ec          	.global _dstrstr
  902  000018ec          	_dstrstr:
  903                      ;  Function 'dstrstr'; 8 bytes of locals, 1 regs to save.
  904  000018ec  afbefffc	sw	-4(r29),r30; push fp
  905  000018f0  001df020	add	r30,r0,r29; fp = sp
  906  000018f4  afbffff8	sw	-8(r29),r31; push ret addr
  907  000018f8  2fbd0018	subui	r29,r29,#24; alloc local storage
  908  000018fc  afa20000	sw	0(r29),r2
  909  00001900  23bdfff8	addi	r29,r29,#-8
  910  00001904  001d0820	add	r1,r0,r29
  911  00001908  8fc20004	lw	r2,4(r30)
  912  0000190c  ac220000	sw	(r1),r2
  913  00001910  0fffff5c	jal	_dstrlen
  914  00001914  54000000	nop; delay slot nop
  915  00001918  23bd0008	addi	r29,r29,#8
  916  0000191c  afc1fff4	sw	-12(r30),r1
  917  00001920          	L41_LF2:
  918  00001920  8fc10000	lw	r1,(r30)
  919  00001924  90220000	lbu	r2,(r1)
  920  00001928  64410000	snei	r1,r2,#0
  921  0000192c  1420000c	bnez	r1,L43_LF2
  922  00001930  54000000	nop; delay slot nop
  923  00001934  08000060	j	L42_LF2
  924  00001938  54000000	nop; delay slot nop
  925  0000193c          	L43_LF2:
  926  0000193c  23bdfff0	addi	r29,r29,#-16
  927  00001940  001d0820	add	r1,r0,r29
  928  00001944  8fc20000	lw	r2,(r30)
  929  00001948  ac220000	sw	(r1),r2
  930  0000194c  8fc20004	lw	r2,4(r30)
  931  00001950  ac220004	sw	4(r1),r2
  932  00001954  8fc2fff4	lw	r2,-12(r30)
  933  00001958  ac220008	sw	8(r1),r2
  934  0000195c  0ffffdc0	jal	_dstrncmp
  935  00001960  54000000	nop; delay slot nop
  936  00001964  23bd0010	addi	r29,r29,#16
  937  00001968  64220000	snei	r2,r1,#0
  938  0000196c  14400010	bnez	r2,L44_LF2
  939  00001970  54000000	nop; delay slot nop
  940  00001974  8fc10000	lw	r1,(r30)
  941  00001978  08000028	j	L40_LF2
  942  0000197c  54000000	nop; delay slot nop
  943  00001980          	L44_LF2:
  944  00001980  8fc20000	lw	r2,(r30)
  945  00001984  20410001	addi	r1,r2,#1
  946  00001988  00011020	add	r2,r0,r1
  947  0000198c  afc20000	sw	(r30),r2
  948  00001990  0bffff8c	j	L41_LF2
  949  00001994  54000000	nop; delay slot nop
  950  00001998          	L42_LF2:
  951  00001998  20010000	addi	r1,r0,#0
  952  0000199c  08000004	j	L40_LF2
  953  000019a0  54000000	nop; delay slot nop
  954  000019a4          	L40_LF2:
  955  000019a4  8fa20000	lw	r2,0(r29)
  956  000019a8  8fdffff8	lw	r31,-8(r30)
  957  000019ac  001ee820	add	r29,r0,r30
  958  000019b0  8fdefffc	lw	r30,-4(r30)
  959  000019b4  4be00000	jr	r31
  960  000019b8  54000000	nop
  961  000019bc          	.endproc _dstrstr
  962  000019bc          	.align 2
  963  000019bc          	.proc _dmindex
  964  000019bc          	.global _dmindex
  965  000019bc          	_dmindex:
  966                      ;  Function 'dmindex'; 8 bytes of locals, 1 regs to save.
  967  000019bc  afbefffc	sw	-4(r29),r30; push fp
  968  000019c0  001df020	add	r30,r0,r29; fp = sp
  969  000019c4  afbffff8	sw	-8(r29),r31; push ret addr
  970  000019c8  2fbd0018	subui	r29,r29,#24; alloc local storage
  971  000019cc  afa20000	sw	0(r29),r2
  972  000019d0  54000000	nop
  973  000019d4          	L46_LF2:
  974  000019d4  8fc10000	lw	r1,(r30)
  975  000019d8  90220000	lbu	r2,(r1)
  976  000019dc  64410000	snei	r1,r2,#0
  977  000019e0  1420000c	bnez	r1,L48_LF2
  978  000019e4  54000000	nop; delay slot nop
  979  000019e8  08000070	j	L47_LF2
  980  000019ec  54000000	nop; delay slot nop
  981  000019f0          	L48_LF2:
  982  000019f0  8fc10004	lw	r1,4(r30)
  983  000019f4  afc1fff4	sw	-12(r30),r1
  984  000019f8          	L49_LF2:
  985  000019f8  8fc1fff4	lw	r1,-12(r30)
  986  000019fc  90220000	lbu	r2,(r1)
  987  00001a00  64410000	snei	r1,r2,#0
  988  00001a04  1420000c	bnez	r1,L52_LF2
  989  00001a08  54000000	nop; delay slot nop
  990  00001a0c  08000044	j	L50_LF2
  991  00001a10  54000000	nop; delay slot nop
  992  00001a14          	L52_LF2:
  993  00001a14  8fc10000	lw	r1,(r30)
  994  00001a18  8fc2fff4	lw	r2,-12(r30)
  995  00001a1c  90210000	lbu	r1,(r1)
  996  00001a20  90420000	lbu	r2,(r2)
  997  00001a24  00220828	seq	r1,r1,r2
  998  00001a28  10200010	beqz	r1,L51_LF2
  999  00001a2c  54000000	nop; delay slot nop
 1000  00001a30  8fc10000	lw	r1,(r30)
 1001  00001a34  08000030	j	L45_LF2
 1002  00001a38  54000000	nop; delay slot nop
 1003  00001a3c          	L53_LF2:
 1004  00001a3c          	L51_LF2:
 1005  00001a3c  8fc2fff4	lw	r2,-12(r30)
 1006  00001a40  20410001	addi	r1,r2,#1
 1007  00001a44  00011020	add	r2,r0,r1
 1008  00001a48  afc2fff4	sw	-12(r30),r2
 1009  00001a4c  0bffffa8	j	L49_LF2
 1010  00001a50  54000000	nop; delay slot nop
 1011  00001a54          	L50_LF2:
 1012  00001a54  0bffff7c	j	L46_LF2
 1013  00001a58  54000000	nop; delay slot nop
 1014  00001a5c          	L47_LF2:
 1015  00001a5c  20010000	addi	r1,r0,#0
 1016  00001a60  08000004	j	L45_LF2
 1017  00001a64  54000000	nop; delay slot nop
 1018  00001a68          	L45_LF2:
 1019  00001a68  8fa20000	lw	r2,0(r29)
 1020  00001a6c  8fdffff8	lw	r31,-8(r30)
 1021  00001a70  001ee820	add	r29,r0,r30
 1022  00001a74  8fdefffc	lw	r30,-4(r30)
 1023  00001a78  4be00000	jr	r31
 1024  00001a7c  54000000	nop
 1025  00001a80          	.endproc _dmindex
 1026  00001a80          	.align 2
 1027  00001a80          	.proc _dindex
 1028  00001a80          	.global _dindex
 1029  00001a80          	_dindex:
 1030                      ;  Function 'dindex'; 0 bytes of locals, 1 regs to save.
 1031  00001a80  afbefffc	sw	-4(r29),r30; push fp
 1032  00001a84  001df020	add	r30,r0,r29; fp = sp
 1033  00001a88  afbffff8	sw	-8(r29),r31; push ret addr
 1034  00001a8c  2fbd0010	subui	r29,r29,#16; alloc local storage
 1035  00001a90  afa20000	sw	0(r29),r2
 1036  00001a94  54000000	nop
 1037  00001a98          	L55_LF2:
 1038  00001a98  8fc10000	lw	r1,(r30)
 1039  00001a9c  90220000	lbu	r2,(r1)
 1040  00001aa0  64410000	snei	r1,r2,#0
 1041  00001aa4  1420000c	bnez	r1,L57_LF2
 1042  00001aa8  54000000	nop; delay slot nop
 1043  00001aac  08000040	j	L56_LF2
 1044  00001ab0  54000000	nop; delay slot nop
 1045  00001ab4          	L57_LF2:
 1046  00001ab4  8fc10000	lw	r1,(r30)
 1047  00001ab8  90220000	lbu	r2,(r1)
 1048  00001abc  8fc10004	lw	r1,4(r30)
 1049  00001ac0  00411028	seq	r2,r2,r1
 1050  00001ac4  10400010	beqz	r2,L58_LF2
 1051  00001ac8  54000000	nop; delay slot nop
 1052  00001acc  8fc10000	lw	r1,(r30)
 1053  00001ad0  08000028	j	L54_LF2
 1054  00001ad4  54000000	nop; delay slot nop
 1055  00001ad8          	L58_LF2:
 1056  00001ad8  8fc20000	lw	r2,(r30)
 1057  00001adc  20410001	addi	r1,r2,#1
 1058  00001ae0  00011020	add	r2,r0,r1
 1059  00001ae4  afc20000	sw	(r30),r2
 1060  00001ae8  0bffffac	j	L55_LF2
 1061  00001aec  54000000	nop; delay slot nop
 1062  00001af0          	L56_LF2:
 1063  00001af0  20010000	addi	r1,r0,#0
 1064  00001af4  08000004	j	L54_LF2
 1065  00001af8  54000000	nop; delay slot nop
 1066  00001afc          	L54_LF2:
 1067  00001afc  8fa20000	lw	r2,0(r29)
 1068  00001b00  8fdffff8	lw	r31,-8(r30)
 1069  00001b04  001ee820	add	r29,r0,r30
 1070  00001b08  8fdefffc	lw	r30,-4(r30)
 1071  00001b0c  4be00000	jr	r31
 1072  00001b10  54000000	nop
 1073  00001b14          	.endproc _dindex
 1074  00001b14          	.align 2
 1075  00001b14          	.proc _ditoa
 1076  00001b14          	.global _ditoa
 1077  00001b14          	_ditoa:
 1078                      ;  Function 'ditoa'; 8 bytes of locals, 2 regs to save.
 1079  00001b14  afbefffc	sw	-4(r29),r30; push fp
 1080  00001b18  001df020	add	r30,r0,r29; fp = sp
 1081  00001b1c  afbffff8	sw	-8(r29),r31; push ret addr
 1082  00001b20  2fbd0018	subui	r29,r29,#24; alloc local storage
 1083  00001b24  afa20000	sw	0(r29),r2
 1084  00001b28  afa30004	sw	4(r29),r3
 1085  00001b2c  8fc10000	lw	r1,(r30)
 1086  00001b30  68220000	slti	r2,r1,#0
 1087  00001b34  1040002c	beqz	r2,L60_LF2
 1088  00001b38  54000000	nop; delay slot nop
 1089  00001b3c  8fc10004	lw	r1,4(r30)
 1090  00001b40  20220001	addi	r2,r1,#1
 1091  00001b44  afc20004	sw	4(r30),r2
 1092  00001b48  2002002d	addi	r2,r0,(#0x2d)&0xff
 1093  00001b4c  a0220000	sb	(r1),r2
 1094  00001b50  8fc10000	lw	r1,(r30)
 1095  00001b54  00011022	sub	r2,r0,r1
 1096  00001b58  afc20000	sw	(r30),r2
 1097  00001b5c  08000118	j	L61_LF2
 1098  00001b60  54000000	nop; delay slot nop
 1099  00001b64          	L60_LF2:
 1100  00001b64  8fc10000	lw	r1,(r30)
 1101  00001b68  64220000	snei	r2,r1,#0
 1102  00001b6c  14400020	bnez	r2,L62_LF2
 1103  00001b70  54000000	nop; delay slot nop
 1104  00001b74  8fc10004	lw	r1,4(r30)
 1105  00001b78  20220001	addi	r2,r1,#1
 1106  00001b7c  afc20004	sw	4(r30),r2
 1107  00001b80  20020030	addi	r2,r0,(#0x30)&0xff
 1108  00001b84  a0220000	sb	(r1),r2
 1109  00001b88  080000ec	j	L61_LF2
 1110  00001b8c  54000000	nop; delay slot nop
 1111  00001b90          	L62_LF2:
 1112  00001b90  20010001	addi	r1,r0,#1
 1113  00001b94  afc1fff4	sw	-12(r30),r1
 1114  00001b98          	L64_LF2:
 1115  00001b98  8fc1fff4	lw	r1,-12(r30)
 1116  00001b9c  8fc20000	lw	r2,(r30)
 1117  00001ba0  0022082c	sle	r1,r1,r2
 1118  00001ba4  1420000c	bnez	r1,L66_LF2
 1119  00001ba8  54000000	nop; delay slot nop
 1120  00001bac  08000024	j	L65_LF2
 1121  00001bb0  54000000	nop; delay slot nop
 1122  00001bb4          	L67_LF2:
 1123  00001bb4          	L66_LF2:
 1124  00001bb4  8fc1fff4	lw	r1,-12(r30)
 1125  00001bb8  00011820	add	r3,r0,r1
 1126  00001bbc  50620002	slli	r2,r3,#0x2
 1127  00001bc0  00411020	add	r2,r2,r1
 1128  00001bc4  50410001	slli	r1,r2,#0x1
 1129  00001bc8  afc1fff4	sw	-12(r30),r1
 1130  00001bcc  0bffffc8	j	L64_LF2
 1131  00001bd0  54000000	nop; delay slot nop
 1132  00001bd4          	L65_LF2:
 1133  00001bd4  54000000	nop
 1134  00001bd8          	L68_LF2:
 1135  00001bd8  8fc1fff4	lw	r1,-12(r30)
 1136  00001bdc  2002000a	addi	r2,r0,#10
 1137  00001be0  00200035	movi2fp	f0,r1
 1138  00001be4  00400835	movi2fp	f1,r2
 1139  00001be8  0401000f	div	f0,f0,f1
 1140  00001bec  00000834	movfp2i	r1,f0
 1141  00001bf0  afc1fff4	sw	-12(r30),r1
 1142  00001bf4  8fc10004	lw	r1,4(r30)
 1143  00001bf8  20220001	addi	r2,r1,#1
 1144  00001bfc  afc20004	sw	4(r30),r2
 1145  00001c00  8fc20000	lw	r2,(r30)
 1146  00001c04  8fc3fff4	lw	r3,-12(r30)
 1147  00001c08  00400035	movi2fp	f0,r2
 1148  00001c0c  00600835	movi2fp	f1,r3
 1149  00001c10  0401000f	div	f0,f0,f1
 1150  00001c14  00001034	movfp2i	r2,f0
 1151  00001c18  00021820	add	r3,r0,r2
 1152  00001c1c  20620030	addi	r2,r3,#48
 1153  00001c20  a0220000	sb	(r1),r2
 1154  00001c24  8fc10000	lw	r1,(r30)
 1155  00001c28  8fc3fff4	lw	r3,-12(r30)
 1156  00001c2c  00200035	movi2fp	f0,r1
 1157  00001c30  00600835	movi2fp	f1,r3
 1158  00001c34  0401000f	div	f0,f0,f1
 1159  00001c38  00001034	movfp2i	r2,f0
 1160  00001c3c  8fc3fff4	lw	r3,-12(r30)
 1161  00001c40  00400035	movi2fp	f0,r2
 1162  00001c44  00600835	movi2fp	f1,r3
 1163  00001c48  0401000e	mult	f0,f0,f1
 1164  00001c4c  00001034	movfp2i	r2,f0
 1165  00001c50  00220822	sub	r1,r1,r2
 1166  00001c54  afc10000	sw	(r30),r1
 1167  00001c58          	L70_LF2:
 1168  00001c58  8fc1fff4	lw	r1,-12(r30)
 1169  00001c5c  6c220001	sgti	r2,r1,#1
 1170  00001c60  1440000c	bnez	r2,L71_LF2
 1171  00001c64  54000000	nop; delay slot nop
 1172  00001c68  0800000c	j	L61_LF2
 1173  00001c6c  54000000	nop; delay slot nop
 1174  00001c70          	L71_LF2:
 1175  00001c70  0bffff64	j	L68_LF2
 1176  00001c74  54000000	nop; delay slot nop
 1177  00001c78          	L69_LF2:
 1178  00001c78          	L63_LF2:
 1179  00001c78          	L61_LF2:
 1180  00001c78  8fc10004	lw	r1,4(r30)
 1181  00001c7c  20020000	addi	r2,r0,(#0x0)&0xff
 1182  00001c80  a0220000	sb	(r1),r2
 1183  00001c84          	L59_LF2:
 1184  00001c84  8fa20000	lw	r2,0(r29)
 1185  00001c88  8fa30004	lw	r3,4(r29)
 1186  00001c8c  8fdffff8	lw	r31,-8(r30)
 1187  00001c90  001ee820	add	r29,r0,r30
 1188  00001c94  8fdefffc	lw	r30,-4(r30)
 1189  00001c98  4be00000	jr	r31
 1190  00001c9c  54000000	nop
 1191  00001ca0          	.endproc _ditoa
 1192  00001ca0          	.align 2
 1193  00001ca0          	.proc _dstrtol
 1194  00001ca0          	.global _dstrtol
 1195  00001ca0          	_dstrtol:
 1196                      ;  Function 'dstrtol'; 16 bytes of locals, 1 regs to save.
 1197  00001ca0  afbefffc	sw	-4(r29),r30; push fp
 1198  00001ca4  001df020	add	r30,r0,r29; fp = sp
 1199  00001ca8  afbffff8	sw	-8(r29),r31; push ret addr
 1200  00001cac  2fbd0020	subui	r29,r29,#32; alloc local storage
 1201  00001cb0  afa20000	sw	0(r29),r2
 1202  00001cb4  20010000	addi	r1,r0,#0
 1203  00001cb8  afc1fff4	sw	-12(r30),r1
 1204  00001cbc          	L73_LF2:
 1205  00001cbc  8fc10000	lw	r1,(r30)
 1206  00001cc0  90220000	lbu	r2,(r1)
 1207  00001cc4  60410020	seqi	r1,r2,#32
 1208  00001cc8  14200034	bnez	r1,L75_LF2
 1209  00001ccc  54000000	nop; delay slot nop
 1210  00001cd0  8fc10000	lw	r1,(r30)
 1211  00001cd4  90220000	lbu	r2,(r1)
 1212  00001cd8  60410009	seqi	r1,r2,#9
 1213  00001cdc  14200020	bnez	r1,L75_LF2
 1214  00001ce0  54000000	nop; delay slot nop
 1215  00001ce4  8fc10000	lw	r1,(r30)
 1216  00001ce8  90220000	lbu	r2,(r1)
 1217  00001cec  6041000a	seqi	r1,r2,#10
 1218  00001cf0  1420000c	bnez	r1,L75_LF2
 1219  00001cf4  54000000	nop; delay slot nop
 1220  00001cf8  0800001c	j	L74_LF2
 1221  00001cfc  54000000	nop; delay slot nop
 1222  00001d00          	L75_LF2:
 1223  00001d00  8fc20000	lw	r2,(r30)
 1224  00001d04  20410001	addi	r1,r2,#1
 1225  00001d08  00011020	add	r2,r0,r1
 1226  00001d0c  afc20000	sw	(r30),r2
 1227  00001d10  0bffffa8	j	L73_LF2
 1228  00001d14  54000000	nop; delay slot nop
 1229  00001d18          	L74_LF2:
 1230  00001d18  8fc10004	lw	r1,4(r30)
 1231  00001d1c  64220000	snei	r2,r1,#0
 1232  00001d20  10400010	beqz	r2,L76_LF2
 1233  00001d24  54000000	nop; delay slot nop
 1234  00001d28  8fc10004	lw	r1,4(r30)
 1235  00001d2c  8fc20000	lw	r2,(r30)
 1236  00001d30  ac220000	sw	(r1),r2
 1237  00001d34          	L76_LF2:
 1238  00001d34  8fc10000	lw	r1,(r30)
 1239  00001d38  90220000	lbu	r2,(r1)
 1240  00001d3c  64410000	snei	r1,r2,#0
 1241  00001d40  14200010	bnez	r1,L77_LF2
 1242  00001d44  54000000	nop; delay slot nop
 1243  00001d48  8fc1fff4	lw	r1,-12(r30)
 1244  00001d4c  08000294	j	L72_LF2
 1245  00001d50  54000000	nop; delay slot nop
 1246  00001d54          	L77_LF2:
 1247  00001d54  8fc10000	lw	r1,(r30)
 1248  00001d58  90220000	lbu	r2,(r1)
 1249  00001d5c  6041002d	seqi	r1,r2,#45
 1250  00001d60  10200024	beqz	r1,L78_LF2
 1251  00001d64  54000000	nop; delay slot nop
 1252  00001d68  2001ffff	addi	r1,r0,#-1
 1253  00001d6c  afc1ffec	sw	-20(r30),r1
 1254  00001d70  8fc20000	lw	r2,(r30)
 1255  00001d74  20410001	addi	r1,r2,#1
 1256  00001d78  00011020	add	r2,r0,r1
 1257  00001d7c  afc20000	sw	(r30),r2
 1258  00001d80  0800000c	j	L79_LF2
 1259  00001d84  54000000	nop; delay slot nop
 1260  00001d88          	L78_LF2:
 1261  00001d88  20010001	addi	r1,r0,#1
 1262  00001d8c  afc1ffec	sw	-20(r30),r1
 1263  00001d90          	L79_LF2:
 1264  00001d90  8fc10008	lw	r1,8(r30)
 1265  00001d94  64220000	snei	r2,r1,#0
 1266  00001d98  14400090	bnez	r2,L80_LF2
 1267  00001d9c  54000000	nop; delay slot nop
 1268  00001da0  8fc10000	lw	r1,(r30)
 1269  00001da4  90220000	lbu	r2,(r1)
 1270  00001da8  60410030	seqi	r1,r2,#48
 1271  00001dac  10200074	beqz	r1,L81_LF2
 1272  00001db0  54000000	nop; delay slot nop
 1273  00001db4  8fc20000	lw	r2,(r30)
 1274  00001db8  20410001	addi	r1,r2,#1
 1275  00001dbc  00011020	add	r2,r0,r1
 1276  00001dc0  afc20000	sw	(r30),r2
 1277  00001dc4  8fc10000	lw	r1,(r30)
 1278  00001dc8  90220000	lbu	r2,(r1)
 1279  00001dcc  60410078	seqi	r1,r2,#120
 1280  00001dd0  14200020	bnez	r1,L83_LF2
 1281  00001dd4  54000000	nop; delay slot nop
 1282  00001dd8  8fc10000	lw	r1,(r30)
 1283  00001ddc  90220000	lbu	r2,(r1)
 1284  00001de0  60410058	seqi	r1,r2,#88
 1285  00001de4  1420000c	bnez	r1,L83_LF2
 1286  00001de8  54000000	nop; delay slot nop
 1287  00001dec  08000024	j	L82_LF2
 1288  00001df0  54000000	nop; delay slot nop
 1289  00001df4          	L83_LF2:
 1290  00001df4  20010010	addi	r1,r0,#16
 1291  00001df8  afc10008	sw	8(r30),r1
 1292  00001dfc  8fc20000	lw	r2,(r30)
 1293  00001e00  20410001	addi	r1,r2,#1
 1294  00001e04  00011020	add	r2,r0,r1
 1295  00001e08  afc20000	sw	(r30),r2
 1296  00001e0c  0800000c	j	L84_LF2
 1297  00001e10  54000000	nop; delay slot nop
 1298  00001e14          	L82_LF2:
 1299  00001e14  20010008	addi	r1,r0,#8
 1300  00001e18  afc10008	sw	8(r30),r1
 1301  00001e1c          	L84_LF2:
 1302  00001e1c  0800000c	j	L80_LF2
 1303  00001e20  54000000	nop; delay slot nop
 1304  00001e24          	L81_LF2:
 1305  00001e24  2001000a	addi	r1,r0,#10
 1306  00001e28  afc10008	sw	8(r30),r1
 1307  00001e2c          	L85_LF2:
 1308  00001e2c          	L80_LF2:
 1309  00001e2c  8fc10008	lw	r1,8(r30)
 1310  00001e30  70220000	slei	r2,r1,#0
 1311  00001e34  1440001c	bnez	r2,L87_LF2
 1312  00001e38  54000000	nop; delay slot nop
 1313  00001e3c  8fc10008	lw	r1,8(r30)
 1314  00001e40  6c220010	sgti	r2,r1,#16
 1315  00001e44  1440000c	bnez	r2,L87_LF2
 1316  00001e48  54000000	nop; delay slot nop
 1317  00001e4c  08000010	j	L86_LF2
 1318  00001e50  54000000	nop; delay slot nop
 1319  00001e54          	L87_LF2:
 1320  00001e54  8fc1fff4	lw	r1,-12(r30)
 1321  00001e58  08000188	j	L72_LF2
 1322  00001e5c  54000000	nop; delay slot nop
 1323  00001e60          	L86_LF2:
 1324  00001e60  54000000	nop
 1325  00001e64          	L88_LF2:
 1326  00001e64  8fc10000	lw	r1,(r30)
 1327  00001e68  90220000	lbu	r2,(r1)
 1328  00001e6c  6c41002f	sgtui	r1,r2,#47
 1329  00001e70  10200030	beqz	r1,L91_LF2
 1330  00001e74  54000000	nop; delay slot nop
 1331  00001e78  8fc10000	lw	r1,(r30)
 1332  00001e7c  90220000	lbu	r2,(r1)
 1333  00001e80  70410039	sleui	r1,r2,#57
 1334  00001e84  1020001c	beqz	r1,L91_LF2
 1335  00001e88  54000000	nop; delay slot nop
 1336  00001e8c  8fc10000	lw	r1,(r30)
 1337  00001e90  90220000	lbu	r2,(r1)
 1338  00001e94  2041ffd0	addi	r1,r2,#-48
 1339  00001e98  afc1fff0	sw	-16(r30),r1
 1340  00001e9c  0800008c	j	L92_LF2
 1341  00001ea0  54000000	nop; delay slot nop
 1342  00001ea4          	L91_LF2:
 1343  00001ea4  8fc10000	lw	r1,(r30)
 1344  00001ea8  90220000	lbu	r2,(r1)
 1345  00001eac  6c410060	sgtui	r1,r2,#96
 1346  00001eb0  10200030	beqz	r1,L93_LF2
 1347  00001eb4  54000000	nop; delay slot nop
 1348  00001eb8  8fc10000	lw	r1,(r30)
 1349  00001ebc  90220000	lbu	r2,(r1)
 1350  00001ec0  7041007a	sleui	r1,r2,#122
 1351  00001ec4  1020001c	beqz	r1,L93_LF2
 1352  00001ec8  54000000	nop; delay slot nop
 1353  00001ecc  8fc10000	lw	r1,(r30)
 1354  00001ed0  90220000	lbu	r2,(r1)
 1355  00001ed4  2041ffa9	addi	r1,r2,#-87
 1356  00001ed8  afc1fff0	sw	-16(r30),r1
 1357  00001edc  0800004c	j	L92_LF2
 1358  00001ee0  54000000	nop; delay slot nop
 1359  00001ee4          	L93_LF2:
 1360  00001ee4  8fc10000	lw	r1,(r30)
 1361  00001ee8  90220000	lbu	r2,(r1)
 1362  00001eec  6c410040	sgtui	r1,r2,#64
 1363  00001ef0  10200030	beqz	r1,L95_LF2
 1364  00001ef4  54000000	nop; delay slot nop
 1365  00001ef8  8fc10000	lw	r1,(r30)
 1366  00001efc  90220000	lbu	r2,(r1)
 1367  00001f00  7041005a	sleui	r1,r2,#90
 1368  00001f04  1020001c	beqz	r1,L95_LF2
 1369  00001f08  54000000	nop; delay slot nop
 1370  00001f0c  8fc10000	lw	r1,(r30)
 1371  00001f10  90220000	lbu	r2,(r1)
 1372  00001f14  2041ffc9	addi	r1,r2,#-55
 1373  00001f18  afc1fff0	sw	-16(r30),r1
 1374  00001f1c  0800000c	j	L92_LF2
 1375  00001f20  54000000	nop; delay slot nop
 1376  00001f24          	L95_LF2:
 1377  00001f24  200103e8	addi	r1,r0,#1000
 1378  00001f28  afc1fff0	sw	-16(r30),r1
 1379  00001f2c          	L96_LF2:
 1380  00001f2c          	L94_LF2:
 1381  00001f2c          	L92_LF2:
 1382  00001f2c  8fc1fff0	lw	r1,-16(r30)
 1383  00001f30  8fc20008	lw	r2,8(r30)
 1384  00001f34  0022082a	slt	r1,r1,r2
 1385  00001f38  10200040	beqz	r1,L90_LF2
 1386  00001f3c  54000000	nop; delay slot nop
 1387  00001f40  8fc1fff4	lw	r1,-12(r30)
 1388  00001f44  8fc20008	lw	r2,8(r30)
 1389  00001f48  00200035	movi2fp	f0,r1
 1390  00001f4c  00400835	movi2fp	f1,r2
 1391  00001f50  0401000e	mult	f0,f0,f1
 1392  00001f54  00000834	movfp2i	r1,f0
 1393  00001f58  afc1fff4	sw	-12(r30),r1
 1394  00001f5c  8fc1fff4	lw	r1,-12(r30)
 1395  00001f60  8fc2fff0	lw	r2,-16(r30)
 1396  00001f64  00220820	add	r1,r1,r2
 1397  00001f68  afc1fff4	sw	-12(r30),r1
 1398  00001f6c  8fc20000	lw	r2,(r30)
 1399  00001f70  20410001	addi	r1,r2,#1
 1400  00001f74  00011020	add	r2,r0,r1
 1401  00001f78  afc20000	sw	(r30),r2
 1402  00001f7c          	L97_LF2:
 1403  00001f7c          	L90_LF2:
 1404  00001f7c  8fc1fff0	lw	r1,-16(r30)
 1405  00001f80  8fc20008	lw	r2,8(r30)
 1406  00001f84  0022082a	slt	r1,r1,r2
 1407  00001f88  1420000c	bnez	r1,L98_LF2
 1408  00001f8c  54000000	nop; delay slot nop
 1409  00001f90  0800000c	j	L89_LF2
 1410  00001f94  54000000	nop; delay slot nop
 1411  00001f98          	L98_LF2:
 1412  00001f98  0bfffec8	j	L88_LF2
 1413  00001f9c  54000000	nop; delay slot nop
 1414  00001fa0          	L89_LF2:
 1415  00001fa0  8fc10004	lw	r1,4(r30)
 1416  00001fa4  64220000	snei	r2,r1,#0
 1417  00001fa8  10400010	beqz	r2,L99_LF2
 1418  00001fac  54000000	nop; delay slot nop
 1419  00001fb0  8fc10004	lw	r1,4(r30)
 1420  00001fb4  8fc20000	lw	r2,(r30)
 1421  00001fb8  ac220000	sw	(r1),r2
 1422  00001fbc          	L99_LF2:
 1423  00001fbc  8fc1fff4	lw	r1,-12(r30)
 1424  00001fc0  8fc2ffec	lw	r2,-20(r30)
 1425  00001fc4  00200035	movi2fp	f0,r1
 1426  00001fc8  00400835	movi2fp	f1,r2
 1427  00001fcc  0401000e	mult	f0,f0,f1
 1428  00001fd0  00000834	movfp2i	r1,f0
 1429  00001fd4  afc1fff4	sw	-12(r30),r1
 1430  00001fd8  8fc1fff4	lw	r1,-12(r30)
 1431  00001fdc  08000004	j	L72_LF2
 1432  00001fe0  54000000	nop; delay slot nop
 1433  00001fe4          	L72_LF2:
 1434  00001fe4  8fa20000	lw	r2,0(r29)
 1435  00001fe8  8fdffff8	lw	r31,-8(r30)
 1436  00001fec  001ee820	add	r29,r0,r30
 1437  00001ff0  8fdefffc	lw	r30,-4(r30)
 1438  00001ff4  4be00000	jr	r31
 1439  00001ff8  54000000	nop
 1440  00001ffc          	.endproc _dstrtol
 1441  00001ffc          	.align 2
 1442  00001ffc          	.proc _bcopy
 1443  00001ffc          	.global _bcopy
 1444  00001ffc          	_bcopy:
 1445                      ;  Function 'bcopy'; 0 bytes of locals, 2 regs to save.
 1446  00001ffc  afbefffc	sw	-4(r29),r30; push fp
 1447  00002000  001df020	add	r30,r0,r29; fp = sp
 1448  00002004  afbffff8	sw	-8(r29),r31; push ret addr
 1449  00002008  2fbd0010	subui	r29,r29,#16; alloc local storage
 1450  0000200c  afa20000	sw	0(r29),r2
 1451  00002010  afa30004	sw	4(r29),r3
 1452  00002014  54000000	nop
 1453  00002018          	L101_LF2:
 1454  00002018  8fc10008	lw	r1,8(r30)
 1455  0000201c  2022ffff	addi	r2,r1,#-1
 1456  00002020  afc20008	sw	8(r30),r2
 1457  00002024  6c210000	sgti	r1,r1,#0
 1458  00002028  1420000c	bnez	r1,L103_LF2
 1459  0000202c  54000000	nop; delay slot nop
 1460  00002030  0800002c	j	L102_LF2
 1461  00002034  54000000	nop; delay slot nop
 1462  00002038          	L103_LF2:
 1463  00002038  8fc10004	lw	r1,4(r30)
 1464  0000203c  20220001	addi	r2,r1,#1
 1465  00002040  afc20004	sw	4(r30),r2
 1466  00002044  8fc20000	lw	r2,(r30)
 1467  00002048  20430001	addi	r3,r2,#1
 1468  0000204c  afc30000	sw	(r30),r3
 1469  00002050  80420000	lb	r2,(r2)
 1470  00002054  a0220000	sb	(r1),r2
 1471  00002058  0bffffbc	j	L101_LF2
 1472  0000205c  54000000	nop; delay slot nop
 1473  00002060          	L102_LF2:
 1474  00002060          	L100_LF2:
 1475  00002060  8fa20000	lw	r2,0(r29)
 1476  00002064  8fa30004	lw	r3,4(r29)
 1477  00002068  8fdffff8	lw	r31,-8(r30)
 1478  0000206c  001ee820	add	r29,r0,r30
 1479  00002070  8fdefffc	lw	r30,-4(r30)
 1480  00002074  4be00000	jr	r31
 1481  00002078  54000000	nop
 1482  0000207c          	.endproc _bcopy
 1483  0000207c          	.align 2
 1484  0000207c          	.proc _bzero
 1485  0000207c          	.global _bzero
 1486  0000207c          	_bzero:
 1487                      ;  Function 'bzero'; 0 bytes of locals, 1 regs to save.
 1488  0000207c  afbefffc	sw	-4(r29),r30; push fp
 1489  00002080  001df020	add	r30,r0,r29; fp = sp
 1490  00002084  afbffff8	sw	-8(r29),r31; push ret addr
 1491  00002088  2fbd0010	subui	r29,r29,#16; alloc local storage
 1492  0000208c  afa20000	sw	0(r29),r2
 1493  00002090  54000000	nop
 1494  00002094          	L105_LF2:
 1495  00002094  8fc10004	lw	r1,4(r30)
 1496  00002098  2022ffff	addi	r2,r1,#-1
 1497  0000209c  afc20004	sw	4(r30),r2
 1498  000020a0  6c210000	sgti	r1,r1,#0
 1499  000020a4  1420000c	bnez	r1,L107_LF2
 1500  000020a8  54000000	nop; delay slot nop
 1501  000020ac  08000020	j	L106_LF2
 1502  000020b0  54000000	nop; delay slot nop
 1503  000020b4          	L107_LF2:
 1504  000020b4  8fc10000	lw	r1,(r30)
 1505  000020b8  20220001	addi	r2,r1,#1
 1506  000020bc  afc20000	sw	(r30),r2
 1507  000020c0  20020000	addi	r2,r0,(#0x0)&0xff
 1508  000020c4  a0220000	sb	(r1),r2
 1509  000020c8  0bffffc8	j	L105_LF2
 1510  000020cc  54000000	nop; delay slot nop
 1511  000020d0          	L106_LF2:
 1512  000020d0          	L104_LF2:
 1513  000020d0  8fa20000	lw	r2,0(r29)
 1514  000020d4  8fdffff8	lw	r31,-8(r30)
 1515  000020d8  001ee820	add	r29,r0,r30
 1516  000020dc  8fdefffc	lw	r30,-4(r30)
 1517  000020e0  4be00000	jr	r31
 1518  000020e4  54000000	nop
 1519  000020e8          	.endproc _bzero
 1520  000020e8          	.align 2
 1521  000020e8          	.proc _min
 1522  000020e8          	.global _min
 1523  000020e8          	_min:
 1524                      ;  Function 'min'; 0 bytes of locals, 2 regs to save.
 1525  000020e8  afbefffc	sw	-4(r29),r30; push fp
 1526  000020ec  001df020	add	r30,r0,r29; fp = sp
 1527  000020f0  afbffff8	sw	-8(r29),r31; push ret addr
 1528  000020f4  2fbd0010	subui	r29,r29,#16; alloc local storage
 1529  000020f8  afa20000	sw	0(r29),r2
 1530  000020fc  afa30004	sw	4(r29),r3
 1531  00002100  8fc10000	lw	r1,(r30)
 1532  00002104  8fc20004	lw	r2,4(r30)
 1533  00002108  0022182c	sle	r3,r1,r2
 1534  0000210c  14600008	bnez	r3,L109_LF2
 1535  00002110  54000000	nop; delay slot nop
 1536  00002114  8fc10004	lw	r1,4(r30)
 1537  00002118          	L109_LF2:
 1538  00002118  08000004	j	L108_LF2
 1539  0000211c  54000000	nop; delay slot nop
 1540  00002120          	L108_LF2:
 1541  00002120  8fa20000	lw	r2,0(r29)
 1542  00002124  8fa30004	lw	r3,4(r29)
 1543  00002128  8fdffff8	lw	r31,-8(r30)
 1544  0000212c  001ee820	add	r29,r0,r30
 1545  00002130  8fdefffc	lw	r30,-4(r30)
 1546  00002134  4be00000	jr	r31
 1547  00002138  54000000	nop
 1548  0000213c          	.endproc _min
 1549  0000213c          	.align 2
 1550  0000213c          	.proc _max
 1551  0000213c          	.global _max
 1552  0000213c          	_max:
 1553                      ;  Function 'max'; 0 bytes of locals, 2 regs to save.
 1554  0000213c  afbefffc	sw	-4(r29),r30; push fp
 1555  00002140  001df020	add	r30,r0,r29; fp = sp
 1556  00002144  afbffff8	sw	-8(r29),r31; push ret addr
 1557  00002148  2fbd0010	subui	r29,r29,#16; alloc local storage
 1558  0000214c  afa20000	sw	0(r29),r2
 1559  00002150  afa30004	sw	4(r29),r3
 1560  00002154  8fc10000	lw	r1,(r30)
 1561  00002158  8fc20004	lw	r2,4(r30)
 1562  0000215c  0022182d	sge	r3,r1,r2
 1563  00002160  14600008	bnez	r3,L111_LF2
 1564  00002164  54000000	nop; delay slot nop
 1565  00002168  8fc10004	lw	r1,4(r30)
 1566  0000216c          	L111_LF2:
 1567  0000216c  08000004	j	L110_LF2
 1568  00002170  54000000	nop; delay slot nop
 1569  00002174          	L110_LF2:
 1570  00002174  8fa20000	lw	r2,0(r29)
 1571  00002178  8fa30004	lw	r3,4(r29)
 1572  0000217c  8fdffff8	lw	r31,-8(r30)
 1573  00002180  001ee820	add	r29,r0,r30
 1574  00002184  8fdefffc	lw	r30,-4(r30)
 1575  00002188  4be00000	jr	r31
 1576  0000218c  54000000	nop
 1577  00002190          	.endproc _max
 1578                      ;;; Ethan L. Miller, 1999.  Released to the public domain
 1579                      ;;;
 1580                      ;;; Most of the traps are called in files from libtraps.
 1583  00002190          	.align 2
 1584  00002190          	.proc _exit
 1585  00002190          	.global _exit
 1586  00002190          	_exit:
 1587  00002190  44000300	trap	#0x300
 1588  00002194  4be00000	jr	r31
 1589  00002198  54000000	nop
 1590  0000219c          	.endproc _exit
 1592                      ; for the benefit of gcc.
 1593  0000219c          	.proc ___main
 1594  0000219c          	.global ___main
 1595  0000219c          	___main:
 1596  0000219c  4be00000	jr	r31
 1597  000021a0  54000000	nop
 1598  000021a4          	.endproc ___main
 1599  000021a4          	.text
 1600  000021a4          	.global _etext
 1601  000021a4          	_etext:
 1602  000021a4          	.align 3
 1603  000021a8          	.data
 1604  00003137          	.global _edata
 1605  00003137          	_edata:
