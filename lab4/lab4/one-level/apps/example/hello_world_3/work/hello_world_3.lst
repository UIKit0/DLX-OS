 line   address	contents
    1                      ; Linked by DLX-LD.
    2                      ; MemSize 24576
    3                      ; Data size: 287
    4                      ; Text size: 4528
    5                      ; Stack size: 8192
    6  00000000          	.text 0x1000
    7  00001000          	.data 0x3000
    8                      ; Compiled by GCC
    9  00003000          	.text
   10  00001000          	.align 2
   11  00001000          	.proc _isspace
   12  00001000          	.global _isspace
   13  00001000          	_isspace:
   14                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
   15  00001000  afbefffc	sw	-4(r29),r30; push fp
   16  00001004  001df020	add	r30,r0,r29; fp = sp
   17  00001008  afbffff8	sw	-8(r29),r31; push ret addr
   18  0000100c  2fbd0010	subui	r29,r29,#16; alloc local storage
   19  00001010  afa20000	sw	0(r29),r2
   20  00001014  83c20003	lb	r2,3(r30)
   21  00001018  201f0000	addi	r31,r0,#0
   22  0000101c  304100ff	andi	r1,r2,#0x00ff
   23  00001020  60210020	seqi	r1,r1,#32
   24  00001024  14200018	bnez	r1,L6_LF0
   25  00001028  54000000	nop; not filled.
   26  0000102c  2041fff7	addi	r1,r2,#-9
   27  00001030  302100ff	andi	r1,r1,#0x00ff
   28  00001034  70210001	sleui	r1,r1,#1
   29  00001038  10200008	beqz	r1,L5_LF0
   30  0000103c  54000000	nop; not filled.
   31  00001040          	L6_LF0:
   32  00001040  201f0001	addi	r31,r0,#1
   33  00001044          	L5_LF0:
   34  00001044  001f0820	add	r1,r0,r31
   35  00001048  8fa20000	lw	r2,0(r29)
   36  0000104c  8fdffff8	lw	r31,-8(r30)
   37  00001050  001ee820	add	r29,r0,r30
   38  00001054  8fdefffc	lw	r30,-4(r30)
   39  00001058  4be00000	jr	r31
   40  0000105c  54000000	nop
   41  00001060          	.endproc _isspace
   42  00001060          	.align 2
   43  00001060          	.proc _isxdigit
   44  00001060          	.global _isxdigit
   45  00001060          	_isxdigit:
   46                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
   47  00001060  afbefffc	sw	-4(r29),r30; push fp
   48  00001064  001df020	add	r30,r0,r29; fp = sp
   49  00001068  afbffff8	sw	-8(r29),r31; push ret addr
   50  0000106c  2fbd0010	subui	r29,r29,#16; alloc local storage
   51  00001070  afa20000	sw	0(r29),r2
   52  00001074  83df0003	lb	r31,3(r30)
   53  00001078  20020000	addi	r2,r0,#0
   54  0000107c  23e1ffd0	addi	r1,r31,#-48
   55  00001080  302100ff	andi	r1,r1,#0x00ff
   56  00001084  70210009	sleui	r1,r1,#9
   57  00001088  14200028	bnez	r1,L12_LF0
   58  0000108c  54000000	nop; not filled.
   59  00001090  23e1ff9f	addi	r1,r31,#-97
   60  00001094  302100ff	andi	r1,r1,#0x00ff
   61  00001098  70210005	sleui	r1,r1,#5
   62  0000109c  14200014	bnez	r1,L12_LF0
   63  000010a0  54000000	nop; not filled.
   64  000010a4  33e100ff	andi	r1,r31,#0x00ff
   65  000010a8  64210041	snei	r1,r1,#65
   66  000010ac  14200008	bnez	r1,L11_LF0
   67  000010b0  54000000	nop; not filled.
   68  000010b4          	L12_LF0:
   69  000010b4  20020001	addi	r2,r0,#1
   70  000010b8          	L11_LF0:
   71  000010b8  00020820	add	r1,r0,r2
   72  000010bc  8fa20000	lw	r2,0(r29)
   73  000010c0  8fdffff8	lw	r31,-8(r30)
   74  000010c4  001ee820	add	r29,r0,r30
   75  000010c8  8fdefffc	lw	r30,-4(r30)
   76  000010cc  4be00000	jr	r31
   77  000010d0  54000000	nop
   78  000010d4          	.endproc _isxdigit
   79  000010d4          	.data
   80  00003000          	.align 2
   81  00003000          	_i6_LF0:
   82  00003000  00000064	.word 100
   83  00003004          	.align 2
   84  00003004          	LC0_LF0:
   85  00003004  55736167	.ascii "Usage: %s <handle_to_procs_completed_semaphore>\n\000"
   85  00003008  653a2025	
   85  0000300c  73203c68	
   85  00003010  616e646c	
   85  00003014  655f746f	
   85  00003018  5f70726f	
   85  0000301c  63735f63	
   85  00003020  6f6d706c	
   85  00003024  65746564	
   85  00003028  5f73656d	
   85  0000302c  6170686f	
   85  00003030  72653e0a	
   85  00003034  00      	
   86  00003035          	.align 2
   87  00003038          	LC1_LF0:
   88  00003038  54657374	.ascii "Testing user stack grow\n\000"
   88  0000303c  696e6720	
   88  00003040  75736572	
   88  00003044  20737461	
   88  00003048  636b2067	
   88  0000304c  726f770a	
   88  00003050  00      	
   89  00003051          	.align 2
   90  00003054          	LC2_LF0:
   91  00003054  68656c6c	.ascii "hello_world (%d): Bad semaphore s_procs_completed (%d)!\n\000"
   91  00003058  6f5f776f	
   91  0000305c  726c6420	
   91  00003060  28256429	
   91  00003064  3a204261	
   91  00003068  64207365	
   91  0000306c  6d617068	
   91  00003070  6f726520	
   91  00003074  735f7072	
   91  00003078  6f63735f	
   91  0000307c  636f6d70	
   91  00003080  6c657465	
   91  00003084  64202825	
   91  00003088  6429210a	
   91  0000308c  00      	
   92  0000308d          	.align 2
   93  00003090          	LC3_LF0:
   94  00003090  54657374	.ascii "Test case (3): Done!\n\000"
   94  00003094  20636173	
   94  00003098  65202833	
   94  0000309c  293a2044	
   94  000030a0  6f6e6521	
   94  000030a4  0a00    	
   95  000030a6          	.align 2
   96  000030a8          	LC4_LF0:
   97  000030a8  2d2d2d2d	.ascii "----------------------------------------------------------------------"
   97  000030ac  2d2d2d2d	
   97  000030b0  2d2d2d2d	
   97  000030b4  2d2d2d2d	
   97  000030b8  2d2d2d2d	
   97  000030bc  2d2d2d2d	
   97  000030c0  2d2d2d2d	
   97  000030c4  2d2d2d2d	
   97  000030c8  2d2d2d2d	
   97  000030cc  2d2d2d2d	
   97  000030d0  2d2d2d2d	
   97  000030d4  2d2d2d2d	
   97  000030d8  2d2d2d2d	
   97  000030dc  2d2d2d2d	
   97  000030e0  2d2d2d2d	
   97  000030e4  2d2d2d2d	
   97  000030e8  2d2d2d2d	
   97  000030ec  2d2d    	
   98  000030ee  2d2d2d2d	.ascii "------------------------\n\000"
   98  000030f2  2d2d2d2d	
   98  000030f6  2d2d2d2d	
   98  000030fa  2d2d2d2d	
   98  000030fe  2d2d2d2d	
   98  00003102  2d2d2d2d	
   98  00003106  0a00    	
   99  00003108          	.text
  100  000010d4          	.align 2
  101  000010d4          	.proc _main
  102  000010d4          	.global _main
  103  000010d4          	_main:
  104                      ;  Function 'main'; 0 bytes of locals, 0 regs to save.
  105  000010d4  afbefffc	sw	-4(r29),r30; push fp
  106  000010d8  001df020	add	r30,r0,r29; fp = sp
  107  000010dc  afbffff8	sw	-8(r29),r31; push ret addr
  108  000010e0  2fbd0008	subui	r29,r29,#8; alloc local storage
  109  000010e4  8fc20000	lw	r2,(r30)
  110  000010e8  8fc30004	lw	r3,4(r30)
  111  000010ec  0c0010b8	jal	___main
  112  000010f0  54000000	nop; not filled.
  113  000010f4  64410002	snei	r1,r2,#2
  114  000010f8  10200028	beqz	r1,L17_LF0
  115  000010fc  54000000	nop; not filled.
  116  00001100  23bdfff8	addi	r29,r29,#-8
  117  00001104  3c040000	lhi	r4,((LC0_LF0)>>16)&0xffff
  118  00001108  24843004	addui	r4,r4,(LC0_LF0)&0xffff
  119  0000110c  afa40000	sw	(r29),r4
  120  00001110  0c0001d4	jal	_Printf
  121  00001114  54000000	nop; not filled.
  122  00001118  0c0002d4	jal	_Exit
  123  0000111c  54000000	nop; not filled.
  124  00001120  23bd0008	addi	r29,r29,#8
  125  00001124          	L17_LF0:
  126  00001124  23bdfff0	addi	r29,r29,#-16
  127  00001128  8c630004	lw	r3,4(r3)
  128  0000112c  afa30000	sw	(r29),r3
  129  00001130  20040000	addi	r4,r0,#0
  130  00001134  afa40004	sw	4(r29),r4
  131  00001138  2004000a	addi	r4,r0,#10
  132  0000113c  afa40008	sw	8(r29),r4
  133  00001140  0c000b68	jal	_dstrtol
  134  00001144  54000000	nop; not filled.
  135  00001148  00011020	add	r2,r0,r1
  136  0000114c  3c040000	lhi	r4,((LC1_LF0)>>16)&0xffff
  137  00001150  24843038	addui	r4,r4,(LC1_LF0)&0xffff
  138  00001154  afa40000	sw	(r29),r4
  139  00001158  0c00018c	jal	_Printf
  140  0000115c  54000000	nop; not filled.
  141  00001160  3c010000	lhi	r1,((_i6_LF0)>>16)&0xffff
  142  00001164  24213000	addui	r1,r1,(_i6_LF0)&0xffff
  143  00001168  8c210000	lw	r1,(r1)
  144  0000116c  afa10000	sw	(r29),r1
  145  00001170  0c00008c	jal	_hello
  146  00001174  54000000	nop; not filled.
  147  00001178  afa20000	sw	(r29),r2
  148  0000117c  0c0001bc	jal	_sem_signal
  149  00001180  54000000	nop; not filled.
  150  00001184  23bd0010	addi	r29,r29,#16
  151  00001188  64210001	snei	r1,r1,#1
  152  0000118c  10200038	beqz	r1,L18_LF0
  153  00001190  54000000	nop; not filled.
  154  00001194  0c00015c	jal	_getpid
  155  00001198  54000000	nop; not filled.
  156  0000119c  23bdfff0	addi	r29,r29,#-16
  157  000011a0  3c040000	lhi	r4,((LC2_LF0)>>16)&0xffff
  158  000011a4  24843054	addui	r4,r4,(LC2_LF0)&0xffff
  159  000011a8  afa40000	sw	(r29),r4
  160  000011ac  afa10004	sw	4(r29),r1
  161  000011b0  afa20008	sw	8(r29),r2
  162  000011b4  0c000130	jal	_Printf
  163  000011b8  54000000	nop; not filled.
  164  000011bc  0c000230	jal	_Exit
  165  000011c0  54000000	nop; not filled.
  166  000011c4  23bd0010	addi	r29,r29,#16
  167  000011c8          	L18_LF0:
  168  000011c8  23bdfff8	addi	r29,r29,#-8
  169  000011cc  3c040000	lhi	r4,((LC3_LF0)>>16)&0xffff
  170  000011d0  24843090	addui	r4,r4,(LC3_LF0)&0xffff
  171  000011d4  afa40000	sw	(r29),r4
  172  000011d8  0c00010c	jal	_Printf
  173  000011dc  54000000	nop; not filled.
  174  000011e0  3c040000	lhi	r4,((LC4_LF0)>>16)&0xffff
  175  000011e4  248430a8	addui	r4,r4,(LC4_LF0)&0xffff
  176  000011e8  afa40000	sw	(r29),r4
  177  000011ec  0c0000f8	jal	_Printf
  178  000011f0  54000000	nop; not filled.
  179  000011f4  23bd0008	addi	r29,r29,#8
  180  000011f8  0c000fa0	jal	_exit
  181  000011fc  54000000	nop
  182  00001200          	.endproc _main
  183  00001200          	.data
  184  00003108          	.align 2
  185  00003108          	LC5_LF0:
  186  00003108  68656c6c	.ascii "hello_world, %d times\n\000"
  186  0000310c  6f5f776f	
  186  00003110  726c642c	
  186  00003114  20256420	
  186  00003118  74696d65	
  186  0000311c  730a00  	
  187  0000311f          	.text
  188  00001200          	.align 2
  189  00001200          	.proc _hello
  190  00001200          	.global _hello
  191  00001200          	_hello:
  192                      ;  Function 'hello'; 400 bytes of locals, 3 regs to save.
  193  00001200  afbefffc	sw	-4(r29),r30; push fp
  194  00001204  001df020	add	r30,r0,r29; fp = sp
  195  00001208  afbffff8	sw	-8(r29),r31; push ret addr
  196  0000120c  2fbd01a8	subui	r29,r29,#424; alloc local storage
  197  00001210  afa20000	sw	0(r29),r2
  198  00001214  afa30004	sw	4(r29),r3
  199  00001218  afa40008	sw	8(r29),r4
  200  0000121c  8fc20000	lw	r2,(r30)
  201  00001220  23dffff8	addi	r31,r30,#-8
  202  00001224  23c30184	addi	r3,r30,#388
  203  00001228          	L30_LF0:
  204  00001228  afe2fe70	sw	-400(r31),r2
  205  0000122c  23ff0004	addi	r31,r31,#4
  206  00001230  03e3082c	sle	r1,r31,r3
  207  00001234  1420fff0	bnez	r1,L30_LF0
  208  00001238  54000000	nop; not filled.
  209  0000123c  23bdfff8	addi	r29,r29,#-8
  210  00001240  3c040000	lhi	r4,((LC5_LF0)>>16)&0xffff
  211  00001244  24843108	addui	r4,r4,(LC5_LF0)&0xffff
  212  00001248  afa40000	sw	(r29),r4
  213  0000124c  afa20004	sw	4(r29),r2
  214  00001250  0c000094	jal	_Printf
  215  00001254  54000000	nop; not filled.
  216  00001258  23bd0008	addi	r29,r29,#8
  217  0000125c  6c410000	sgti	r1,r2,#0
  218  00001260  1020001c	beqz	r1,L32_LF0
  219  00001264  54000000	nop; not filled.
  220  00001268  2042ffff	addi	r2,r2,#-1
  221  0000126c  23bdfff8	addi	r29,r29,#-8
  222  00001270  afa20000	sw	(r29),r2
  223  00001274  0fffff88	jal	_hello
  224  00001278  54000000	nop; not filled.
  225  0000127c  23bd0008	addi	r29,r29,#8
  226  00001280          	L32_LF0:
  227  00001280  8fa20000	lw	r2,0(r29)
  228  00001284  8fa30004	lw	r3,4(r29)
  229  00001288  8fa40008	lw	r4,8(r29)
  230  0000128c  8fdffff8	lw	r31,-8(r30)
  231  00001290  001ee820	add	r29,r0,r30
  232  00001294  8fdefffc	lw	r30,-4(r30)
  233  00001298  4be00000	jr	r31
  234  0000129c  54000000	nop
  235  000012a0          	.endproc _hello
  236                      ;;;
  237                      ;;; Stub functions for DLX traps.
  238                      ;;;
  239                      ;;; Ethan L. Miller, 1999.  Released to the public domain.
  240                      ;;;
  241                      ;;; The traps such as Open and Close
  242                      ;;; (note the capital letters) are for use by user programs.  The traps
  243                      ;;; with names such as open and close (lower case) are for use by the OS.
  244                      ;;;
  247  000012a0          	.align 2
  249                      ;;; The following are the traps to be used by user-level programs
  250                      ;;;
  252  000012a0          	.align 2
  253  000012a0          	.proc _Open
  254  000012a0          	.global _Open
  255  000012a0          	_Open:
  256                      ;;; Note that trap #0x213 actually causes a trap vector in the OS of
  257                      ;;; 0x1213.  The same is true for other user traps.  Thus, a user trap
  258                      ;;; with trap #0x240 will result in a trap vector of 0x1240 in the OS.
  259  000012a0  44000213	trap	#0x213
  260  000012a4  4be00000	jr	r31
  261  000012a8  54000000	nop
  262  000012ac          	.endproc _Open
  264  000012ac          	.proc _Close
  265  000012ac          	.global _Close
  266  000012ac          	_Close:
  267  000012ac  44000214	trap	#0x214
  268  000012b0  4be00000	jr	r31
  269  000012b4  54000000	nop
  270  000012b8          	.endproc _Close
  272  000012b8          	.proc _Read
  273  000012b8          	.global _Read
  274  000012b8          	_Read:
  275  000012b8  44000210	trap	#0x210
  276  000012bc  4be00000	jr	r31
  277  000012c0  54000000	nop
  278  000012c4          	.endproc _Read
  280  000012c4          	.proc _Write
  281  000012c4          	.global _Write
  282  000012c4          	_Write:
  283  000012c4  44000211	trap	#0x211
  284  000012c8  4be00000	jr	r31
  285  000012cc  54000000	nop
  286  000012d0          	.endproc _Write
  288  000012d0          	.proc _Lseek
  289  000012d0          	.global _Lseek
  290  000012d0          	_Lseek:
  291  000012d0  44000212	trap	#0x212
  292  000012d4  4be00000	jr	r31
  293  000012d8  54000000	nop
  294  000012dc          	.endproc _Lseek
  296  000012dc          	.proc _Putchar
  297  000012dc          	.global _Putchar
  298  000012dc          	_Putchar:
  299  000012dc  44000280	trap	#0x280
  300  000012e0  4be00000	jr	r31
  301  000012e4  54000000	nop
  302  000012e8          	.endproc _Putchar
  304  000012e8          	.proc _Printf
  305  000012e8          	.global _Printf
  306  000012e8          	_Printf:
  307  000012e8  44000201	trap	#0x201
  308  000012ec  4be00000	jr	r31
  309  000012f0  54000000	nop
  310  000012f4          	.endproc _Printf
  312  000012f4          	.proc _getpid
  313  000012f4          	.global _getpid
  314  000012f4          	_getpid:
  315  000012f4  44000431	trap	#0x431
  316  000012f8  4be00000	jr	r31
  317  000012fc  54000000	nop
  318  00001300          	.endproc _getpid
  320  00001300          	.proc _process_create
  321  00001300          	.global _process_create
  322  00001300          	_process_create:
  323  00001300  44000432	trap	#0x432
  324  00001304  4be00000	jr	r31
  325  00001308  54000000	nop
  326  0000130c          	.endproc _process_create
  328  0000130c          	.proc _shmget
  329  0000130c          	.global _shmget
  330  0000130c          	_shmget:
  331  0000130c  44000440	trap	#0x440
  332  00001310  4be00000	jr	r31
  333  00001314  54000000	nop
  334  00001318          	.endproc _shmget
  336  00001318          	.proc _shmat
  337  00001318          	.global _shmat
  338  00001318          	_shmat:
  339  00001318  44000441	trap	#0x441
  340  0000131c  4be00000	jr	r31
  341  00001320  54000000	nop
  342  00001324          	.endproc _shmat
  344  00001324          	.proc _sem_create
  345  00001324          	.global _sem_create
  346  00001324          	_sem_create:
  347  00001324  44000450	trap	#0x450
  348  00001328  4be00000	jr	r31
  349  0000132c  54000000	nop
  350  00001330          	.endproc _sem_create
  352  00001330          	.proc _sem_wait
  353  00001330          	.global _sem_wait
  354  00001330          	_sem_wait:
  355  00001330  44000451	trap	#0x451
  356  00001334  4be00000	jr	r31
  357  00001338  54000000	nop
  358  0000133c          	.endproc _sem_wait
  360  0000133c          	.proc _sem_signal
  361  0000133c          	.global _sem_signal
  362  0000133c          	_sem_signal:
  363  0000133c  44000452	trap	#0x452
  364  00001340  4be00000	jr	r31
  365  00001344  54000000	nop
  366  00001348          	.endproc _sem_signal
  368  00001348          	.proc _lock_create
  369  00001348          	.global _lock_create
  370  00001348          	_lock_create:
  371  00001348  44000453	trap	#0x453
  372  0000134c  4be00000	jr	r31
  373  00001350  54000000	nop
  374  00001354          	.endproc _lock_create
  376  00001354          	.proc _lock_acquire
  377  00001354          	.global _lock_acquire
  378  00001354          	_lock_acquire:
  379  00001354  44000454	trap	#0x454
  380  00001358  4be00000	jr	r31
  381  0000135c  54000000	nop
  382  00001360          	.endproc _lock_acquire
  384  00001360          	.proc _lock_release
  385  00001360          	.global _lock_release
  386  00001360          	_lock_release:
  387  00001360  44000455	trap	#0x455
  388  00001364  4be00000	jr	r31
  389  00001368  54000000	nop
  390  0000136c          	.endproc _lock_release
  392  0000136c          	.proc _cond_create
  393  0000136c          	.global _cond_create
  394  0000136c          	_cond_create:
  395  0000136c  44000456	trap	#0x456
  396  00001370  4be00000	jr	r31
  397  00001374  54000000	nop
  398  00001378          	.endproc _cond_create
  400  00001378          	.proc _cond_wait
  401  00001378          	.global _cond_wait
  402  00001378          	_cond_wait:
  403  00001378  44000457	trap	#0x457
  404  0000137c  4be00000	jr	r31
  405  00001380  54000000	nop
  406  00001384          	.endproc _cond_wait
  408  00001384          	.proc _cond_signal
  409  00001384          	.global _cond_signal
  410  00001384          	_cond_signal:
  411  00001384  44000458	trap	#0x458
  412  00001388  4be00000	jr	r31
  413  0000138c  54000000	nop
  414  00001390          	.endproc _cond_signal
  416  00001390          	.proc _cond_broadcast
  417  00001390          	.global _cond_broadcast
  418  00001390          	_cond_broadcast:
  419  00001390  44000459	trap	#0x459
  420  00001394  4be00000	jr	r31
  421  00001398  54000000	nop
  422  0000139c          	.endproc _cond_broadcast
  424  0000139c          	.proc _mbox_create
  425  0000139c          	.global _mbox_create
  426  0000139c          	_mbox_create:
  427  0000139c  44000460	trap	#0x460
  428  000013a0  4be00000	jr	r31
  429  000013a4  54000000	nop
  430  000013a8          	.endproc _mbox_create
  432  000013a8          	.proc _mbox_open
  433  000013a8          	.global _mbox_open
  434  000013a8          	_mbox_open:
  435  000013a8  44000461	trap	#0x461
  436  000013ac  4be00000	jr	r31
  437  000013b0  54000000	nop
  438  000013b4          	.endproc _mbox_open
  440  000013b4          	.proc _mbox_close
  441  000013b4          	.global _mbox_close
  442  000013b4          	_mbox_close:
  443  000013b4  44000462	trap	#0x462
  444  000013b8  4be00000	jr	r31
  445  000013bc  54000000	nop
  446  000013c0          	.endproc _mbox_close
  448  000013c0          	.proc _mbox_send
  449  000013c0          	.global _mbox_send
  450  000013c0          	_mbox_send:
  451  000013c0  44000463	trap	#0x463
  452  000013c4  4be00000	jr	r31
  453  000013c8  54000000	nop
  454  000013cc          	.endproc _mbox_send
  456  000013cc          	.proc _mbox_recv
  457  000013cc          	.global _mbox_recv
  458  000013cc          	_mbox_recv:
  459  000013cc  44000464	trap	#0x464
  460  000013d0  4be00000	jr	r31
  461  000013d4  54000000	nop
  462  000013d8          	.endproc _mbox_recv
  464  000013d8          	.proc _sleep
  465  000013d8          	.global _sleep
  466  000013d8          	_sleep:
  467  000013d8  44000465	trap	#0x465
  468  000013dc  4be00000	jr	r31
  469  000013e0  54000000	nop
  470  000013e4          	.endproc _sleep
  472  000013e4          	.proc _yield
  473  000013e4          	.global _yield
  474  000013e4          	_yield:
  475  000013e4  44000466	trap	#0x466
  476  000013e8  4be00000	jr	r31
  477  000013ec  54000000	nop
  478  000013f0          	.endproc _yield
  481  000013f0          	.proc _Exit
  482  000013f0          	.global _Exit
  483  000013f0          	_Exit:
  484  000013f0  44000500	trap	#0x500
  485  000013f4  4be00000	jr	r31
  486  000013f8  54000000	nop
  487  000013fc          	.endproc _Exit
  490  000013fc          	.proc _malloc
  491  000013fc          	.global _malloc
  492  000013fc          	_malloc:
  493  000013fc  44000467	trap	#0x467
  494  00001400  4be00000	jr	r31
  495  00001404          	.endproc _malloc
  498  00001404          	.proc _mfree
  499  00001404          	.global _mfree
  500  00001404          	_mfree:
  501  00001404  44000468	trap	#0x468
  502  00001408  4be00000	jr	r31
  503  0000140c          	.endproc _mfree
  504                      ; Compiled by GCC
  506  0000140c          	.align 2
  507  0000140c          	.proc _isspace
  508  0000140c          	.global _isspace
  509  0000140c          	_isspace:
  510                      ;  Function 'isspace'; 0 bytes of locals, 3 regs to save.
  511  0000140c  afbefffc	sw	-4(r29),r30; push fp
  512  00001410  001df020	add	r30,r0,r29; fp = sp
  513  00001414  afbffff8	sw	-8(r29),r31; push ret addr
  514  00001418  2fbd0018	subui	r29,r29,#24; alloc local storage
  515  0000141c  afa20000	sw	0(r29),r2
  516  00001420  afa30004	sw	4(r29),r3
  517  00001424  afa40008	sw	8(r29),r4
  518  00001428  83c20003	lb	r2,3(r30)
  519  0000142c  20010000	addi	r1,r0,#0
  520  00001430  304300ff	andi	r3,r2,#0x00ff
  521  00001434  60640020	seqi	r4,r3,#32
  522  00001438  1480002c	bnez	r4,L3_LF2
  523  0000143c  54000000	nop; delay slot nop
  524  00001440  304300ff	andi	r3,r2,#0x00ff
  525  00001444  60640009	seqi	r4,r3,#9
  526  00001448  1480001c	bnez	r4,L3_LF2
  527  0000144c  54000000	nop; delay slot nop
  528  00001450  304300ff	andi	r3,r2,#0x00ff
  529  00001454  6064000a	seqi	r4,r3,#10
  530  00001458  1480000c	bnez	r4,L3_LF2
  531  0000145c  54000000	nop; delay slot nop
  532  00001460  08000008	j	L2_LF2
  533  00001464  54000000	nop; delay slot nop
  534  00001468          	L3_LF2:
  535  00001468  20010001	addi	r1,r0,#1
  536  0000146c          	L2_LF2:
  537  0000146c  08000004	j	L1_LF2
  538  00001470  54000000	nop; delay slot nop
  539  00001474          	L1_LF2:
  540  00001474  8fa20000	lw	r2,0(r29)
  541  00001478  8fa30004	lw	r3,4(r29)
  542  0000147c  8fa40008	lw	r4,8(r29)
  543  00001480  8fdffff8	lw	r31,-8(r30)
  544  00001484  001ee820	add	r29,r0,r30
  545  00001488  8fdefffc	lw	r30,-4(r30)
  546  0000148c  4be00000	jr	r31
  547  00001490  54000000	nop
  548  00001494          	.endproc _isspace
  549  00001494          	.align 2
  550  00001494          	.proc _isxdigit
  551  00001494          	.global _isxdigit
  552  00001494          	_isxdigit:
  553                      ;  Function 'isxdigit'; 0 bytes of locals, 3 regs to save.
  554  00001494  afbefffc	sw	-4(r29),r30; push fp
  555  00001498  001df020	add	r30,r0,r29; fp = sp
  556  0000149c  afbffff8	sw	-8(r29),r31; push ret addr
  557  000014a0  2fbd0018	subui	r29,r29,#24; alloc local storage
  558  000014a4  afa20000	sw	0(r29),r2
  559  000014a8  afa30004	sw	4(r29),r3
  560  000014ac  afa40008	sw	8(r29),r4
  561  000014b0  83c20003	lb	r2,3(r30)
  562  000014b4  20010000	addi	r1,r0,#0
  563  000014b8  304300ff	andi	r3,r2,#0x00ff
  564  000014bc  6c64002f	sgtui	r4,r3,#47
  565  000014c0  1080001c	beqz	r4,L7_LF2
  566  000014c4  54000000	nop; delay slot nop
  567  000014c8  304300ff	andi	r3,r2,#0x00ff
  568  000014cc  70640039	sleui	r4,r3,#57
  569  000014d0  1480005c	bnez	r4,L6_LF2
  570  000014d4  54000000	nop; delay slot nop
  571  000014d8  08000004	j	L7_LF2
  572  000014dc  54000000	nop; delay slot nop
  573  000014e0          	L7_LF2:
  574  000014e0  304300ff	andi	r3,r2,#0x00ff
  575  000014e4  6c640060	sgtui	r4,r3,#96
  576  000014e8  1080001c	beqz	r4,L8_LF2
  577  000014ec  54000000	nop; delay slot nop
  578  000014f0  304300ff	andi	r3,r2,#0x00ff
  579  000014f4  70640066	sleui	r4,r3,#102
  580  000014f8  14800034	bnez	r4,L6_LF2
  581  000014fc  54000000	nop; delay slot nop
  582  00001500  08000004	j	L8_LF2
  583  00001504  54000000	nop; delay slot nop
  584  00001508          	L8_LF2:
  585  00001508  304300ff	andi	r3,r2,#0x00ff
  586  0000150c  6c640040	sgtui	r4,r3,#64
  587  00001510  10800020	beqz	r4,L5_LF2
  588  00001514  54000000	nop; delay slot nop
  589  00001518  304300ff	andi	r3,r2,#0x00ff
  590  0000151c  70640041	sleui	r4,r3,#65
  591  00001520  1480000c	bnez	r4,L6_LF2
  592  00001524  54000000	nop; delay slot nop
  593  00001528  08000008	j	L5_LF2
  594  0000152c  54000000	nop; delay slot nop
  595  00001530          	L6_LF2:
  596  00001530  20010001	addi	r1,r0,#1
  597  00001534          	L5_LF2:
  598  00001534  08000004	j	L4_LF2
  599  00001538  54000000	nop; delay slot nop
  600  0000153c          	L4_LF2:
  601  0000153c  8fa20000	lw	r2,0(r29)
  602  00001540  8fa30004	lw	r3,4(r29)
  603  00001544  8fa40008	lw	r4,8(r29)
  604  00001548  8fdffff8	lw	r31,-8(r30)
  605  0000154c  001ee820	add	r29,r0,r30
  606  00001550  8fdefffc	lw	r30,-4(r30)
  607  00001554  4be00000	jr	r31
  608  00001558  54000000	nop
  609  0000155c          	.endproc _isxdigit
  610  0000155c          	.align 2
  611  0000155c          	.proc _dstrcpy
  612  0000155c          	.global _dstrcpy
  613  0000155c          	_dstrcpy:
  614                      ;  Function 'dstrcpy'; 8 bytes of locals, 2 regs to save.
  615  0000155c  afbefffc	sw	-4(r29),r30; push fp
  616  00001560  001df020	add	r30,r0,r29; fp = sp
  617  00001564  afbffff8	sw	-8(r29),r31; push ret addr
  618  00001568  2fbd0018	subui	r29,r29,#24; alloc local storage
  619  0000156c  afa20000	sw	0(r29),r2
  620  00001570  afa30004	sw	4(r29),r3
  621  00001574  8fc10000	lw	r1,(r30)
  622  00001578  afc1fff4	sw	-12(r30),r1
  623  0000157c          	L10_LF2:
  624  0000157c  8fc10000	lw	r1,(r30)
  625  00001580  20220001	addi	r2,r1,#1
  626  00001584  afc20000	sw	(r30),r2
  627  00001588  8fc20004	lw	r2,4(r30)
  628  0000158c  20430001	addi	r3,r2,#1
  629  00001590  afc30004	sw	4(r30),r3
  630  00001594  80420000	lb	r2,(r2)
  631  00001598  a0220000	sb	(r1),r2
  632  0000159c  a3c2fff3	sb	-13(r30),r2
  633  000015a0          	L12_LF2:
  634  000015a0  93c1fff3	lbu	r1,-13(r30)
  635  000015a4  64220000	snei	r2,r1,#0
  636  000015a8  1440000c	bnez	r2,L13_LF2
  637  000015ac  54000000	nop; delay slot nop
  638  000015b0  0800000c	j	L11_LF2
  639  000015b4  54000000	nop; delay slot nop
  640  000015b8          	L13_LF2:
  641  000015b8  0bffffc0	j	L10_LF2
  642  000015bc  54000000	nop; delay slot nop
  643  000015c0          	L11_LF2:
  644  000015c0  8fc1fff4	lw	r1,-12(r30)
  645  000015c4  08000004	j	L9_LF2
  646  000015c8  54000000	nop; delay slot nop
  647  000015cc          	L9_LF2:
  648  000015cc  8fa20000	lw	r2,0(r29)
  649  000015d0  8fa30004	lw	r3,4(r29)
  650  000015d4  8fdffff8	lw	r31,-8(r30)
  651  000015d8  001ee820	add	r29,r0,r30
  652  000015dc  8fdefffc	lw	r30,-4(r30)
  653  000015e0  4be00000	jr	r31
  654  000015e4  54000000	nop
  655  000015e8          	.endproc _dstrcpy
  656  000015e8          	.align 2
  657  000015e8          	.proc _dstrncpy
  658  000015e8          	.global _dstrncpy
  659  000015e8          	_dstrncpy:
  660                      ;  Function 'dstrncpy'; 8 bytes of locals, 2 regs to save.
  661  000015e8  afbefffc	sw	-4(r29),r30; push fp
  662  000015ec  001df020	add	r30,r0,r29; fp = sp
  663  000015f0  afbffff8	sw	-8(r29),r31; push ret addr
  664  000015f4  2fbd0018	subui	r29,r29,#24; alloc local storage
  665  000015f8  afa20000	sw	0(r29),r2
  666  000015fc  afa30004	sw	4(r29),r3
  667  00001600  8fc10000	lw	r1,(r30)
  668  00001604  afc1fff4	sw	-12(r30),r1
  669  00001608          	L15_LF2:
  670  00001608  8fc10008	lw	r1,8(r30)
  671  0000160c  2022ffff	addi	r2,r1,#-1
  672  00001610  afc20008	sw	8(r30),r2
  673  00001614  70210000	slei	r1,r1,#0
  674  00001618  1020000c	beqz	r1,L18_LF2
  675  0000161c  54000000	nop; delay slot nop
  676  00001620  08000048	j	L16_LF2
  677  00001624  54000000	nop; delay slot nop
  678  00001628          	L18_LF2:
  679  00001628  8fc10000	lw	r1,(r30)
  680  0000162c  20220001	addi	r2,r1,#1
  681  00001630  afc20000	sw	(r30),r2
  682  00001634  8fc20004	lw	r2,4(r30)
  683  00001638  20430001	addi	r3,r2,#1
  684  0000163c  afc30004	sw	4(r30),r3
  685  00001640  80420000	lb	r2,(r2)
  686  00001644  a0220000	sb	(r1),r2
  687  00001648  a3c2fff3	sb	-13(r30),r2
  688  0000164c          	L17_LF2:
  689  0000164c  93c1fff3	lbu	r1,-13(r30)
  690  00001650  64220000	snei	r2,r1,#0
  691  00001654  1440000c	bnez	r2,L19_LF2
  692  00001658  54000000	nop; delay slot nop
  693  0000165c  0800000c	j	L16_LF2
  694  00001660  54000000	nop; delay slot nop
  695  00001664          	L19_LF2:
  696  00001664  0bffffa0	j	L15_LF2
  697  00001668  54000000	nop; delay slot nop
  698  0000166c          	L16_LF2:
  699  0000166c  8fc1fff4	lw	r1,-12(r30)
  700  00001670  08000004	j	L14_LF2
  701  00001674  54000000	nop; delay slot nop
  702  00001678          	L14_LF2:
  703  00001678  8fa20000	lw	r2,0(r29)
  704  0000167c  8fa30004	lw	r3,4(r29)
  705  00001680  8fdffff8	lw	r31,-8(r30)
  706  00001684  001ee820	add	r29,r0,r30
  707  00001688  8fdefffc	lw	r30,-4(r30)
  708  0000168c  4be00000	jr	r31
  709  00001690  54000000	nop
  710  00001694          	.endproc _dstrncpy
  711  00001694          	.align 2
  712  00001694          	.proc _dstrcat
  713  00001694          	.global _dstrcat
  714  00001694          	_dstrcat:
  715                      ;  Function 'dstrcat'; 8 bytes of locals, 1 regs to save.
  716  00001694  afbefffc	sw	-4(r29),r30; push fp
  717  00001698  001df020	add	r30,r0,r29; fp = sp
  718  0000169c  afbffff8	sw	-8(r29),r31; push ret addr
  719  000016a0  2fbd0018	subui	r29,r29,#24; alloc local storage
  720  000016a4  afa20000	sw	0(r29),r2
  721  000016a8  8fc10000	lw	r1,(r30)
  722  000016ac  afc1fff4	sw	-12(r30),r1
  723  000016b0          	L21_LF2:
  724  000016b0  8fc10000	lw	r1,(r30)
  725  000016b4  90220000	lbu	r2,(r1)
  726  000016b8  64410000	snei	r1,r2,#0
  727  000016bc  1420000c	bnez	r1,L23_LF2
  728  000016c0  54000000	nop; delay slot nop
  729  000016c4  0800001c	j	L22_LF2
  730  000016c8  54000000	nop; delay slot nop
  731  000016cc          	L23_LF2:
  732  000016cc  8fc20000	lw	r2,(r30)
  733  000016d0  20410001	addi	r1,r2,#1
  734  000016d4  00011020	add	r2,r0,r1
  735  000016d8  afc20000	sw	(r30),r2
  736  000016dc  0bffffd0	j	L21_LF2
  737  000016e0  54000000	nop; delay slot nop
  738  000016e4          	L22_LF2:
  739  000016e4  23bdfff8	addi	r29,r29,#-8
  740  000016e8  001d0820	add	r1,r0,r29
  741  000016ec  8fc20000	lw	r2,(r30)
  742  000016f0  ac220000	sw	(r1),r2
  743  000016f4  8fc20004	lw	r2,4(r30)
  744  000016f8  ac220004	sw	4(r1),r2
  745  000016fc  0ffffe5c	jal	_dstrcpy
  746  00001700  54000000	nop; delay slot nop
  747  00001704  23bd0008	addi	r29,r29,#8
  748  00001708  8fc1fff4	lw	r1,-12(r30)
  749  0000170c  08000004	j	L20_LF2
  750  00001710  54000000	nop; delay slot nop
  751  00001714          	L20_LF2:
  752  00001714  8fa20000	lw	r2,0(r29)
  753  00001718  8fdffff8	lw	r31,-8(r30)
  754  0000171c  001ee820	add	r29,r0,r30
  755  00001720  8fdefffc	lw	r30,-4(r30)
  756  00001724  4be00000	jr	r31
  757  00001728  54000000	nop
  758  0000172c          	.endproc _dstrcat
  759  0000172c          	.align 2
  760  0000172c          	.proc _dstrncmp
  761  0000172c          	.global _dstrncmp
  762  0000172c          	_dstrncmp:
  763                      ;  Function 'dstrncmp'; 8 bytes of locals, 2 regs to save.
  764  0000172c  afbefffc	sw	-4(r29),r30; push fp
  765  00001730  001df020	add	r30,r0,r29; fp = sp
  766  00001734  afbffff8	sw	-8(r29),r31; push ret addr
  767  00001738  2fbd0018	subui	r29,r29,#24; alloc local storage
  768  0000173c  afa20000	sw	0(r29),r2
  769  00001740  afa30004	sw	4(r29),r3
  770  00001744  54000000	nop
  771  00001748  20010000	addi	r1,r0,#0
  772  0000174c  afc1fff4	sw	-12(r30),r1
  773  00001750          	L25_LF2:
  774  00001750  8fc1fff4	lw	r1,-12(r30)
  775  00001754  8fc20008	lw	r2,8(r30)
  776  00001758  0022082a	slt	r1,r1,r2
  777  0000175c  1420000c	bnez	r1,L28_LF2
  778  00001760  54000000	nop; delay slot nop
  779  00001764  08000088	j	L26_LF2
  780  00001768  54000000	nop; delay slot nop
  781  0000176c          	L28_LF2:
  782  0000176c  8fc10004	lw	r1,4(r30)
  783  00001770  90220000	lbu	r2,(r1)
  784  00001774  64410000	snei	r1,r2,#0
  785  00001778  14200018	bnez	r1,L29_LF2
  786  0000177c  54000000	nop; delay slot nop
  787  00001780  20010000	addi	r1,r0,#0
  788  00001784  080000d8	j	L24_LF2
  789  00001788  54000000	nop; delay slot nop
  790  0000178c  08000028	j	L30_LF2
  791  00001790  54000000	nop; delay slot nop
  792  00001794          	L29_LF2:
  793  00001794  8fc10000	lw	r1,(r30)
  794  00001798  8fc20004	lw	r2,4(r30)
  795  0000179c  90210000	lbu	r1,(r1)
  796  000017a0  90420000	lbu	r2,(r2)
  797  000017a4  00220829	sne	r1,r1,r2
  798  000017a8  1020000c	beqz	r1,L30_LF2
  799  000017ac  54000000	nop; delay slot nop
  800  000017b0  0800003c	j	L26_LF2
  801  000017b4  54000000	nop; delay slot nop
  802  000017b8          	L31_LF2:
  803  000017b8          	L30_LF2:
  804  000017b8  8fc20000	lw	r2,(r30)
  805  000017bc  20410001	addi	r1,r2,#1
  806  000017c0  00011020	add	r2,r0,r1
  807  000017c4  afc20000	sw	(r30),r2
  808  000017c8  8fc20004	lw	r2,4(r30)
  809  000017cc  20410001	addi	r1,r2,#1
  810  000017d0  00011020	add	r2,r0,r1
  811  000017d4  afc20004	sw	4(r30),r2
  812  000017d8          	L27_LF2:
  813  000017d8  8fc2fff4	lw	r2,-12(r30)
  814  000017dc  20410001	addi	r1,r2,#1
  815  000017e0  00011020	add	r2,r0,r1
  816  000017e4  afc2fff4	sw	-12(r30),r2
  817  000017e8  0bffff64	j	L25_LF2
  818  000017ec  54000000	nop; delay slot nop
  819  000017f0          	L26_LF2:
  820  000017f0  8fc1fff4	lw	r1,-12(r30)
  821  000017f4  8fc20008	lw	r2,8(r30)
  822  000017f8  00220828	seq	r1,r1,r2
  823  000017fc  10200018	beqz	r1,L32_LF2
  824  00001800  54000000	nop; delay slot nop
  825  00001804  20010000	addi	r1,r0,#0
  826  00001808  08000054	j	L24_LF2
  827  0000180c  54000000	nop; delay slot nop
  828  00001810  0800004c	j	L33_LF2
  829  00001814  54000000	nop; delay slot nop
  830  00001818          	L32_LF2:
  831  00001818  8fc20000	lw	r2,(r30)
  832  0000181c  90410000	lbu	r1,(r2)
  833  00001820  8fc20004	lw	r2,4(r30)
  834  00001824  90430000	lbu	r3,(r2)
  835  00001828  00230822	sub	r1,r1,r3
  836  0000182c  74220000	sgei	r2,r1,#0
  837  00001830  10400020	beqz	r2,L34_LF2
  838  00001834  54000000	nop; delay slot nop
  839  00001838  8fc10000	lw	r1,(r30)
  840  0000183c  8fc20004	lw	r2,4(r30)
  841  00001840  90210000	lbu	r1,(r1)
  842  00001844  90420000	lbu	r2,(r2)
  843  00001848  00220829	sne	r1,r1,r2
  844  0000184c  08000008	j	L35_LF2
  845  00001850  54000000	nop; delay slot nop
  846  00001854          	L34_LF2:
  847  00001854  2001ffff	addi	r1,r0,#-1
  848  00001858          	L35_LF2:
  849  00001858  08000004	j	L24_LF2
  850  0000185c  54000000	nop; delay slot nop
  851  00001860          	L33_LF2:
  852  00001860          	L24_LF2:
  853  00001860  8fa20000	lw	r2,0(r29)
  854  00001864  8fa30004	lw	r3,4(r29)
  855  00001868  8fdffff8	lw	r31,-8(r30)
  856  0000186c  001ee820	add	r29,r0,r30
  857  00001870  8fdefffc	lw	r30,-4(r30)
  858  00001874  4be00000	jr	r31
  859  00001878  54000000	nop
  860  0000187c          	.endproc _dstrncmp
  861  0000187c          	.align 2
  862  0000187c          	.proc _dstrlen
  863  0000187c          	.global _dstrlen
  864  0000187c          	_dstrlen:
  865                      ;  Function 'dstrlen'; 8 bytes of locals, 1 regs to save.
  866  0000187c  afbefffc	sw	-4(r29),r30; push fp
  867  00001880  001df020	add	r30,r0,r29; fp = sp
  868  00001884  afbffff8	sw	-8(r29),r31; push ret addr
  869  00001888  2fbd0018	subui	r29,r29,#24; alloc local storage
  870  0000188c  afa20000	sw	0(r29),r2
  871  00001890  20010000	addi	r1,r0,#0
  872  00001894  afc1fff4	sw	-12(r30),r1
  873  00001898          	L37_LF2:
  874  00001898  8fc10000	lw	r1,(r30)
  875  0000189c  20220001	addi	r2,r1,#1
  876  000018a0  afc20000	sw	(r30),r2
  877  000018a4  90210000	lbu	r1,(r1)
  878  000018a8  64220000	snei	r2,r1,#0
  879  000018ac  1440000c	bnez	r2,L39_LF2
  880  000018b0  54000000	nop; delay slot nop
  881  000018b4  0800001c	j	L38_LF2
  882  000018b8  54000000	nop; delay slot nop
  883  000018bc          	L39_LF2:
  884  000018bc  8fc2fff4	lw	r2,-12(r30)
  885  000018c0  20410001	addi	r1,r2,#1
  886  000018c4  00011020	add	r2,r0,r1
  887  000018c8  afc2fff4	sw	-12(r30),r2
  888  000018cc  0bffffc8	j	L37_LF2
  889  000018d0  54000000	nop; delay slot nop
  890  000018d4          	L38_LF2:
  891  000018d4  8fc1fff4	lw	r1,-12(r30)
  892  000018d8  08000004	j	L36_LF2
  893  000018dc  54000000	nop; delay slot nop
  894  000018e0          	L36_LF2:
  895  000018e0  8fa20000	lw	r2,0(r29)
  896  000018e4  8fdffff8	lw	r31,-8(r30)
  897  000018e8  001ee820	add	r29,r0,r30
  898  000018ec  8fdefffc	lw	r30,-4(r30)
  899  000018f0  4be00000	jr	r31
  900  000018f4  54000000	nop
  901  000018f8          	.endproc _dstrlen
  902  000018f8          	.align 2
  903  000018f8          	.proc _dstrstr
  904  000018f8          	.global _dstrstr
  905  000018f8          	_dstrstr:
  906                      ;  Function 'dstrstr'; 8 bytes of locals, 1 regs to save.
  907  000018f8  afbefffc	sw	-4(r29),r30; push fp
  908  000018fc  001df020	add	r30,r0,r29; fp = sp
  909  00001900  afbffff8	sw	-8(r29),r31; push ret addr
  910  00001904  2fbd0018	subui	r29,r29,#24; alloc local storage
  911  00001908  afa20000	sw	0(r29),r2
  912  0000190c  23bdfff8	addi	r29,r29,#-8
  913  00001910  001d0820	add	r1,r0,r29
  914  00001914  8fc20004	lw	r2,4(r30)
  915  00001918  ac220000	sw	(r1),r2
  916  0000191c  0fffff5c	jal	_dstrlen
  917  00001920  54000000	nop; delay slot nop
  918  00001924  23bd0008	addi	r29,r29,#8
  919  00001928  afc1fff4	sw	-12(r30),r1
  920  0000192c          	L41_LF2:
  921  0000192c  8fc10000	lw	r1,(r30)
  922  00001930  90220000	lbu	r2,(r1)
  923  00001934  64410000	snei	r1,r2,#0
  924  00001938  1420000c	bnez	r1,L43_LF2
  925  0000193c  54000000	nop; delay slot nop
  926  00001940  08000060	j	L42_LF2
  927  00001944  54000000	nop; delay slot nop
  928  00001948          	L43_LF2:
  929  00001948  23bdfff0	addi	r29,r29,#-16
  930  0000194c  001d0820	add	r1,r0,r29
  931  00001950  8fc20000	lw	r2,(r30)
  932  00001954  ac220000	sw	(r1),r2
  933  00001958  8fc20004	lw	r2,4(r30)
  934  0000195c  ac220004	sw	4(r1),r2
  935  00001960  8fc2fff4	lw	r2,-12(r30)
  936  00001964  ac220008	sw	8(r1),r2
  937  00001968  0ffffdc0	jal	_dstrncmp
  938  0000196c  54000000	nop; delay slot nop
  939  00001970  23bd0010	addi	r29,r29,#16
  940  00001974  64220000	snei	r2,r1,#0
  941  00001978  14400010	bnez	r2,L44_LF2
  942  0000197c  54000000	nop; delay slot nop
  943  00001980  8fc10000	lw	r1,(r30)
  944  00001984  08000028	j	L40_LF2
  945  00001988  54000000	nop; delay slot nop
  946  0000198c          	L44_LF2:
  947  0000198c  8fc20000	lw	r2,(r30)
  948  00001990  20410001	addi	r1,r2,#1
  949  00001994  00011020	add	r2,r0,r1
  950  00001998  afc20000	sw	(r30),r2
  951  0000199c  0bffff8c	j	L41_LF2
  952  000019a0  54000000	nop; delay slot nop
  953  000019a4          	L42_LF2:
  954  000019a4  20010000	addi	r1,r0,#0
  955  000019a8  08000004	j	L40_LF2
  956  000019ac  54000000	nop; delay slot nop
  957  000019b0          	L40_LF2:
  958  000019b0  8fa20000	lw	r2,0(r29)
  959  000019b4  8fdffff8	lw	r31,-8(r30)
  960  000019b8  001ee820	add	r29,r0,r30
  961  000019bc  8fdefffc	lw	r30,-4(r30)
  962  000019c0  4be00000	jr	r31
  963  000019c4  54000000	nop
  964  000019c8          	.endproc _dstrstr
  965  000019c8          	.align 2
  966  000019c8          	.proc _dmindex
  967  000019c8          	.global _dmindex
  968  000019c8          	_dmindex:
  969                      ;  Function 'dmindex'; 8 bytes of locals, 1 regs to save.
  970  000019c8  afbefffc	sw	-4(r29),r30; push fp
  971  000019cc  001df020	add	r30,r0,r29; fp = sp
  972  000019d0  afbffff8	sw	-8(r29),r31; push ret addr
  973  000019d4  2fbd0018	subui	r29,r29,#24; alloc local storage
  974  000019d8  afa20000	sw	0(r29),r2
  975  000019dc  54000000	nop
  976  000019e0          	L46_LF2:
  977  000019e0  8fc10000	lw	r1,(r30)
  978  000019e4  90220000	lbu	r2,(r1)
  979  000019e8  64410000	snei	r1,r2,#0
  980  000019ec  1420000c	bnez	r1,L48_LF2
  981  000019f0  54000000	nop; delay slot nop
  982  000019f4  08000070	j	L47_LF2
  983  000019f8  54000000	nop; delay slot nop
  984  000019fc          	L48_LF2:
  985  000019fc  8fc10004	lw	r1,4(r30)
  986  00001a00  afc1fff4	sw	-12(r30),r1
  987  00001a04          	L49_LF2:
  988  00001a04  8fc1fff4	lw	r1,-12(r30)
  989  00001a08  90220000	lbu	r2,(r1)
  990  00001a0c  64410000	snei	r1,r2,#0
  991  00001a10  1420000c	bnez	r1,L52_LF2
  992  00001a14  54000000	nop; delay slot nop
  993  00001a18  08000044	j	L50_LF2
  994  00001a1c  54000000	nop; delay slot nop
  995  00001a20          	L52_LF2:
  996  00001a20  8fc10000	lw	r1,(r30)
  997  00001a24  8fc2fff4	lw	r2,-12(r30)
  998  00001a28  90210000	lbu	r1,(r1)
  999  00001a2c  90420000	lbu	r2,(r2)
 1000  00001a30  00220828	seq	r1,r1,r2
 1001  00001a34  10200010	beqz	r1,L51_LF2
 1002  00001a38  54000000	nop; delay slot nop
 1003  00001a3c  8fc10000	lw	r1,(r30)
 1004  00001a40  08000030	j	L45_LF2
 1005  00001a44  54000000	nop; delay slot nop
 1006  00001a48          	L53_LF2:
 1007  00001a48          	L51_LF2:
 1008  00001a48  8fc2fff4	lw	r2,-12(r30)
 1009  00001a4c  20410001	addi	r1,r2,#1
 1010  00001a50  00011020	add	r2,r0,r1
 1011  00001a54  afc2fff4	sw	-12(r30),r2
 1012  00001a58  0bffffa8	j	L49_LF2
 1013  00001a5c  54000000	nop; delay slot nop
 1014  00001a60          	L50_LF2:
 1015  00001a60  0bffff7c	j	L46_LF2
 1016  00001a64  54000000	nop; delay slot nop
 1017  00001a68          	L47_LF2:
 1018  00001a68  20010000	addi	r1,r0,#0
 1019  00001a6c  08000004	j	L45_LF2
 1020  00001a70  54000000	nop; delay slot nop
 1021  00001a74          	L45_LF2:
 1022  00001a74  8fa20000	lw	r2,0(r29)
 1023  00001a78  8fdffff8	lw	r31,-8(r30)
 1024  00001a7c  001ee820	add	r29,r0,r30
 1025  00001a80  8fdefffc	lw	r30,-4(r30)
 1026  00001a84  4be00000	jr	r31
 1027  00001a88  54000000	nop
 1028  00001a8c          	.endproc _dmindex
 1029  00001a8c          	.align 2
 1030  00001a8c          	.proc _dindex
 1031  00001a8c          	.global _dindex
 1032  00001a8c          	_dindex:
 1033                      ;  Function 'dindex'; 0 bytes of locals, 1 regs to save.
 1034  00001a8c  afbefffc	sw	-4(r29),r30; push fp
 1035  00001a90  001df020	add	r30,r0,r29; fp = sp
 1036  00001a94  afbffff8	sw	-8(r29),r31; push ret addr
 1037  00001a98  2fbd0010	subui	r29,r29,#16; alloc local storage
 1038  00001a9c  afa20000	sw	0(r29),r2
 1039  00001aa0  54000000	nop
 1040  00001aa4          	L55_LF2:
 1041  00001aa4  8fc10000	lw	r1,(r30)
 1042  00001aa8  90220000	lbu	r2,(r1)
 1043  00001aac  64410000	snei	r1,r2,#0
 1044  00001ab0  1420000c	bnez	r1,L57_LF2
 1045  00001ab4  54000000	nop; delay slot nop
 1046  00001ab8  08000040	j	L56_LF2
 1047  00001abc  54000000	nop; delay slot nop
 1048  00001ac0          	L57_LF2:
 1049  00001ac0  8fc10000	lw	r1,(r30)
 1050  00001ac4  90220000	lbu	r2,(r1)
 1051  00001ac8  8fc10004	lw	r1,4(r30)
 1052  00001acc  00411028	seq	r2,r2,r1
 1053  00001ad0  10400010	beqz	r2,L58_LF2
 1054  00001ad4  54000000	nop; delay slot nop
 1055  00001ad8  8fc10000	lw	r1,(r30)
 1056  00001adc  08000028	j	L54_LF2
 1057  00001ae0  54000000	nop; delay slot nop
 1058  00001ae4          	L58_LF2:
 1059  00001ae4  8fc20000	lw	r2,(r30)
 1060  00001ae8  20410001	addi	r1,r2,#1
 1061  00001aec  00011020	add	r2,r0,r1
 1062  00001af0  afc20000	sw	(r30),r2
 1063  00001af4  0bffffac	j	L55_LF2
 1064  00001af8  54000000	nop; delay slot nop
 1065  00001afc          	L56_LF2:
 1066  00001afc  20010000	addi	r1,r0,#0
 1067  00001b00  08000004	j	L54_LF2
 1068  00001b04  54000000	nop; delay slot nop
 1069  00001b08          	L54_LF2:
 1070  00001b08  8fa20000	lw	r2,0(r29)
 1071  00001b0c  8fdffff8	lw	r31,-8(r30)
 1072  00001b10  001ee820	add	r29,r0,r30
 1073  00001b14  8fdefffc	lw	r30,-4(r30)
 1074  00001b18  4be00000	jr	r31
 1075  00001b1c  54000000	nop
 1076  00001b20          	.endproc _dindex
 1077  00001b20          	.align 2
 1078  00001b20          	.proc _ditoa
 1079  00001b20          	.global _ditoa
 1080  00001b20          	_ditoa:
 1081                      ;  Function 'ditoa'; 8 bytes of locals, 2 regs to save.
 1082  00001b20  afbefffc	sw	-4(r29),r30; push fp
 1083  00001b24  001df020	add	r30,r0,r29; fp = sp
 1084  00001b28  afbffff8	sw	-8(r29),r31; push ret addr
 1085  00001b2c  2fbd0018	subui	r29,r29,#24; alloc local storage
 1086  00001b30  afa20000	sw	0(r29),r2
 1087  00001b34  afa30004	sw	4(r29),r3
 1088  00001b38  8fc10000	lw	r1,(r30)
 1089  00001b3c  68220000	slti	r2,r1,#0
 1090  00001b40  1040002c	beqz	r2,L60_LF2
 1091  00001b44  54000000	nop; delay slot nop
 1092  00001b48  8fc10004	lw	r1,4(r30)
 1093  00001b4c  20220001	addi	r2,r1,#1
 1094  00001b50  afc20004	sw	4(r30),r2
 1095  00001b54  2002002d	addi	r2,r0,(#0x2d)&0xff
 1096  00001b58  a0220000	sb	(r1),r2
 1097  00001b5c  8fc10000	lw	r1,(r30)
 1098  00001b60  00011022	sub	r2,r0,r1
 1099  00001b64  afc20000	sw	(r30),r2
 1100  00001b68  08000118	j	L61_LF2
 1101  00001b6c  54000000	nop; delay slot nop
 1102  00001b70          	L60_LF2:
 1103  00001b70  8fc10000	lw	r1,(r30)
 1104  00001b74  64220000	snei	r2,r1,#0
 1105  00001b78  14400020	bnez	r2,L62_LF2
 1106  00001b7c  54000000	nop; delay slot nop
 1107  00001b80  8fc10004	lw	r1,4(r30)
 1108  00001b84  20220001	addi	r2,r1,#1
 1109  00001b88  afc20004	sw	4(r30),r2
 1110  00001b8c  20020030	addi	r2,r0,(#0x30)&0xff
 1111  00001b90  a0220000	sb	(r1),r2
 1112  00001b94  080000ec	j	L61_LF2
 1113  00001b98  54000000	nop; delay slot nop
 1114  00001b9c          	L62_LF2:
 1115  00001b9c  20010001	addi	r1,r0,#1
 1116  00001ba0  afc1fff4	sw	-12(r30),r1
 1117  00001ba4          	L64_LF2:
 1118  00001ba4  8fc1fff4	lw	r1,-12(r30)
 1119  00001ba8  8fc20000	lw	r2,(r30)
 1120  00001bac  0022082c	sle	r1,r1,r2
 1121  00001bb0  1420000c	bnez	r1,L66_LF2
 1122  00001bb4  54000000	nop; delay slot nop
 1123  00001bb8  08000024	j	L65_LF2
 1124  00001bbc  54000000	nop; delay slot nop
 1125  00001bc0          	L67_LF2:
 1126  00001bc0          	L66_LF2:
 1127  00001bc0  8fc1fff4	lw	r1,-12(r30)
 1128  00001bc4  00011820	add	r3,r0,r1
 1129  00001bc8  50620002	slli	r2,r3,#0x2
 1130  00001bcc  00411020	add	r2,r2,r1
 1131  00001bd0  50410001	slli	r1,r2,#0x1
 1132  00001bd4  afc1fff4	sw	-12(r30),r1
 1133  00001bd8  0bffffc8	j	L64_LF2
 1134  00001bdc  54000000	nop; delay slot nop
 1135  00001be0          	L65_LF2:
 1136  00001be0  54000000	nop
 1137  00001be4          	L68_LF2:
 1138  00001be4  8fc1fff4	lw	r1,-12(r30)
 1139  00001be8  2002000a	addi	r2,r0,#10
 1140  00001bec  00200035	movi2fp	f0,r1
 1141  00001bf0  00400835	movi2fp	f1,r2
 1142  00001bf4  0401000f	div	f0,f0,f1
 1143  00001bf8  00000834	movfp2i	r1,f0
 1144  00001bfc  afc1fff4	sw	-12(r30),r1
 1145  00001c00  8fc10004	lw	r1,4(r30)
 1146  00001c04  20220001	addi	r2,r1,#1
 1147  00001c08  afc20004	sw	4(r30),r2
 1148  00001c0c  8fc20000	lw	r2,(r30)
 1149  00001c10  8fc3fff4	lw	r3,-12(r30)
 1150  00001c14  00400035	movi2fp	f0,r2
 1151  00001c18  00600835	movi2fp	f1,r3
 1152  00001c1c  0401000f	div	f0,f0,f1
 1153  00001c20  00001034	movfp2i	r2,f0
 1154  00001c24  00021820	add	r3,r0,r2
 1155  00001c28  20620030	addi	r2,r3,#48
 1156  00001c2c  a0220000	sb	(r1),r2
 1157  00001c30  8fc10000	lw	r1,(r30)
 1158  00001c34  8fc3fff4	lw	r3,-12(r30)
 1159  00001c38  00200035	movi2fp	f0,r1
 1160  00001c3c  00600835	movi2fp	f1,r3
 1161  00001c40  0401000f	div	f0,f0,f1
 1162  00001c44  00001034	movfp2i	r2,f0
 1163  00001c48  8fc3fff4	lw	r3,-12(r30)
 1164  00001c4c  00400035	movi2fp	f0,r2
 1165  00001c50  00600835	movi2fp	f1,r3
 1166  00001c54  0401000e	mult	f0,f0,f1
 1167  00001c58  00001034	movfp2i	r2,f0
 1168  00001c5c  00220822	sub	r1,r1,r2
 1169  00001c60  afc10000	sw	(r30),r1
 1170  00001c64          	L70_LF2:
 1171  00001c64  8fc1fff4	lw	r1,-12(r30)
 1172  00001c68  6c220001	sgti	r2,r1,#1
 1173  00001c6c  1440000c	bnez	r2,L71_LF2
 1174  00001c70  54000000	nop; delay slot nop
 1175  00001c74  0800000c	j	L61_LF2
 1176  00001c78  54000000	nop; delay slot nop
 1177  00001c7c          	L71_LF2:
 1178  00001c7c  0bffff64	j	L68_LF2
 1179  00001c80  54000000	nop; delay slot nop
 1180  00001c84          	L69_LF2:
 1181  00001c84          	L63_LF2:
 1182  00001c84          	L61_LF2:
 1183  00001c84  8fc10004	lw	r1,4(r30)
 1184  00001c88  20020000	addi	r2,r0,(#0x0)&0xff
 1185  00001c8c  a0220000	sb	(r1),r2
 1186  00001c90          	L59_LF2:
 1187  00001c90  8fa20000	lw	r2,0(r29)
 1188  00001c94  8fa30004	lw	r3,4(r29)
 1189  00001c98  8fdffff8	lw	r31,-8(r30)
 1190  00001c9c  001ee820	add	r29,r0,r30
 1191  00001ca0  8fdefffc	lw	r30,-4(r30)
 1192  00001ca4  4be00000	jr	r31
 1193  00001ca8  54000000	nop
 1194  00001cac          	.endproc _ditoa
 1195  00001cac          	.align 2
 1196  00001cac          	.proc _dstrtol
 1197  00001cac          	.global _dstrtol
 1198  00001cac          	_dstrtol:
 1199                      ;  Function 'dstrtol'; 16 bytes of locals, 1 regs to save.
 1200  00001cac  afbefffc	sw	-4(r29),r30; push fp
 1201  00001cb0  001df020	add	r30,r0,r29; fp = sp
 1202  00001cb4  afbffff8	sw	-8(r29),r31; push ret addr
 1203  00001cb8  2fbd0020	subui	r29,r29,#32; alloc local storage
 1204  00001cbc  afa20000	sw	0(r29),r2
 1205  00001cc0  20010000	addi	r1,r0,#0
 1206  00001cc4  afc1fff4	sw	-12(r30),r1
 1207  00001cc8          	L73_LF2:
 1208  00001cc8  8fc10000	lw	r1,(r30)
 1209  00001ccc  90220000	lbu	r2,(r1)
 1210  00001cd0  60410020	seqi	r1,r2,#32
 1211  00001cd4  14200034	bnez	r1,L75_LF2
 1212  00001cd8  54000000	nop; delay slot nop
 1213  00001cdc  8fc10000	lw	r1,(r30)
 1214  00001ce0  90220000	lbu	r2,(r1)
 1215  00001ce4  60410009	seqi	r1,r2,#9
 1216  00001ce8  14200020	bnez	r1,L75_LF2
 1217  00001cec  54000000	nop; delay slot nop
 1218  00001cf0  8fc10000	lw	r1,(r30)
 1219  00001cf4  90220000	lbu	r2,(r1)
 1220  00001cf8  6041000a	seqi	r1,r2,#10
 1221  00001cfc  1420000c	bnez	r1,L75_LF2
 1222  00001d00  54000000	nop; delay slot nop
 1223  00001d04  0800001c	j	L74_LF2
 1224  00001d08  54000000	nop; delay slot nop
 1225  00001d0c          	L75_LF2:
 1226  00001d0c  8fc20000	lw	r2,(r30)
 1227  00001d10  20410001	addi	r1,r2,#1
 1228  00001d14  00011020	add	r2,r0,r1
 1229  00001d18  afc20000	sw	(r30),r2
 1230  00001d1c  0bffffa8	j	L73_LF2
 1231  00001d20  54000000	nop; delay slot nop
 1232  00001d24          	L74_LF2:
 1233  00001d24  8fc10004	lw	r1,4(r30)
 1234  00001d28  64220000	snei	r2,r1,#0
 1235  00001d2c  10400010	beqz	r2,L76_LF2
 1236  00001d30  54000000	nop; delay slot nop
 1237  00001d34  8fc10004	lw	r1,4(r30)
 1238  00001d38  8fc20000	lw	r2,(r30)
 1239  00001d3c  ac220000	sw	(r1),r2
 1240  00001d40          	L76_LF2:
 1241  00001d40  8fc10000	lw	r1,(r30)
 1242  00001d44  90220000	lbu	r2,(r1)
 1243  00001d48  64410000	snei	r1,r2,#0
 1244  00001d4c  14200010	bnez	r1,L77_LF2
 1245  00001d50  54000000	nop; delay slot nop
 1246  00001d54  8fc1fff4	lw	r1,-12(r30)
 1247  00001d58  08000294	j	L72_LF2
 1248  00001d5c  54000000	nop; delay slot nop
 1249  00001d60          	L77_LF2:
 1250  00001d60  8fc10000	lw	r1,(r30)
 1251  00001d64  90220000	lbu	r2,(r1)
 1252  00001d68  6041002d	seqi	r1,r2,#45
 1253  00001d6c  10200024	beqz	r1,L78_LF2
 1254  00001d70  54000000	nop; delay slot nop
 1255  00001d74  2001ffff	addi	r1,r0,#-1
 1256  00001d78  afc1ffec	sw	-20(r30),r1
 1257  00001d7c  8fc20000	lw	r2,(r30)
 1258  00001d80  20410001	addi	r1,r2,#1
 1259  00001d84  00011020	add	r2,r0,r1
 1260  00001d88  afc20000	sw	(r30),r2
 1261  00001d8c  0800000c	j	L79_LF2
 1262  00001d90  54000000	nop; delay slot nop
 1263  00001d94          	L78_LF2:
 1264  00001d94  20010001	addi	r1,r0,#1
 1265  00001d98  afc1ffec	sw	-20(r30),r1
 1266  00001d9c          	L79_LF2:
 1267  00001d9c  8fc10008	lw	r1,8(r30)
 1268  00001da0  64220000	snei	r2,r1,#0
 1269  00001da4  14400090	bnez	r2,L80_LF2
 1270  00001da8  54000000	nop; delay slot nop
 1271  00001dac  8fc10000	lw	r1,(r30)
 1272  00001db0  90220000	lbu	r2,(r1)
 1273  00001db4  60410030	seqi	r1,r2,#48
 1274  00001db8  10200074	beqz	r1,L81_LF2
 1275  00001dbc  54000000	nop; delay slot nop
 1276  00001dc0  8fc20000	lw	r2,(r30)
 1277  00001dc4  20410001	addi	r1,r2,#1
 1278  00001dc8  00011020	add	r2,r0,r1
 1279  00001dcc  afc20000	sw	(r30),r2
 1280  00001dd0  8fc10000	lw	r1,(r30)
 1281  00001dd4  90220000	lbu	r2,(r1)
 1282  00001dd8  60410078	seqi	r1,r2,#120
 1283  00001ddc  14200020	bnez	r1,L83_LF2
 1284  00001de0  54000000	nop; delay slot nop
 1285  00001de4  8fc10000	lw	r1,(r30)
 1286  00001de8  90220000	lbu	r2,(r1)
 1287  00001dec  60410058	seqi	r1,r2,#88
 1288  00001df0  1420000c	bnez	r1,L83_LF2
 1289  00001df4  54000000	nop; delay slot nop
 1290  00001df8  08000024	j	L82_LF2
 1291  00001dfc  54000000	nop; delay slot nop
 1292  00001e00          	L83_LF2:
 1293  00001e00  20010010	addi	r1,r0,#16
 1294  00001e04  afc10008	sw	8(r30),r1
 1295  00001e08  8fc20000	lw	r2,(r30)
 1296  00001e0c  20410001	addi	r1,r2,#1
 1297  00001e10  00011020	add	r2,r0,r1
 1298  00001e14  afc20000	sw	(r30),r2
 1299  00001e18  0800000c	j	L84_LF2
 1300  00001e1c  54000000	nop; delay slot nop
 1301  00001e20          	L82_LF2:
 1302  00001e20  20010008	addi	r1,r0,#8
 1303  00001e24  afc10008	sw	8(r30),r1
 1304  00001e28          	L84_LF2:
 1305  00001e28  0800000c	j	L80_LF2
 1306  00001e2c  54000000	nop; delay slot nop
 1307  00001e30          	L81_LF2:
 1308  00001e30  2001000a	addi	r1,r0,#10
 1309  00001e34  afc10008	sw	8(r30),r1
 1310  00001e38          	L85_LF2:
 1311  00001e38          	L80_LF2:
 1312  00001e38  8fc10008	lw	r1,8(r30)
 1313  00001e3c  70220000	slei	r2,r1,#0
 1314  00001e40  1440001c	bnez	r2,L87_LF2
 1315  00001e44  54000000	nop; delay slot nop
 1316  00001e48  8fc10008	lw	r1,8(r30)
 1317  00001e4c  6c220010	sgti	r2,r1,#16
 1318  00001e50  1440000c	bnez	r2,L87_LF2
 1319  00001e54  54000000	nop; delay slot nop
 1320  00001e58  08000010	j	L86_LF2
 1321  00001e5c  54000000	nop; delay slot nop
 1322  00001e60          	L87_LF2:
 1323  00001e60  8fc1fff4	lw	r1,-12(r30)
 1324  00001e64  08000188	j	L72_LF2
 1325  00001e68  54000000	nop; delay slot nop
 1326  00001e6c          	L86_LF2:
 1327  00001e6c  54000000	nop
 1328  00001e70          	L88_LF2:
 1329  00001e70  8fc10000	lw	r1,(r30)
 1330  00001e74  90220000	lbu	r2,(r1)
 1331  00001e78  6c41002f	sgtui	r1,r2,#47
 1332  00001e7c  10200030	beqz	r1,L91_LF2
 1333  00001e80  54000000	nop; delay slot nop
 1334  00001e84  8fc10000	lw	r1,(r30)
 1335  00001e88  90220000	lbu	r2,(r1)
 1336  00001e8c  70410039	sleui	r1,r2,#57
 1337  00001e90  1020001c	beqz	r1,L91_LF2
 1338  00001e94  54000000	nop; delay slot nop
 1339  00001e98  8fc10000	lw	r1,(r30)
 1340  00001e9c  90220000	lbu	r2,(r1)
 1341  00001ea0  2041ffd0	addi	r1,r2,#-48
 1342  00001ea4  afc1fff0	sw	-16(r30),r1
 1343  00001ea8  0800008c	j	L92_LF2
 1344  00001eac  54000000	nop; delay slot nop
 1345  00001eb0          	L91_LF2:
 1346  00001eb0  8fc10000	lw	r1,(r30)
 1347  00001eb4  90220000	lbu	r2,(r1)
 1348  00001eb8  6c410060	sgtui	r1,r2,#96
 1349  00001ebc  10200030	beqz	r1,L93_LF2
 1350  00001ec0  54000000	nop; delay slot nop
 1351  00001ec4  8fc10000	lw	r1,(r30)
 1352  00001ec8  90220000	lbu	r2,(r1)
 1353  00001ecc  7041007a	sleui	r1,r2,#122
 1354  00001ed0  1020001c	beqz	r1,L93_LF2
 1355  00001ed4  54000000	nop; delay slot nop
 1356  00001ed8  8fc10000	lw	r1,(r30)
 1357  00001edc  90220000	lbu	r2,(r1)
 1358  00001ee0  2041ffa9	addi	r1,r2,#-87
 1359  00001ee4  afc1fff0	sw	-16(r30),r1
 1360  00001ee8  0800004c	j	L92_LF2
 1361  00001eec  54000000	nop; delay slot nop
 1362  00001ef0          	L93_LF2:
 1363  00001ef0  8fc10000	lw	r1,(r30)
 1364  00001ef4  90220000	lbu	r2,(r1)
 1365  00001ef8  6c410040	sgtui	r1,r2,#64
 1366  00001efc  10200030	beqz	r1,L95_LF2
 1367  00001f00  54000000	nop; delay slot nop
 1368  00001f04  8fc10000	lw	r1,(r30)
 1369  00001f08  90220000	lbu	r2,(r1)
 1370  00001f0c  7041005a	sleui	r1,r2,#90
 1371  00001f10  1020001c	beqz	r1,L95_LF2
 1372  00001f14  54000000	nop; delay slot nop
 1373  00001f18  8fc10000	lw	r1,(r30)
 1374  00001f1c  90220000	lbu	r2,(r1)
 1375  00001f20  2041ffc9	addi	r1,r2,#-55
 1376  00001f24  afc1fff0	sw	-16(r30),r1
 1377  00001f28  0800000c	j	L92_LF2
 1378  00001f2c  54000000	nop; delay slot nop
 1379  00001f30          	L95_LF2:
 1380  00001f30  200103e8	addi	r1,r0,#1000
 1381  00001f34  afc1fff0	sw	-16(r30),r1
 1382  00001f38          	L96_LF2:
 1383  00001f38          	L94_LF2:
 1384  00001f38          	L92_LF2:
 1385  00001f38  8fc1fff0	lw	r1,-16(r30)
 1386  00001f3c  8fc20008	lw	r2,8(r30)
 1387  00001f40  0022082a	slt	r1,r1,r2
 1388  00001f44  10200040	beqz	r1,L90_LF2
 1389  00001f48  54000000	nop; delay slot nop
 1390  00001f4c  8fc1fff4	lw	r1,-12(r30)
 1391  00001f50  8fc20008	lw	r2,8(r30)
 1392  00001f54  00200035	movi2fp	f0,r1
 1393  00001f58  00400835	movi2fp	f1,r2
 1394  00001f5c  0401000e	mult	f0,f0,f1
 1395  00001f60  00000834	movfp2i	r1,f0
 1396  00001f64  afc1fff4	sw	-12(r30),r1
 1397  00001f68  8fc1fff4	lw	r1,-12(r30)
 1398  00001f6c  8fc2fff0	lw	r2,-16(r30)
 1399  00001f70  00220820	add	r1,r1,r2
 1400  00001f74  afc1fff4	sw	-12(r30),r1
 1401  00001f78  8fc20000	lw	r2,(r30)
 1402  00001f7c  20410001	addi	r1,r2,#1
 1403  00001f80  00011020	add	r2,r0,r1
 1404  00001f84  afc20000	sw	(r30),r2
 1405  00001f88          	L97_LF2:
 1406  00001f88          	L90_LF2:
 1407  00001f88  8fc1fff0	lw	r1,-16(r30)
 1408  00001f8c  8fc20008	lw	r2,8(r30)
 1409  00001f90  0022082a	slt	r1,r1,r2
 1410  00001f94  1420000c	bnez	r1,L98_LF2
 1411  00001f98  54000000	nop; delay slot nop
 1412  00001f9c  0800000c	j	L89_LF2
 1413  00001fa0  54000000	nop; delay slot nop
 1414  00001fa4          	L98_LF2:
 1415  00001fa4  0bfffec8	j	L88_LF2
 1416  00001fa8  54000000	nop; delay slot nop
 1417  00001fac          	L89_LF2:
 1418  00001fac  8fc10004	lw	r1,4(r30)
 1419  00001fb0  64220000	snei	r2,r1,#0
 1420  00001fb4  10400010	beqz	r2,L99_LF2
 1421  00001fb8  54000000	nop; delay slot nop
 1422  00001fbc  8fc10004	lw	r1,4(r30)
 1423  00001fc0  8fc20000	lw	r2,(r30)
 1424  00001fc4  ac220000	sw	(r1),r2
 1425  00001fc8          	L99_LF2:
 1426  00001fc8  8fc1fff4	lw	r1,-12(r30)
 1427  00001fcc  8fc2ffec	lw	r2,-20(r30)
 1428  00001fd0  00200035	movi2fp	f0,r1
 1429  00001fd4  00400835	movi2fp	f1,r2
 1430  00001fd8  0401000e	mult	f0,f0,f1
 1431  00001fdc  00000834	movfp2i	r1,f0
 1432  00001fe0  afc1fff4	sw	-12(r30),r1
 1433  00001fe4  8fc1fff4	lw	r1,-12(r30)
 1434  00001fe8  08000004	j	L72_LF2
 1435  00001fec  54000000	nop; delay slot nop
 1436  00001ff0          	L72_LF2:
 1437  00001ff0  8fa20000	lw	r2,0(r29)
 1438  00001ff4  8fdffff8	lw	r31,-8(r30)
 1439  00001ff8  001ee820	add	r29,r0,r30
 1440  00001ffc  8fdefffc	lw	r30,-4(r30)
 1441  00002000  4be00000	jr	r31
 1442  00002004  54000000	nop
 1443  00002008          	.endproc _dstrtol
 1444  00002008          	.align 2
 1445  00002008          	.proc _bcopy
 1446  00002008          	.global _bcopy
 1447  00002008          	_bcopy:
 1448                      ;  Function 'bcopy'; 0 bytes of locals, 2 regs to save.
 1449  00002008  afbefffc	sw	-4(r29),r30; push fp
 1450  0000200c  001df020	add	r30,r0,r29; fp = sp
 1451  00002010  afbffff8	sw	-8(r29),r31; push ret addr
 1452  00002014  2fbd0010	subui	r29,r29,#16; alloc local storage
 1453  00002018  afa20000	sw	0(r29),r2
 1454  0000201c  afa30004	sw	4(r29),r3
 1455  00002020  54000000	nop
 1456  00002024          	L101_LF2:
 1457  00002024  8fc10008	lw	r1,8(r30)
 1458  00002028  2022ffff	addi	r2,r1,#-1
 1459  0000202c  afc20008	sw	8(r30),r2
 1460  00002030  6c210000	sgti	r1,r1,#0
 1461  00002034  1420000c	bnez	r1,L103_LF2
 1462  00002038  54000000	nop; delay slot nop
 1463  0000203c  0800002c	j	L102_LF2
 1464  00002040  54000000	nop; delay slot nop
 1465  00002044          	L103_LF2:
 1466  00002044  8fc10004	lw	r1,4(r30)
 1467  00002048  20220001	addi	r2,r1,#1
 1468  0000204c  afc20004	sw	4(r30),r2
 1469  00002050  8fc20000	lw	r2,(r30)
 1470  00002054  20430001	addi	r3,r2,#1
 1471  00002058  afc30000	sw	(r30),r3
 1472  0000205c  80420000	lb	r2,(r2)
 1473  00002060  a0220000	sb	(r1),r2
 1474  00002064  0bffffbc	j	L101_LF2
 1475  00002068  54000000	nop; delay slot nop
 1476  0000206c          	L102_LF2:
 1477  0000206c          	L100_LF2:
 1478  0000206c  8fa20000	lw	r2,0(r29)
 1479  00002070  8fa30004	lw	r3,4(r29)
 1480  00002074  8fdffff8	lw	r31,-8(r30)
 1481  00002078  001ee820	add	r29,r0,r30
 1482  0000207c  8fdefffc	lw	r30,-4(r30)
 1483  00002080  4be00000	jr	r31
 1484  00002084  54000000	nop
 1485  00002088          	.endproc _bcopy
 1486  00002088          	.align 2
 1487  00002088          	.proc _bzero
 1488  00002088          	.global _bzero
 1489  00002088          	_bzero:
 1490                      ;  Function 'bzero'; 0 bytes of locals, 1 regs to save.
 1491  00002088  afbefffc	sw	-4(r29),r30; push fp
 1492  0000208c  001df020	add	r30,r0,r29; fp = sp
 1493  00002090  afbffff8	sw	-8(r29),r31; push ret addr
 1494  00002094  2fbd0010	subui	r29,r29,#16; alloc local storage
 1495  00002098  afa20000	sw	0(r29),r2
 1496  0000209c  54000000	nop
 1497  000020a0          	L105_LF2:
 1498  000020a0  8fc10004	lw	r1,4(r30)
 1499  000020a4  2022ffff	addi	r2,r1,#-1
 1500  000020a8  afc20004	sw	4(r30),r2
 1501  000020ac  6c210000	sgti	r1,r1,#0
 1502  000020b0  1420000c	bnez	r1,L107_LF2
 1503  000020b4  54000000	nop; delay slot nop
 1504  000020b8  08000020	j	L106_LF2
 1505  000020bc  54000000	nop; delay slot nop
 1506  000020c0          	L107_LF2:
 1507  000020c0  8fc10000	lw	r1,(r30)
 1508  000020c4  20220001	addi	r2,r1,#1
 1509  000020c8  afc20000	sw	(r30),r2
 1510  000020cc  20020000	addi	r2,r0,(#0x0)&0xff
 1511  000020d0  a0220000	sb	(r1),r2
 1512  000020d4  0bffffc8	j	L105_LF2
 1513  000020d8  54000000	nop; delay slot nop
 1514  000020dc          	L106_LF2:
 1515  000020dc          	L104_LF2:
 1516  000020dc  8fa20000	lw	r2,0(r29)
 1517  000020e0  8fdffff8	lw	r31,-8(r30)
 1518  000020e4  001ee820	add	r29,r0,r30
 1519  000020e8  8fdefffc	lw	r30,-4(r30)
 1520  000020ec  4be00000	jr	r31
 1521  000020f0  54000000	nop
 1522  000020f4          	.endproc _bzero
 1523  000020f4          	.align 2
 1524  000020f4          	.proc _min
 1525  000020f4          	.global _min
 1526  000020f4          	_min:
 1527                      ;  Function 'min'; 0 bytes of locals, 2 regs to save.
 1528  000020f4  afbefffc	sw	-4(r29),r30; push fp
 1529  000020f8  001df020	add	r30,r0,r29; fp = sp
 1530  000020fc  afbffff8	sw	-8(r29),r31; push ret addr
 1531  00002100  2fbd0010	subui	r29,r29,#16; alloc local storage
 1532  00002104  afa20000	sw	0(r29),r2
 1533  00002108  afa30004	sw	4(r29),r3
 1534  0000210c  8fc10000	lw	r1,(r30)
 1535  00002110  8fc20004	lw	r2,4(r30)
 1536  00002114  0022182c	sle	r3,r1,r2
 1537  00002118  14600008	bnez	r3,L109_LF2
 1538  0000211c  54000000	nop; delay slot nop
 1539  00002120  8fc10004	lw	r1,4(r30)
 1540  00002124          	L109_LF2:
 1541  00002124  08000004	j	L108_LF2
 1542  00002128  54000000	nop; delay slot nop
 1543  0000212c          	L108_LF2:
 1544  0000212c  8fa20000	lw	r2,0(r29)
 1545  00002130  8fa30004	lw	r3,4(r29)
 1546  00002134  8fdffff8	lw	r31,-8(r30)
 1547  00002138  001ee820	add	r29,r0,r30
 1548  0000213c  8fdefffc	lw	r30,-4(r30)
 1549  00002140  4be00000	jr	r31
 1550  00002144  54000000	nop
 1551  00002148          	.endproc _min
 1552  00002148          	.align 2
 1553  00002148          	.proc _max
 1554  00002148          	.global _max
 1555  00002148          	_max:
 1556                      ;  Function 'max'; 0 bytes of locals, 2 regs to save.
 1557  00002148  afbefffc	sw	-4(r29),r30; push fp
 1558  0000214c  001df020	add	r30,r0,r29; fp = sp
 1559  00002150  afbffff8	sw	-8(r29),r31; push ret addr
 1560  00002154  2fbd0010	subui	r29,r29,#16; alloc local storage
 1561  00002158  afa20000	sw	0(r29),r2
 1562  0000215c  afa30004	sw	4(r29),r3
 1563  00002160  8fc10000	lw	r1,(r30)
 1564  00002164  8fc20004	lw	r2,4(r30)
 1565  00002168  0022182d	sge	r3,r1,r2
 1566  0000216c  14600008	bnez	r3,L111_LF2
 1567  00002170  54000000	nop; delay slot nop
 1568  00002174  8fc10004	lw	r1,4(r30)
 1569  00002178          	L111_LF2:
 1570  00002178  08000004	j	L110_LF2
 1571  0000217c  54000000	nop; delay slot nop
 1572  00002180          	L110_LF2:
 1573  00002180  8fa20000	lw	r2,0(r29)
 1574  00002184  8fa30004	lw	r3,4(r29)
 1575  00002188  8fdffff8	lw	r31,-8(r30)
 1576  0000218c  001ee820	add	r29,r0,r30
 1577  00002190  8fdefffc	lw	r30,-4(r30)
 1578  00002194  4be00000	jr	r31
 1579  00002198  54000000	nop
 1580  0000219c          	.endproc _max
 1581                      ;;; Ethan L. Miller, 1999.  Released to the public domain
 1582                      ;;;
 1583                      ;;; Most of the traps are called in files from libtraps.
 1586  0000219c          	.align 2
 1587  0000219c          	.proc _exit
 1588  0000219c          	.global _exit
 1589  0000219c          	_exit:
 1590  0000219c  44000300	trap	#0x300
 1591  000021a0  4be00000	jr	r31
 1592  000021a4  54000000	nop
 1593  000021a8          	.endproc _exit
 1595                      ; for the benefit of gcc.
 1596  000021a8          	.proc ___main
 1597  000021a8          	.global ___main
 1598  000021a8          	___main:
 1599  000021a8  4be00000	jr	r31
 1600  000021ac  54000000	nop
 1601  000021b0          	.endproc ___main
 1602  000021b0          	.text
 1603  000021b0          	.global _etext
 1604  000021b0          	_etext:
 1605  000021b0          	.align 3
 1606  000021b0          	.data
 1607  0000311f          	.global _edata
 1608  0000311f          	_edata:
