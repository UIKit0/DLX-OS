 line   address	contents
    1                      ; Linked by DLX-LD.
    2                      ; MemSize 24576
    3                      ; Data size: 199
    4                      ; Text size: 4508
    5                      ; Stack size: 8192
    6  00000000          	.text 0x1000
    7  00001000          	.data 0x3000
    8                      ; Compiled by GCC
    9  00003000          	.text
   10  00001000          	.align 2
   11  00001000          	.proc _isspace
   12  00001000          	.global _isspace
   13  00001000          	_isspace:
   14                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
   15  00001000  afbefffc	sw	-4(r29),r30; push fp
   16  00001004  001df020	add	r30,r0,r29; fp = sp
   17  00001008  afbffff8	sw	-8(r29),r31; push ret addr
   18  0000100c  2fbd0010	subui	r29,r29,#16; alloc local storage
   19  00001010  afa20000	sw	0(r29),r2
   20  00001014  83c20003	lb	r2,3(r30)
   21  00001018  201f0000	addi	r31,r0,#0
   22  0000101c  304100ff	andi	r1,r2,#0x00ff
   23  00001020  60210020	seqi	r1,r1,#32
   24  00001024  14200018	bnez	r1,L6_LF0
   25  00001028  54000000	nop; not filled.
   26  0000102c  2041fff7	addi	r1,r2,#-9
   27  00001030  302100ff	andi	r1,r1,#0x00ff
   28  00001034  70210001	sleui	r1,r1,#1
   29  00001038  10200008	beqz	r1,L5_LF0
   30  0000103c  54000000	nop; not filled.
   31  00001040          	L6_LF0:
   32  00001040  201f0001	addi	r31,r0,#1
   33  00001044          	L5_LF0:
   34  00001044  001f0820	add	r1,r0,r31
   35  00001048  8fa20000	lw	r2,0(r29)
   36  0000104c  8fdffff8	lw	r31,-8(r30)
   37  00001050  001ee820	add	r29,r0,r30
   38  00001054  8fdefffc	lw	r30,-4(r30)
   39  00001058  4be00000	jr	r31
   40  0000105c  54000000	nop
   41  00001060          	.endproc _isspace
   42  00001060          	.align 2
   43  00001060          	.proc _isxdigit
   44  00001060          	.global _isxdigit
   45  00001060          	_isxdigit:
   46                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
   47  00001060  afbefffc	sw	-4(r29),r30; push fp
   48  00001064  001df020	add	r30,r0,r29; fp = sp
   49  00001068  afbffff8	sw	-8(r29),r31; push ret addr
   50  0000106c  2fbd0010	subui	r29,r29,#16; alloc local storage
   51  00001070  afa20000	sw	0(r29),r2
   52  00001074  83df0003	lb	r31,3(r30)
   53  00001078  20020000	addi	r2,r0,#0
   54  0000107c  23e1ffd0	addi	r1,r31,#-48
   55  00001080  302100ff	andi	r1,r1,#0x00ff
   56  00001084  70210009	sleui	r1,r1,#9
   57  00001088  14200028	bnez	r1,L12_LF0
   58  0000108c  54000000	nop; not filled.
   59  00001090  23e1ff9f	addi	r1,r31,#-97
   60  00001094  302100ff	andi	r1,r1,#0x00ff
   61  00001098  70210005	sleui	r1,r1,#5
   62  0000109c  14200014	bnez	r1,L12_LF0
   63  000010a0  54000000	nop; not filled.
   64  000010a4  33e100ff	andi	r1,r31,#0x00ff
   65  000010a8  64210041	snei	r1,r1,#65
   66  000010ac  14200008	bnez	r1,L11_LF0
   67  000010b0  54000000	nop; not filled.
   68  000010b4          	L12_LF0:
   69  000010b4  20020001	addi	r2,r0,#1
   70  000010b8          	L11_LF0:
   71  000010b8  00020820	add	r1,r0,r2
   72  000010bc  8fa20000	lw	r2,0(r29)
   73  000010c0  8fdffff8	lw	r31,-8(r30)
   74  000010c4  001ee820	add	r29,r0,r30
   75  000010c8  8fdefffc	lw	r30,-4(r30)
   76  000010cc  4be00000	jr	r31
   77  000010d0  54000000	nop
   78  000010d4          	.endproc _isxdigit
   79  000010d4          	.data
   80  00003000          	.align 2
   81  00003000          	_p6_LF0:
   82  00003000  00000000	.word 0
   83  00003004          	.align 2
   84  00003004          	LC0_LF0:
   85  00003004  55736167	.ascii "Usage: %s <handle_to_procs_completed_semaphore>\n\000"
   85  00003008  653a2025	
   85  0000300c  73203c68	
   85  00003010  616e646c	
   85  00003014  655f746f	
   85  00003018  5f70726f	
   85  0000301c  63735f63	
   85  00003020  6f6d706c	
   85  00003024  65746564	
   85  00003028  5f73656d	
   85  0000302c  6170686f	
   85  00003030  72653e0a	
   85  00003034  00      	
   86  00003035          	.align 2
   87  00003038          	LC1_LF0:
   88  00003038  68656c6c	.ascii "hello_world (%d): Hello world!\n\000"
   88  0000303c  6f5f776f	
   88  00003040  726c6420	
   88  00003044  28256429	
   88  00003048  3a204865	
   88  0000304c  6c6c6f20	
   88  00003050  776f726c	
   88  00003054  64210a00	
   89  00003058          	.align 2
   90  00003058          	LC2_LF0:
   91  00003058  68656c6c	.ascii "hello_world (%d): Bad semaphore s_procs_completed (%d)!\n\000"
   91  0000305c  6f5f776f	
   91  00003060  726c6420	
   91  00003064  28256429	
   91  00003068  3a204261	
   91  0000306c  64207365	
   91  00003070  6d617068	
   91  00003074  6f726520	
   91  00003078  735f7072	
   91  0000307c  6f63735f	
   91  00003080  636f6d70	
   91  00003084  6c657465	
   91  00003088  64202825	
   91  0000308c  6429210a	
   91  00003090  00      	
   92  00003091          	.align 2
   93  00003094          	LC3_LF0:
   94  00003094  68656c6c	.ascii "hello_world (%d): Done!\n\000"
   94  00003098  6f5f776f	
   94  0000309c  726c6420	
   94  000030a0  28256429	
   94  000030a4  3a20446f	
   94  000030a8  6e65210a	
   94  000030ac  00      	
   95  000030ad          	.text
   96  000010d4          	.align 2
   97  000010d4          	.proc _main
   98  000010d4          	.global _main
   99  000010d4          	_main:
  100                      ;  Function 'main'; 0 bytes of locals, 0 regs to save.
  101  000010d4  afbefffc	sw	-4(r29),r30; push fp
  102  000010d8  001df020	add	r30,r0,r29; fp = sp
  103  000010dc  afbffff8	sw	-8(r29),r31; push ret addr
  104  000010e0  2fbd0008	subui	r29,r29,#8; alloc local storage
  105  000010e4  8fc20000	lw	r2,(r30)
  106  000010e8  8fc30004	lw	r3,4(r30)
  107  000010ec  0c0010a4	jal	___main
  108  000010f0  54000000	nop; not filled.
  109  000010f4  64410002	snei	r1,r2,#2
  110  000010f8  10200028	beqz	r1,L17_LF0
  111  000010fc  54000000	nop; not filled.
  112  00001100  23bdfff8	addi	r29,r29,#-8
  113  00001104  3c040000	lhi	r4,((LC0_LF0)>>16)&0xffff
  114  00001108  24843004	addui	r4,r4,(LC0_LF0)&0xffff
  115  0000110c  afa40000	sw	(r29),r4
  116  00001110  0c0001c0	jal	_Printf
  117  00001114  54000000	nop; not filled.
  118  00001118  0c0002c0	jal	_Exit
  119  0000111c  54000000	nop; not filled.
  120  00001120  23bd0008	addi	r29,r29,#8
  121  00001124          	L17_LF0:
  122  00001124  23bdfff0	addi	r29,r29,#-16
  123  00001128  8c630004	lw	r3,4(r3)
  124  0000112c  afa30000	sw	(r29),r3
  125  00001130  20040000	addi	r4,r0,#0
  126  00001134  afa40004	sw	4(r29),r4
  127  00001138  2004000a	addi	r4,r0,#10
  128  0000113c  afa40008	sw	8(r29),r4
  129  00001140  0c000b54	jal	_dstrtol
  130  00001144  54000000	nop; not filled.
  131  00001148  00011020	add	r2,r0,r1
  132  0000114c  0c000190	jal	_getpid
  133  00001150  54000000	nop; not filled.
  134  00001154  3c040000	lhi	r4,((LC1_LF0)>>16)&0xffff
  135  00001158  24843038	addui	r4,r4,(LC1_LF0)&0xffff
  136  0000115c  afa40000	sw	(r29),r4
  137  00001160  afa10004	sw	4(r29),r1
  138  00001164  0c00016c	jal	_Printf
  139  00001168  54000000	nop; not filled.
  140  0000116c  afa20000	sw	(r29),r2
  141  00001170  0c0001b4	jal	_sem_signal
  142  00001174  54000000	nop; not filled.
  143  00001178  23bd0010	addi	r29,r29,#16
  144  0000117c  64210001	snei	r1,r1,#1
  145  00001180  10200038	beqz	r1,L18_LF0
  146  00001184  54000000	nop; not filled.
  147  00001188  0c000154	jal	_getpid
  148  0000118c  54000000	nop; not filled.
  149  00001190  23bdfff0	addi	r29,r29,#-16
  150  00001194  3c040000	lhi	r4,((LC2_LF0)>>16)&0xffff
  151  00001198  24843058	addui	r4,r4,(LC2_LF0)&0xffff
  152  0000119c  afa40000	sw	(r29),r4
  153  000011a0  afa10004	sw	4(r29),r1
  154  000011a4  afa20008	sw	8(r29),r2
  155  000011a8  0c000128	jal	_Printf
  156  000011ac  54000000	nop; not filled.
  157  000011b0  0c000228	jal	_Exit
  158  000011b4  54000000	nop; not filled.
  159  000011b8  23bd0010	addi	r29,r29,#16
  160  000011bc          	L18_LF0:
  161  000011bc  0c000120	jal	_getpid
  162  000011c0  54000000	nop; not filled.
  163  000011c4  23bdfff8	addi	r29,r29,#-8
  164  000011c8  3c040000	lhi	r4,((LC3_LF0)>>16)&0xffff
  165  000011cc  24843094	addui	r4,r4,(LC3_LF0)&0xffff
  166  000011d0  afa40000	sw	(r29),r4
  167  000011d4  afa10004	sw	4(r29),r1
  168  000011d8  0c0000f8	jal	_Printf
  169  000011dc  54000000	nop; not filled.
  170  000011e0  23bd0008	addi	r29,r29,#8
  171  000011e4  0c000fa0	jal	_exit
  172  000011e8  54000000	nop
  173  000011ec          	.endproc _main
  174  000011ec          	.data
  175  000030ad          	.align 2
  176  000030b0          	LC4_LF0:
  177  000030b0  68656c6c	.ascii "hello_world, %d times\n\000"
  177  000030b4  6f5f776f	
  177  000030b8  726c642c	
  177  000030bc  20256420	
  177  000030c0  74696d65	
  177  000030c4  730a00  	
  178  000030c7          	.text
  179  000011ec          	.align 2
  180  000011ec          	.proc _hello
  181  000011ec          	.global _hello
  182  000011ec          	_hello:
  183                      ;  Function 'hello'; 400 bytes of locals, 3 regs to save.
  184  000011ec  afbefffc	sw	-4(r29),r30; push fp
  185  000011f0  001df020	add	r30,r0,r29; fp = sp
  186  000011f4  afbffff8	sw	-8(r29),r31; push ret addr
  187  000011f8  2fbd01a8	subui	r29,r29,#424; alloc local storage
  188  000011fc  afa20000	sw	0(r29),r2
  189  00001200  afa30004	sw	4(r29),r3
  190  00001204  afa40008	sw	8(r29),r4
  191  00001208  8fc20000	lw	r2,(r30)
  192  0000120c  23dffff8	addi	r31,r30,#-8
  193  00001210  23c30184	addi	r3,r30,#388
  194  00001214          	L30_LF0:
  195  00001214  afe2fe70	sw	-400(r31),r2
  196  00001218  23ff0004	addi	r31,r31,#4
  197  0000121c  03e3082c	sle	r1,r31,r3
  198  00001220  1420fff0	bnez	r1,L30_LF0
  199  00001224  54000000	nop; not filled.
  200  00001228  23bdfff8	addi	r29,r29,#-8
  201  0000122c  3c040000	lhi	r4,((LC4_LF0)>>16)&0xffff
  202  00001230  248430b0	addui	r4,r4,(LC4_LF0)&0xffff
  203  00001234  afa40000	sw	(r29),r4
  204  00001238  afa20004	sw	4(r29),r2
  205  0000123c  0c000094	jal	_Printf
  206  00001240  54000000	nop; not filled.
  207  00001244  23bd0008	addi	r29,r29,#8
  208  00001248  6c410000	sgti	r1,r2,#0
  209  0000124c  1020001c	beqz	r1,L32_LF0
  210  00001250  54000000	nop; not filled.
  211  00001254  2042ffff	addi	r2,r2,#-1
  212  00001258  23bdfff8	addi	r29,r29,#-8
  213  0000125c  afa20000	sw	(r29),r2
  214  00001260  0fffff88	jal	_hello
  215  00001264  54000000	nop; not filled.
  216  00001268  23bd0008	addi	r29,r29,#8
  217  0000126c          	L32_LF0:
  218  0000126c  8fa20000	lw	r2,0(r29)
  219  00001270  8fa30004	lw	r3,4(r29)
  220  00001274  8fa40008	lw	r4,8(r29)
  221  00001278  8fdffff8	lw	r31,-8(r30)
  222  0000127c  001ee820	add	r29,r0,r30
  223  00001280  8fdefffc	lw	r30,-4(r30)
  224  00001284  4be00000	jr	r31
  225  00001288  54000000	nop
  226  0000128c          	.endproc _hello
  227                      ;;;
  228                      ;;; Stub functions for DLX traps.
  229                      ;;;
  230                      ;;; Ethan L. Miller, 1999.  Released to the public domain.
  231                      ;;;
  232                      ;;; The traps such as Open and Close
  233                      ;;; (note the capital letters) are for use by user programs.  The traps
  234                      ;;; with names such as open and close (lower case) are for use by the OS.
  235                      ;;;
  238  0000128c          	.align 2
  240                      ;;; The following are the traps to be used by user-level programs
  241                      ;;;
  243  0000128c          	.align 2
  244  0000128c          	.proc _Open
  245  0000128c          	.global _Open
  246  0000128c          	_Open:
  247                      ;;; Note that trap #0x213 actually causes a trap vector in the OS of
  248                      ;;; 0x1213.  The same is true for other user traps.  Thus, a user trap
  249                      ;;; with trap #0x240 will result in a trap vector of 0x1240 in the OS.
  250  0000128c  44000213	trap	#0x213
  251  00001290  4be00000	jr	r31
  252  00001294  54000000	nop
  253  00001298          	.endproc _Open
  255  00001298          	.proc _Close
  256  00001298          	.global _Close
  257  00001298          	_Close:
  258  00001298  44000214	trap	#0x214
  259  0000129c  4be00000	jr	r31
  260  000012a0  54000000	nop
  261  000012a4          	.endproc _Close
  263  000012a4          	.proc _Read
  264  000012a4          	.global _Read
  265  000012a4          	_Read:
  266  000012a4  44000210	trap	#0x210
  267  000012a8  4be00000	jr	r31
  268  000012ac  54000000	nop
  269  000012b0          	.endproc _Read
  271  000012b0          	.proc _Write
  272  000012b0          	.global _Write
  273  000012b0          	_Write:
  274  000012b0  44000211	trap	#0x211
  275  000012b4  4be00000	jr	r31
  276  000012b8  54000000	nop
  277  000012bc          	.endproc _Write
  279  000012bc          	.proc _Lseek
  280  000012bc          	.global _Lseek
  281  000012bc          	_Lseek:
  282  000012bc  44000212	trap	#0x212
  283  000012c0  4be00000	jr	r31
  284  000012c4  54000000	nop
  285  000012c8          	.endproc _Lseek
  287  000012c8          	.proc _Putchar
  288  000012c8          	.global _Putchar
  289  000012c8          	_Putchar:
  290  000012c8  44000280	trap	#0x280
  291  000012cc  4be00000	jr	r31
  292  000012d0  54000000	nop
  293  000012d4          	.endproc _Putchar
  295  000012d4          	.proc _Printf
  296  000012d4          	.global _Printf
  297  000012d4          	_Printf:
  298  000012d4  44000201	trap	#0x201
  299  000012d8  4be00000	jr	r31
  300  000012dc  54000000	nop
  301  000012e0          	.endproc _Printf
  303  000012e0          	.proc _getpid
  304  000012e0          	.global _getpid
  305  000012e0          	_getpid:
  306  000012e0  44000431	trap	#0x431
  307  000012e4  4be00000	jr	r31
  308  000012e8  54000000	nop
  309  000012ec          	.endproc _getpid
  311  000012ec          	.proc _process_create
  312  000012ec          	.global _process_create
  313  000012ec          	_process_create:
  314  000012ec  44000432	trap	#0x432
  315  000012f0  4be00000	jr	r31
  316  000012f4  54000000	nop
  317  000012f8          	.endproc _process_create
  319  000012f8          	.proc _shmget
  320  000012f8          	.global _shmget
  321  000012f8          	_shmget:
  322  000012f8  44000440	trap	#0x440
  323  000012fc  4be00000	jr	r31
  324  00001300  54000000	nop
  325  00001304          	.endproc _shmget
  327  00001304          	.proc _shmat
  328  00001304          	.global _shmat
  329  00001304          	_shmat:
  330  00001304  44000441	trap	#0x441
  331  00001308  4be00000	jr	r31
  332  0000130c  54000000	nop
  333  00001310          	.endproc _shmat
  335  00001310          	.proc _sem_create
  336  00001310          	.global _sem_create
  337  00001310          	_sem_create:
  338  00001310  44000450	trap	#0x450
  339  00001314  4be00000	jr	r31
  340  00001318  54000000	nop
  341  0000131c          	.endproc _sem_create
  343  0000131c          	.proc _sem_wait
  344  0000131c          	.global _sem_wait
  345  0000131c          	_sem_wait:
  346  0000131c  44000451	trap	#0x451
  347  00001320  4be00000	jr	r31
  348  00001324  54000000	nop
  349  00001328          	.endproc _sem_wait
  351  00001328          	.proc _sem_signal
  352  00001328          	.global _sem_signal
  353  00001328          	_sem_signal:
  354  00001328  44000452	trap	#0x452
  355  0000132c  4be00000	jr	r31
  356  00001330  54000000	nop
  357  00001334          	.endproc _sem_signal
  359  00001334          	.proc _lock_create
  360  00001334          	.global _lock_create
  361  00001334          	_lock_create:
  362  00001334  44000453	trap	#0x453
  363  00001338  4be00000	jr	r31
  364  0000133c  54000000	nop
  365  00001340          	.endproc _lock_create
  367  00001340          	.proc _lock_acquire
  368  00001340          	.global _lock_acquire
  369  00001340          	_lock_acquire:
  370  00001340  44000454	trap	#0x454
  371  00001344  4be00000	jr	r31
  372  00001348  54000000	nop
  373  0000134c          	.endproc _lock_acquire
  375  0000134c          	.proc _lock_release
  376  0000134c          	.global _lock_release
  377  0000134c          	_lock_release:
  378  0000134c  44000455	trap	#0x455
  379  00001350  4be00000	jr	r31
  380  00001354  54000000	nop
  381  00001358          	.endproc _lock_release
  383  00001358          	.proc _cond_create
  384  00001358          	.global _cond_create
  385  00001358          	_cond_create:
  386  00001358  44000456	trap	#0x456
  387  0000135c  4be00000	jr	r31
  388  00001360  54000000	nop
  389  00001364          	.endproc _cond_create
  391  00001364          	.proc _cond_wait
  392  00001364          	.global _cond_wait
  393  00001364          	_cond_wait:
  394  00001364  44000457	trap	#0x457
  395  00001368  4be00000	jr	r31
  396  0000136c  54000000	nop
  397  00001370          	.endproc _cond_wait
  399  00001370          	.proc _cond_signal
  400  00001370          	.global _cond_signal
  401  00001370          	_cond_signal:
  402  00001370  44000458	trap	#0x458
  403  00001374  4be00000	jr	r31
  404  00001378  54000000	nop
  405  0000137c          	.endproc _cond_signal
  407  0000137c          	.proc _cond_broadcast
  408  0000137c          	.global _cond_broadcast
  409  0000137c          	_cond_broadcast:
  410  0000137c  44000459	trap	#0x459
  411  00001380  4be00000	jr	r31
  412  00001384  54000000	nop
  413  00001388          	.endproc _cond_broadcast
  415  00001388          	.proc _mbox_create
  416  00001388          	.global _mbox_create
  417  00001388          	_mbox_create:
  418  00001388  44000460	trap	#0x460
  419  0000138c  4be00000	jr	r31
  420  00001390  54000000	nop
  421  00001394          	.endproc _mbox_create
  423  00001394          	.proc _mbox_open
  424  00001394          	.global _mbox_open
  425  00001394          	_mbox_open:
  426  00001394  44000461	trap	#0x461
  427  00001398  4be00000	jr	r31
  428  0000139c  54000000	nop
  429  000013a0          	.endproc _mbox_open
  431  000013a0          	.proc _mbox_close
  432  000013a0          	.global _mbox_close
  433  000013a0          	_mbox_close:
  434  000013a0  44000462	trap	#0x462
  435  000013a4  4be00000	jr	r31
  436  000013a8  54000000	nop
  437  000013ac          	.endproc _mbox_close
  439  000013ac          	.proc _mbox_send
  440  000013ac          	.global _mbox_send
  441  000013ac          	_mbox_send:
  442  000013ac  44000463	trap	#0x463
  443  000013b0  4be00000	jr	r31
  444  000013b4  54000000	nop
  445  000013b8          	.endproc _mbox_send
  447  000013b8          	.proc _mbox_recv
  448  000013b8          	.global _mbox_recv
  449  000013b8          	_mbox_recv:
  450  000013b8  44000464	trap	#0x464
  451  000013bc  4be00000	jr	r31
  452  000013c0  54000000	nop
  453  000013c4          	.endproc _mbox_recv
  455  000013c4          	.proc _sleep
  456  000013c4          	.global _sleep
  457  000013c4          	_sleep:
  458  000013c4  44000465	trap	#0x465
  459  000013c8  4be00000	jr	r31
  460  000013cc  54000000	nop
  461  000013d0          	.endproc _sleep
  463  000013d0          	.proc _yield
  464  000013d0          	.global _yield
  465  000013d0          	_yield:
  466  000013d0  44000466	trap	#0x466
  467  000013d4  4be00000	jr	r31
  468  000013d8  54000000	nop
  469  000013dc          	.endproc _yield
  472  000013dc          	.proc _Exit
  473  000013dc          	.global _Exit
  474  000013dc          	_Exit:
  475  000013dc  44000500	trap	#0x500
  476  000013e0  4be00000	jr	r31
  477  000013e4  54000000	nop
  478  000013e8          	.endproc _Exit
  481  000013e8          	.proc _malloc
  482  000013e8          	.global _malloc
  483  000013e8          	_malloc:
  484  000013e8  44000467	trap	#0x467
  485  000013ec  4be00000	jr	r31
  486  000013f0          	.endproc _malloc
  489  000013f0          	.proc _mfree
  490  000013f0          	.global _mfree
  491  000013f0          	_mfree:
  492  000013f0  44000468	trap	#0x468
  493  000013f4  4be00000	jr	r31
  494  000013f8          	.endproc _mfree
  495                      ; Compiled by GCC
  497  000013f8          	.align 2
  498  000013f8          	.proc _isspace
  499  000013f8          	.global _isspace
  500  000013f8          	_isspace:
  501                      ;  Function 'isspace'; 0 bytes of locals, 3 regs to save.
  502  000013f8  afbefffc	sw	-4(r29),r30; push fp
  503  000013fc  001df020	add	r30,r0,r29; fp = sp
  504  00001400  afbffff8	sw	-8(r29),r31; push ret addr
  505  00001404  2fbd0018	subui	r29,r29,#24; alloc local storage
  506  00001408  afa20000	sw	0(r29),r2
  507  0000140c  afa30004	sw	4(r29),r3
  508  00001410  afa40008	sw	8(r29),r4
  509  00001414  83c20003	lb	r2,3(r30)
  510  00001418  20010000	addi	r1,r0,#0
  511  0000141c  304300ff	andi	r3,r2,#0x00ff
  512  00001420  60640020	seqi	r4,r3,#32
  513  00001424  1480002c	bnez	r4,L3_LF2
  514  00001428  54000000	nop; delay slot nop
  515  0000142c  304300ff	andi	r3,r2,#0x00ff
  516  00001430  60640009	seqi	r4,r3,#9
  517  00001434  1480001c	bnez	r4,L3_LF2
  518  00001438  54000000	nop; delay slot nop
  519  0000143c  304300ff	andi	r3,r2,#0x00ff
  520  00001440  6064000a	seqi	r4,r3,#10
  521  00001444  1480000c	bnez	r4,L3_LF2
  522  00001448  54000000	nop; delay slot nop
  523  0000144c  08000008	j	L2_LF2
  524  00001450  54000000	nop; delay slot nop
  525  00001454          	L3_LF2:
  526  00001454  20010001	addi	r1,r0,#1
  527  00001458          	L2_LF2:
  528  00001458  08000004	j	L1_LF2
  529  0000145c  54000000	nop; delay slot nop
  530  00001460          	L1_LF2:
  531  00001460  8fa20000	lw	r2,0(r29)
  532  00001464  8fa30004	lw	r3,4(r29)
  533  00001468  8fa40008	lw	r4,8(r29)
  534  0000146c  8fdffff8	lw	r31,-8(r30)
  535  00001470  001ee820	add	r29,r0,r30
  536  00001474  8fdefffc	lw	r30,-4(r30)
  537  00001478  4be00000	jr	r31
  538  0000147c  54000000	nop
  539  00001480          	.endproc _isspace
  540  00001480          	.align 2
  541  00001480          	.proc _isxdigit
  542  00001480          	.global _isxdigit
  543  00001480          	_isxdigit:
  544                      ;  Function 'isxdigit'; 0 bytes of locals, 3 regs to save.
  545  00001480  afbefffc	sw	-4(r29),r30; push fp
  546  00001484  001df020	add	r30,r0,r29; fp = sp
  547  00001488  afbffff8	sw	-8(r29),r31; push ret addr
  548  0000148c  2fbd0018	subui	r29,r29,#24; alloc local storage
  549  00001490  afa20000	sw	0(r29),r2
  550  00001494  afa30004	sw	4(r29),r3
  551  00001498  afa40008	sw	8(r29),r4
  552  0000149c  83c20003	lb	r2,3(r30)
  553  000014a0  20010000	addi	r1,r0,#0
  554  000014a4  304300ff	andi	r3,r2,#0x00ff
  555  000014a8  6c64002f	sgtui	r4,r3,#47
  556  000014ac  1080001c	beqz	r4,L7_LF2
  557  000014b0  54000000	nop; delay slot nop
  558  000014b4  304300ff	andi	r3,r2,#0x00ff
  559  000014b8  70640039	sleui	r4,r3,#57
  560  000014bc  1480005c	bnez	r4,L6_LF2
  561  000014c0  54000000	nop; delay slot nop
  562  000014c4  08000004	j	L7_LF2
  563  000014c8  54000000	nop; delay slot nop
  564  000014cc          	L7_LF2:
  565  000014cc  304300ff	andi	r3,r2,#0x00ff
  566  000014d0  6c640060	sgtui	r4,r3,#96
  567  000014d4  1080001c	beqz	r4,L8_LF2
  568  000014d8  54000000	nop; delay slot nop
  569  000014dc  304300ff	andi	r3,r2,#0x00ff
  570  000014e0  70640066	sleui	r4,r3,#102
  571  000014e4  14800034	bnez	r4,L6_LF2
  572  000014e8  54000000	nop; delay slot nop
  573  000014ec  08000004	j	L8_LF2
  574  000014f0  54000000	nop; delay slot nop
  575  000014f4          	L8_LF2:
  576  000014f4  304300ff	andi	r3,r2,#0x00ff
  577  000014f8  6c640040	sgtui	r4,r3,#64
  578  000014fc  10800020	beqz	r4,L5_LF2
  579  00001500  54000000	nop; delay slot nop
  580  00001504  304300ff	andi	r3,r2,#0x00ff
  581  00001508  70640041	sleui	r4,r3,#65
  582  0000150c  1480000c	bnez	r4,L6_LF2
  583  00001510  54000000	nop; delay slot nop
  584  00001514  08000008	j	L5_LF2
  585  00001518  54000000	nop; delay slot nop
  586  0000151c          	L6_LF2:
  587  0000151c  20010001	addi	r1,r0,#1
  588  00001520          	L5_LF2:
  589  00001520  08000004	j	L4_LF2
  590  00001524  54000000	nop; delay slot nop
  591  00001528          	L4_LF2:
  592  00001528  8fa20000	lw	r2,0(r29)
  593  0000152c  8fa30004	lw	r3,4(r29)
  594  00001530  8fa40008	lw	r4,8(r29)
  595  00001534  8fdffff8	lw	r31,-8(r30)
  596  00001538  001ee820	add	r29,r0,r30
  597  0000153c  8fdefffc	lw	r30,-4(r30)
  598  00001540  4be00000	jr	r31
  599  00001544  54000000	nop
  600  00001548          	.endproc _isxdigit
  601  00001548          	.align 2
  602  00001548          	.proc _dstrcpy
  603  00001548          	.global _dstrcpy
  604  00001548          	_dstrcpy:
  605                      ;  Function 'dstrcpy'; 8 bytes of locals, 2 regs to save.
  606  00001548  afbefffc	sw	-4(r29),r30; push fp
  607  0000154c  001df020	add	r30,r0,r29; fp = sp
  608  00001550  afbffff8	sw	-8(r29),r31; push ret addr
  609  00001554  2fbd0018	subui	r29,r29,#24; alloc local storage
  610  00001558  afa20000	sw	0(r29),r2
  611  0000155c  afa30004	sw	4(r29),r3
  612  00001560  8fc10000	lw	r1,(r30)
  613  00001564  afc1fff4	sw	-12(r30),r1
  614  00001568          	L10_LF2:
  615  00001568  8fc10000	lw	r1,(r30)
  616  0000156c  20220001	addi	r2,r1,#1
  617  00001570  afc20000	sw	(r30),r2
  618  00001574  8fc20004	lw	r2,4(r30)
  619  00001578  20430001	addi	r3,r2,#1
  620  0000157c  afc30004	sw	4(r30),r3
  621  00001580  80420000	lb	r2,(r2)
  622  00001584  a0220000	sb	(r1),r2
  623  00001588  a3c2fff3	sb	-13(r30),r2
  624  0000158c          	L12_LF2:
  625  0000158c  93c1fff3	lbu	r1,-13(r30)
  626  00001590  64220000	snei	r2,r1,#0
  627  00001594  1440000c	bnez	r2,L13_LF2
  628  00001598  54000000	nop; delay slot nop
  629  0000159c  0800000c	j	L11_LF2
  630  000015a0  54000000	nop; delay slot nop
  631  000015a4          	L13_LF2:
  632  000015a4  0bffffc0	j	L10_LF2
  633  000015a8  54000000	nop; delay slot nop
  634  000015ac          	L11_LF2:
  635  000015ac  8fc1fff4	lw	r1,-12(r30)
  636  000015b0  08000004	j	L9_LF2
  637  000015b4  54000000	nop; delay slot nop
  638  000015b8          	L9_LF2:
  639  000015b8  8fa20000	lw	r2,0(r29)
  640  000015bc  8fa30004	lw	r3,4(r29)
  641  000015c0  8fdffff8	lw	r31,-8(r30)
  642  000015c4  001ee820	add	r29,r0,r30
  643  000015c8  8fdefffc	lw	r30,-4(r30)
  644  000015cc  4be00000	jr	r31
  645  000015d0  54000000	nop
  646  000015d4          	.endproc _dstrcpy
  647  000015d4          	.align 2
  648  000015d4          	.proc _dstrncpy
  649  000015d4          	.global _dstrncpy
  650  000015d4          	_dstrncpy:
  651                      ;  Function 'dstrncpy'; 8 bytes of locals, 2 regs to save.
  652  000015d4  afbefffc	sw	-4(r29),r30; push fp
  653  000015d8  001df020	add	r30,r0,r29; fp = sp
  654  000015dc  afbffff8	sw	-8(r29),r31; push ret addr
  655  000015e0  2fbd0018	subui	r29,r29,#24; alloc local storage
  656  000015e4  afa20000	sw	0(r29),r2
  657  000015e8  afa30004	sw	4(r29),r3
  658  000015ec  8fc10000	lw	r1,(r30)
  659  000015f0  afc1fff4	sw	-12(r30),r1
  660  000015f4          	L15_LF2:
  661  000015f4  8fc10008	lw	r1,8(r30)
  662  000015f8  2022ffff	addi	r2,r1,#-1
  663  000015fc  afc20008	sw	8(r30),r2
  664  00001600  70210000	slei	r1,r1,#0
  665  00001604  1020000c	beqz	r1,L18_LF2
  666  00001608  54000000	nop; delay slot nop
  667  0000160c  08000048	j	L16_LF2
  668  00001610  54000000	nop; delay slot nop
  669  00001614          	L18_LF2:
  670  00001614  8fc10000	lw	r1,(r30)
  671  00001618  20220001	addi	r2,r1,#1
  672  0000161c  afc20000	sw	(r30),r2
  673  00001620  8fc20004	lw	r2,4(r30)
  674  00001624  20430001	addi	r3,r2,#1
  675  00001628  afc30004	sw	4(r30),r3
  676  0000162c  80420000	lb	r2,(r2)
  677  00001630  a0220000	sb	(r1),r2
  678  00001634  a3c2fff3	sb	-13(r30),r2
  679  00001638          	L17_LF2:
  680  00001638  93c1fff3	lbu	r1,-13(r30)
  681  0000163c  64220000	snei	r2,r1,#0
  682  00001640  1440000c	bnez	r2,L19_LF2
  683  00001644  54000000	nop; delay slot nop
  684  00001648  0800000c	j	L16_LF2
  685  0000164c  54000000	nop; delay slot nop
  686  00001650          	L19_LF2:
  687  00001650  0bffffa0	j	L15_LF2
  688  00001654  54000000	nop; delay slot nop
  689  00001658          	L16_LF2:
  690  00001658  8fc1fff4	lw	r1,-12(r30)
  691  0000165c  08000004	j	L14_LF2
  692  00001660  54000000	nop; delay slot nop
  693  00001664          	L14_LF2:
  694  00001664  8fa20000	lw	r2,0(r29)
  695  00001668  8fa30004	lw	r3,4(r29)
  696  0000166c  8fdffff8	lw	r31,-8(r30)
  697  00001670  001ee820	add	r29,r0,r30
  698  00001674  8fdefffc	lw	r30,-4(r30)
  699  00001678  4be00000	jr	r31
  700  0000167c  54000000	nop
  701  00001680          	.endproc _dstrncpy
  702  00001680          	.align 2
  703  00001680          	.proc _dstrcat
  704  00001680          	.global _dstrcat
  705  00001680          	_dstrcat:
  706                      ;  Function 'dstrcat'; 8 bytes of locals, 1 regs to save.
  707  00001680  afbefffc	sw	-4(r29),r30; push fp
  708  00001684  001df020	add	r30,r0,r29; fp = sp
  709  00001688  afbffff8	sw	-8(r29),r31; push ret addr
  710  0000168c  2fbd0018	subui	r29,r29,#24; alloc local storage
  711  00001690  afa20000	sw	0(r29),r2
  712  00001694  8fc10000	lw	r1,(r30)
  713  00001698  afc1fff4	sw	-12(r30),r1
  714  0000169c          	L21_LF2:
  715  0000169c  8fc10000	lw	r1,(r30)
  716  000016a0  90220000	lbu	r2,(r1)
  717  000016a4  64410000	snei	r1,r2,#0
  718  000016a8  1420000c	bnez	r1,L23_LF2
  719  000016ac  54000000	nop; delay slot nop
  720  000016b0  0800001c	j	L22_LF2
  721  000016b4  54000000	nop; delay slot nop
  722  000016b8          	L23_LF2:
  723  000016b8  8fc20000	lw	r2,(r30)
  724  000016bc  20410001	addi	r1,r2,#1
  725  000016c0  00011020	add	r2,r0,r1
  726  000016c4  afc20000	sw	(r30),r2
  727  000016c8  0bffffd0	j	L21_LF2
  728  000016cc  54000000	nop; delay slot nop
  729  000016d0          	L22_LF2:
  730  000016d0  23bdfff8	addi	r29,r29,#-8
  731  000016d4  001d0820	add	r1,r0,r29
  732  000016d8  8fc20000	lw	r2,(r30)
  733  000016dc  ac220000	sw	(r1),r2
  734  000016e0  8fc20004	lw	r2,4(r30)
  735  000016e4  ac220004	sw	4(r1),r2
  736  000016e8  0ffffe5c	jal	_dstrcpy
  737  000016ec  54000000	nop; delay slot nop
  738  000016f0  23bd0008	addi	r29,r29,#8
  739  000016f4  8fc1fff4	lw	r1,-12(r30)
  740  000016f8  08000004	j	L20_LF2
  741  000016fc  54000000	nop; delay slot nop
  742  00001700          	L20_LF2:
  743  00001700  8fa20000	lw	r2,0(r29)
  744  00001704  8fdffff8	lw	r31,-8(r30)
  745  00001708  001ee820	add	r29,r0,r30
  746  0000170c  8fdefffc	lw	r30,-4(r30)
  747  00001710  4be00000	jr	r31
  748  00001714  54000000	nop
  749  00001718          	.endproc _dstrcat
  750  00001718          	.align 2
  751  00001718          	.proc _dstrncmp
  752  00001718          	.global _dstrncmp
  753  00001718          	_dstrncmp:
  754                      ;  Function 'dstrncmp'; 8 bytes of locals, 2 regs to save.
  755  00001718  afbefffc	sw	-4(r29),r30; push fp
  756  0000171c  001df020	add	r30,r0,r29; fp = sp
  757  00001720  afbffff8	sw	-8(r29),r31; push ret addr
  758  00001724  2fbd0018	subui	r29,r29,#24; alloc local storage
  759  00001728  afa20000	sw	0(r29),r2
  760  0000172c  afa30004	sw	4(r29),r3
  761  00001730  54000000	nop
  762  00001734  20010000	addi	r1,r0,#0
  763  00001738  afc1fff4	sw	-12(r30),r1
  764  0000173c          	L25_LF2:
  765  0000173c  8fc1fff4	lw	r1,-12(r30)
  766  00001740  8fc20008	lw	r2,8(r30)
  767  00001744  0022082a	slt	r1,r1,r2
  768  00001748  1420000c	bnez	r1,L28_LF2
  769  0000174c  54000000	nop; delay slot nop
  770  00001750  08000088	j	L26_LF2
  771  00001754  54000000	nop; delay slot nop
  772  00001758          	L28_LF2:
  773  00001758  8fc10004	lw	r1,4(r30)
  774  0000175c  90220000	lbu	r2,(r1)
  775  00001760  64410000	snei	r1,r2,#0
  776  00001764  14200018	bnez	r1,L29_LF2
  777  00001768  54000000	nop; delay slot nop
  778  0000176c  20010000	addi	r1,r0,#0
  779  00001770  080000d8	j	L24_LF2
  780  00001774  54000000	nop; delay slot nop
  781  00001778  08000028	j	L30_LF2
  782  0000177c  54000000	nop; delay slot nop
  783  00001780          	L29_LF2:
  784  00001780  8fc10000	lw	r1,(r30)
  785  00001784  8fc20004	lw	r2,4(r30)
  786  00001788  90210000	lbu	r1,(r1)
  787  0000178c  90420000	lbu	r2,(r2)
  788  00001790  00220829	sne	r1,r1,r2
  789  00001794  1020000c	beqz	r1,L30_LF2
  790  00001798  54000000	nop; delay slot nop
  791  0000179c  0800003c	j	L26_LF2
  792  000017a0  54000000	nop; delay slot nop
  793  000017a4          	L31_LF2:
  794  000017a4          	L30_LF2:
  795  000017a4  8fc20000	lw	r2,(r30)
  796  000017a8  20410001	addi	r1,r2,#1
  797  000017ac  00011020	add	r2,r0,r1
  798  000017b0  afc20000	sw	(r30),r2
  799  000017b4  8fc20004	lw	r2,4(r30)
  800  000017b8  20410001	addi	r1,r2,#1
  801  000017bc  00011020	add	r2,r0,r1
  802  000017c0  afc20004	sw	4(r30),r2
  803  000017c4          	L27_LF2:
  804  000017c4  8fc2fff4	lw	r2,-12(r30)
  805  000017c8  20410001	addi	r1,r2,#1
  806  000017cc  00011020	add	r2,r0,r1
  807  000017d0  afc2fff4	sw	-12(r30),r2
  808  000017d4  0bffff64	j	L25_LF2
  809  000017d8  54000000	nop; delay slot nop
  810  000017dc          	L26_LF2:
  811  000017dc  8fc1fff4	lw	r1,-12(r30)
  812  000017e0  8fc20008	lw	r2,8(r30)
  813  000017e4  00220828	seq	r1,r1,r2
  814  000017e8  10200018	beqz	r1,L32_LF2
  815  000017ec  54000000	nop; delay slot nop
  816  000017f0  20010000	addi	r1,r0,#0
  817  000017f4  08000054	j	L24_LF2
  818  000017f8  54000000	nop; delay slot nop
  819  000017fc  0800004c	j	L33_LF2
  820  00001800  54000000	nop; delay slot nop
  821  00001804          	L32_LF2:
  822  00001804  8fc20000	lw	r2,(r30)
  823  00001808  90410000	lbu	r1,(r2)
  824  0000180c  8fc20004	lw	r2,4(r30)
  825  00001810  90430000	lbu	r3,(r2)
  826  00001814  00230822	sub	r1,r1,r3
  827  00001818  74220000	sgei	r2,r1,#0
  828  0000181c  10400020	beqz	r2,L34_LF2
  829  00001820  54000000	nop; delay slot nop
  830  00001824  8fc10000	lw	r1,(r30)
  831  00001828  8fc20004	lw	r2,4(r30)
  832  0000182c  90210000	lbu	r1,(r1)
  833  00001830  90420000	lbu	r2,(r2)
  834  00001834  00220829	sne	r1,r1,r2
  835  00001838  08000008	j	L35_LF2
  836  0000183c  54000000	nop; delay slot nop
  837  00001840          	L34_LF2:
  838  00001840  2001ffff	addi	r1,r0,#-1
  839  00001844          	L35_LF2:
  840  00001844  08000004	j	L24_LF2
  841  00001848  54000000	nop; delay slot nop
  842  0000184c          	L33_LF2:
  843  0000184c          	L24_LF2:
  844  0000184c  8fa20000	lw	r2,0(r29)
  845  00001850  8fa30004	lw	r3,4(r29)
  846  00001854  8fdffff8	lw	r31,-8(r30)
  847  00001858  001ee820	add	r29,r0,r30
  848  0000185c  8fdefffc	lw	r30,-4(r30)
  849  00001860  4be00000	jr	r31
  850  00001864  54000000	nop
  851  00001868          	.endproc _dstrncmp
  852  00001868          	.align 2
  853  00001868          	.proc _dstrlen
  854  00001868          	.global _dstrlen
  855  00001868          	_dstrlen:
  856                      ;  Function 'dstrlen'; 8 bytes of locals, 1 regs to save.
  857  00001868  afbefffc	sw	-4(r29),r30; push fp
  858  0000186c  001df020	add	r30,r0,r29; fp = sp
  859  00001870  afbffff8	sw	-8(r29),r31; push ret addr
  860  00001874  2fbd0018	subui	r29,r29,#24; alloc local storage
  861  00001878  afa20000	sw	0(r29),r2
  862  0000187c  20010000	addi	r1,r0,#0
  863  00001880  afc1fff4	sw	-12(r30),r1
  864  00001884          	L37_LF2:
  865  00001884  8fc10000	lw	r1,(r30)
  866  00001888  20220001	addi	r2,r1,#1
  867  0000188c  afc20000	sw	(r30),r2
  868  00001890  90210000	lbu	r1,(r1)
  869  00001894  64220000	snei	r2,r1,#0
  870  00001898  1440000c	bnez	r2,L39_LF2
  871  0000189c  54000000	nop; delay slot nop
  872  000018a0  0800001c	j	L38_LF2
  873  000018a4  54000000	nop; delay slot nop
  874  000018a8          	L39_LF2:
  875  000018a8  8fc2fff4	lw	r2,-12(r30)
  876  000018ac  20410001	addi	r1,r2,#1
  877  000018b0  00011020	add	r2,r0,r1
  878  000018b4  afc2fff4	sw	-12(r30),r2
  879  000018b8  0bffffc8	j	L37_LF2
  880  000018bc  54000000	nop; delay slot nop
  881  000018c0          	L38_LF2:
  882  000018c0  8fc1fff4	lw	r1,-12(r30)
  883  000018c4  08000004	j	L36_LF2
  884  000018c8  54000000	nop; delay slot nop
  885  000018cc          	L36_LF2:
  886  000018cc  8fa20000	lw	r2,0(r29)
  887  000018d0  8fdffff8	lw	r31,-8(r30)
  888  000018d4  001ee820	add	r29,r0,r30
  889  000018d8  8fdefffc	lw	r30,-4(r30)
  890  000018dc  4be00000	jr	r31
  891  000018e0  54000000	nop
  892  000018e4          	.endproc _dstrlen
  893  000018e4          	.align 2
  894  000018e4          	.proc _dstrstr
  895  000018e4          	.global _dstrstr
  896  000018e4          	_dstrstr:
  897                      ;  Function 'dstrstr'; 8 bytes of locals, 1 regs to save.
  898  000018e4  afbefffc	sw	-4(r29),r30; push fp
  899  000018e8  001df020	add	r30,r0,r29; fp = sp
  900  000018ec  afbffff8	sw	-8(r29),r31; push ret addr
  901  000018f0  2fbd0018	subui	r29,r29,#24; alloc local storage
  902  000018f4  afa20000	sw	0(r29),r2
  903  000018f8  23bdfff8	addi	r29,r29,#-8
  904  000018fc  001d0820	add	r1,r0,r29
  905  00001900  8fc20004	lw	r2,4(r30)
  906  00001904  ac220000	sw	(r1),r2
  907  00001908  0fffff5c	jal	_dstrlen
  908  0000190c  54000000	nop; delay slot nop
  909  00001910  23bd0008	addi	r29,r29,#8
  910  00001914  afc1fff4	sw	-12(r30),r1
  911  00001918          	L41_LF2:
  912  00001918  8fc10000	lw	r1,(r30)
  913  0000191c  90220000	lbu	r2,(r1)
  914  00001920  64410000	snei	r1,r2,#0
  915  00001924  1420000c	bnez	r1,L43_LF2
  916  00001928  54000000	nop; delay slot nop
  917  0000192c  08000060	j	L42_LF2
  918  00001930  54000000	nop; delay slot nop
  919  00001934          	L43_LF2:
  920  00001934  23bdfff0	addi	r29,r29,#-16
  921  00001938  001d0820	add	r1,r0,r29
  922  0000193c  8fc20000	lw	r2,(r30)
  923  00001940  ac220000	sw	(r1),r2
  924  00001944  8fc20004	lw	r2,4(r30)
  925  00001948  ac220004	sw	4(r1),r2
  926  0000194c  8fc2fff4	lw	r2,-12(r30)
  927  00001950  ac220008	sw	8(r1),r2
  928  00001954  0ffffdc0	jal	_dstrncmp
  929  00001958  54000000	nop; delay slot nop
  930  0000195c  23bd0010	addi	r29,r29,#16
  931  00001960  64220000	snei	r2,r1,#0
  932  00001964  14400010	bnez	r2,L44_LF2
  933  00001968  54000000	nop; delay slot nop
  934  0000196c  8fc10000	lw	r1,(r30)
  935  00001970  08000028	j	L40_LF2
  936  00001974  54000000	nop; delay slot nop
  937  00001978          	L44_LF2:
  938  00001978  8fc20000	lw	r2,(r30)
  939  0000197c  20410001	addi	r1,r2,#1
  940  00001980  00011020	add	r2,r0,r1
  941  00001984  afc20000	sw	(r30),r2
  942  00001988  0bffff8c	j	L41_LF2
  943  0000198c  54000000	nop; delay slot nop
  944  00001990          	L42_LF2:
  945  00001990  20010000	addi	r1,r0,#0
  946  00001994  08000004	j	L40_LF2
  947  00001998  54000000	nop; delay slot nop
  948  0000199c          	L40_LF2:
  949  0000199c  8fa20000	lw	r2,0(r29)
  950  000019a0  8fdffff8	lw	r31,-8(r30)
  951  000019a4  001ee820	add	r29,r0,r30
  952  000019a8  8fdefffc	lw	r30,-4(r30)
  953  000019ac  4be00000	jr	r31
  954  000019b0  54000000	nop
  955  000019b4          	.endproc _dstrstr
  956  000019b4          	.align 2
  957  000019b4          	.proc _dmindex
  958  000019b4          	.global _dmindex
  959  000019b4          	_dmindex:
  960                      ;  Function 'dmindex'; 8 bytes of locals, 1 regs to save.
  961  000019b4  afbefffc	sw	-4(r29),r30; push fp
  962  000019b8  001df020	add	r30,r0,r29; fp = sp
  963  000019bc  afbffff8	sw	-8(r29),r31; push ret addr
  964  000019c0  2fbd0018	subui	r29,r29,#24; alloc local storage
  965  000019c4  afa20000	sw	0(r29),r2
  966  000019c8  54000000	nop
  967  000019cc          	L46_LF2:
  968  000019cc  8fc10000	lw	r1,(r30)
  969  000019d0  90220000	lbu	r2,(r1)
  970  000019d4  64410000	snei	r1,r2,#0
  971  000019d8  1420000c	bnez	r1,L48_LF2
  972  000019dc  54000000	nop; delay slot nop
  973  000019e0  08000070	j	L47_LF2
  974  000019e4  54000000	nop; delay slot nop
  975  000019e8          	L48_LF2:
  976  000019e8  8fc10004	lw	r1,4(r30)
  977  000019ec  afc1fff4	sw	-12(r30),r1
  978  000019f0          	L49_LF2:
  979  000019f0  8fc1fff4	lw	r1,-12(r30)
  980  000019f4  90220000	lbu	r2,(r1)
  981  000019f8  64410000	snei	r1,r2,#0
  982  000019fc  1420000c	bnez	r1,L52_LF2
  983  00001a00  54000000	nop; delay slot nop
  984  00001a04  08000044	j	L50_LF2
  985  00001a08  54000000	nop; delay slot nop
  986  00001a0c          	L52_LF2:
  987  00001a0c  8fc10000	lw	r1,(r30)
  988  00001a10  8fc2fff4	lw	r2,-12(r30)
  989  00001a14  90210000	lbu	r1,(r1)
  990  00001a18  90420000	lbu	r2,(r2)
  991  00001a1c  00220828	seq	r1,r1,r2
  992  00001a20  10200010	beqz	r1,L51_LF2
  993  00001a24  54000000	nop; delay slot nop
  994  00001a28  8fc10000	lw	r1,(r30)
  995  00001a2c  08000030	j	L45_LF2
  996  00001a30  54000000	nop; delay slot nop
  997  00001a34          	L53_LF2:
  998  00001a34          	L51_LF2:
  999  00001a34  8fc2fff4	lw	r2,-12(r30)
 1000  00001a38  20410001	addi	r1,r2,#1
 1001  00001a3c  00011020	add	r2,r0,r1
 1002  00001a40  afc2fff4	sw	-12(r30),r2
 1003  00001a44  0bffffa8	j	L49_LF2
 1004  00001a48  54000000	nop; delay slot nop
 1005  00001a4c          	L50_LF2:
 1006  00001a4c  0bffff7c	j	L46_LF2
 1007  00001a50  54000000	nop; delay slot nop
 1008  00001a54          	L47_LF2:
 1009  00001a54  20010000	addi	r1,r0,#0
 1010  00001a58  08000004	j	L45_LF2
 1011  00001a5c  54000000	nop; delay slot nop
 1012  00001a60          	L45_LF2:
 1013  00001a60  8fa20000	lw	r2,0(r29)
 1014  00001a64  8fdffff8	lw	r31,-8(r30)
 1015  00001a68  001ee820	add	r29,r0,r30
 1016  00001a6c  8fdefffc	lw	r30,-4(r30)
 1017  00001a70  4be00000	jr	r31
 1018  00001a74  54000000	nop
 1019  00001a78          	.endproc _dmindex
 1020  00001a78          	.align 2
 1021  00001a78          	.proc _dindex
 1022  00001a78          	.global _dindex
 1023  00001a78          	_dindex:
 1024                      ;  Function 'dindex'; 0 bytes of locals, 1 regs to save.
 1025  00001a78  afbefffc	sw	-4(r29),r30; push fp
 1026  00001a7c  001df020	add	r30,r0,r29; fp = sp
 1027  00001a80  afbffff8	sw	-8(r29),r31; push ret addr
 1028  00001a84  2fbd0010	subui	r29,r29,#16; alloc local storage
 1029  00001a88  afa20000	sw	0(r29),r2
 1030  00001a8c  54000000	nop
 1031  00001a90          	L55_LF2:
 1032  00001a90  8fc10000	lw	r1,(r30)
 1033  00001a94  90220000	lbu	r2,(r1)
 1034  00001a98  64410000	snei	r1,r2,#0
 1035  00001a9c  1420000c	bnez	r1,L57_LF2
 1036  00001aa0  54000000	nop; delay slot nop
 1037  00001aa4  08000040	j	L56_LF2
 1038  00001aa8  54000000	nop; delay slot nop
 1039  00001aac          	L57_LF2:
 1040  00001aac  8fc10000	lw	r1,(r30)
 1041  00001ab0  90220000	lbu	r2,(r1)
 1042  00001ab4  8fc10004	lw	r1,4(r30)
 1043  00001ab8  00411028	seq	r2,r2,r1
 1044  00001abc  10400010	beqz	r2,L58_LF2
 1045  00001ac0  54000000	nop; delay slot nop
 1046  00001ac4  8fc10000	lw	r1,(r30)
 1047  00001ac8  08000028	j	L54_LF2
 1048  00001acc  54000000	nop; delay slot nop
 1049  00001ad0          	L58_LF2:
 1050  00001ad0  8fc20000	lw	r2,(r30)
 1051  00001ad4  20410001	addi	r1,r2,#1
 1052  00001ad8  00011020	add	r2,r0,r1
 1053  00001adc  afc20000	sw	(r30),r2
 1054  00001ae0  0bffffac	j	L55_LF2
 1055  00001ae4  54000000	nop; delay slot nop
 1056  00001ae8          	L56_LF2:
 1057  00001ae8  20010000	addi	r1,r0,#0
 1058  00001aec  08000004	j	L54_LF2
 1059  00001af0  54000000	nop; delay slot nop
 1060  00001af4          	L54_LF2:
 1061  00001af4  8fa20000	lw	r2,0(r29)
 1062  00001af8  8fdffff8	lw	r31,-8(r30)
 1063  00001afc  001ee820	add	r29,r0,r30
 1064  00001b00  8fdefffc	lw	r30,-4(r30)
 1065  00001b04  4be00000	jr	r31
 1066  00001b08  54000000	nop
 1067  00001b0c          	.endproc _dindex
 1068  00001b0c          	.align 2
 1069  00001b0c          	.proc _ditoa
 1070  00001b0c          	.global _ditoa
 1071  00001b0c          	_ditoa:
 1072                      ;  Function 'ditoa'; 8 bytes of locals, 2 regs to save.
 1073  00001b0c  afbefffc	sw	-4(r29),r30; push fp
 1074  00001b10  001df020	add	r30,r0,r29; fp = sp
 1075  00001b14  afbffff8	sw	-8(r29),r31; push ret addr
 1076  00001b18  2fbd0018	subui	r29,r29,#24; alloc local storage
 1077  00001b1c  afa20000	sw	0(r29),r2
 1078  00001b20  afa30004	sw	4(r29),r3
 1079  00001b24  8fc10000	lw	r1,(r30)
 1080  00001b28  68220000	slti	r2,r1,#0
 1081  00001b2c  1040002c	beqz	r2,L60_LF2
 1082  00001b30  54000000	nop; delay slot nop
 1083  00001b34  8fc10004	lw	r1,4(r30)
 1084  00001b38  20220001	addi	r2,r1,#1
 1085  00001b3c  afc20004	sw	4(r30),r2
 1086  00001b40  2002002d	addi	r2,r0,(#0x2d)&0xff
 1087  00001b44  a0220000	sb	(r1),r2
 1088  00001b48  8fc10000	lw	r1,(r30)
 1089  00001b4c  00011022	sub	r2,r0,r1
 1090  00001b50  afc20000	sw	(r30),r2
 1091  00001b54  08000118	j	L61_LF2
 1092  00001b58  54000000	nop; delay slot nop
 1093  00001b5c          	L60_LF2:
 1094  00001b5c  8fc10000	lw	r1,(r30)
 1095  00001b60  64220000	snei	r2,r1,#0
 1096  00001b64  14400020	bnez	r2,L62_LF2
 1097  00001b68  54000000	nop; delay slot nop
 1098  00001b6c  8fc10004	lw	r1,4(r30)
 1099  00001b70  20220001	addi	r2,r1,#1
 1100  00001b74  afc20004	sw	4(r30),r2
 1101  00001b78  20020030	addi	r2,r0,(#0x30)&0xff
 1102  00001b7c  a0220000	sb	(r1),r2
 1103  00001b80  080000ec	j	L61_LF2
 1104  00001b84  54000000	nop; delay slot nop
 1105  00001b88          	L62_LF2:
 1106  00001b88  20010001	addi	r1,r0,#1
 1107  00001b8c  afc1fff4	sw	-12(r30),r1
 1108  00001b90          	L64_LF2:
 1109  00001b90  8fc1fff4	lw	r1,-12(r30)
 1110  00001b94  8fc20000	lw	r2,(r30)
 1111  00001b98  0022082c	sle	r1,r1,r2
 1112  00001b9c  1420000c	bnez	r1,L66_LF2
 1113  00001ba0  54000000	nop; delay slot nop
 1114  00001ba4  08000024	j	L65_LF2
 1115  00001ba8  54000000	nop; delay slot nop
 1116  00001bac          	L67_LF2:
 1117  00001bac          	L66_LF2:
 1118  00001bac  8fc1fff4	lw	r1,-12(r30)
 1119  00001bb0  00011820	add	r3,r0,r1
 1120  00001bb4  50620002	slli	r2,r3,#0x2
 1121  00001bb8  00411020	add	r2,r2,r1
 1122  00001bbc  50410001	slli	r1,r2,#0x1
 1123  00001bc0  afc1fff4	sw	-12(r30),r1
 1124  00001bc4  0bffffc8	j	L64_LF2
 1125  00001bc8  54000000	nop; delay slot nop
 1126  00001bcc          	L65_LF2:
 1127  00001bcc  54000000	nop
 1128  00001bd0          	L68_LF2:
 1129  00001bd0  8fc1fff4	lw	r1,-12(r30)
 1130  00001bd4  2002000a	addi	r2,r0,#10
 1131  00001bd8  00200035	movi2fp	f0,r1
 1132  00001bdc  00400835	movi2fp	f1,r2
 1133  00001be0  0401000f	div	f0,f0,f1
 1134  00001be4  00000834	movfp2i	r1,f0
 1135  00001be8  afc1fff4	sw	-12(r30),r1
 1136  00001bec  8fc10004	lw	r1,4(r30)
 1137  00001bf0  20220001	addi	r2,r1,#1
 1138  00001bf4  afc20004	sw	4(r30),r2
 1139  00001bf8  8fc20000	lw	r2,(r30)
 1140  00001bfc  8fc3fff4	lw	r3,-12(r30)
 1141  00001c00  00400035	movi2fp	f0,r2
 1142  00001c04  00600835	movi2fp	f1,r3
 1143  00001c08  0401000f	div	f0,f0,f1
 1144  00001c0c  00001034	movfp2i	r2,f0
 1145  00001c10  00021820	add	r3,r0,r2
 1146  00001c14  20620030	addi	r2,r3,#48
 1147  00001c18  a0220000	sb	(r1),r2
 1148  00001c1c  8fc10000	lw	r1,(r30)
 1149  00001c20  8fc3fff4	lw	r3,-12(r30)
 1150  00001c24  00200035	movi2fp	f0,r1
 1151  00001c28  00600835	movi2fp	f1,r3
 1152  00001c2c  0401000f	div	f0,f0,f1
 1153  00001c30  00001034	movfp2i	r2,f0
 1154  00001c34  8fc3fff4	lw	r3,-12(r30)
 1155  00001c38  00400035	movi2fp	f0,r2
 1156  00001c3c  00600835	movi2fp	f1,r3
 1157  00001c40  0401000e	mult	f0,f0,f1
 1158  00001c44  00001034	movfp2i	r2,f0
 1159  00001c48  00220822	sub	r1,r1,r2
 1160  00001c4c  afc10000	sw	(r30),r1
 1161  00001c50          	L70_LF2:
 1162  00001c50  8fc1fff4	lw	r1,-12(r30)
 1163  00001c54  6c220001	sgti	r2,r1,#1
 1164  00001c58  1440000c	bnez	r2,L71_LF2
 1165  00001c5c  54000000	nop; delay slot nop
 1166  00001c60  0800000c	j	L61_LF2
 1167  00001c64  54000000	nop; delay slot nop
 1168  00001c68          	L71_LF2:
 1169  00001c68  0bffff64	j	L68_LF2
 1170  00001c6c  54000000	nop; delay slot nop
 1171  00001c70          	L69_LF2:
 1172  00001c70          	L63_LF2:
 1173  00001c70          	L61_LF2:
 1174  00001c70  8fc10004	lw	r1,4(r30)
 1175  00001c74  20020000	addi	r2,r0,(#0x0)&0xff
 1176  00001c78  a0220000	sb	(r1),r2
 1177  00001c7c          	L59_LF2:
 1178  00001c7c  8fa20000	lw	r2,0(r29)
 1179  00001c80  8fa30004	lw	r3,4(r29)
 1180  00001c84  8fdffff8	lw	r31,-8(r30)
 1181  00001c88  001ee820	add	r29,r0,r30
 1182  00001c8c  8fdefffc	lw	r30,-4(r30)
 1183  00001c90  4be00000	jr	r31
 1184  00001c94  54000000	nop
 1185  00001c98          	.endproc _ditoa
 1186  00001c98          	.align 2
 1187  00001c98          	.proc _dstrtol
 1188  00001c98          	.global _dstrtol
 1189  00001c98          	_dstrtol:
 1190                      ;  Function 'dstrtol'; 16 bytes of locals, 1 regs to save.
 1191  00001c98  afbefffc	sw	-4(r29),r30; push fp
 1192  00001c9c  001df020	add	r30,r0,r29; fp = sp
 1193  00001ca0  afbffff8	sw	-8(r29),r31; push ret addr
 1194  00001ca4  2fbd0020	subui	r29,r29,#32; alloc local storage
 1195  00001ca8  afa20000	sw	0(r29),r2
 1196  00001cac  20010000	addi	r1,r0,#0
 1197  00001cb0  afc1fff4	sw	-12(r30),r1
 1198  00001cb4          	L73_LF2:
 1199  00001cb4  8fc10000	lw	r1,(r30)
 1200  00001cb8  90220000	lbu	r2,(r1)
 1201  00001cbc  60410020	seqi	r1,r2,#32
 1202  00001cc0  14200034	bnez	r1,L75_LF2
 1203  00001cc4  54000000	nop; delay slot nop
 1204  00001cc8  8fc10000	lw	r1,(r30)
 1205  00001ccc  90220000	lbu	r2,(r1)
 1206  00001cd0  60410009	seqi	r1,r2,#9
 1207  00001cd4  14200020	bnez	r1,L75_LF2
 1208  00001cd8  54000000	nop; delay slot nop
 1209  00001cdc  8fc10000	lw	r1,(r30)
 1210  00001ce0  90220000	lbu	r2,(r1)
 1211  00001ce4  6041000a	seqi	r1,r2,#10
 1212  00001ce8  1420000c	bnez	r1,L75_LF2
 1213  00001cec  54000000	nop; delay slot nop
 1214  00001cf0  0800001c	j	L74_LF2
 1215  00001cf4  54000000	nop; delay slot nop
 1216  00001cf8          	L75_LF2:
 1217  00001cf8  8fc20000	lw	r2,(r30)
 1218  00001cfc  20410001	addi	r1,r2,#1
 1219  00001d00  00011020	add	r2,r0,r1
 1220  00001d04  afc20000	sw	(r30),r2
 1221  00001d08  0bffffa8	j	L73_LF2
 1222  00001d0c  54000000	nop; delay slot nop
 1223  00001d10          	L74_LF2:
 1224  00001d10  8fc10004	lw	r1,4(r30)
 1225  00001d14  64220000	snei	r2,r1,#0
 1226  00001d18  10400010	beqz	r2,L76_LF2
 1227  00001d1c  54000000	nop; delay slot nop
 1228  00001d20  8fc10004	lw	r1,4(r30)
 1229  00001d24  8fc20000	lw	r2,(r30)
 1230  00001d28  ac220000	sw	(r1),r2
 1231  00001d2c          	L76_LF2:
 1232  00001d2c  8fc10000	lw	r1,(r30)
 1233  00001d30  90220000	lbu	r2,(r1)
 1234  00001d34  64410000	snei	r1,r2,#0
 1235  00001d38  14200010	bnez	r1,L77_LF2
 1236  00001d3c  54000000	nop; delay slot nop
 1237  00001d40  8fc1fff4	lw	r1,-12(r30)
 1238  00001d44  08000294	j	L72_LF2
 1239  00001d48  54000000	nop; delay slot nop
 1240  00001d4c          	L77_LF2:
 1241  00001d4c  8fc10000	lw	r1,(r30)
 1242  00001d50  90220000	lbu	r2,(r1)
 1243  00001d54  6041002d	seqi	r1,r2,#45
 1244  00001d58  10200024	beqz	r1,L78_LF2
 1245  00001d5c  54000000	nop; delay slot nop
 1246  00001d60  2001ffff	addi	r1,r0,#-1
 1247  00001d64  afc1ffec	sw	-20(r30),r1
 1248  00001d68  8fc20000	lw	r2,(r30)
 1249  00001d6c  20410001	addi	r1,r2,#1
 1250  00001d70  00011020	add	r2,r0,r1
 1251  00001d74  afc20000	sw	(r30),r2
 1252  00001d78  0800000c	j	L79_LF2
 1253  00001d7c  54000000	nop; delay slot nop
 1254  00001d80          	L78_LF2:
 1255  00001d80  20010001	addi	r1,r0,#1
 1256  00001d84  afc1ffec	sw	-20(r30),r1
 1257  00001d88          	L79_LF2:
 1258  00001d88  8fc10008	lw	r1,8(r30)
 1259  00001d8c  64220000	snei	r2,r1,#0
 1260  00001d90  14400090	bnez	r2,L80_LF2
 1261  00001d94  54000000	nop; delay slot nop
 1262  00001d98  8fc10000	lw	r1,(r30)
 1263  00001d9c  90220000	lbu	r2,(r1)
 1264  00001da0  60410030	seqi	r1,r2,#48
 1265  00001da4  10200074	beqz	r1,L81_LF2
 1266  00001da8  54000000	nop; delay slot nop
 1267  00001dac  8fc20000	lw	r2,(r30)
 1268  00001db0  20410001	addi	r1,r2,#1
 1269  00001db4  00011020	add	r2,r0,r1
 1270  00001db8  afc20000	sw	(r30),r2
 1271  00001dbc  8fc10000	lw	r1,(r30)
 1272  00001dc0  90220000	lbu	r2,(r1)
 1273  00001dc4  60410078	seqi	r1,r2,#120
 1274  00001dc8  14200020	bnez	r1,L83_LF2
 1275  00001dcc  54000000	nop; delay slot nop
 1276  00001dd0  8fc10000	lw	r1,(r30)
 1277  00001dd4  90220000	lbu	r2,(r1)
 1278  00001dd8  60410058	seqi	r1,r2,#88
 1279  00001ddc  1420000c	bnez	r1,L83_LF2
 1280  00001de0  54000000	nop; delay slot nop
 1281  00001de4  08000024	j	L82_LF2
 1282  00001de8  54000000	nop; delay slot nop
 1283  00001dec          	L83_LF2:
 1284  00001dec  20010010	addi	r1,r0,#16
 1285  00001df0  afc10008	sw	8(r30),r1
 1286  00001df4  8fc20000	lw	r2,(r30)
 1287  00001df8  20410001	addi	r1,r2,#1
 1288  00001dfc  00011020	add	r2,r0,r1
 1289  00001e00  afc20000	sw	(r30),r2
 1290  00001e04  0800000c	j	L84_LF2
 1291  00001e08  54000000	nop; delay slot nop
 1292  00001e0c          	L82_LF2:
 1293  00001e0c  20010008	addi	r1,r0,#8
 1294  00001e10  afc10008	sw	8(r30),r1
 1295  00001e14          	L84_LF2:
 1296  00001e14  0800000c	j	L80_LF2
 1297  00001e18  54000000	nop; delay slot nop
 1298  00001e1c          	L81_LF2:
 1299  00001e1c  2001000a	addi	r1,r0,#10
 1300  00001e20  afc10008	sw	8(r30),r1
 1301  00001e24          	L85_LF2:
 1302  00001e24          	L80_LF2:
 1303  00001e24  8fc10008	lw	r1,8(r30)
 1304  00001e28  70220000	slei	r2,r1,#0
 1305  00001e2c  1440001c	bnez	r2,L87_LF2
 1306  00001e30  54000000	nop; delay slot nop
 1307  00001e34  8fc10008	lw	r1,8(r30)
 1308  00001e38  6c220010	sgti	r2,r1,#16
 1309  00001e3c  1440000c	bnez	r2,L87_LF2
 1310  00001e40  54000000	nop; delay slot nop
 1311  00001e44  08000010	j	L86_LF2
 1312  00001e48  54000000	nop; delay slot nop
 1313  00001e4c          	L87_LF2:
 1314  00001e4c  8fc1fff4	lw	r1,-12(r30)
 1315  00001e50  08000188	j	L72_LF2
 1316  00001e54  54000000	nop; delay slot nop
 1317  00001e58          	L86_LF2:
 1318  00001e58  54000000	nop
 1319  00001e5c          	L88_LF2:
 1320  00001e5c  8fc10000	lw	r1,(r30)
 1321  00001e60  90220000	lbu	r2,(r1)
 1322  00001e64  6c41002f	sgtui	r1,r2,#47
 1323  00001e68  10200030	beqz	r1,L91_LF2
 1324  00001e6c  54000000	nop; delay slot nop
 1325  00001e70  8fc10000	lw	r1,(r30)
 1326  00001e74  90220000	lbu	r2,(r1)
 1327  00001e78  70410039	sleui	r1,r2,#57
 1328  00001e7c  1020001c	beqz	r1,L91_LF2
 1329  00001e80  54000000	nop; delay slot nop
 1330  00001e84  8fc10000	lw	r1,(r30)
 1331  00001e88  90220000	lbu	r2,(r1)
 1332  00001e8c  2041ffd0	addi	r1,r2,#-48
 1333  00001e90  afc1fff0	sw	-16(r30),r1
 1334  00001e94  0800008c	j	L92_LF2
 1335  00001e98  54000000	nop; delay slot nop
 1336  00001e9c          	L91_LF2:
 1337  00001e9c  8fc10000	lw	r1,(r30)
 1338  00001ea0  90220000	lbu	r2,(r1)
 1339  00001ea4  6c410060	sgtui	r1,r2,#96
 1340  00001ea8  10200030	beqz	r1,L93_LF2
 1341  00001eac  54000000	nop; delay slot nop
 1342  00001eb0  8fc10000	lw	r1,(r30)
 1343  00001eb4  90220000	lbu	r2,(r1)
 1344  00001eb8  7041007a	sleui	r1,r2,#122
 1345  00001ebc  1020001c	beqz	r1,L93_LF2
 1346  00001ec0  54000000	nop; delay slot nop
 1347  00001ec4  8fc10000	lw	r1,(r30)
 1348  00001ec8  90220000	lbu	r2,(r1)
 1349  00001ecc  2041ffa9	addi	r1,r2,#-87
 1350  00001ed0  afc1fff0	sw	-16(r30),r1
 1351  00001ed4  0800004c	j	L92_LF2
 1352  00001ed8  54000000	nop; delay slot nop
 1353  00001edc          	L93_LF2:
 1354  00001edc  8fc10000	lw	r1,(r30)
 1355  00001ee0  90220000	lbu	r2,(r1)
 1356  00001ee4  6c410040	sgtui	r1,r2,#64
 1357  00001ee8  10200030	beqz	r1,L95_LF2
 1358  00001eec  54000000	nop; delay slot nop
 1359  00001ef0  8fc10000	lw	r1,(r30)
 1360  00001ef4  90220000	lbu	r2,(r1)
 1361  00001ef8  7041005a	sleui	r1,r2,#90
 1362  00001efc  1020001c	beqz	r1,L95_LF2
 1363  00001f00  54000000	nop; delay slot nop
 1364  00001f04  8fc10000	lw	r1,(r30)
 1365  00001f08  90220000	lbu	r2,(r1)
 1366  00001f0c  2041ffc9	addi	r1,r2,#-55
 1367  00001f10  afc1fff0	sw	-16(r30),r1
 1368  00001f14  0800000c	j	L92_LF2
 1369  00001f18  54000000	nop; delay slot nop
 1370  00001f1c          	L95_LF2:
 1371  00001f1c  200103e8	addi	r1,r0,#1000
 1372  00001f20  afc1fff0	sw	-16(r30),r1
 1373  00001f24          	L96_LF2:
 1374  00001f24          	L94_LF2:
 1375  00001f24          	L92_LF2:
 1376  00001f24  8fc1fff0	lw	r1,-16(r30)
 1377  00001f28  8fc20008	lw	r2,8(r30)
 1378  00001f2c  0022082a	slt	r1,r1,r2
 1379  00001f30  10200040	beqz	r1,L90_LF2
 1380  00001f34  54000000	nop; delay slot nop
 1381  00001f38  8fc1fff4	lw	r1,-12(r30)
 1382  00001f3c  8fc20008	lw	r2,8(r30)
 1383  00001f40  00200035	movi2fp	f0,r1
 1384  00001f44  00400835	movi2fp	f1,r2
 1385  00001f48  0401000e	mult	f0,f0,f1
 1386  00001f4c  00000834	movfp2i	r1,f0
 1387  00001f50  afc1fff4	sw	-12(r30),r1
 1388  00001f54  8fc1fff4	lw	r1,-12(r30)
 1389  00001f58  8fc2fff0	lw	r2,-16(r30)
 1390  00001f5c  00220820	add	r1,r1,r2
 1391  00001f60  afc1fff4	sw	-12(r30),r1
 1392  00001f64  8fc20000	lw	r2,(r30)
 1393  00001f68  20410001	addi	r1,r2,#1
 1394  00001f6c  00011020	add	r2,r0,r1
 1395  00001f70  afc20000	sw	(r30),r2
 1396  00001f74          	L97_LF2:
 1397  00001f74          	L90_LF2:
 1398  00001f74  8fc1fff0	lw	r1,-16(r30)
 1399  00001f78  8fc20008	lw	r2,8(r30)
 1400  00001f7c  0022082a	slt	r1,r1,r2
 1401  00001f80  1420000c	bnez	r1,L98_LF2
 1402  00001f84  54000000	nop; delay slot nop
 1403  00001f88  0800000c	j	L89_LF2
 1404  00001f8c  54000000	nop; delay slot nop
 1405  00001f90          	L98_LF2:
 1406  00001f90  0bfffec8	j	L88_LF2
 1407  00001f94  54000000	nop; delay slot nop
 1408  00001f98          	L89_LF2:
 1409  00001f98  8fc10004	lw	r1,4(r30)
 1410  00001f9c  64220000	snei	r2,r1,#0
 1411  00001fa0  10400010	beqz	r2,L99_LF2
 1412  00001fa4  54000000	nop; delay slot nop
 1413  00001fa8  8fc10004	lw	r1,4(r30)
 1414  00001fac  8fc20000	lw	r2,(r30)
 1415  00001fb0  ac220000	sw	(r1),r2
 1416  00001fb4          	L99_LF2:
 1417  00001fb4  8fc1fff4	lw	r1,-12(r30)
 1418  00001fb8  8fc2ffec	lw	r2,-20(r30)
 1419  00001fbc  00200035	movi2fp	f0,r1
 1420  00001fc0  00400835	movi2fp	f1,r2
 1421  00001fc4  0401000e	mult	f0,f0,f1
 1422  00001fc8  00000834	movfp2i	r1,f0
 1423  00001fcc  afc1fff4	sw	-12(r30),r1
 1424  00001fd0  8fc1fff4	lw	r1,-12(r30)
 1425  00001fd4  08000004	j	L72_LF2
 1426  00001fd8  54000000	nop; delay slot nop
 1427  00001fdc          	L72_LF2:
 1428  00001fdc  8fa20000	lw	r2,0(r29)
 1429  00001fe0  8fdffff8	lw	r31,-8(r30)
 1430  00001fe4  001ee820	add	r29,r0,r30
 1431  00001fe8  8fdefffc	lw	r30,-4(r30)
 1432  00001fec  4be00000	jr	r31
 1433  00001ff0  54000000	nop
 1434  00001ff4          	.endproc _dstrtol
 1435  00001ff4          	.align 2
 1436  00001ff4          	.proc _bcopy
 1437  00001ff4          	.global _bcopy
 1438  00001ff4          	_bcopy:
 1439                      ;  Function 'bcopy'; 0 bytes of locals, 2 regs to save.
 1440  00001ff4  afbefffc	sw	-4(r29),r30; push fp
 1441  00001ff8  001df020	add	r30,r0,r29; fp = sp
 1442  00001ffc  afbffff8	sw	-8(r29),r31; push ret addr
 1443  00002000  2fbd0010	subui	r29,r29,#16; alloc local storage
 1444  00002004  afa20000	sw	0(r29),r2
 1445  00002008  afa30004	sw	4(r29),r3
 1446  0000200c  54000000	nop
 1447  00002010          	L101_LF2:
 1448  00002010  8fc10008	lw	r1,8(r30)
 1449  00002014  2022ffff	addi	r2,r1,#-1
 1450  00002018  afc20008	sw	8(r30),r2
 1451  0000201c  6c210000	sgti	r1,r1,#0
 1452  00002020  1420000c	bnez	r1,L103_LF2
 1453  00002024  54000000	nop; delay slot nop
 1454  00002028  0800002c	j	L102_LF2
 1455  0000202c  54000000	nop; delay slot nop
 1456  00002030          	L103_LF2:
 1457  00002030  8fc10004	lw	r1,4(r30)
 1458  00002034  20220001	addi	r2,r1,#1
 1459  00002038  afc20004	sw	4(r30),r2
 1460  0000203c  8fc20000	lw	r2,(r30)
 1461  00002040  20430001	addi	r3,r2,#1
 1462  00002044  afc30000	sw	(r30),r3
 1463  00002048  80420000	lb	r2,(r2)
 1464  0000204c  a0220000	sb	(r1),r2
 1465  00002050  0bffffbc	j	L101_LF2
 1466  00002054  54000000	nop; delay slot nop
 1467  00002058          	L102_LF2:
 1468  00002058          	L100_LF2:
 1469  00002058  8fa20000	lw	r2,0(r29)
 1470  0000205c  8fa30004	lw	r3,4(r29)
 1471  00002060  8fdffff8	lw	r31,-8(r30)
 1472  00002064  001ee820	add	r29,r0,r30
 1473  00002068  8fdefffc	lw	r30,-4(r30)
 1474  0000206c  4be00000	jr	r31
 1475  00002070  54000000	nop
 1476  00002074          	.endproc _bcopy
 1477  00002074          	.align 2
 1478  00002074          	.proc _bzero
 1479  00002074          	.global _bzero
 1480  00002074          	_bzero:
 1481                      ;  Function 'bzero'; 0 bytes of locals, 1 regs to save.
 1482  00002074  afbefffc	sw	-4(r29),r30; push fp
 1483  00002078  001df020	add	r30,r0,r29; fp = sp
 1484  0000207c  afbffff8	sw	-8(r29),r31; push ret addr
 1485  00002080  2fbd0010	subui	r29,r29,#16; alloc local storage
 1486  00002084  afa20000	sw	0(r29),r2
 1487  00002088  54000000	nop
 1488  0000208c          	L105_LF2:
 1489  0000208c  8fc10004	lw	r1,4(r30)
 1490  00002090  2022ffff	addi	r2,r1,#-1
 1491  00002094  afc20004	sw	4(r30),r2
 1492  00002098  6c210000	sgti	r1,r1,#0
 1493  0000209c  1420000c	bnez	r1,L107_LF2
 1494  000020a0  54000000	nop; delay slot nop
 1495  000020a4  08000020	j	L106_LF2
 1496  000020a8  54000000	nop; delay slot nop
 1497  000020ac          	L107_LF2:
 1498  000020ac  8fc10000	lw	r1,(r30)
 1499  000020b0  20220001	addi	r2,r1,#1
 1500  000020b4  afc20000	sw	(r30),r2
 1501  000020b8  20020000	addi	r2,r0,(#0x0)&0xff
 1502  000020bc  a0220000	sb	(r1),r2
 1503  000020c0  0bffffc8	j	L105_LF2
 1504  000020c4  54000000	nop; delay slot nop
 1505  000020c8          	L106_LF2:
 1506  000020c8          	L104_LF2:
 1507  000020c8  8fa20000	lw	r2,0(r29)
 1508  000020cc  8fdffff8	lw	r31,-8(r30)
 1509  000020d0  001ee820	add	r29,r0,r30
 1510  000020d4  8fdefffc	lw	r30,-4(r30)
 1511  000020d8  4be00000	jr	r31
 1512  000020dc  54000000	nop
 1513  000020e0          	.endproc _bzero
 1514  000020e0          	.align 2
 1515  000020e0          	.proc _min
 1516  000020e0          	.global _min
 1517  000020e0          	_min:
 1518                      ;  Function 'min'; 0 bytes of locals, 2 regs to save.
 1519  000020e0  afbefffc	sw	-4(r29),r30; push fp
 1520  000020e4  001df020	add	r30,r0,r29; fp = sp
 1521  000020e8  afbffff8	sw	-8(r29),r31; push ret addr
 1522  000020ec  2fbd0010	subui	r29,r29,#16; alloc local storage
 1523  000020f0  afa20000	sw	0(r29),r2
 1524  000020f4  afa30004	sw	4(r29),r3
 1525  000020f8  8fc10000	lw	r1,(r30)
 1526  000020fc  8fc20004	lw	r2,4(r30)
 1527  00002100  0022182c	sle	r3,r1,r2
 1528  00002104  14600008	bnez	r3,L109_LF2
 1529  00002108  54000000	nop; delay slot nop
 1530  0000210c  8fc10004	lw	r1,4(r30)
 1531  00002110          	L109_LF2:
 1532  00002110  08000004	j	L108_LF2
 1533  00002114  54000000	nop; delay slot nop
 1534  00002118          	L108_LF2:
 1535  00002118  8fa20000	lw	r2,0(r29)
 1536  0000211c  8fa30004	lw	r3,4(r29)
 1537  00002120  8fdffff8	lw	r31,-8(r30)
 1538  00002124  001ee820	add	r29,r0,r30
 1539  00002128  8fdefffc	lw	r30,-4(r30)
 1540  0000212c  4be00000	jr	r31
 1541  00002130  54000000	nop
 1542  00002134          	.endproc _min
 1543  00002134          	.align 2
 1544  00002134          	.proc _max
 1545  00002134          	.global _max
 1546  00002134          	_max:
 1547                      ;  Function 'max'; 0 bytes of locals, 2 regs to save.
 1548  00002134  afbefffc	sw	-4(r29),r30; push fp
 1549  00002138  001df020	add	r30,r0,r29; fp = sp
 1550  0000213c  afbffff8	sw	-8(r29),r31; push ret addr
 1551  00002140  2fbd0010	subui	r29,r29,#16; alloc local storage
 1552  00002144  afa20000	sw	0(r29),r2
 1553  00002148  afa30004	sw	4(r29),r3
 1554  0000214c  8fc10000	lw	r1,(r30)
 1555  00002150  8fc20004	lw	r2,4(r30)
 1556  00002154  0022182d	sge	r3,r1,r2
 1557  00002158  14600008	bnez	r3,L111_LF2
 1558  0000215c  54000000	nop; delay slot nop
 1559  00002160  8fc10004	lw	r1,4(r30)
 1560  00002164          	L111_LF2:
 1561  00002164  08000004	j	L110_LF2
 1562  00002168  54000000	nop; delay slot nop
 1563  0000216c          	L110_LF2:
 1564  0000216c  8fa20000	lw	r2,0(r29)
 1565  00002170  8fa30004	lw	r3,4(r29)
 1566  00002174  8fdffff8	lw	r31,-8(r30)
 1567  00002178  001ee820	add	r29,r0,r30
 1568  0000217c  8fdefffc	lw	r30,-4(r30)
 1569  00002180  4be00000	jr	r31
 1570  00002184  54000000	nop
 1571  00002188          	.endproc _max
 1572                      ;;; Ethan L. Miller, 1999.  Released to the public domain
 1573                      ;;;
 1574                      ;;; Most of the traps are called in files from libtraps.
 1577  00002188          	.align 2
 1578  00002188          	.proc _exit
 1579  00002188          	.global _exit
 1580  00002188          	_exit:
 1581  00002188  44000300	trap	#0x300
 1582  0000218c  4be00000	jr	r31
 1583  00002190  54000000	nop
 1584  00002194          	.endproc _exit
 1586                      ; for the benefit of gcc.
 1587  00002194          	.proc ___main
 1588  00002194          	.global ___main
 1589  00002194          	___main:
 1590  00002194  4be00000	jr	r31
 1591  00002198  54000000	nop
 1592  0000219c          	.endproc ___main
 1593  0000219c          	.text
 1594  0000219c          	.global _etext
 1595  0000219c          	_etext:
 1596  0000219c          	.align 3
 1597  000021a0          	.data
 1598  000030c7          	.global _edata
 1599  000030c7          	_edata:
