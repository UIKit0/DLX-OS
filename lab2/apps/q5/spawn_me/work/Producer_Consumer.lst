 line   address	contents
    1                      ; Linked by DLX-LD.
    2                      ; MemSize 24576
    3                      ; Data size: 348
    4                      ; Text size: 5372
    5                      ; Stack size: 8192
    6  00000000          	.text 0x1000
    7  00001000          	.data 0x3000
    8                      ; Compiled by GCC
    9  00003000          	.text
   10  00001000          	.align 2
   11  00001000          	.proc _isspace
   12  00001000          	.global _isspace
   13  00001000          	_isspace:
   14                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
   15  00001000  afbefffc	sw	-4(r29),r30; push fp
   16  00001004  001df020	add	r30,r0,r29; fp = sp
   17  00001008  afbffff8	sw	-8(r29),r31; push ret addr
   18  0000100c  2fbd0010	subui	r29,r29,#16; alloc local storage
   19  00001010  afa20000	sw	0(r29),r2
   20  00001014  83c20003	lb	r2,3(r30)
   21  00001018  201f0000	addi	r31,r0,#0
   22  0000101c  304100ff	andi	r1,r2,#0x00ff
   23  00001020  60210020	seqi	r1,r1,#32
   24  00001024  14200018	bnez	r1,L6_LF0
   25  00001028  54000000	nop; not filled.
   26  0000102c  2041fff7	addi	r1,r2,#-9
   27  00001030  302100ff	andi	r1,r1,#0x00ff
   28  00001034  70210001	sleui	r1,r1,#1
   29  00001038  10200008	beqz	r1,L5_LF0
   30  0000103c  54000000	nop; not filled.
   31  00001040          	L6_LF0:
   32  00001040  201f0001	addi	r31,r0,#1
   33  00001044          	L5_LF0:
   34  00001044  001f0820	add	r1,r0,r31
   35  00001048  8fa20000	lw	r2,0(r29)
   36  0000104c  8fdffff8	lw	r31,-8(r30)
   37  00001050  001ee820	add	r29,r0,r30
   38  00001054  8fdefffc	lw	r30,-4(r30)
   39  00001058  4be00000	jr	r31
   40  0000105c  54000000	nop
   41  00001060          	.endproc _isspace
   42  00001060          	.align 2
   43  00001060          	.proc _isxdigit
   44  00001060          	.global _isxdigit
   45  00001060          	_isxdigit:
   46                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
   47  00001060  afbefffc	sw	-4(r29),r30; push fp
   48  00001064  001df020	add	r30,r0,r29; fp = sp
   49  00001068  afbffff8	sw	-8(r29),r31; push ret addr
   50  0000106c  2fbd0010	subui	r29,r29,#16; alloc local storage
   51  00001070  afa20000	sw	0(r29),r2
   52  00001074  83df0003	lb	r31,3(r30)
   53  00001078  20020000	addi	r2,r0,#0
   54  0000107c  23e1ffd0	addi	r1,r31,#-48
   55  00001080  302100ff	andi	r1,r1,#0x00ff
   56  00001084  70210009	sleui	r1,r1,#9
   57  00001088  14200028	bnez	r1,L12_LF0
   58  0000108c  54000000	nop; not filled.
   59  00001090  23e1ff9f	addi	r1,r31,#-97
   60  00001094  302100ff	andi	r1,r1,#0x00ff
   61  00001098  70210005	sleui	r1,r1,#5
   62  0000109c  14200014	bnez	r1,L12_LF0
   63  000010a0  54000000	nop; not filled.
   64  000010a4  33e100ff	andi	r1,r31,#0x00ff
   65  000010a8  64210041	snei	r1,r1,#65
   66  000010ac  14200008	bnez	r1,L11_LF0
   67  000010b0  54000000	nop; not filled.
   68  000010b4          	L12_LF0:
   69  000010b4  20020001	addi	r2,r0,#1
   70  000010b8          	L11_LF0:
   71  000010b8  00020820	add	r1,r0,r2
   72  000010bc  8fa20000	lw	r2,0(r29)
   73  000010c0  8fdffff8	lw	r31,-8(r30)
   74  000010c4  001ee820	add	r29,r0,r30
   75  000010c8  8fdefffc	lw	r30,-4(r30)
   76  000010cc  4be00000	jr	r31
   77  000010d0  54000000	nop
   78  000010d4          	.endproc _isxdigit
   79  000010d4          	.data
   80  00003000          	.align 2
   81  00003000          	LC0_LF0:
   82  00003000  55736167	.ascii "Usage: \000"
   82  00003004  653a2000	
   83  00003008          	.align 2
   84  00003008          	LC1_LF0:
   85  00003008  203c6861	.ascii " <handle_to_shared_memory_page> <handle_to_page_mapped_semaphore><proc"
   85  0000300c  6e646c65	
   85  00003010  5f746f5f	
   85  00003014  73686172	
   85  00003018  65645f6d	
   85  0000301c  656d6f72	
   85  00003020  795f7061	
   85  00003024  67653e20	
   85  00003028  3c68616e	
   85  0000302c  646c655f	
   85  00003030  746f5f70	
   85  00003034  6167655f	
   85  00003038  6d617070	
   85  0000303c  65645f73	
   85  00003040  656d6170	
   85  00003044  686f7265	
   85  00003048  3e3c7072	
   85  0000304c  6f63    	
   86  0000304e  65737320	.ascii "ess id> <process type> <s_full> <s_empty>\n\000"
   86  00003052  69643e20	
   86  00003056  3c70726f	
   86  0000305a  63657373	
   86  0000305e  20747970	
   86  00003062  653e203c	
   86  00003066  735f6675	
   86  0000306a  6c6c3e20	
   86  0000306e  3c735f65	
   86  00003072  6d707479	
   86  00003076  3e0a00  	
   87  00003079          	.align 2
   88  0000307c          	LC2_LF0:
   89  0000307c  436f756c	.ascii "Could not map the virtual address to the memory in \000"
   89  00003080  64206e6f	
   89  00003084  74206d61	
   89  00003088  70207468	
   89  0000308c  65207669	
   89  00003090  72747561	
   89  00003094  6c206164	
   89  00003098  64726573	
   89  0000309c  7320746f	
   89  000030a0  20746865	
   89  000030a4  206d656d	
   89  000030a8  6f727920	
   89  000030ac  696e2000	
   90  000030b0          	.align 2
   91  000030b0          	LC3_LF0:
   92  000030b0  2c206578	.ascii ", exiting...\n\000"
   92  000030b4  6974696e	
   92  000030b8  672e2e2e	
   92  000030bc  0a00    	
   93  000030be          	.align 2
   94  000030c0          	LC4_LF0:
   95  000030c0  57726f6e	.ascii "Wrong process\n\000"
   95  000030c4  67207072	
   95  000030c8  6f636573	
   95  000030cc  730a00  	
   96  000030cf          	.align 2
   97  000030d0          	LC5_LF0:
   98  000030d0  50726f63	.ascii "Process_%d_type_%d is complete.\n\000"
   98  000030d4  6573735f	
   98  000030d8  25645f74	
   98  000030dc  7970655f	
   98  000030e0  25642069	
   98  000030e4  7320636f	
   98  000030e8  6d706c65	
   98  000030ec  74652e0a	
   98  000030f0  00      	
   99  000030f1          	.align 2
  100  000030f4          	LC6_LF0:
  101  000030f4  42616420	.ascii "Bad semaphore s_procs_completed (%d) in \000"
  101  000030f8  73656d61	
  101  000030fc  70686f72	
  101  00003100  6520735f	
  101  00003104  70726f63	
  101  00003108  735f636f	
  101  0000310c  6d706c65	
  101  00003110  74656420	
  101  00003114  28256429	
  101  00003118  20696e20	
  101  0000311c  00      	
  102  0000311d          	.text
  103  000010d4          	.align 2
  104  000010d4          	.proc _main
  105  000010d4          	.global _main
  106  000010d4          	_main:
  107                      ;  Function 'main'; 0 bytes of locals, 0 regs to save.
  108  000010d4  afbefffc	sw	-4(r29),r30; push fp
  109  000010d8  001df020	add	r30,r0,r29; fp = sp
  110  000010dc  afbffff8	sw	-8(r29),r31; push ret addr
  111  000010e0  2fbd0008	subui	r29,r29,#8; alloc local storage
  112  000010e4  8fc20000	lw	r2,(r30)
  113  000010e8  8fc30004	lw	r3,4(r30)
  114  000010ec  0c001404	jal	___main
  115  000010f0  54000000	nop; not filled.
  116  000010f4  64410008	snei	r1,r2,#8
  117  000010f8  1020004c	beqz	r1,L14_LF0
  118  000010fc  54000000	nop; not filled.
  119  00001100  23bdfff8	addi	r29,r29,#-8
  120  00001104  3c0a0000	lhi	r10,((LC0_LF0)>>16)&0xffff
  121  00001108  254a3000	addui	r10,r10,(LC0_LF0)&0xffff
  122  0000110c  afaa0000	sw	(r29),r10
  123  00001110  0c0005d8	jal	_Printf
  124  00001114  54000000	nop; not filled.
  125  00001118  8c6a0000	lw	r10,(r3)
  126  0000111c  afaa0000	sw	(r29),r10
  127  00001120  0c0005c8	jal	_Printf
  128  00001124  54000000	nop; not filled.
  129  00001128  3c0a0000	lhi	r10,((LC1_LF0)>>16)&0xffff
  130  0000112c  254a3008	addui	r10,r10,(LC1_LF0)&0xffff
  131  00001130  afaa0000	sw	(r29),r10
  132  00001134  0c0005b4	jal	_Printf
  133  00001138  54000000	nop; not filled.
  134  0000113c  0c000660	jal	_Exit
  135  00001140  54000000	nop; not filled.
  136  00001144  23bd0008	addi	r29,r29,#8
  137  00001148          	L14_LF0:
  138  00001148  23bdfff0	addi	r29,r29,#-16
  139  0000114c  8c6a0004	lw	r10,4(r3)
  140  00001150  afaa0000	sw	(r29),r10
  141  00001154  200a0000	addi	r10,r0,#0
  142  00001158  afaa0004	sw	4(r29),r10
  143  0000115c  200a000a	addi	r10,r0,#10
  144  00001160  afaa0008	sw	8(r29),r10
  145  00001164  0c000ee4	jal	_dstrtol
  146  00001168  54000000	nop; not filled.
  147  0000116c  00011020	add	r2,r0,r1
  148  00001170  8c6a0008	lw	r10,8(r3)
  149  00001174  afaa0000	sw	(r29),r10
  150  00001178  200a0000	addi	r10,r0,#0
  151  0000117c  afaa0004	sw	4(r29),r10
  152  00001180  200a000a	addi	r10,r0,#10
  153  00001184  afaa0008	sw	8(r29),r10
  154  00001188  0c000ec0	jal	_dstrtol
  155  0000118c  54000000	nop; not filled.
  156  00001190  00014820	add	r9,r0,r1
  157  00001194  8c6a000c	lw	r10,12(r3)
  158  00001198  afaa0000	sw	(r29),r10
  159  0000119c  200a0000	addi	r10,r0,#0
  160  000011a0  afaa0004	sw	4(r29),r10
  161  000011a4  200a000a	addi	r10,r0,#10
  162  000011a8  afaa0008	sw	8(r29),r10
  163  000011ac  0c000e9c	jal	_dstrtol
  164  000011b0  54000000	nop; not filled.
  165  000011b4  00012820	add	r5,r0,r1
  166  000011b8  8c6a0010	lw	r10,16(r3)
  167  000011bc  afaa0000	sw	(r29),r10
  168  000011c0  200a0000	addi	r10,r0,#0
  169  000011c4  afaa0004	sw	4(r29),r10
  170  000011c8  200a000a	addi	r10,r0,#10
  171  000011cc  afaa0008	sw	8(r29),r10
  172  000011d0  0c000e78	jal	_dstrtol
  173  000011d4  54000000	nop; not filled.
  174  000011d8  00014020	add	r8,r0,r1
  175  000011dc  8c6a0014	lw	r10,20(r3)
  176  000011e0  afaa0000	sw	(r29),r10
  177  000011e4  200a0000	addi	r10,r0,#0
  178  000011e8  afaa0004	sw	4(r29),r10
  179  000011ec  200a000a	addi	r10,r0,#10
  180  000011f0  afaa0008	sw	8(r29),r10
  181  000011f4  0c000e54	jal	_dstrtol
  182  000011f8  54000000	nop; not filled.
  183  000011fc  00012020	add	r4,r0,r1
  184  00001200  8c6a0018	lw	r10,24(r3)
  185  00001204  afaa0000	sw	(r29),r10
  186  00001208  200a0000	addi	r10,r0,#0
  187  0000120c  afaa0004	sw	4(r29),r10
  188  00001210  200a000a	addi	r10,r0,#10
  189  00001214  afaa0008	sw	8(r29),r10
  190  00001218  0c000e30	jal	_dstrtol
  191  0000121c  54000000	nop; not filled.
  192  00001220  00013820	add	r7,r0,r1
  193  00001224  8c6a001c	lw	r10,28(r3)
  194  00001228  afaa0000	sw	(r29),r10
  195  0000122c  200a0000	addi	r10,r0,#0
  196  00001230  afaa0004	sw	4(r29),r10
  197  00001234  200a000a	addi	r10,r0,#10
  198  00001238  afaa0008	sw	8(r29),r10
  199  0000123c  0c000e0c	jal	_dstrtol
  200  00001240  54000000	nop; not filled.
  201  00001244  00013020	add	r6,r0,r1
  202  00001248  afa20000	sw	(r29),r2
  203  0000124c  0c0004cc	jal	_shmat
  204  00001250  54000000	nop; not filled.
  205  00001254  00011020	add	r2,r0,r1
  206  00001258  23bd0010	addi	r29,r29,#16
  207  0000125c  64410000	snei	r1,r2,#0
  208  00001260  1420004c	bnez	r1,L15_LF0
  209  00001264  54000000	nop; not filled.
  210  00001268  23bdfff8	addi	r29,r29,#-8
  211  0000126c  3c0a0000	lhi	r10,((LC2_LF0)>>16)&0xffff
  212  00001270  254a307c	addui	r10,r10,(LC2_LF0)&0xffff
  213  00001274  afaa0000	sw	(r29),r10
  214  00001278  0c000470	jal	_Printf
  215  0000127c  54000000	nop; not filled.
  216  00001280  8c6a0000	lw	r10,(r3)
  217  00001284  afaa0000	sw	(r29),r10
  218  00001288  0c000460	jal	_Printf
  219  0000128c  54000000	nop; not filled.
  220  00001290  3c0a0000	lhi	r10,((LC3_LF0)>>16)&0xffff
  221  00001294  254a30b0	addui	r10,r10,(LC3_LF0)&0xffff
  222  00001298  afaa0000	sw	(r29),r10
  223  0000129c  0c00044c	jal	_Printf
  224  000012a0  54000000	nop; not filled.
  225  000012a4  0c0004f8	jal	_Exit
  226  000012a8  54000000	nop; not filled.
  227  000012ac  23bd0008	addi	r29,r29,#8
  228  000012b0          	L15_LF0:
  229  000012b0  60810001	seqi	r1,r4,#1
  230  000012b4  10200030	beqz	r1,L16_LF0
  231  000012b8  54000000	nop; not filled.
  232  000012bc  23bdffe8	addi	r29,r29,#-24
  233  000012c0  afa20000	sw	(r29),r2
  234  000012c4  afa50004	sw	4(r29),r5
  235  000012c8  afa80008	sw	8(r29),r8
  236  000012cc  afa7000c	sw	12(r29),r7
  237  000012d0  afa60010	sw	16(r29),r6
  238  000012d4  0c0000f4	jal	_producer
  239  000012d8  54000000	nop; not filled.
  240  000012dc  23bd0018	addi	r29,r29,#24
  241  000012e0  08000058	j	L17_LF0
  242  000012e4  54000000	nop; not filled.
  243  000012e8          	L16_LF0:
  244  000012e8  64810000	snei	r1,r4,#0
  245  000012ec  14200030	bnez	r1,L18_LF0
  246  000012f0  54000000	nop; not filled.
  247  000012f4  23bdffe8	addi	r29,r29,#-24
  248  000012f8  afa20000	sw	(r29),r2
  249  000012fc  afa50004	sw	4(r29),r5
  250  00001300  afa80008	sw	8(r29),r8
  251  00001304  afa7000c	sw	12(r29),r7
  252  00001308  afa60010	sw	16(r29),r6
  253  0000130c  0c000260	jal	_consumer
  254  00001310  54000000	nop; not filled.
  255  00001314  23bd0018	addi	r29,r29,#24
  256  00001318  08000020	j	L17_LF0
  257  0000131c  54000000	nop; not filled.
  258  00001320          	L18_LF0:
  259  00001320  23bdfff8	addi	r29,r29,#-8
  260  00001324  3c0a0000	lhi	r10,((LC4_LF0)>>16)&0xffff
  261  00001328  254a30c0	addui	r10,r10,(LC4_LF0)&0xffff
  262  0000132c  afaa0000	sw	(r29),r10
  263  00001330  0c0003b8	jal	_Printf
  264  00001334  54000000	nop; not filled.
  265  00001338  23bd0008	addi	r29,r29,#8
  266  0000133c          	L17_LF0:
  267  0000133c  23bdfff0	addi	r29,r29,#-16
  268  00001340  3c0a0000	lhi	r10,((LC5_LF0)>>16)&0xffff
  269  00001344  254a30d0	addui	r10,r10,(LC5_LF0)&0xffff
  270  00001348  afaa0000	sw	(r29),r10
  271  0000134c  afa50004	sw	4(r29),r5
  272  00001350  afa40008	sw	8(r29),r4
  273  00001354  0c000394	jal	_Printf
  274  00001358  54000000	nop; not filled.
  275  0000135c  afa90000	sw	(r29),r9
  276  00001360  0c0003dc	jal	_sem_signal
  277  00001364  54000000	nop; not filled.
  278  00001368  23bd0010	addi	r29,r29,#16
  279  0000136c  64210001	snei	r1,r1,#1
  280  00001370  10200050	beqz	r1,L20_LF0
  281  00001374  54000000	nop; not filled.
  282  00001378  23bdfff8	addi	r29,r29,#-8
  283  0000137c  3c0a0000	lhi	r10,((LC6_LF0)>>16)&0xffff
  284  00001380  254a30f4	addui	r10,r10,(LC6_LF0)&0xffff
  285  00001384  afaa0000	sw	(r29),r10
  286  00001388  afa90004	sw	4(r29),r9
  287  0000138c  0c00035c	jal	_Printf
  288  00001390  54000000	nop; not filled.
  289  00001394  8c630000	lw	r3,(r3)
  290  00001398  afa30000	sw	(r29),r3
  291  0000139c  0c00034c	jal	_Printf
  292  000013a0  54000000	nop; not filled.
  293  000013a4  3c0a0000	lhi	r10,((LC3_LF0)>>16)&0xffff
  294  000013a8  254a30b0	addui	r10,r10,(LC3_LF0)&0xffff
  295  000013ac  afaa0000	sw	(r29),r10
  296  000013b0  0c000338	jal	_Printf
  297  000013b4  54000000	nop; not filled.
  298  000013b8  0c0003e4	jal	_Exit
  299  000013bc  54000000	nop; not filled.
  300  000013c0  23bd0008	addi	r29,r29,#8
  301  000013c4          	L20_LF0:
  302  000013c4  0c001120	jal	_exit
  303  000013c8  54000000	nop
  304  000013cc          	.endproc _main
  305  000013cc          	.data
  306  0000311d          	.align 2
  307  00003120          	LC7_LF0:
  308  00003120  50726f64	.ascii "Producer %d,\tProduce: %c \n  \000"
  308  00003124  75636572	
  308  00003128  2025642c	
  308  0000312c  0950726f	
  308  00003130  64756365	
  308  00003134  3a202563	
  308  00003138  200a2020	
  308  0000313c  00      	
  309  0000313d          	.text
  310  000013cc          	.align 2
  311  000013cc          	.proc _producer
  312  000013cc          	.global _producer
  313  000013cc          	_producer:
  314                      ;  Function 'producer'; 16 bytes of locals, 11 regs to save.
  315  000013cc  afbefffc	sw	-4(r29),r30; push fp
  316  000013d0  001df020	add	r30,r0,r29; fp = sp
  317  000013d4  afbffff8	sw	-8(r29),r31; push ret addr
  318  000013d8  2fbd0048	subui	r29,r29,#72; alloc local storage
  319  000013dc  afa20000	sw	0(r29),r2
  320  000013e0  afa30004	sw	4(r29),r3
  321  000013e4  afa40008	sw	8(r29),r4
  322  000013e8  afa5000c	sw	12(r29),r5
  323  000013ec  afa60010	sw	16(r29),r6
  324  000013f0  afa70014	sw	20(r29),r7
  325  000013f4  afa80018	sw	24(r29),r8
  326  000013f8  afa9001c	sw	28(r29),r9
  327  000013fc  afaa0020	sw	32(r29),r10
  328  00001400  afab0024	sw	36(r29),r11
  329  00001404  afac0028	sw	40(r29),r12
  330  00001408  8fc50000	lw	r5,(r30)
  331  0000140c  8fcb0004	lw	r11,4(r30)
  332  00001410  8fc60008	lw	r6,8(r30)
  333  00001414  8fca000c	lw	r10,12(r30)
  334  00001418  8fc90010	lw	r9,16(r30)
  335  0000141c  200c0048	addi	r12,r0,(#0x48)&0xff
  336  00001420  a3ccffe8	sb	-24(r30),r12
  337  00001424  200c0065	addi	r12,r0,(#0x65)&0xff
  338  00001428  a3ccffe9	sb	-23(r30),r12
  339  0000142c  200c006c	addi	r12,r0,(#0x6c)&0xff
  340  00001430  a3ccffea	sb	-22(r30),r12
  341  00001434  a3ccffeb	sb	-21(r30),r12
  342  00001438  200c006f	addi	r12,r0,(#0x6f)&0xff
  343  0000143c  a3ccffec	sb	-20(r30),r12
  344  00001440  200c0000	addi	r12,r0,(#0x0)&0xff
  345  00001444  a3ccffed	sb	-19(r30),r12
  346  00001448  200c0057	addi	r12,r0,(#0x57)&0xff
  347  0000144c  a3ccffee	sb	-18(r30),r12
  348  00001450  200c006f	addi	r12,r0,(#0x6f)&0xff
  349  00001454  a3ccffef	sb	-17(r30),r12
  350  00001458  200c0072	addi	r12,r0,(#0x72)&0xff
  351  0000145c  a3ccfff0	sb	-16(r30),r12
  352  00001460  200c006c	addi	r12,r0,(#0x6c)&0xff
  353  00001464  a3ccfff1	sb	-15(r30),r12
  354  00001468  200c0064	addi	r12,r0,(#0x64)&0xff
  355  0000146c  a3ccfff2	sb	-14(r30),r12
  356  00001470  2008000b	addi	r8,r0,#11
  357  00001474  23c4ffe8	addi	r4,r30,#-24
  358  00001478  23c7fff2	addi	r7,r30,#-14
  359  0000147c          	L31_LF0:
  360  0000147c  23bdfff8	addi	r29,r29,#-8
  361  00001480  afa90000	sw	(r29),r9
  362  00001484  0c0002ac	jal	_sem_wait
  363  00001488  54000000	nop; not filled.
  364  0000148c  afa60000	sw	(r29),r6
  365  00001490  0c0002c4	jal	_lock_acquire
  366  00001494  54000000	nop; not filled.
  367  00001498  8ca1000c	lw	r1,12(r5)
  368  0000149c  00a10820	add	r1,r5,r1
  369  000014a0  808c0000	lb	r12,(r4)
  370  000014a4  a02c0000	sb	(r1),r12
  371  000014a8  23bdfff8	addi	r29,r29,#-8
  372  000014ac  3c0c0000	lhi	r12,((LC7_LF0)>>16)&0xffff
  373  000014b0  258c3120	addui	r12,r12,(LC7_LF0)&0xffff
  374  000014b4  afac0000	sw	(r29),r12
  375  000014b8  afab0004	sw	4(r29),r11
  376  000014bc  8ca1000c	lw	r1,12(r5)
  377  000014c0  00a10820	add	r1,r5,r1
  378  000014c4  90210000	lbu	r1,(r1)
  379  000014c8  afa10008	sw	8(r29),r1
  380  000014cc  0c00021c	jal	_Printf
  381  000014d0  54000000	nop; not filled.
  382  000014d4  8ca1000c	lw	r1,12(r5)
  383  000014d8  20230001	addi	r3,r1,#1
  384  000014dc  00600035	movi2fp	f0,r3
  385  000014e0  01000835	movi2fp	f1,r8
  386  000014e4  0401000f	div	f0,f0,f1
  387  000014e8  00001034	movfp2i	r2,f0
  388  000014ec  50410001	slli	r1,r2,#0x1
  389  000014f0  00220820	add	r1,r1,r2
  390  000014f4  50210002	slli	r1,r1,#0x2
  391  000014f8  00220822	sub	r1,r1,r2
  392  000014fc  00610822	sub	r1,r3,r1
  393  00001500  aca1000c	sw	12(r5),r1
  394  00001504  afa60000	sw	(r29),r6
  395  00001508  0c000258	jal	_lock_release
  396  0000150c  54000000	nop; not filled.
  397  00001510  afaa0000	sw	(r29),r10
  398  00001514  0c000228	jal	_sem_signal
  399  00001518  54000000	nop; not filled.
  400  0000151c  23bd0010	addi	r29,r29,#16
  401  00001520  20840001	addi	r4,r4,#1
  402  00001524  0087082c	sle	r1,r4,r7
  403  00001528  1420ff50	bnez	r1,L31_LF0
  404  0000152c  54000000	nop; not filled.
  405  00001530  8fa20000	lw	r2,0(r29)
  406  00001534  8fa30004	lw	r3,4(r29)
  407  00001538  8fa40008	lw	r4,8(r29)
  408  0000153c  8fa5000c	lw	r5,12(r29)
  409  00001540  8fa60010	lw	r6,16(r29)
  410  00001544  8fa70014	lw	r7,20(r29)
  411  00001548  8fa80018	lw	r8,24(r29)
  412  0000154c  8fa9001c	lw	r9,28(r29)
  413  00001550  8faa0020	lw	r10,32(r29)
  414  00001554  8fab0024	lw	r11,36(r29)
  415  00001558  8fac0028	lw	r12,40(r29)
  416  0000155c  8fdffff8	lw	r31,-8(r30)
  417  00001560  001ee820	add	r29,r0,r30
  418  00001564  8fdefffc	lw	r30,-4(r30)
  419  00001568  4be00000	jr	r31
  420  0000156c  54000000	nop
  421  00001570          	.endproc _producer
  422  00001570          	.data
  423  0000313d          	.align 2
  424  00003140          	LC8_LF0:
  425  00003140  436f6e73	.ascii "Consumer %d,\tConsume: %c \n \000"
  425  00003144  756d6572	
  425  00003148  2025642c	
  425  0000314c  09436f6e	
  425  00003150  73756d65	
  425  00003154  3a202563	
  425  00003158  200a2000	
  426  0000315c          	.text
  427  00001570          	.align 2
  428  00001570          	.proc _consumer
  429  00001570          	.global _consumer
  430  00001570          	_consumer:
  431                      ;  Function 'consumer'; 0 bytes of locals, 10 regs to save.
  432  00001570  afbefffc	sw	-4(r29),r30; push fp
  433  00001574  001df020	add	r30,r0,r29; fp = sp
  434  00001578  afbffff8	sw	-8(r29),r31; push ret addr
  435  0000157c  2fbd0030	subui	r29,r29,#48; alloc local storage
  436  00001580  afa20000	sw	0(r29),r2
  437  00001584  afa30004	sw	4(r29),r3
  438  00001588  afa40008	sw	8(r29),r4
  439  0000158c  afa5000c	sw	12(r29),r5
  440  00001590  afa60010	sw	16(r29),r6
  441  00001594  afa70014	sw	20(r29),r7
  442  00001598  afa80018	sw	24(r29),r8
  443  0000159c  afa9001c	sw	28(r29),r9
  444  000015a0  afaa0020	sw	32(r29),r10
  445  000015a4  afab0024	sw	36(r29),r11
  446  000015a8  8fc50000	lw	r5,(r30)
  447  000015ac  8fca0004	lw	r10,4(r30)
  448  000015b0  8fc60008	lw	r6,8(r30)
  449  000015b4  8fc9000c	lw	r9,12(r30)
  450  000015b8  8fc80010	lw	r8,16(r30)
  451  000015bc  20040000	addi	r4,r0,#0
  452  000015c0  2007000b	addi	r7,r0,#11
  453  000015c4          	L43_LF0:
  454  000015c4  23bdfff8	addi	r29,r29,#-8
  455  000015c8  afa90000	sw	(r29),r9
  456  000015cc  0c000164	jal	_sem_wait
  457  000015d0  54000000	nop; not filled.
  458  000015d4  afa60000	sw	(r29),r6
  459  000015d8  0c00017c	jal	_lock_acquire
  460  000015dc  54000000	nop; not filled.
  461  000015e0  23bdfff8	addi	r29,r29,#-8
  462  000015e4  3c0b0000	lhi	r11,((LC8_LF0)>>16)&0xffff
  463  000015e8  256b3140	addui	r11,r11,(LC8_LF0)&0xffff
  464  000015ec  afab0000	sw	(r29),r11
  465  000015f0  afaa0004	sw	4(r29),r10
  466  000015f4  8ca10010	lw	r1,16(r5)
  467  000015f8  00a10820	add	r1,r5,r1
  468  000015fc  90210000	lbu	r1,(r1)
  469  00001600  afa10008	sw	8(r29),r1
  470  00001604  0c0000e4	jal	_Printf
  471  00001608  54000000	nop; not filled.
  472  0000160c  8ca10010	lw	r1,16(r5)
  473  00001610  20230001	addi	r3,r1,#1
  474  00001614  00600035	movi2fp	f0,r3
  475  00001618  00e00835	movi2fp	f1,r7
  476  0000161c  0401000f	div	f0,f0,f1
  477  00001620  00001034	movfp2i	r2,f0
  478  00001624  50410001	slli	r1,r2,#0x1
  479  00001628  00220820	add	r1,r1,r2
  480  0000162c  50210002	slli	r1,r1,#0x2
  481  00001630  00220822	sub	r1,r1,r2
  482  00001634  00610822	sub	r1,r3,r1
  483  00001638  aca10010	sw	16(r5),r1
  484  0000163c  afa60000	sw	(r29),r6
  485  00001640  0c000120	jal	_lock_release
  486  00001644  54000000	nop; not filled.
  487  00001648  afa80000	sw	(r29),r8
  488  0000164c  0c0000f0	jal	_sem_signal
  489  00001650  54000000	nop; not filled.
  490  00001654  23bd0010	addi	r29,r29,#16
  491  00001658  20840001	addi	r4,r4,#1
  492  0000165c  7081000a	slei	r1,r4,#10
  493  00001660  1420ff60	bnez	r1,L43_LF0
  494  00001664  54000000	nop; not filled.
  495  00001668  8fa20000	lw	r2,0(r29)
  496  0000166c  8fa30004	lw	r3,4(r29)
  497  00001670  8fa40008	lw	r4,8(r29)
  498  00001674  8fa5000c	lw	r5,12(r29)
  499  00001678  8fa60010	lw	r6,16(r29)
  500  0000167c  8fa70014	lw	r7,20(r29)
  501  00001680  8fa80018	lw	r8,24(r29)
  502  00001684  8fa9001c	lw	r9,28(r29)
  503  00001688  8faa0020	lw	r10,32(r29)
  504  0000168c  8fab0024	lw	r11,36(r29)
  505  00001690  8fdffff8	lw	r31,-8(r30)
  506  00001694  001ee820	add	r29,r0,r30
  507  00001698  8fdefffc	lw	r30,-4(r30)
  508  0000169c  4be00000	jr	r31
  509  000016a0  54000000	nop
  510  000016a4          	.endproc _consumer
  511                      ;;;
  512                      ;;; Stub functions for DLX traps.
  513                      ;;;
  514                      ;;; Ethan L. Miller, 1999.  Released to the public domain.
  515                      ;;;
  516                      ;;; The traps such as Open and Close
  517                      ;;; (note the capital letters) are for use by user programs.  The traps
  518                      ;;; with names such as open and close (lower case) are for use by the OS.
  519                      ;;;
  522  000016a4          	.align 2
  524                      ;;; The following are the traps to be used by user-level programs
  525                      ;;;
  527  000016a4          	.align 2
  528  000016a4          	.proc _Open
  529  000016a4          	.global _Open
  530  000016a4          	_Open:
  531                      ;;; Note that trap #0x213 actually causes a trap vector in the OS of
  532                      ;;; 0x1213.  The same is true for other user traps.  Thus, a user trap
  533                      ;;; with trap #0x240 will result in a trap vector of 0x1240 in the OS.
  534  000016a4  44000213	trap	#0x213
  535  000016a8  4be00000	jr	r31
  536  000016ac  54000000	nop
  537  000016b0          	.endproc _Open
  539  000016b0          	.proc _Close
  540  000016b0          	.global _Close
  541  000016b0          	_Close:
  542  000016b0  44000214	trap	#0x214
  543  000016b4  4be00000	jr	r31
  544  000016b8  54000000	nop
  545  000016bc          	.endproc _Close
  547  000016bc          	.proc _Read
  548  000016bc          	.global _Read
  549  000016bc          	_Read:
  550  000016bc  44000210	trap	#0x210
  551  000016c0  4be00000	jr	r31
  552  000016c4  54000000	nop
  553  000016c8          	.endproc _Read
  555  000016c8          	.proc _Write
  556  000016c8          	.global _Write
  557  000016c8          	_Write:
  558  000016c8  44000211	trap	#0x211
  559  000016cc  4be00000	jr	r31
  560  000016d0  54000000	nop
  561  000016d4          	.endproc _Write
  563  000016d4          	.proc _Lseek
  564  000016d4          	.global _Lseek
  565  000016d4          	_Lseek:
  566  000016d4  44000212	trap	#0x212
  567  000016d8  4be00000	jr	r31
  568  000016dc  54000000	nop
  569  000016e0          	.endproc _Lseek
  571  000016e0          	.proc _Putchar
  572  000016e0          	.global _Putchar
  573  000016e0          	_Putchar:
  574  000016e0  44000280	trap	#0x280
  575  000016e4  4be00000	jr	r31
  576  000016e8  54000000	nop
  577  000016ec          	.endproc _Putchar
  579  000016ec          	.proc _Printf
  580  000016ec          	.global _Printf
  581  000016ec          	_Printf:
  582  000016ec  44000201	trap	#0x201
  583  000016f0  4be00000	jr	r31
  584  000016f4  54000000	nop
  585  000016f8          	.endproc _Printf
  587  000016f8          	.proc _getpid
  588  000016f8          	.global _getpid
  589  000016f8          	_getpid:
  590  000016f8  44000431	trap	#0x431
  591  000016fc  4be00000	jr	r31
  592  00001700  54000000	nop
  593  00001704          	.endproc _getpid
  595  00001704          	.proc _process_create
  596  00001704          	.global _process_create
  597  00001704          	_process_create:
  598  00001704  44000432	trap	#0x432
  599  00001708  4be00000	jr	r31
  600  0000170c  54000000	nop
  601  00001710          	.endproc _process_create
  603  00001710          	.proc _shmget
  604  00001710          	.global _shmget
  605  00001710          	_shmget:
  606  00001710  44000440	trap	#0x440
  607  00001714  4be00000	jr	r31
  608  00001718  54000000	nop
  609  0000171c          	.endproc _shmget
  611  0000171c          	.proc _shmat
  612  0000171c          	.global _shmat
  613  0000171c          	_shmat:
  614  0000171c  44000441	trap	#0x441
  615  00001720  4be00000	jr	r31
  616  00001724  54000000	nop
  617  00001728          	.endproc _shmat
  619  00001728          	.proc _sem_create
  620  00001728          	.global _sem_create
  621  00001728          	_sem_create:
  622  00001728  44000450	trap	#0x450
  623  0000172c  4be00000	jr	r31
  624  00001730  54000000	nop
  625  00001734          	.endproc _sem_create
  627  00001734          	.proc _sem_wait
  628  00001734          	.global _sem_wait
  629  00001734          	_sem_wait:
  630  00001734  44000451	trap	#0x451
  631  00001738  4be00000	jr	r31
  632  0000173c  54000000	nop
  633  00001740          	.endproc _sem_wait
  635  00001740          	.proc _sem_signal
  636  00001740          	.global _sem_signal
  637  00001740          	_sem_signal:
  638  00001740  44000452	trap	#0x452
  639  00001744  4be00000	jr	r31
  640  00001748  54000000	nop
  641  0000174c          	.endproc _sem_signal
  643  0000174c          	.proc _lock_create
  644  0000174c          	.global _lock_create
  645  0000174c          	_lock_create:
  646  0000174c  44000453	trap	#0x453
  647  00001750  4be00000	jr	r31
  648  00001754  54000000	nop
  649  00001758          	.endproc _lock_create
  651  00001758          	.proc _lock_acquire
  652  00001758          	.global _lock_acquire
  653  00001758          	_lock_acquire:
  654  00001758  44000454	trap	#0x454
  655  0000175c  4be00000	jr	r31
  656  00001760  54000000	nop
  657  00001764          	.endproc _lock_acquire
  659  00001764          	.proc _lock_release
  660  00001764          	.global _lock_release
  661  00001764          	_lock_release:
  662  00001764  44000455	trap	#0x455
  663  00001768  4be00000	jr	r31
  664  0000176c  54000000	nop
  665  00001770          	.endproc _lock_release
  667  00001770          	.proc _cond_create
  668  00001770          	.global _cond_create
  669  00001770          	_cond_create:
  670  00001770  44000456	trap	#0x456
  671  00001774  4be00000	jr	r31
  672  00001778  54000000	nop
  673  0000177c          	.endproc _cond_create
  675  0000177c          	.proc _cond_wait
  676  0000177c          	.global _cond_wait
  677  0000177c          	_cond_wait:
  678  0000177c  44000457	trap	#0x457
  679  00001780  4be00000	jr	r31
  680  00001784  54000000	nop
  681  00001788          	.endproc _cond_wait
  683  00001788          	.proc _cond_signal
  684  00001788          	.global _cond_signal
  685  00001788          	_cond_signal:
  686  00001788  44000458	trap	#0x458
  687  0000178c  4be00000	jr	r31
  688  00001790  54000000	nop
  689  00001794          	.endproc _cond_signal
  691  00001794          	.proc _cond_broadcast
  692  00001794          	.global _cond_broadcast
  693  00001794          	_cond_broadcast:
  694  00001794  44000455	trap	#0x455
  695  00001798  4be00000	jr	r31
  696  0000179c  54000000	nop
  697  000017a0          	.endproc _cond_broadcast
  699  000017a0          	.proc _Exit
  700  000017a0          	.global _Exit
  701  000017a0          	_Exit:
  702  000017a0  44000500	trap	#0x500
  703  000017a4  4be00000	jr	r31
  704  000017a8  54000000	nop
  705  000017ac          	.endproc _Exit
  706                      ; Compiled by GCC
  708  000017ac          	.align 2
  709  000017ac          	.proc _isspace
  710  000017ac          	.global _isspace
  711  000017ac          	_isspace:
  712                      ;  Function 'isspace'; 0 bytes of locals, 3 regs to save.
  713  000017ac  afbefffc	sw	-4(r29),r30; push fp
  714  000017b0  001df020	add	r30,r0,r29; fp = sp
  715  000017b4  afbffff8	sw	-8(r29),r31; push ret addr
  716  000017b8  2fbd0018	subui	r29,r29,#24; alloc local storage
  717  000017bc  afa20000	sw	0(r29),r2
  718  000017c0  afa30004	sw	4(r29),r3
  719  000017c4  afa40008	sw	8(r29),r4
  720  000017c8  83c20003	lb	r2,3(r30)
  721  000017cc  20010000	addi	r1,r0,#0
  722  000017d0  304300ff	andi	r3,r2,#0x00ff
  723  000017d4  60640020	seqi	r4,r3,#32
  724  000017d8  1480002c	bnez	r4,L3_LF2
  725  000017dc  54000000	nop; delay slot nop
  726  000017e0  304300ff	andi	r3,r2,#0x00ff
  727  000017e4  60640009	seqi	r4,r3,#9
  728  000017e8  1480001c	bnez	r4,L3_LF2
  729  000017ec  54000000	nop; delay slot nop
  730  000017f0  304300ff	andi	r3,r2,#0x00ff
  731  000017f4  6064000a	seqi	r4,r3,#10
  732  000017f8  1480000c	bnez	r4,L3_LF2
  733  000017fc  54000000	nop; delay slot nop
  734  00001800  08000008	j	L2_LF2
  735  00001804  54000000	nop; delay slot nop
  736  00001808          	L3_LF2:
  737  00001808  20010001	addi	r1,r0,#1
  738  0000180c          	L2_LF2:
  739  0000180c  08000004	j	L1_LF2
  740  00001810  54000000	nop; delay slot nop
  741  00001814          	L1_LF2:
  742  00001814  8fa20000	lw	r2,0(r29)
  743  00001818  8fa30004	lw	r3,4(r29)
  744  0000181c  8fa40008	lw	r4,8(r29)
  745  00001820  8fdffff8	lw	r31,-8(r30)
  746  00001824  001ee820	add	r29,r0,r30
  747  00001828  8fdefffc	lw	r30,-4(r30)
  748  0000182c  4be00000	jr	r31
  749  00001830  54000000	nop
  750  00001834          	.endproc _isspace
  751  00001834          	.align 2
  752  00001834          	.proc _isxdigit
  753  00001834          	.global _isxdigit
  754  00001834          	_isxdigit:
  755                      ;  Function 'isxdigit'; 0 bytes of locals, 3 regs to save.
  756  00001834  afbefffc	sw	-4(r29),r30; push fp
  757  00001838  001df020	add	r30,r0,r29; fp = sp
  758  0000183c  afbffff8	sw	-8(r29),r31; push ret addr
  759  00001840  2fbd0018	subui	r29,r29,#24; alloc local storage
  760  00001844  afa20000	sw	0(r29),r2
  761  00001848  afa30004	sw	4(r29),r3
  762  0000184c  afa40008	sw	8(r29),r4
  763  00001850  83c20003	lb	r2,3(r30)
  764  00001854  20010000	addi	r1,r0,#0
  765  00001858  304300ff	andi	r3,r2,#0x00ff
  766  0000185c  6c64002f	sgtui	r4,r3,#47
  767  00001860  1080001c	beqz	r4,L7_LF2
  768  00001864  54000000	nop; delay slot nop
  769  00001868  304300ff	andi	r3,r2,#0x00ff
  770  0000186c  70640039	sleui	r4,r3,#57
  771  00001870  1480005c	bnez	r4,L6_LF2
  772  00001874  54000000	nop; delay slot nop
  773  00001878  08000004	j	L7_LF2
  774  0000187c  54000000	nop; delay slot nop
  775  00001880          	L7_LF2:
  776  00001880  304300ff	andi	r3,r2,#0x00ff
  777  00001884  6c640060	sgtui	r4,r3,#96
  778  00001888  1080001c	beqz	r4,L8_LF2
  779  0000188c  54000000	nop; delay slot nop
  780  00001890  304300ff	andi	r3,r2,#0x00ff
  781  00001894  70640066	sleui	r4,r3,#102
  782  00001898  14800034	bnez	r4,L6_LF2
  783  0000189c  54000000	nop; delay slot nop
  784  000018a0  08000004	j	L8_LF2
  785  000018a4  54000000	nop; delay slot nop
  786  000018a8          	L8_LF2:
  787  000018a8  304300ff	andi	r3,r2,#0x00ff
  788  000018ac  6c640040	sgtui	r4,r3,#64
  789  000018b0  10800020	beqz	r4,L5_LF2
  790  000018b4  54000000	nop; delay slot nop
  791  000018b8  304300ff	andi	r3,r2,#0x00ff
  792  000018bc  70640041	sleui	r4,r3,#65
  793  000018c0  1480000c	bnez	r4,L6_LF2
  794  000018c4  54000000	nop; delay slot nop
  795  000018c8  08000008	j	L5_LF2
  796  000018cc  54000000	nop; delay slot nop
  797  000018d0          	L6_LF2:
  798  000018d0  20010001	addi	r1,r0,#1
  799  000018d4          	L5_LF2:
  800  000018d4  08000004	j	L4_LF2
  801  000018d8  54000000	nop; delay slot nop
  802  000018dc          	L4_LF2:
  803  000018dc  8fa20000	lw	r2,0(r29)
  804  000018e0  8fa30004	lw	r3,4(r29)
  805  000018e4  8fa40008	lw	r4,8(r29)
  806  000018e8  8fdffff8	lw	r31,-8(r30)
  807  000018ec  001ee820	add	r29,r0,r30
  808  000018f0  8fdefffc	lw	r30,-4(r30)
  809  000018f4  4be00000	jr	r31
  810  000018f8  54000000	nop
  811  000018fc          	.endproc _isxdigit
  812  000018fc          	.align 2
  813  000018fc          	.proc _dstrcpy
  814  000018fc          	.global _dstrcpy
  815  000018fc          	_dstrcpy:
  816                      ;  Function 'dstrcpy'; 8 bytes of locals, 2 regs to save.
  817  000018fc  afbefffc	sw	-4(r29),r30; push fp
  818  00001900  001df020	add	r30,r0,r29; fp = sp
  819  00001904  afbffff8	sw	-8(r29),r31; push ret addr
  820  00001908  2fbd0018	subui	r29,r29,#24; alloc local storage
  821  0000190c  afa20000	sw	0(r29),r2
  822  00001910  afa30004	sw	4(r29),r3
  823  00001914  8fc10000	lw	r1,(r30)
  824  00001918  afc1fff4	sw	-12(r30),r1
  825  0000191c          	L10_LF2:
  826  0000191c  8fc10000	lw	r1,(r30)
  827  00001920  20220001	addi	r2,r1,#1
  828  00001924  afc20000	sw	(r30),r2
  829  00001928  8fc20004	lw	r2,4(r30)
  830  0000192c  20430001	addi	r3,r2,#1
  831  00001930  afc30004	sw	4(r30),r3
  832  00001934  80420000	lb	r2,(r2)
  833  00001938  a0220000	sb	(r1),r2
  834  0000193c  a3c2fff3	sb	-13(r30),r2
  835  00001940          	L12_LF2:
  836  00001940  93c1fff3	lbu	r1,-13(r30)
  837  00001944  64220000	snei	r2,r1,#0
  838  00001948  1440000c	bnez	r2,L13_LF2
  839  0000194c  54000000	nop; delay slot nop
  840  00001950  0800000c	j	L11_LF2
  841  00001954  54000000	nop; delay slot nop
  842  00001958          	L13_LF2:
  843  00001958  0bffffc0	j	L10_LF2
  844  0000195c  54000000	nop; delay slot nop
  845  00001960          	L11_LF2:
  846  00001960  8fc1fff4	lw	r1,-12(r30)
  847  00001964  08000004	j	L9_LF2
  848  00001968  54000000	nop; delay slot nop
  849  0000196c          	L9_LF2:
  850  0000196c  8fa20000	lw	r2,0(r29)
  851  00001970  8fa30004	lw	r3,4(r29)
  852  00001974  8fdffff8	lw	r31,-8(r30)
  853  00001978  001ee820	add	r29,r0,r30
  854  0000197c  8fdefffc	lw	r30,-4(r30)
  855  00001980  4be00000	jr	r31
  856  00001984  54000000	nop
  857  00001988          	.endproc _dstrcpy
  858  00001988          	.align 2
  859  00001988          	.proc _dstrncpy
  860  00001988          	.global _dstrncpy
  861  00001988          	_dstrncpy:
  862                      ;  Function 'dstrncpy'; 8 bytes of locals, 2 regs to save.
  863  00001988  afbefffc	sw	-4(r29),r30; push fp
  864  0000198c  001df020	add	r30,r0,r29; fp = sp
  865  00001990  afbffff8	sw	-8(r29),r31; push ret addr
  866  00001994  2fbd0018	subui	r29,r29,#24; alloc local storage
  867  00001998  afa20000	sw	0(r29),r2
  868  0000199c  afa30004	sw	4(r29),r3
  869  000019a0  8fc10000	lw	r1,(r30)
  870  000019a4  afc1fff4	sw	-12(r30),r1
  871  000019a8          	L15_LF2:
  872  000019a8  8fc10008	lw	r1,8(r30)
  873  000019ac  2022ffff	addi	r2,r1,#-1
  874  000019b0  afc20008	sw	8(r30),r2
  875  000019b4  70210000	slei	r1,r1,#0
  876  000019b8  1020000c	beqz	r1,L18_LF2
  877  000019bc  54000000	nop; delay slot nop
  878  000019c0  08000048	j	L16_LF2
  879  000019c4  54000000	nop; delay slot nop
  880  000019c8          	L18_LF2:
  881  000019c8  8fc10000	lw	r1,(r30)
  882  000019cc  20220001	addi	r2,r1,#1
  883  000019d0  afc20000	sw	(r30),r2
  884  000019d4  8fc20004	lw	r2,4(r30)
  885  000019d8  20430001	addi	r3,r2,#1
  886  000019dc  afc30004	sw	4(r30),r3
  887  000019e0  80420000	lb	r2,(r2)
  888  000019e4  a0220000	sb	(r1),r2
  889  000019e8  a3c2fff3	sb	-13(r30),r2
  890  000019ec          	L17_LF2:
  891  000019ec  93c1fff3	lbu	r1,-13(r30)
  892  000019f0  64220000	snei	r2,r1,#0
  893  000019f4  1440000c	bnez	r2,L19_LF2
  894  000019f8  54000000	nop; delay slot nop
  895  000019fc  0800000c	j	L16_LF2
  896  00001a00  54000000	nop; delay slot nop
  897  00001a04          	L19_LF2:
  898  00001a04  0bffffa0	j	L15_LF2
  899  00001a08  54000000	nop; delay slot nop
  900  00001a0c          	L16_LF2:
  901  00001a0c  8fc1fff4	lw	r1,-12(r30)
  902  00001a10  08000004	j	L14_LF2
  903  00001a14  54000000	nop; delay slot nop
  904  00001a18          	L14_LF2:
  905  00001a18  8fa20000	lw	r2,0(r29)
  906  00001a1c  8fa30004	lw	r3,4(r29)
  907  00001a20  8fdffff8	lw	r31,-8(r30)
  908  00001a24  001ee820	add	r29,r0,r30
  909  00001a28  8fdefffc	lw	r30,-4(r30)
  910  00001a2c  4be00000	jr	r31
  911  00001a30  54000000	nop
  912  00001a34          	.endproc _dstrncpy
  913  00001a34          	.align 2
  914  00001a34          	.proc _dstrcat
  915  00001a34          	.global _dstrcat
  916  00001a34          	_dstrcat:
  917                      ;  Function 'dstrcat'; 8 bytes of locals, 1 regs to save.
  918  00001a34  afbefffc	sw	-4(r29),r30; push fp
  919  00001a38  001df020	add	r30,r0,r29; fp = sp
  920  00001a3c  afbffff8	sw	-8(r29),r31; push ret addr
  921  00001a40  2fbd0018	subui	r29,r29,#24; alloc local storage
  922  00001a44  afa20000	sw	0(r29),r2
  923  00001a48  8fc10000	lw	r1,(r30)
  924  00001a4c  afc1fff4	sw	-12(r30),r1
  925  00001a50          	L21_LF2:
  926  00001a50  8fc10000	lw	r1,(r30)
  927  00001a54  90220000	lbu	r2,(r1)
  928  00001a58  64410000	snei	r1,r2,#0
  929  00001a5c  1420000c	bnez	r1,L23_LF2
  930  00001a60  54000000	nop; delay slot nop
  931  00001a64  0800001c	j	L22_LF2
  932  00001a68  54000000	nop; delay slot nop
  933  00001a6c          	L23_LF2:
  934  00001a6c  8fc20000	lw	r2,(r30)
  935  00001a70  20410001	addi	r1,r2,#1
  936  00001a74  00011020	add	r2,r0,r1
  937  00001a78  afc20000	sw	(r30),r2
  938  00001a7c  0bffffd0	j	L21_LF2
  939  00001a80  54000000	nop; delay slot nop
  940  00001a84          	L22_LF2:
  941  00001a84  23bdfff8	addi	r29,r29,#-8
  942  00001a88  001d0820	add	r1,r0,r29
  943  00001a8c  8fc20000	lw	r2,(r30)
  944  00001a90  ac220000	sw	(r1),r2
  945  00001a94  8fc20004	lw	r2,4(r30)
  946  00001a98  ac220004	sw	4(r1),r2
  947  00001a9c  0ffffe5c	jal	_dstrcpy
  948  00001aa0  54000000	nop; delay slot nop
  949  00001aa4  23bd0008	addi	r29,r29,#8
  950  00001aa8  8fc1fff4	lw	r1,-12(r30)
  951  00001aac  08000004	j	L20_LF2
  952  00001ab0  54000000	nop; delay slot nop
  953  00001ab4          	L20_LF2:
  954  00001ab4  8fa20000	lw	r2,0(r29)
  955  00001ab8  8fdffff8	lw	r31,-8(r30)
  956  00001abc  001ee820	add	r29,r0,r30
  957  00001ac0  8fdefffc	lw	r30,-4(r30)
  958  00001ac4  4be00000	jr	r31
  959  00001ac8  54000000	nop
  960  00001acc          	.endproc _dstrcat
  961  00001acc          	.align 2
  962  00001acc          	.proc _dstrncmp
  963  00001acc          	.global _dstrncmp
  964  00001acc          	_dstrncmp:
  965                      ;  Function 'dstrncmp'; 8 bytes of locals, 2 regs to save.
  966  00001acc  afbefffc	sw	-4(r29),r30; push fp
  967  00001ad0  001df020	add	r30,r0,r29; fp = sp
  968  00001ad4  afbffff8	sw	-8(r29),r31; push ret addr
  969  00001ad8  2fbd0018	subui	r29,r29,#24; alloc local storage
  970  00001adc  afa20000	sw	0(r29),r2
  971  00001ae0  afa30004	sw	4(r29),r3
  972  00001ae4  54000000	nop
  973  00001ae8  20010000	addi	r1,r0,#0
  974  00001aec  afc1fff4	sw	-12(r30),r1
  975  00001af0          	L25_LF2:
  976  00001af0  8fc1fff4	lw	r1,-12(r30)
  977  00001af4  8fc20008	lw	r2,8(r30)
  978  00001af8  0022082a	slt	r1,r1,r2
  979  00001afc  1420000c	bnez	r1,L28_LF2
  980  00001b00  54000000	nop; delay slot nop
  981  00001b04  08000088	j	L26_LF2
  982  00001b08  54000000	nop; delay slot nop
  983  00001b0c          	L28_LF2:
  984  00001b0c  8fc10004	lw	r1,4(r30)
  985  00001b10  90220000	lbu	r2,(r1)
  986  00001b14  64410000	snei	r1,r2,#0
  987  00001b18  14200018	bnez	r1,L29_LF2
  988  00001b1c  54000000	nop; delay slot nop
  989  00001b20  20010000	addi	r1,r0,#0
  990  00001b24  080000d8	j	L24_LF2
  991  00001b28  54000000	nop; delay slot nop
  992  00001b2c  08000028	j	L30_LF2
  993  00001b30  54000000	nop; delay slot nop
  994  00001b34          	L29_LF2:
  995  00001b34  8fc10000	lw	r1,(r30)
  996  00001b38  8fc20004	lw	r2,4(r30)
  997  00001b3c  90210000	lbu	r1,(r1)
  998  00001b40  90420000	lbu	r2,(r2)
  999  00001b44  00220829	sne	r1,r1,r2
 1000  00001b48  1020000c	beqz	r1,L30_LF2
 1001  00001b4c  54000000	nop; delay slot nop
 1002  00001b50  0800003c	j	L26_LF2
 1003  00001b54  54000000	nop; delay slot nop
 1004  00001b58          	L31_LF2:
 1005  00001b58          	L30_LF2:
 1006  00001b58  8fc20000	lw	r2,(r30)
 1007  00001b5c  20410001	addi	r1,r2,#1
 1008  00001b60  00011020	add	r2,r0,r1
 1009  00001b64  afc20000	sw	(r30),r2
 1010  00001b68  8fc20004	lw	r2,4(r30)
 1011  00001b6c  20410001	addi	r1,r2,#1
 1012  00001b70  00011020	add	r2,r0,r1
 1013  00001b74  afc20004	sw	4(r30),r2
 1014  00001b78          	L27_LF2:
 1015  00001b78  8fc2fff4	lw	r2,-12(r30)
 1016  00001b7c  20410001	addi	r1,r2,#1
 1017  00001b80  00011020	add	r2,r0,r1
 1018  00001b84  afc2fff4	sw	-12(r30),r2
 1019  00001b88  0bffff64	j	L25_LF2
 1020  00001b8c  54000000	nop; delay slot nop
 1021  00001b90          	L26_LF2:
 1022  00001b90  8fc1fff4	lw	r1,-12(r30)
 1023  00001b94  8fc20008	lw	r2,8(r30)
 1024  00001b98  00220828	seq	r1,r1,r2
 1025  00001b9c  10200018	beqz	r1,L32_LF2
 1026  00001ba0  54000000	nop; delay slot nop
 1027  00001ba4  20010000	addi	r1,r0,#0
 1028  00001ba8  08000054	j	L24_LF2
 1029  00001bac  54000000	nop; delay slot nop
 1030  00001bb0  0800004c	j	L33_LF2
 1031  00001bb4  54000000	nop; delay slot nop
 1032  00001bb8          	L32_LF2:
 1033  00001bb8  8fc20000	lw	r2,(r30)
 1034  00001bbc  90410000	lbu	r1,(r2)
 1035  00001bc0  8fc20004	lw	r2,4(r30)
 1036  00001bc4  90430000	lbu	r3,(r2)
 1037  00001bc8  00230822	sub	r1,r1,r3
 1038  00001bcc  74220000	sgei	r2,r1,#0
 1039  00001bd0  10400020	beqz	r2,L34_LF2
 1040  00001bd4  54000000	nop; delay slot nop
 1041  00001bd8  8fc10000	lw	r1,(r30)
 1042  00001bdc  8fc20004	lw	r2,4(r30)
 1043  00001be0  90210000	lbu	r1,(r1)
 1044  00001be4  90420000	lbu	r2,(r2)
 1045  00001be8  00220829	sne	r1,r1,r2
 1046  00001bec  08000008	j	L35_LF2
 1047  00001bf0  54000000	nop; delay slot nop
 1048  00001bf4          	L34_LF2:
 1049  00001bf4  2001ffff	addi	r1,r0,#-1
 1050  00001bf8          	L35_LF2:
 1051  00001bf8  08000004	j	L24_LF2
 1052  00001bfc  54000000	nop; delay slot nop
 1053  00001c00          	L33_LF2:
 1054  00001c00          	L24_LF2:
 1055  00001c00  8fa20000	lw	r2,0(r29)
 1056  00001c04  8fa30004	lw	r3,4(r29)
 1057  00001c08  8fdffff8	lw	r31,-8(r30)
 1058  00001c0c  001ee820	add	r29,r0,r30
 1059  00001c10  8fdefffc	lw	r30,-4(r30)
 1060  00001c14  4be00000	jr	r31
 1061  00001c18  54000000	nop
 1062  00001c1c          	.endproc _dstrncmp
 1063  00001c1c          	.align 2
 1064  00001c1c          	.proc _dstrlen
 1065  00001c1c          	.global _dstrlen
 1066  00001c1c          	_dstrlen:
 1067                      ;  Function 'dstrlen'; 8 bytes of locals, 1 regs to save.
 1068  00001c1c  afbefffc	sw	-4(r29),r30; push fp
 1069  00001c20  001df020	add	r30,r0,r29; fp = sp
 1070  00001c24  afbffff8	sw	-8(r29),r31; push ret addr
 1071  00001c28  2fbd0018	subui	r29,r29,#24; alloc local storage
 1072  00001c2c  afa20000	sw	0(r29),r2
 1073  00001c30  20010000	addi	r1,r0,#0
 1074  00001c34  afc1fff4	sw	-12(r30),r1
 1075  00001c38          	L37_LF2:
 1076  00001c38  8fc10000	lw	r1,(r30)
 1077  00001c3c  20220001	addi	r2,r1,#1
 1078  00001c40  afc20000	sw	(r30),r2
 1079  00001c44  90210000	lbu	r1,(r1)
 1080  00001c48  64220000	snei	r2,r1,#0
 1081  00001c4c  1440000c	bnez	r2,L39_LF2
 1082  00001c50  54000000	nop; delay slot nop
 1083  00001c54  0800001c	j	L38_LF2
 1084  00001c58  54000000	nop; delay slot nop
 1085  00001c5c          	L39_LF2:
 1086  00001c5c  8fc2fff4	lw	r2,-12(r30)
 1087  00001c60  20410001	addi	r1,r2,#1
 1088  00001c64  00011020	add	r2,r0,r1
 1089  00001c68  afc2fff4	sw	-12(r30),r2
 1090  00001c6c  0bffffc8	j	L37_LF2
 1091  00001c70  54000000	nop; delay slot nop
 1092  00001c74          	L38_LF2:
 1093  00001c74  8fc1fff4	lw	r1,-12(r30)
 1094  00001c78  08000004	j	L36_LF2
 1095  00001c7c  54000000	nop; delay slot nop
 1096  00001c80          	L36_LF2:
 1097  00001c80  8fa20000	lw	r2,0(r29)
 1098  00001c84  8fdffff8	lw	r31,-8(r30)
 1099  00001c88  001ee820	add	r29,r0,r30
 1100  00001c8c  8fdefffc	lw	r30,-4(r30)
 1101  00001c90  4be00000	jr	r31
 1102  00001c94  54000000	nop
 1103  00001c98          	.endproc _dstrlen
 1104  00001c98          	.align 2
 1105  00001c98          	.proc _dstrstr
 1106  00001c98          	.global _dstrstr
 1107  00001c98          	_dstrstr:
 1108                      ;  Function 'dstrstr'; 8 bytes of locals, 1 regs to save.
 1109  00001c98  afbefffc	sw	-4(r29),r30; push fp
 1110  00001c9c  001df020	add	r30,r0,r29; fp = sp
 1111  00001ca0  afbffff8	sw	-8(r29),r31; push ret addr
 1112  00001ca4  2fbd0018	subui	r29,r29,#24; alloc local storage
 1113  00001ca8  afa20000	sw	0(r29),r2
 1114  00001cac  23bdfff8	addi	r29,r29,#-8
 1115  00001cb0  001d0820	add	r1,r0,r29
 1116  00001cb4  8fc20004	lw	r2,4(r30)
 1117  00001cb8  ac220000	sw	(r1),r2
 1118  00001cbc  0fffff5c	jal	_dstrlen
 1119  00001cc0  54000000	nop; delay slot nop
 1120  00001cc4  23bd0008	addi	r29,r29,#8
 1121  00001cc8  afc1fff4	sw	-12(r30),r1
 1122  00001ccc          	L41_LF2:
 1123  00001ccc  8fc10000	lw	r1,(r30)
 1124  00001cd0  90220000	lbu	r2,(r1)
 1125  00001cd4  64410000	snei	r1,r2,#0
 1126  00001cd8  1420000c	bnez	r1,L43_LF2
 1127  00001cdc  54000000	nop; delay slot nop
 1128  00001ce0  08000060	j	L42_LF2
 1129  00001ce4  54000000	nop; delay slot nop
 1130  00001ce8          	L43_LF2:
 1131  00001ce8  23bdfff0	addi	r29,r29,#-16
 1132  00001cec  001d0820	add	r1,r0,r29
 1133  00001cf0  8fc20000	lw	r2,(r30)
 1134  00001cf4  ac220000	sw	(r1),r2
 1135  00001cf8  8fc20004	lw	r2,4(r30)
 1136  00001cfc  ac220004	sw	4(r1),r2
 1137  00001d00  8fc2fff4	lw	r2,-12(r30)
 1138  00001d04  ac220008	sw	8(r1),r2
 1139  00001d08  0ffffdc0	jal	_dstrncmp
 1140  00001d0c  54000000	nop; delay slot nop
 1141  00001d10  23bd0010	addi	r29,r29,#16
 1142  00001d14  64220000	snei	r2,r1,#0
 1143  00001d18  14400010	bnez	r2,L44_LF2
 1144  00001d1c  54000000	nop; delay slot nop
 1145  00001d20  8fc10000	lw	r1,(r30)
 1146  00001d24  08000028	j	L40_LF2
 1147  00001d28  54000000	nop; delay slot nop
 1148  00001d2c          	L44_LF2:
 1149  00001d2c  8fc20000	lw	r2,(r30)
 1150  00001d30  20410001	addi	r1,r2,#1
 1151  00001d34  00011020	add	r2,r0,r1
 1152  00001d38  afc20000	sw	(r30),r2
 1153  00001d3c  0bffff8c	j	L41_LF2
 1154  00001d40  54000000	nop; delay slot nop
 1155  00001d44          	L42_LF2:
 1156  00001d44  20010000	addi	r1,r0,#0
 1157  00001d48  08000004	j	L40_LF2
 1158  00001d4c  54000000	nop; delay slot nop
 1159  00001d50          	L40_LF2:
 1160  00001d50  8fa20000	lw	r2,0(r29)
 1161  00001d54  8fdffff8	lw	r31,-8(r30)
 1162  00001d58  001ee820	add	r29,r0,r30
 1163  00001d5c  8fdefffc	lw	r30,-4(r30)
 1164  00001d60  4be00000	jr	r31
 1165  00001d64  54000000	nop
 1166  00001d68          	.endproc _dstrstr
 1167  00001d68          	.align 2
 1168  00001d68          	.proc _dmindex
 1169  00001d68          	.global _dmindex
 1170  00001d68          	_dmindex:
 1171                      ;  Function 'dmindex'; 8 bytes of locals, 1 regs to save.
 1172  00001d68  afbefffc	sw	-4(r29),r30; push fp
 1173  00001d6c  001df020	add	r30,r0,r29; fp = sp
 1174  00001d70  afbffff8	sw	-8(r29),r31; push ret addr
 1175  00001d74  2fbd0018	subui	r29,r29,#24; alloc local storage
 1176  00001d78  afa20000	sw	0(r29),r2
 1177  00001d7c  54000000	nop
 1178  00001d80          	L46_LF2:
 1179  00001d80  8fc10000	lw	r1,(r30)
 1180  00001d84  90220000	lbu	r2,(r1)
 1181  00001d88  64410000	snei	r1,r2,#0
 1182  00001d8c  1420000c	bnez	r1,L48_LF2
 1183  00001d90  54000000	nop; delay slot nop
 1184  00001d94  08000070	j	L47_LF2
 1185  00001d98  54000000	nop; delay slot nop
 1186  00001d9c          	L48_LF2:
 1187  00001d9c  8fc10004	lw	r1,4(r30)
 1188  00001da0  afc1fff4	sw	-12(r30),r1
 1189  00001da4          	L49_LF2:
 1190  00001da4  8fc1fff4	lw	r1,-12(r30)
 1191  00001da8  90220000	lbu	r2,(r1)
 1192  00001dac  64410000	snei	r1,r2,#0
 1193  00001db0  1420000c	bnez	r1,L52_LF2
 1194  00001db4  54000000	nop; delay slot nop
 1195  00001db8  08000044	j	L50_LF2
 1196  00001dbc  54000000	nop; delay slot nop
 1197  00001dc0          	L52_LF2:
 1198  00001dc0  8fc10000	lw	r1,(r30)
 1199  00001dc4  8fc2fff4	lw	r2,-12(r30)
 1200  00001dc8  90210000	lbu	r1,(r1)
 1201  00001dcc  90420000	lbu	r2,(r2)
 1202  00001dd0  00220828	seq	r1,r1,r2
 1203  00001dd4  10200010	beqz	r1,L51_LF2
 1204  00001dd8  54000000	nop; delay slot nop
 1205  00001ddc  8fc10000	lw	r1,(r30)
 1206  00001de0  08000030	j	L45_LF2
 1207  00001de4  54000000	nop; delay slot nop
 1208  00001de8          	L53_LF2:
 1209  00001de8          	L51_LF2:
 1210  00001de8  8fc2fff4	lw	r2,-12(r30)
 1211  00001dec  20410001	addi	r1,r2,#1
 1212  00001df0  00011020	add	r2,r0,r1
 1213  00001df4  afc2fff4	sw	-12(r30),r2
 1214  00001df8  0bffffa8	j	L49_LF2
 1215  00001dfc  54000000	nop; delay slot nop
 1216  00001e00          	L50_LF2:
 1217  00001e00  0bffff7c	j	L46_LF2
 1218  00001e04  54000000	nop; delay slot nop
 1219  00001e08          	L47_LF2:
 1220  00001e08  20010000	addi	r1,r0,#0
 1221  00001e0c  08000004	j	L45_LF2
 1222  00001e10  54000000	nop; delay slot nop
 1223  00001e14          	L45_LF2:
 1224  00001e14  8fa20000	lw	r2,0(r29)
 1225  00001e18  8fdffff8	lw	r31,-8(r30)
 1226  00001e1c  001ee820	add	r29,r0,r30
 1227  00001e20  8fdefffc	lw	r30,-4(r30)
 1228  00001e24  4be00000	jr	r31
 1229  00001e28  54000000	nop
 1230  00001e2c          	.endproc _dmindex
 1231  00001e2c          	.align 2
 1232  00001e2c          	.proc _dindex
 1233  00001e2c          	.global _dindex
 1234  00001e2c          	_dindex:
 1235                      ;  Function 'dindex'; 0 bytes of locals, 1 regs to save.
 1236  00001e2c  afbefffc	sw	-4(r29),r30; push fp
 1237  00001e30  001df020	add	r30,r0,r29; fp = sp
 1238  00001e34  afbffff8	sw	-8(r29),r31; push ret addr
 1239  00001e38  2fbd0010	subui	r29,r29,#16; alloc local storage
 1240  00001e3c  afa20000	sw	0(r29),r2
 1241  00001e40  54000000	nop
 1242  00001e44          	L55_LF2:
 1243  00001e44  8fc10000	lw	r1,(r30)
 1244  00001e48  90220000	lbu	r2,(r1)
 1245  00001e4c  64410000	snei	r1,r2,#0
 1246  00001e50  1420000c	bnez	r1,L57_LF2
 1247  00001e54  54000000	nop; delay slot nop
 1248  00001e58  08000040	j	L56_LF2
 1249  00001e5c  54000000	nop; delay slot nop
 1250  00001e60          	L57_LF2:
 1251  00001e60  8fc10000	lw	r1,(r30)
 1252  00001e64  90220000	lbu	r2,(r1)
 1253  00001e68  8fc10004	lw	r1,4(r30)
 1254  00001e6c  00411028	seq	r2,r2,r1
 1255  00001e70  10400010	beqz	r2,L58_LF2
 1256  00001e74  54000000	nop; delay slot nop
 1257  00001e78  8fc10000	lw	r1,(r30)
 1258  00001e7c  08000028	j	L54_LF2
 1259  00001e80  54000000	nop; delay slot nop
 1260  00001e84          	L58_LF2:
 1261  00001e84  8fc20000	lw	r2,(r30)
 1262  00001e88  20410001	addi	r1,r2,#1
 1263  00001e8c  00011020	add	r2,r0,r1
 1264  00001e90  afc20000	sw	(r30),r2
 1265  00001e94  0bffffac	j	L55_LF2
 1266  00001e98  54000000	nop; delay slot nop
 1267  00001e9c          	L56_LF2:
 1268  00001e9c  20010000	addi	r1,r0,#0
 1269  00001ea0  08000004	j	L54_LF2
 1270  00001ea4  54000000	nop; delay slot nop
 1271  00001ea8          	L54_LF2:
 1272  00001ea8  8fa20000	lw	r2,0(r29)
 1273  00001eac  8fdffff8	lw	r31,-8(r30)
 1274  00001eb0  001ee820	add	r29,r0,r30
 1275  00001eb4  8fdefffc	lw	r30,-4(r30)
 1276  00001eb8  4be00000	jr	r31
 1277  00001ebc  54000000	nop
 1278  00001ec0          	.endproc _dindex
 1279  00001ec0          	.align 2
 1280  00001ec0          	.proc _ditoa
 1281  00001ec0          	.global _ditoa
 1282  00001ec0          	_ditoa:
 1283                      ;  Function 'ditoa'; 8 bytes of locals, 2 regs to save.
 1284  00001ec0  afbefffc	sw	-4(r29),r30; push fp
 1285  00001ec4  001df020	add	r30,r0,r29; fp = sp
 1286  00001ec8  afbffff8	sw	-8(r29),r31; push ret addr
 1287  00001ecc  2fbd0018	subui	r29,r29,#24; alloc local storage
 1288  00001ed0  afa20000	sw	0(r29),r2
 1289  00001ed4  afa30004	sw	4(r29),r3
 1290  00001ed8  8fc10000	lw	r1,(r30)
 1291  00001edc  68220000	slti	r2,r1,#0
 1292  00001ee0  1040002c	beqz	r2,L60_LF2
 1293  00001ee4  54000000	nop; delay slot nop
 1294  00001ee8  8fc10004	lw	r1,4(r30)
 1295  00001eec  20220001	addi	r2,r1,#1
 1296  00001ef0  afc20004	sw	4(r30),r2
 1297  00001ef4  2002002d	addi	r2,r0,(#0x2d)&0xff
 1298  00001ef8  a0220000	sb	(r1),r2
 1299  00001efc  8fc10000	lw	r1,(r30)
 1300  00001f00  00011022	sub	r2,r0,r1
 1301  00001f04  afc20000	sw	(r30),r2
 1302  00001f08  08000118	j	L61_LF2
 1303  00001f0c  54000000	nop; delay slot nop
 1304  00001f10          	L60_LF2:
 1305  00001f10  8fc10000	lw	r1,(r30)
 1306  00001f14  64220000	snei	r2,r1,#0
 1307  00001f18  14400020	bnez	r2,L62_LF2
 1308  00001f1c  54000000	nop; delay slot nop
 1309  00001f20  8fc10004	lw	r1,4(r30)
 1310  00001f24  20220001	addi	r2,r1,#1
 1311  00001f28  afc20004	sw	4(r30),r2
 1312  00001f2c  20020030	addi	r2,r0,(#0x30)&0xff
 1313  00001f30  a0220000	sb	(r1),r2
 1314  00001f34  080000ec	j	L61_LF2
 1315  00001f38  54000000	nop; delay slot nop
 1316  00001f3c          	L62_LF2:
 1317  00001f3c  20010001	addi	r1,r0,#1
 1318  00001f40  afc1fff4	sw	-12(r30),r1
 1319  00001f44          	L64_LF2:
 1320  00001f44  8fc1fff4	lw	r1,-12(r30)
 1321  00001f48  8fc20000	lw	r2,(r30)
 1322  00001f4c  0022082c	sle	r1,r1,r2
 1323  00001f50  1420000c	bnez	r1,L66_LF2
 1324  00001f54  54000000	nop; delay slot nop
 1325  00001f58  08000024	j	L65_LF2
 1326  00001f5c  54000000	nop; delay slot nop
 1327  00001f60          	L67_LF2:
 1328  00001f60          	L66_LF2:
 1329  00001f60  8fc1fff4	lw	r1,-12(r30)
 1330  00001f64  00011820	add	r3,r0,r1
 1331  00001f68  50620002	slli	r2,r3,#0x2
 1332  00001f6c  00411020	add	r2,r2,r1
 1333  00001f70  50410001	slli	r1,r2,#0x1
 1334  00001f74  afc1fff4	sw	-12(r30),r1
 1335  00001f78  0bffffc8	j	L64_LF2
 1336  00001f7c  54000000	nop; delay slot nop
 1337  00001f80          	L65_LF2:
 1338  00001f80  54000000	nop
 1339  00001f84          	L68_LF2:
 1340  00001f84  8fc1fff4	lw	r1,-12(r30)
 1341  00001f88  2002000a	addi	r2,r0,#10
 1342  00001f8c  00200035	movi2fp	f0,r1
 1343  00001f90  00400835	movi2fp	f1,r2
 1344  00001f94  0401000f	div	f0,f0,f1
 1345  00001f98  00000834	movfp2i	r1,f0
 1346  00001f9c  afc1fff4	sw	-12(r30),r1
 1347  00001fa0  8fc10004	lw	r1,4(r30)
 1348  00001fa4  20220001	addi	r2,r1,#1
 1349  00001fa8  afc20004	sw	4(r30),r2
 1350  00001fac  8fc20000	lw	r2,(r30)
 1351  00001fb0  8fc3fff4	lw	r3,-12(r30)
 1352  00001fb4  00400035	movi2fp	f0,r2
 1353  00001fb8  00600835	movi2fp	f1,r3
 1354  00001fbc  0401000f	div	f0,f0,f1
 1355  00001fc0  00001034	movfp2i	r2,f0
 1356  00001fc4  00021820	add	r3,r0,r2
 1357  00001fc8  20620030	addi	r2,r3,#48
 1358  00001fcc  a0220000	sb	(r1),r2
 1359  00001fd0  8fc10000	lw	r1,(r30)
 1360  00001fd4  8fc3fff4	lw	r3,-12(r30)
 1361  00001fd8  00200035	movi2fp	f0,r1
 1362  00001fdc  00600835	movi2fp	f1,r3
 1363  00001fe0  0401000f	div	f0,f0,f1
 1364  00001fe4  00001034	movfp2i	r2,f0
 1365  00001fe8  8fc3fff4	lw	r3,-12(r30)
 1366  00001fec  00400035	movi2fp	f0,r2
 1367  00001ff0  00600835	movi2fp	f1,r3
 1368  00001ff4  0401000e	mult	f0,f0,f1
 1369  00001ff8  00001034	movfp2i	r2,f0
 1370  00001ffc  00220822	sub	r1,r1,r2
 1371  00002000  afc10000	sw	(r30),r1
 1372  00002004          	L70_LF2:
 1373  00002004  8fc1fff4	lw	r1,-12(r30)
 1374  00002008  6c220001	sgti	r2,r1,#1
 1375  0000200c  1440000c	bnez	r2,L71_LF2
 1376  00002010  54000000	nop; delay slot nop
 1377  00002014  0800000c	j	L61_LF2
 1378  00002018  54000000	nop; delay slot nop
 1379  0000201c          	L71_LF2:
 1380  0000201c  0bffff64	j	L68_LF2
 1381  00002020  54000000	nop; delay slot nop
 1382  00002024          	L69_LF2:
 1383  00002024          	L63_LF2:
 1384  00002024          	L61_LF2:
 1385  00002024  8fc10004	lw	r1,4(r30)
 1386  00002028  20020000	addi	r2,r0,(#0x0)&0xff
 1387  0000202c  a0220000	sb	(r1),r2
 1388  00002030          	L59_LF2:
 1389  00002030  8fa20000	lw	r2,0(r29)
 1390  00002034  8fa30004	lw	r3,4(r29)
 1391  00002038  8fdffff8	lw	r31,-8(r30)
 1392  0000203c  001ee820	add	r29,r0,r30
 1393  00002040  8fdefffc	lw	r30,-4(r30)
 1394  00002044  4be00000	jr	r31
 1395  00002048  54000000	nop
 1396  0000204c          	.endproc _ditoa
 1397  0000204c          	.align 2
 1398  0000204c          	.proc _dstrtol
 1399  0000204c          	.global _dstrtol
 1400  0000204c          	_dstrtol:
 1401                      ;  Function 'dstrtol'; 16 bytes of locals, 1 regs to save.
 1402  0000204c  afbefffc	sw	-4(r29),r30; push fp
 1403  00002050  001df020	add	r30,r0,r29; fp = sp
 1404  00002054  afbffff8	sw	-8(r29),r31; push ret addr
 1405  00002058  2fbd0020	subui	r29,r29,#32; alloc local storage
 1406  0000205c  afa20000	sw	0(r29),r2
 1407  00002060  20010000	addi	r1,r0,#0
 1408  00002064  afc1fff4	sw	-12(r30),r1
 1409  00002068          	L73_LF2:
 1410  00002068  8fc10000	lw	r1,(r30)
 1411  0000206c  90220000	lbu	r2,(r1)
 1412  00002070  60410020	seqi	r1,r2,#32
 1413  00002074  14200034	bnez	r1,L75_LF2
 1414  00002078  54000000	nop; delay slot nop
 1415  0000207c  8fc10000	lw	r1,(r30)
 1416  00002080  90220000	lbu	r2,(r1)
 1417  00002084  60410009	seqi	r1,r2,#9
 1418  00002088  14200020	bnez	r1,L75_LF2
 1419  0000208c  54000000	nop; delay slot nop
 1420  00002090  8fc10000	lw	r1,(r30)
 1421  00002094  90220000	lbu	r2,(r1)
 1422  00002098  6041000a	seqi	r1,r2,#10
 1423  0000209c  1420000c	bnez	r1,L75_LF2
 1424  000020a0  54000000	nop; delay slot nop
 1425  000020a4  0800001c	j	L74_LF2
 1426  000020a8  54000000	nop; delay slot nop
 1427  000020ac          	L75_LF2:
 1428  000020ac  8fc20000	lw	r2,(r30)
 1429  000020b0  20410001	addi	r1,r2,#1
 1430  000020b4  00011020	add	r2,r0,r1
 1431  000020b8  afc20000	sw	(r30),r2
 1432  000020bc  0bffffa8	j	L73_LF2
 1433  000020c0  54000000	nop; delay slot nop
 1434  000020c4          	L74_LF2:
 1435  000020c4  8fc10004	lw	r1,4(r30)
 1436  000020c8  64220000	snei	r2,r1,#0
 1437  000020cc  10400010	beqz	r2,L76_LF2
 1438  000020d0  54000000	nop; delay slot nop
 1439  000020d4  8fc10004	lw	r1,4(r30)
 1440  000020d8  8fc20000	lw	r2,(r30)
 1441  000020dc  ac220000	sw	(r1),r2
 1442  000020e0          	L76_LF2:
 1443  000020e0  8fc10000	lw	r1,(r30)
 1444  000020e4  90220000	lbu	r2,(r1)
 1445  000020e8  64410000	snei	r1,r2,#0
 1446  000020ec  14200010	bnez	r1,L77_LF2
 1447  000020f0  54000000	nop; delay slot nop
 1448  000020f4  8fc1fff4	lw	r1,-12(r30)
 1449  000020f8  08000294	j	L72_LF2
 1450  000020fc  54000000	nop; delay slot nop
 1451  00002100          	L77_LF2:
 1452  00002100  8fc10000	lw	r1,(r30)
 1453  00002104  90220000	lbu	r2,(r1)
 1454  00002108  6041002d	seqi	r1,r2,#45
 1455  0000210c  10200024	beqz	r1,L78_LF2
 1456  00002110  54000000	nop; delay slot nop
 1457  00002114  2001ffff	addi	r1,r0,#-1
 1458  00002118  afc1ffec	sw	-20(r30),r1
 1459  0000211c  8fc20000	lw	r2,(r30)
 1460  00002120  20410001	addi	r1,r2,#1
 1461  00002124  00011020	add	r2,r0,r1
 1462  00002128  afc20000	sw	(r30),r2
 1463  0000212c  0800000c	j	L79_LF2
 1464  00002130  54000000	nop; delay slot nop
 1465  00002134          	L78_LF2:
 1466  00002134  20010001	addi	r1,r0,#1
 1467  00002138  afc1ffec	sw	-20(r30),r1
 1468  0000213c          	L79_LF2:
 1469  0000213c  8fc10008	lw	r1,8(r30)
 1470  00002140  64220000	snei	r2,r1,#0
 1471  00002144  14400090	bnez	r2,L80_LF2
 1472  00002148  54000000	nop; delay slot nop
 1473  0000214c  8fc10000	lw	r1,(r30)
 1474  00002150  90220000	lbu	r2,(r1)
 1475  00002154  60410030	seqi	r1,r2,#48
 1476  00002158  10200074	beqz	r1,L81_LF2
 1477  0000215c  54000000	nop; delay slot nop
 1478  00002160  8fc20000	lw	r2,(r30)
 1479  00002164  20410001	addi	r1,r2,#1
 1480  00002168  00011020	add	r2,r0,r1
 1481  0000216c  afc20000	sw	(r30),r2
 1482  00002170  8fc10000	lw	r1,(r30)
 1483  00002174  90220000	lbu	r2,(r1)
 1484  00002178  60410078	seqi	r1,r2,#120
 1485  0000217c  14200020	bnez	r1,L83_LF2
 1486  00002180  54000000	nop; delay slot nop
 1487  00002184  8fc10000	lw	r1,(r30)
 1488  00002188  90220000	lbu	r2,(r1)
 1489  0000218c  60410058	seqi	r1,r2,#88
 1490  00002190  1420000c	bnez	r1,L83_LF2
 1491  00002194  54000000	nop; delay slot nop
 1492  00002198  08000024	j	L82_LF2
 1493  0000219c  54000000	nop; delay slot nop
 1494  000021a0          	L83_LF2:
 1495  000021a0  20010010	addi	r1,r0,#16
 1496  000021a4  afc10008	sw	8(r30),r1
 1497  000021a8  8fc20000	lw	r2,(r30)
 1498  000021ac  20410001	addi	r1,r2,#1
 1499  000021b0  00011020	add	r2,r0,r1
 1500  000021b4  afc20000	sw	(r30),r2
 1501  000021b8  0800000c	j	L84_LF2
 1502  000021bc  54000000	nop; delay slot nop
 1503  000021c0          	L82_LF2:
 1504  000021c0  20010008	addi	r1,r0,#8
 1505  000021c4  afc10008	sw	8(r30),r1
 1506  000021c8          	L84_LF2:
 1507  000021c8  0800000c	j	L80_LF2
 1508  000021cc  54000000	nop; delay slot nop
 1509  000021d0          	L81_LF2:
 1510  000021d0  2001000a	addi	r1,r0,#10
 1511  000021d4  afc10008	sw	8(r30),r1
 1512  000021d8          	L85_LF2:
 1513  000021d8          	L80_LF2:
 1514  000021d8  8fc10008	lw	r1,8(r30)
 1515  000021dc  70220000	slei	r2,r1,#0
 1516  000021e0  1440001c	bnez	r2,L87_LF2
 1517  000021e4  54000000	nop; delay slot nop
 1518  000021e8  8fc10008	lw	r1,8(r30)
 1519  000021ec  6c220010	sgti	r2,r1,#16
 1520  000021f0  1440000c	bnez	r2,L87_LF2
 1521  000021f4  54000000	nop; delay slot nop
 1522  000021f8  08000010	j	L86_LF2
 1523  000021fc  54000000	nop; delay slot nop
 1524  00002200          	L87_LF2:
 1525  00002200  8fc1fff4	lw	r1,-12(r30)
 1526  00002204  08000188	j	L72_LF2
 1527  00002208  54000000	nop; delay slot nop
 1528  0000220c          	L86_LF2:
 1529  0000220c  54000000	nop
 1530  00002210          	L88_LF2:
 1531  00002210  8fc10000	lw	r1,(r30)
 1532  00002214  90220000	lbu	r2,(r1)
 1533  00002218  6c41002f	sgtui	r1,r2,#47
 1534  0000221c  10200030	beqz	r1,L91_LF2
 1535  00002220  54000000	nop; delay slot nop
 1536  00002224  8fc10000	lw	r1,(r30)
 1537  00002228  90220000	lbu	r2,(r1)
 1538  0000222c  70410039	sleui	r1,r2,#57
 1539  00002230  1020001c	beqz	r1,L91_LF2
 1540  00002234  54000000	nop; delay slot nop
 1541  00002238  8fc10000	lw	r1,(r30)
 1542  0000223c  90220000	lbu	r2,(r1)
 1543  00002240  2041ffd0	addi	r1,r2,#-48
 1544  00002244  afc1fff0	sw	-16(r30),r1
 1545  00002248  0800008c	j	L92_LF2
 1546  0000224c  54000000	nop; delay slot nop
 1547  00002250          	L91_LF2:
 1548  00002250  8fc10000	lw	r1,(r30)
 1549  00002254  90220000	lbu	r2,(r1)
 1550  00002258  6c410060	sgtui	r1,r2,#96
 1551  0000225c  10200030	beqz	r1,L93_LF2
 1552  00002260  54000000	nop; delay slot nop
 1553  00002264  8fc10000	lw	r1,(r30)
 1554  00002268  90220000	lbu	r2,(r1)
 1555  0000226c  7041007a	sleui	r1,r2,#122
 1556  00002270  1020001c	beqz	r1,L93_LF2
 1557  00002274  54000000	nop; delay slot nop
 1558  00002278  8fc10000	lw	r1,(r30)
 1559  0000227c  90220000	lbu	r2,(r1)
 1560  00002280  2041ffa9	addi	r1,r2,#-87
 1561  00002284  afc1fff0	sw	-16(r30),r1
 1562  00002288  0800004c	j	L92_LF2
 1563  0000228c  54000000	nop; delay slot nop
 1564  00002290          	L93_LF2:
 1565  00002290  8fc10000	lw	r1,(r30)
 1566  00002294  90220000	lbu	r2,(r1)
 1567  00002298  6c410040	sgtui	r1,r2,#64
 1568  0000229c  10200030	beqz	r1,L95_LF2
 1569  000022a0  54000000	nop; delay slot nop
 1570  000022a4  8fc10000	lw	r1,(r30)
 1571  000022a8  90220000	lbu	r2,(r1)
 1572  000022ac  7041005a	sleui	r1,r2,#90
 1573  000022b0  1020001c	beqz	r1,L95_LF2
 1574  000022b4  54000000	nop; delay slot nop
 1575  000022b8  8fc10000	lw	r1,(r30)
 1576  000022bc  90220000	lbu	r2,(r1)
 1577  000022c0  2041ffc9	addi	r1,r2,#-55
 1578  000022c4  afc1fff0	sw	-16(r30),r1
 1579  000022c8  0800000c	j	L92_LF2
 1580  000022cc  54000000	nop; delay slot nop
 1581  000022d0          	L95_LF2:
 1582  000022d0  200103e8	addi	r1,r0,#1000
 1583  000022d4  afc1fff0	sw	-16(r30),r1
 1584  000022d8          	L96_LF2:
 1585  000022d8          	L94_LF2:
 1586  000022d8          	L92_LF2:
 1587  000022d8  8fc1fff0	lw	r1,-16(r30)
 1588  000022dc  8fc20008	lw	r2,8(r30)
 1589  000022e0  0022082a	slt	r1,r1,r2
 1590  000022e4  10200040	beqz	r1,L90_LF2
 1591  000022e8  54000000	nop; delay slot nop
 1592  000022ec  8fc1fff4	lw	r1,-12(r30)
 1593  000022f0  8fc20008	lw	r2,8(r30)
 1594  000022f4  00200035	movi2fp	f0,r1
 1595  000022f8  00400835	movi2fp	f1,r2
 1596  000022fc  0401000e	mult	f0,f0,f1
 1597  00002300  00000834	movfp2i	r1,f0
 1598  00002304  afc1fff4	sw	-12(r30),r1
 1599  00002308  8fc1fff4	lw	r1,-12(r30)
 1600  0000230c  8fc2fff0	lw	r2,-16(r30)
 1601  00002310  00220820	add	r1,r1,r2
 1602  00002314  afc1fff4	sw	-12(r30),r1
 1603  00002318  8fc20000	lw	r2,(r30)
 1604  0000231c  20410001	addi	r1,r2,#1
 1605  00002320  00011020	add	r2,r0,r1
 1606  00002324  afc20000	sw	(r30),r2
 1607  00002328          	L97_LF2:
 1608  00002328          	L90_LF2:
 1609  00002328  8fc1fff0	lw	r1,-16(r30)
 1610  0000232c  8fc20008	lw	r2,8(r30)
 1611  00002330  0022082a	slt	r1,r1,r2
 1612  00002334  1420000c	bnez	r1,L98_LF2
 1613  00002338  54000000	nop; delay slot nop
 1614  0000233c  0800000c	j	L89_LF2
 1615  00002340  54000000	nop; delay slot nop
 1616  00002344          	L98_LF2:
 1617  00002344  0bfffec8	j	L88_LF2
 1618  00002348  54000000	nop; delay slot nop
 1619  0000234c          	L89_LF2:
 1620  0000234c  8fc10004	lw	r1,4(r30)
 1621  00002350  64220000	snei	r2,r1,#0
 1622  00002354  10400010	beqz	r2,L99_LF2
 1623  00002358  54000000	nop; delay slot nop
 1624  0000235c  8fc10004	lw	r1,4(r30)
 1625  00002360  8fc20000	lw	r2,(r30)
 1626  00002364  ac220000	sw	(r1),r2
 1627  00002368          	L99_LF2:
 1628  00002368  8fc1fff4	lw	r1,-12(r30)
 1629  0000236c  8fc2ffec	lw	r2,-20(r30)
 1630  00002370  00200035	movi2fp	f0,r1
 1631  00002374  00400835	movi2fp	f1,r2
 1632  00002378  0401000e	mult	f0,f0,f1
 1633  0000237c  00000834	movfp2i	r1,f0
 1634  00002380  afc1fff4	sw	-12(r30),r1
 1635  00002384  8fc1fff4	lw	r1,-12(r30)
 1636  00002388  08000004	j	L72_LF2
 1637  0000238c  54000000	nop; delay slot nop
 1638  00002390          	L72_LF2:
 1639  00002390  8fa20000	lw	r2,0(r29)
 1640  00002394  8fdffff8	lw	r31,-8(r30)
 1641  00002398  001ee820	add	r29,r0,r30
 1642  0000239c  8fdefffc	lw	r30,-4(r30)
 1643  000023a0  4be00000	jr	r31
 1644  000023a4  54000000	nop
 1645  000023a8          	.endproc _dstrtol
 1646  000023a8          	.align 2
 1647  000023a8          	.proc _bcopy
 1648  000023a8          	.global _bcopy
 1649  000023a8          	_bcopy:
 1650                      ;  Function 'bcopy'; 0 bytes of locals, 2 regs to save.
 1651  000023a8  afbefffc	sw	-4(r29),r30; push fp
 1652  000023ac  001df020	add	r30,r0,r29; fp = sp
 1653  000023b0  afbffff8	sw	-8(r29),r31; push ret addr
 1654  000023b4  2fbd0010	subui	r29,r29,#16; alloc local storage
 1655  000023b8  afa20000	sw	0(r29),r2
 1656  000023bc  afa30004	sw	4(r29),r3
 1657  000023c0  54000000	nop
 1658  000023c4          	L101_LF2:
 1659  000023c4  8fc10008	lw	r1,8(r30)
 1660  000023c8  2022ffff	addi	r2,r1,#-1
 1661  000023cc  afc20008	sw	8(r30),r2
 1662  000023d0  6c210000	sgti	r1,r1,#0
 1663  000023d4  1420000c	bnez	r1,L103_LF2
 1664  000023d8  54000000	nop; delay slot nop
 1665  000023dc  0800002c	j	L102_LF2
 1666  000023e0  54000000	nop; delay slot nop
 1667  000023e4          	L103_LF2:
 1668  000023e4  8fc10004	lw	r1,4(r30)
 1669  000023e8  20220001	addi	r2,r1,#1
 1670  000023ec  afc20004	sw	4(r30),r2
 1671  000023f0  8fc20000	lw	r2,(r30)
 1672  000023f4  20430001	addi	r3,r2,#1
 1673  000023f8  afc30000	sw	(r30),r3
 1674  000023fc  80420000	lb	r2,(r2)
 1675  00002400  a0220000	sb	(r1),r2
 1676  00002404  0bffffbc	j	L101_LF2
 1677  00002408  54000000	nop; delay slot nop
 1678  0000240c          	L102_LF2:
 1679  0000240c          	L100_LF2:
 1680  0000240c  8fa20000	lw	r2,0(r29)
 1681  00002410  8fa30004	lw	r3,4(r29)
 1682  00002414  8fdffff8	lw	r31,-8(r30)
 1683  00002418  001ee820	add	r29,r0,r30
 1684  0000241c  8fdefffc	lw	r30,-4(r30)
 1685  00002420  4be00000	jr	r31
 1686  00002424  54000000	nop
 1687  00002428          	.endproc _bcopy
 1688  00002428          	.align 2
 1689  00002428          	.proc _bzero
 1690  00002428          	.global _bzero
 1691  00002428          	_bzero:
 1692                      ;  Function 'bzero'; 0 bytes of locals, 1 regs to save.
 1693  00002428  afbefffc	sw	-4(r29),r30; push fp
 1694  0000242c  001df020	add	r30,r0,r29; fp = sp
 1695  00002430  afbffff8	sw	-8(r29),r31; push ret addr
 1696  00002434  2fbd0010	subui	r29,r29,#16; alloc local storage
 1697  00002438  afa20000	sw	0(r29),r2
 1698  0000243c  54000000	nop
 1699  00002440          	L105_LF2:
 1700  00002440  8fc10004	lw	r1,4(r30)
 1701  00002444  2022ffff	addi	r2,r1,#-1
 1702  00002448  afc20004	sw	4(r30),r2
 1703  0000244c  6c210000	sgti	r1,r1,#0
 1704  00002450  1420000c	bnez	r1,L107_LF2
 1705  00002454  54000000	nop; delay slot nop
 1706  00002458  08000020	j	L106_LF2
 1707  0000245c  54000000	nop; delay slot nop
 1708  00002460          	L107_LF2:
 1709  00002460  8fc10000	lw	r1,(r30)
 1710  00002464  20220001	addi	r2,r1,#1
 1711  00002468  afc20000	sw	(r30),r2
 1712  0000246c  20020000	addi	r2,r0,(#0x0)&0xff
 1713  00002470  a0220000	sb	(r1),r2
 1714  00002474  0bffffc8	j	L105_LF2
 1715  00002478  54000000	nop; delay slot nop
 1716  0000247c          	L106_LF2:
 1717  0000247c          	L104_LF2:
 1718  0000247c  8fa20000	lw	r2,0(r29)
 1719  00002480  8fdffff8	lw	r31,-8(r30)
 1720  00002484  001ee820	add	r29,r0,r30
 1721  00002488  8fdefffc	lw	r30,-4(r30)
 1722  0000248c  4be00000	jr	r31
 1723  00002490  54000000	nop
 1724  00002494          	.endproc _bzero
 1725  00002494          	.align 2
 1726  00002494          	.proc _min
 1727  00002494          	.global _min
 1728  00002494          	_min:
 1729                      ;  Function 'min'; 0 bytes of locals, 2 regs to save.
 1730  00002494  afbefffc	sw	-4(r29),r30; push fp
 1731  00002498  001df020	add	r30,r0,r29; fp = sp
 1732  0000249c  afbffff8	sw	-8(r29),r31; push ret addr
 1733  000024a0  2fbd0010	subui	r29,r29,#16; alloc local storage
 1734  000024a4  afa20000	sw	0(r29),r2
 1735  000024a8  afa30004	sw	4(r29),r3
 1736  000024ac  8fc10000	lw	r1,(r30)
 1737  000024b0  8fc20004	lw	r2,4(r30)
 1738  000024b4  0022182c	sle	r3,r1,r2
 1739  000024b8  14600008	bnez	r3,L109_LF2
 1740  000024bc  54000000	nop; delay slot nop
 1741  000024c0  8fc10004	lw	r1,4(r30)
 1742  000024c4          	L109_LF2:
 1743  000024c4  08000004	j	L108_LF2
 1744  000024c8  54000000	nop; delay slot nop
 1745  000024cc          	L108_LF2:
 1746  000024cc  8fa20000	lw	r2,0(r29)
 1747  000024d0  8fa30004	lw	r3,4(r29)
 1748  000024d4  8fdffff8	lw	r31,-8(r30)
 1749  000024d8  001ee820	add	r29,r0,r30
 1750  000024dc  8fdefffc	lw	r30,-4(r30)
 1751  000024e0  4be00000	jr	r31
 1752  000024e4  54000000	nop
 1753  000024e8          	.endproc _min
 1754                      ;;; Ethan L. Miller, 1999.  Released to the public domain
 1755                      ;;;
 1756                      ;;; Most of the traps are called in files from libtraps.
 1759  000024e8          	.align 2
 1760  000024e8          	.proc _exit
 1761  000024e8          	.global _exit
 1762  000024e8          	_exit:
 1763  000024e8  44000300	trap	#0x300
 1764  000024ec  4be00000	jr	r31
 1765  000024f0  54000000	nop
 1766  000024f4          	.endproc _exit
 1768                      ; for the benefit of gcc.
 1769  000024f4          	.proc ___main
 1770  000024f4          	.global ___main
 1771  000024f4          	___main:
 1772  000024f4  4be00000	jr	r31
 1773  000024f8  54000000	nop
 1774  000024fc          	.endproc ___main
 1775  000024fc          	.text
 1776  000024fc          	.global _etext
 1777  000024fc          	_etext:
 1778  000024fc          	.align 3
 1779  00002500          	.data
 1780  0000315c          	.global _edata
 1781  0000315c          	_edata:
