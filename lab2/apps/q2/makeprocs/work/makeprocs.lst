 line   address	contents
    1                      ; Linked by DLX-LD.
    2                      ; MemSize 24576
    3                      ; Data size: 430
    4                      ; Text size: 4920
    5                      ; Stack size: 8192
    6  00000000          	.text 0x1000
    7  00001000          	.data 0x3000
    8                      ; Compiled by GCC
    9  00003000          	.text
   10  00001000          	.align 2
   11  00001000          	.proc _isspace
   12  00001000          	.global _isspace
   13  00001000          	_isspace:
   14                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
   15  00001000  afbefffc	sw	-4(r29),r30; push fp
   16  00001004  001df020	add	r30,r0,r29; fp = sp
   17  00001008  afbffff8	sw	-8(r29),r31; push ret addr
   18  0000100c  2fbd0010	subui	r29,r29,#16; alloc local storage
   19  00001010  afa20000	sw	0(r29),r2
   20  00001014  83c20003	lb	r2,3(r30)
   21  00001018  201f0000	addi	r31,r0,#0
   22  0000101c  304100ff	andi	r1,r2,#0x00ff
   23  00001020  60210020	seqi	r1,r1,#32
   24  00001024  14200018	bnez	r1,L6_LF0
   25  00001028  54000000	nop; not filled.
   26  0000102c  2041fff7	addi	r1,r2,#-9
   27  00001030  302100ff	andi	r1,r1,#0x00ff
   28  00001034  70210001	sleui	r1,r1,#1
   29  00001038  10200008	beqz	r1,L5_LF0
   30  0000103c  54000000	nop; not filled.
   31  00001040          	L6_LF0:
   32  00001040  201f0001	addi	r31,r0,#1
   33  00001044          	L5_LF0:
   34  00001044  001f0820	add	r1,r0,r31
   35  00001048  8fa20000	lw	r2,0(r29)
   36  0000104c  8fdffff8	lw	r31,-8(r30)
   37  00001050  001ee820	add	r29,r0,r30
   38  00001054  8fdefffc	lw	r30,-4(r30)
   39  00001058  4be00000	jr	r31
   40  0000105c  54000000	nop
   41  00001060          	.endproc _isspace
   42  00001060          	.align 2
   43  00001060          	.proc _isxdigit
   44  00001060          	.global _isxdigit
   45  00001060          	_isxdigit:
   46                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
   47  00001060  afbefffc	sw	-4(r29),r30; push fp
   48  00001064  001df020	add	r30,r0,r29; fp = sp
   49  00001068  afbffff8	sw	-8(r29),r31; push ret addr
   50  0000106c  2fbd0010	subui	r29,r29,#16; alloc local storage
   51  00001070  afa20000	sw	0(r29),r2
   52  00001074  83df0003	lb	r31,3(r30)
   53  00001078  20020000	addi	r2,r0,#0
   54  0000107c  23e1ffd0	addi	r1,r31,#-48
   55  00001080  302100ff	andi	r1,r1,#0x00ff
   56  00001084  70210009	sleui	r1,r1,#9
   57  00001088  14200028	bnez	r1,L12_LF0
   58  0000108c  54000000	nop; not filled.
   59  00001090  23e1ff9f	addi	r1,r31,#-97
   60  00001094  302100ff	andi	r1,r1,#0x00ff
   61  00001098  70210005	sleui	r1,r1,#5
   62  0000109c  14200014	bnez	r1,L12_LF0
   63  000010a0  54000000	nop; not filled.
   64  000010a4  33e100ff	andi	r1,r31,#0x00ff
   65  000010a8  64210041	snei	r1,r1,#65
   66  000010ac  14200008	bnez	r1,L11_LF0
   67  000010b0  54000000	nop; not filled.
   68  000010b4          	L12_LF0:
   69  000010b4  20020001	addi	r2,r0,#1
   70  000010b8          	L11_LF0:
   71  000010b8  00020820	add	r1,r0,r2
   72  000010bc  8fa20000	lw	r2,0(r29)
   73  000010c0  8fdffff8	lw	r31,-8(r30)
   74  000010c4  001ee820	add	r29,r0,r30
   75  000010c8  8fdefffc	lw	r30,-4(r30)
   76  000010cc  4be00000	jr	r31
   77  000010d0  54000000	nop
   78  000010d4          	.endproc _isxdigit
   79  000010d4          	.data
   80  00003000          	.align 2
   81  00003000          	LC0_LF0:
   82  00003000  55736167	.ascii "Usage: \000"
   82  00003004  653a2000	
   83  00003008          	.align 2
   84  00003008          	LC1_LF0:
   85  00003008  203c6e75	.ascii " <number of processes to create>\n\000"
   85  0000300c  6d626572	
   85  00003010  206f6620	
   85  00003014  70726f63	
   85  00003018  65737365	
   85  0000301c  7320746f	
   85  00003020  20637265	
   85  00003024  6174653e	
   85  00003028  0a00    	
   86  0000302a          	.align 2
   87  0000302c          	LC2_LF0:
   88  0000302c  43726561	.ascii "Creating %d producer processes and %d consumer processes\n\000"
   88  00003030  74696e67	
   88  00003034  20256420	
   88  00003038  70726f64	
   88  0000303c  75636572	
   88  00003040  2070726f	
   88  00003044  63657373	
   88  00003048  65732061	
   88  0000304c  6e642025	
   88  00003050  6420636f	
   88  00003054  6e73756d	
   88  00003058  65722070	
   88  0000305c  726f6365	
   88  00003060  73736573	
   88  00003064  0a00    	
   89  00003066          	.align 2
   90  00003068          	LC3_LF0:
   91  00003068  4552524f	.ascii "ERROR: could not allocate shared memory page in \000"
   91  0000306c  523a2063	
   91  00003070  6f756c64	
   91  00003074  206e6f74	
   91  00003078  20616c6c	
   91  0000307c  6f636174	
   91  00003080  65207368	
   91  00003084  61726564	
   91  00003088  206d656d	
   91  0000308c  6f727920	
   91  00003090  70616765	
   91  00003094  20696e20	
   91  00003098  00      	
   92  00003099          	.align 2
   93  0000309c          	LC4_LF0:
   94  0000309c  2c206578	.ascii ", exiting...\n\000"
   94  000030a0  6974696e	
   94  000030a4  672e2e2e	
   94  000030a8  0a00    	
   95  000030aa          	.align 2
   96  000030ac          	LC5_LF0:
   97  000030ac  436f756c	.ascii "Could not map the shared page to virtual address in \000"
   97  000030b0  64206e6f	
   97  000030b4  74206d61	
   97  000030b8  70207468	
   97  000030bc  65207368	
   97  000030c0  61726564	
   97  000030c4  20706167	
   97  000030c8  6520746f	
   97  000030cc  20766972	
   97  000030d0  7475616c	
   97  000030d4  20616464	
   97  000030d8  72657373	
   97  000030dc  20696e20	
   97  000030e0  00      	
   98  000030e1          	.align 2
   99  000030e4          	LC6_LF0:
  100  000030e4  2c206578	.ascii ", exiting..\n\000"
  100  000030e8  6974696e	
  100  000030ec  672e2e0a	
  100  000030f0  00      	
  101  000030f1          	.align 2
  102  000030f4          	LC7_LF0:
  103  000030f4  4661696c	.ascii "Fail to create a lock\000"
  103  000030f8  20746f20	
  103  000030fc  63726561	
  103  00003100  74652061	
  103  00003104  206c6f63	
  103  00003108  6b00    	
  104  0000310a          	.align 2
  105  0000310c          	LC8_LF0:
  106  0000310c  6c6f636b	.ascii "lock= %d\n\000"
  106  00003110  3d202564	
  106  00003114  0a00    	
  107  00003116          	.align 2
  108  00003118          	LC9_LF0:
  109  00003118  42616420	.ascii "Bad sem_create in \000"
  109  0000311c  73656d5f	
  109  00003120  63726561	
  109  00003124  74652069	
  109  00003128  6e2000  	
  110  0000312b          	.align 2
  111  0000312c          	LC10_LF0:
  112  0000312c  0a00    	.ascii "\n\000"
  113  0000312e          	.align 2
  114  00003130          	LC11_LF0:
  115  00003130  50726f64	.ascii "Producer_Consumer.dlx.obj\000"
  115  00003134  75636572	
  115  00003138  5f436f6e	
  115  0000313c  73756d65	
  115  00003140  722e646c	
  115  00003144  782e6f62	
  115  00003148  6a00    	
  116  0000314a          	.align 2
  117  0000314c          	LC12_LF0:
  118  0000314c  42616420	.ascii "Bad semaphore s_procs_completed_pc (%d) in \000"
  118  00003150  73656d61	
  118  00003154  70686f72	
  118  00003158  6520735f	
  118  0000315c  70726f63	
  118  00003160  735f636f	
  118  00003164  6d706c65	
  118  00003168  7465645f	
  118  0000316c  70632028	
  118  00003170  25642920	
  118  00003174  696e2000	
  119  00003178          	.align 2
  120  00003178          	LC13_LF0:
  121  00003178  416c6c20	.ascii "All other processes completed, exiting main process.\n\000"
  121  0000317c  6f746865	
  121  00003180  72207072	
  121  00003184  6f636573	
  121  00003188  73657320	
  121  0000318c  636f6d70	
  121  00003190  6c657465	
  121  00003194  642c2065	
  121  00003198  78697469	
  121  0000319c  6e67206d	
  121  000031a0  61696e20	
  121  000031a4  70726f63	
  121  000031a8  6573732e	
  121  000031ac  0a00    	
  122  000031ae          	.text
  123  000010d4          	.align 2
  124  000010d4          	.proc _main
  125  000010d4          	.global _main
  126  000010d4          	_main:
  127                      ;  Function 'main'; 96 bytes of locals, 0 regs to save.
  128  000010d4  afbefffc	sw	-4(r29),r30; push fp
  129  000010d8  001df020	add	r30,r0,r29; fp = sp
  130  000010dc  afbffff8	sw	-8(r29),r31; push ret addr
  131  000010e0  2fbd0068	subui	r29,r29,#104; alloc local storage
  132  000010e4  8fc20000	lw	r2,(r30)
  133  000010e8  8fcc0004	lw	r12,4(r30)
  134  000010ec  0c001240	jal	___main
  135  000010f0  54000000	nop; not filled.
  136  000010f4  64410002	snei	r1,r2,#2
  137  000010f8  1020004c	beqz	r1,L14_LF0
  138  000010fc  54000000	nop; not filled.
  139  00001100  23bdfff8	addi	r29,r29,#-8
  140  00001104  3c0d0000	lhi	r13,((LC0_LF0)>>16)&0xffff
  141  00001108  25ad3000	addui	r13,r13,(LC0_LF0)&0xffff
  142  0000110c  afad0000	sw	(r29),r13
  143  00001110  0c000414	jal	_Printf
  144  00001114  54000000	nop; not filled.
  145  00001118  8d8d0000	lw	r13,(r12)
  146  0000111c  afad0000	sw	(r29),r13
  147  00001120  0c000404	jal	_Printf
  148  00001124  54000000	nop; not filled.
  149  00001128  3c0d0000	lhi	r13,((LC1_LF0)>>16)&0xffff
  150  0000112c  25ad3008	addui	r13,r13,(LC1_LF0)&0xffff
  151  00001130  afad0000	sw	(r29),r13
  152  00001134  0c0003f0	jal	_Printf
  153  00001138  54000000	nop; not filled.
  154  0000113c  0c00049c	jal	_Exit
  155  00001140  54000000	nop; not filled.
  156  00001144  23bd0008	addi	r29,r29,#8
  157  00001148          	L14_LF0:
  158  00001148  23bdfff0	addi	r29,r29,#-16
  159  0000114c  8d8d0004	lw	r13,4(r12)
  160  00001150  afad0000	sw	(r29),r13
  161  00001154  200d0000	addi	r13,r0,#0
  162  00001158  afad0004	sw	4(r29),r13
  163  0000115c  200d000a	addi	r13,r0,#10
  164  00001160  afad0008	sw	8(r29),r13
  165  00001164  0c000d20	jal	_dstrtol
  166  00001168  54000000	nop; not filled.
  167  0000116c  00015820	add	r11,r0,r1
  168  00001170  3c0d0000	lhi	r13,((LC2_LF0)>>16)&0xffff
  169  00001174  25ad302c	addui	r13,r13,(LC2_LF0)&0xffff
  170  00001178  afad0000	sw	(r29),r13
  171  0000117c  afab0004	sw	4(r29),r11
  172  00001180  afab0008	sw	8(r29),r11
  173  00001184  0c0003a0	jal	_Printf
  174  00001188  54000000	nop; not filled.
  175  0000118c  0c0003bc	jal	_shmget
  176  00001190  54000000	nop; not filled.
  177  00001194  00012020	add	r4,r0,r1
  178  00001198  23bd0010	addi	r29,r29,#16
  179  0000119c  64810000	snei	r1,r4,#0
  180  000011a0  1420004c	bnez	r1,L15_LF0
  181  000011a4  54000000	nop; not filled.
  182  000011a8  23bdfff8	addi	r29,r29,#-8
  183  000011ac  3c0d0000	lhi	r13,((LC3_LF0)>>16)&0xffff
  184  000011b0  25ad3068	addui	r13,r13,(LC3_LF0)&0xffff
  185  000011b4  afad0000	sw	(r29),r13
  186  000011b8  0c00036c	jal	_Printf
  187  000011bc  54000000	nop; not filled.
  188  000011c0  8d8d0000	lw	r13,(r12)
  189  000011c4  afad0000	sw	(r29),r13
  190  000011c8  0c00035c	jal	_Printf
  191  000011cc  54000000	nop; not filled.
  192  000011d0  3c0d0000	lhi	r13,((LC4_LF0)>>16)&0xffff
  193  000011d4  25ad309c	addui	r13,r13,(LC4_LF0)&0xffff
  194  000011d8  afad0000	sw	(r29),r13
  195  000011dc  0c000348	jal	_Printf
  196  000011e0  54000000	nop; not filled.
  197  000011e4  0c0003f4	jal	_Exit
  198  000011e8  54000000	nop; not filled.
  199  000011ec  23bd0008	addi	r29,r29,#8
  200  000011f0          	L15_LF0:
  201  000011f0  23bdfff8	addi	r29,r29,#-8
  202  000011f4  afa40000	sw	(r29),r4
  203  000011f8  0c00035c	jal	_shmat
  204  000011fc  54000000	nop; not filled.
  205  00001200  00011020	add	r2,r0,r1
  206  00001204  23bd0008	addi	r29,r29,#8
  207  00001208  64410000	snei	r1,r2,#0
  208  0000120c  1420004c	bnez	r1,L16_LF0
  209  00001210  54000000	nop; not filled.
  210  00001214  23bdfff8	addi	r29,r29,#-8
  211  00001218  3c0d0000	lhi	r13,((LC5_LF0)>>16)&0xffff
  212  0000121c  25ad30ac	addui	r13,r13,(LC5_LF0)&0xffff
  213  00001220  afad0000	sw	(r29),r13
  214  00001224  0c000300	jal	_Printf
  215  00001228  54000000	nop; not filled.
  216  0000122c  8d8d0000	lw	r13,(r12)
  217  00001230  afad0000	sw	(r29),r13
  218  00001234  0c0002f0	jal	_Printf
  219  00001238  54000000	nop; not filled.
  220  0000123c  3c0d0000	lhi	r13,((LC6_LF0)>>16)&0xffff
  221  00001240  25ad30e4	addui	r13,r13,(LC6_LF0)&0xffff
  222  00001244  afad0000	sw	(r29),r13
  223  00001248  0c0002dc	jal	_Printf
  224  0000124c  54000000	nop; not filled.
  225  00001250  0c000388	jal	_Exit
  226  00001254  54000000	nop; not filled.
  227  00001258  23bd0008	addi	r29,r29,#8
  228  0000125c          	L16_LF0:
  229  0000125c  200d0000	addi	r13,r0,#0
  230  00001260  ac4d000c	sw	12(r2),r13
  231  00001264  ac4d0010	sw	16(r2),r13
  232  00001268  0c00031c	jal	_lock_create
  233  0000126c  54000000	nop; not filled.
  234  00001270  00011820	add	r3,r0,r1
  235  00001274  6061ffff	seqi	r1,r3,#-1
  236  00001278  1020002c	beqz	r1,L17_LF0
  237  0000127c  54000000	nop; not filled.
  238  00001280  23bdfff8	addi	r29,r29,#-8
  239  00001284  3c0d0000	lhi	r13,((LC7_LF0)>>16)&0xffff
  240  00001288  25ad30f4	addui	r13,r13,(LC7_LF0)&0xffff
  241  0000128c  afad0000	sw	(r29),r13
  242  00001290  0c000294	jal	_Printf
  243  00001294  54000000	nop; not filled.
  244  00001298  0c000340	jal	_Exit
  245  0000129c  54000000	nop; not filled.
  246  000012a0  08000020	j	L26_LF0
  247  000012a4  54000000	nop; not filled.
  248  000012a8          	L17_LF0:
  249  000012a8  23bdfff8	addi	r29,r29,#-8
  250  000012ac  3c0d0000	lhi	r13,((LC8_LF0)>>16)&0xffff
  251  000012b0  25ad310c	addui	r13,r13,(LC8_LF0)&0xffff
  252  000012b4  afad0000	sw	(r29),r13
  253  000012b8  afa30004	sw	4(r29),r3
  254  000012bc  0c000268	jal	_Printf
  255  000012c0  54000000	nop; not filled.
  256  000012c4          	L26_LF0:
  257  000012c4  23bd0008	addi	r29,r29,#8
  258  000012c8  23bdfff8	addi	r29,r29,#-8
  259  000012cc  51620001	slli	r2,r11,#0x1
  260  000012d0  20010001	addi	r1,r0,#1
  261  000012d4  00220822	sub	r1,r1,r2
  262  000012d8  afa10000	sw	(r29),r1
  263  000012dc  0c000284	jal	_sem_create
  264  000012e0  54000000	nop; not filled.
  265  000012e4  00015020	add	r10,r0,r1
  266  000012e8  23bd0008	addi	r29,r29,#8
  267  000012ec  6141ffff	seqi	r1,r10,#-1
  268  000012f0  1020004c	beqz	r1,L19_LF0
  269  000012f4  54000000	nop; not filled.
  270  000012f8  23bdfff8	addi	r29,r29,#-8
  271  000012fc  3c0d0000	lhi	r13,((LC9_LF0)>>16)&0xffff
  272  00001300  25ad3118	addui	r13,r13,(LC9_LF0)&0xffff
  273  00001304  afad0000	sw	(r29),r13
  274  00001308  0c00021c	jal	_Printf
  275  0000130c  54000000	nop; not filled.
  276  00001310  8d8d0000	lw	r13,(r12)
  277  00001314  afad0000	sw	(r29),r13
  278  00001318  0c00020c	jal	_Printf
  279  0000131c  54000000	nop; not filled.
  280  00001320  3c0d0000	lhi	r13,((LC10_LF0)>>16)&0xffff
  281  00001324  25ad312c	addui	r13,r13,(LC10_LF0)&0xffff
  282  00001328  afad0000	sw	(r29),r13
  283  0000132c  0c0001f8	jal	_Printf
  284  00001330  54000000	nop; not filled.
  285  00001334  0c0002a4	jal	_Exit
  286  00001338  54000000	nop; not filled.
  287  0000133c  23bd0008	addi	r29,r29,#8
  288  00001340          	L19_LF0:
  289  00001340  23bdfff8	addi	r29,r29,#-8
  290  00001344  afa40000	sw	(r29),r4
  291  00001348  23c6ffe8	addi	r6,r30,#-24
  292  0000134c  afa60004	sw	4(r29),r6
  293  00001350  0c0009a8	jal	_ditoa
  294  00001354  54000000	nop; not filled.
  295  00001358  afaa0000	sw	(r29),r10
  296  0000135c  23c5ffd8	addi	r5,r30,#-40
  297  00001360  afa50004	sw	4(r29),r5
  298  00001364  0c000994	jal	_ditoa
  299  00001368  54000000	nop; not filled.
  300  0000136c  afa30000	sw	(r29),r3
  301  00001370  23c4ffb8	addi	r4,r30,#-72
  302  00001374  afa40004	sw	4(r29),r4
  303  00001378  0c000980	jal	_ditoa
  304  0000137c  54000000	nop; not filled.
  305  00001380  200d0001	addi	r13,r0,#1
  306  00001384  afad0000	sw	(r29),r13
  307  00001388  23c8ffa8	addi	r8,r30,#-88
  308  0000138c  afa80004	sw	4(r29),r8
  309  00001390  0c000968	jal	_ditoa
  310  00001394  54000000	nop; not filled.
  311  00001398  200d0000	addi	r13,r0,#0
  312  0000139c  afad0000	sw	(r29),r13
  313  000013a0  23c7ff98	addi	r7,r30,#-104
  314  000013a4  afa70004	sw	4(r29),r7
  315  000013a8  0c000950	jal	_ditoa
  316  000013ac  54000000	nop; not filled.
  317  000013b0  20020000	addi	r2,r0,#0
  318  000013b4  23bd0008	addi	r29,r29,#8
  319  000013b8  004b082a	slt	r1,r2,r11
  320  000013bc  10200090	beqz	r1,L21_LF0
  321  000013c0  54000000	nop; not filled.
  322  000013c4  23c3ffc8	addi	r3,r30,#-56
  323  000013c8  3c090000	lhi	r9,((LC11_LF0)>>16)&0xffff
  324  000013cc  25293130	addui	r9,r9,(LC11_LF0)&0xffff
  325  000013d0          	L23_LF0:
  326  000013d0  23bdfff8	addi	r29,r29,#-8
  327  000013d4  afa20000	sw	(r29),r2
  328  000013d8  afa30004	sw	4(r29),r3
  329  000013dc  0c00091c	jal	_ditoa
  330  000013e0  54000000	nop; not filled.
  331  000013e4  23bdffe8	addi	r29,r29,#-24
  332  000013e8  afa90000	sw	(r29),r9
  333  000013ec  afa60004	sw	4(r29),r6
  334  000013f0  afa50008	sw	8(r29),r5
  335  000013f4  afa3000c	sw	12(r29),r3
  336  000013f8  afa40010	sw	16(r29),r4
  337  000013fc  afa80014	sw	20(r29),r8
  338  00001400  200d0000	addi	r13,r0,#0
  339  00001404  afad0018	sw	24(r29),r13
  340  00001408  0c000134	jal	_process_create
  341  0000140c  54000000	nop; not filled.
  342  00001410  23bd0020	addi	r29,r29,#32
  343  00001414  23bdffe0	addi	r29,r29,#-32
  344  00001418  afa90000	sw	(r29),r9
  345  0000141c  afa60004	sw	4(r29),r6
  346  00001420  afa50008	sw	8(r29),r5
  347  00001424  afa3000c	sw	12(r29),r3
  348  00001428  afa40010	sw	16(r29),r4
  349  0000142c  afa70014	sw	20(r29),r7
  350  00001430  afad0018	sw	24(r29),r13
  351  00001434  0c000108	jal	_process_create
  352  00001438  54000000	nop; not filled.
  353  0000143c  23bd0020	addi	r29,r29,#32
  354  00001440  20420001	addi	r2,r2,#1
  355  00001444  004b082a	slt	r1,r2,r11
  356  00001448  1420ff84	bnez	r1,L23_LF0
  357  0000144c  54000000	nop; not filled.
  358  00001450          	L21_LF0:
  359  00001450  23bdfff8	addi	r29,r29,#-8
  360  00001454  afaa0000	sw	(r29),r10
  361  00001458  0c000114	jal	_sem_wait
  362  0000145c  54000000	nop; not filled.
  363  00001460  23bd0008	addi	r29,r29,#8
  364  00001464  64210001	snei	r1,r1,#1
  365  00001468  10200050	beqz	r1,L25_LF0
  366  0000146c  54000000	nop; not filled.
  367  00001470  23bdfff8	addi	r29,r29,#-8
  368  00001474  3c0d0000	lhi	r13,((LC12_LF0)>>16)&0xffff
  369  00001478  25ad314c	addui	r13,r13,(LC12_LF0)&0xffff
  370  0000147c  afad0000	sw	(r29),r13
  371  00001480  afaa0004	sw	4(r29),r10
  372  00001484  0c0000a0	jal	_Printf
  373  00001488  54000000	nop; not filled.
  374  0000148c  8d8c0000	lw	r12,(r12)
  375  00001490  afac0000	sw	(r29),r12
  376  00001494  0c000090	jal	_Printf
  377  00001498  54000000	nop; not filled.
  378  0000149c  3c0d0000	lhi	r13,((LC10_LF0)>>16)&0xffff
  379  000014a0  25ad312c	addui	r13,r13,(LC10_LF0)&0xffff
  380  000014a4  afad0000	sw	(r29),r13
  381  000014a8  0c00007c	jal	_Printf
  382  000014ac  54000000	nop; not filled.
  383  000014b0  0c000128	jal	_Exit
  384  000014b4  54000000	nop; not filled.
  385  000014b8  23bd0008	addi	r29,r29,#8
  386  000014bc          	L25_LF0:
  387  000014bc  23bdfff8	addi	r29,r29,#-8
  388  000014c0  3c0d0000	lhi	r13,((LC13_LF0)>>16)&0xffff
  389  000014c4  25ad3178	addui	r13,r13,(LC13_LF0)&0xffff
  390  000014c8  afad0000	sw	(r29),r13
  391  000014cc  0c000058	jal	_Printf
  392  000014d0  54000000	nop; not filled.
  393  000014d4  23bd0008	addi	r29,r29,#8
  394  000014d8  0c000e48	jal	_exit
  395  000014dc  54000000	nop
  396  000014e0          	.endproc _main
  397                      ;;;
  398                      ;;; Stub functions for DLX traps.
  399                      ;;;
  400                      ;;; Ethan L. Miller, 1999.  Released to the public domain.
  401                      ;;;
  402                      ;;; The traps such as Open and Close
  403                      ;;; (note the capital letters) are for use by user programs.  The traps
  404                      ;;; with names such as open and close (lower case) are for use by the OS.
  405                      ;;;
  408  000014e0          	.align 2
  410                      ;;; The following are the traps to be used by user-level programs
  411                      ;;;
  413  000014e0          	.align 2
  414  000014e0          	.proc _Open
  415  000014e0          	.global _Open
  416  000014e0          	_Open:
  417                      ;;; Note that trap #0x213 actually causes a trap vector in the OS of
  418                      ;;; 0x1213.  The same is true for other user traps.  Thus, a user trap
  419                      ;;; with trap #0x240 will result in a trap vector of 0x1240 in the OS.
  420  000014e0  44000213	trap	#0x213
  421  000014e4  4be00000	jr	r31
  422  000014e8  54000000	nop
  423  000014ec          	.endproc _Open
  425  000014ec          	.proc _Close
  426  000014ec          	.global _Close
  427  000014ec          	_Close:
  428  000014ec  44000214	trap	#0x214
  429  000014f0  4be00000	jr	r31
  430  000014f4  54000000	nop
  431  000014f8          	.endproc _Close
  433  000014f8          	.proc _Read
  434  000014f8          	.global _Read
  435  000014f8          	_Read:
  436  000014f8  44000210	trap	#0x210
  437  000014fc  4be00000	jr	r31
  438  00001500  54000000	nop
  439  00001504          	.endproc _Read
  441  00001504          	.proc _Write
  442  00001504          	.global _Write
  443  00001504          	_Write:
  444  00001504  44000211	trap	#0x211
  445  00001508  4be00000	jr	r31
  446  0000150c  54000000	nop
  447  00001510          	.endproc _Write
  449  00001510          	.proc _Lseek
  450  00001510          	.global _Lseek
  451  00001510          	_Lseek:
  452  00001510  44000212	trap	#0x212
  453  00001514  4be00000	jr	r31
  454  00001518  54000000	nop
  455  0000151c          	.endproc _Lseek
  457  0000151c          	.proc _Putchar
  458  0000151c          	.global _Putchar
  459  0000151c          	_Putchar:
  460  0000151c  44000280	trap	#0x280
  461  00001520  4be00000	jr	r31
  462  00001524  54000000	nop
  463  00001528          	.endproc _Putchar
  465  00001528          	.proc _Printf
  466  00001528          	.global _Printf
  467  00001528          	_Printf:
  468  00001528  44000201	trap	#0x201
  469  0000152c  4be00000	jr	r31
  470  00001530  54000000	nop
  471  00001534          	.endproc _Printf
  473  00001534          	.proc _getpid
  474  00001534          	.global _getpid
  475  00001534          	_getpid:
  476  00001534  44000431	trap	#0x431
  477  00001538  4be00000	jr	r31
  478  0000153c  54000000	nop
  479  00001540          	.endproc _getpid
  481  00001540          	.proc _process_create
  482  00001540          	.global _process_create
  483  00001540          	_process_create:
  484  00001540  44000432	trap	#0x432
  485  00001544  4be00000	jr	r31
  486  00001548  54000000	nop
  487  0000154c          	.endproc _process_create
  489  0000154c          	.proc _shmget
  490  0000154c          	.global _shmget
  491  0000154c          	_shmget:
  492  0000154c  44000440	trap	#0x440
  493  00001550  4be00000	jr	r31
  494  00001554  54000000	nop
  495  00001558          	.endproc _shmget
  497  00001558          	.proc _shmat
  498  00001558          	.global _shmat
  499  00001558          	_shmat:
  500  00001558  44000441	trap	#0x441
  501  0000155c  4be00000	jr	r31
  502  00001560  54000000	nop
  503  00001564          	.endproc _shmat
  505  00001564          	.proc _sem_create
  506  00001564          	.global _sem_create
  507  00001564          	_sem_create:
  508  00001564  44000450	trap	#0x450
  509  00001568  4be00000	jr	r31
  510  0000156c  54000000	nop
  511  00001570          	.endproc _sem_create
  513  00001570          	.proc _sem_wait
  514  00001570          	.global _sem_wait
  515  00001570          	_sem_wait:
  516  00001570  44000451	trap	#0x451
  517  00001574  4be00000	jr	r31
  518  00001578  54000000	nop
  519  0000157c          	.endproc _sem_wait
  521  0000157c          	.proc _sem_signal
  522  0000157c          	.global _sem_signal
  523  0000157c          	_sem_signal:
  524  0000157c  44000452	trap	#0x452
  525  00001580  4be00000	jr	r31
  526  00001584  54000000	nop
  527  00001588          	.endproc _sem_signal
  529  00001588          	.proc _lock_create
  530  00001588          	.global _lock_create
  531  00001588          	_lock_create:
  532  00001588  44000453	trap	#0x453
  533  0000158c  4be00000	jr	r31
  534  00001590  54000000	nop
  535  00001594          	.endproc _lock_create
  537  00001594          	.proc _lock_acquire
  538  00001594          	.global _lock_acquire
  539  00001594          	_lock_acquire:
  540  00001594  44000454	trap	#0x454
  541  00001598  4be00000	jr	r31
  542  0000159c  54000000	nop
  543  000015a0          	.endproc _lock_acquire
  545  000015a0          	.proc _lock_release
  546  000015a0          	.global _lock_release
  547  000015a0          	_lock_release:
  548  000015a0  44000455	trap	#0x455
  549  000015a4  4be00000	jr	r31
  550  000015a8  54000000	nop
  551  000015ac          	.endproc _lock_release
  553  000015ac          	.proc _cond_create
  554  000015ac          	.global _cond_create
  555  000015ac          	_cond_create:
  556  000015ac  44000456	trap	#0x456
  557  000015b0  4be00000	jr	r31
  558  000015b4  54000000	nop
  559  000015b8          	.endproc _cond_create
  561  000015b8          	.proc _cond_wait
  562  000015b8          	.global _cond_wait
  563  000015b8          	_cond_wait:
  564  000015b8  44000457	trap	#0x457
  565  000015bc  4be00000	jr	r31
  566  000015c0  54000000	nop
  567  000015c4          	.endproc _cond_wait
  569  000015c4          	.proc _cond_signal
  570  000015c4          	.global _cond_signal
  571  000015c4          	_cond_signal:
  572  000015c4  44000458	trap	#0x458
  573  000015c8  4be00000	jr	r31
  574  000015cc  54000000	nop
  575  000015d0          	.endproc _cond_signal
  577  000015d0          	.proc _cond_broadcast
  578  000015d0          	.global _cond_broadcast
  579  000015d0          	_cond_broadcast:
  580  000015d0  44000455	trap	#0x455
  581  000015d4  4be00000	jr	r31
  582  000015d8  54000000	nop
  583  000015dc          	.endproc _cond_broadcast
  585  000015dc          	.proc _Exit
  586  000015dc          	.global _Exit
  587  000015dc          	_Exit:
  588  000015dc  44000500	trap	#0x500
  589  000015e0  4be00000	jr	r31
  590  000015e4  54000000	nop
  591  000015e8          	.endproc _Exit
  592                      ; Compiled by GCC
  594  000015e8          	.align 2
  595  000015e8          	.proc _isspace
  596  000015e8          	.global _isspace
  597  000015e8          	_isspace:
  598                      ;  Function 'isspace'; 0 bytes of locals, 3 regs to save.
  599  000015e8  afbefffc	sw	-4(r29),r30; push fp
  600  000015ec  001df020	add	r30,r0,r29; fp = sp
  601  000015f0  afbffff8	sw	-8(r29),r31; push ret addr
  602  000015f4  2fbd0018	subui	r29,r29,#24; alloc local storage
  603  000015f8  afa20000	sw	0(r29),r2
  604  000015fc  afa30004	sw	4(r29),r3
  605  00001600  afa40008	sw	8(r29),r4
  606  00001604  83c20003	lb	r2,3(r30)
  607  00001608  20010000	addi	r1,r0,#0
  608  0000160c  304300ff	andi	r3,r2,#0x00ff
  609  00001610  60640020	seqi	r4,r3,#32
  610  00001614  1480002c	bnez	r4,L3_LF2
  611  00001618  54000000	nop; delay slot nop
  612  0000161c  304300ff	andi	r3,r2,#0x00ff
  613  00001620  60640009	seqi	r4,r3,#9
  614  00001624  1480001c	bnez	r4,L3_LF2
  615  00001628  54000000	nop; delay slot nop
  616  0000162c  304300ff	andi	r3,r2,#0x00ff
  617  00001630  6064000a	seqi	r4,r3,#10
  618  00001634  1480000c	bnez	r4,L3_LF2
  619  00001638  54000000	nop; delay slot nop
  620  0000163c  08000008	j	L2_LF2
  621  00001640  54000000	nop; delay slot nop
  622  00001644          	L3_LF2:
  623  00001644  20010001	addi	r1,r0,#1
  624  00001648          	L2_LF2:
  625  00001648  08000004	j	L1_LF2
  626  0000164c  54000000	nop; delay slot nop
  627  00001650          	L1_LF2:
  628  00001650  8fa20000	lw	r2,0(r29)
  629  00001654  8fa30004	lw	r3,4(r29)
  630  00001658  8fa40008	lw	r4,8(r29)
  631  0000165c  8fdffff8	lw	r31,-8(r30)
  632  00001660  001ee820	add	r29,r0,r30
  633  00001664  8fdefffc	lw	r30,-4(r30)
  634  00001668  4be00000	jr	r31
  635  0000166c  54000000	nop
  636  00001670          	.endproc _isspace
  637  00001670          	.align 2
  638  00001670          	.proc _isxdigit
  639  00001670          	.global _isxdigit
  640  00001670          	_isxdigit:
  641                      ;  Function 'isxdigit'; 0 bytes of locals, 3 regs to save.
  642  00001670  afbefffc	sw	-4(r29),r30; push fp
  643  00001674  001df020	add	r30,r0,r29; fp = sp
  644  00001678  afbffff8	sw	-8(r29),r31; push ret addr
  645  0000167c  2fbd0018	subui	r29,r29,#24; alloc local storage
  646  00001680  afa20000	sw	0(r29),r2
  647  00001684  afa30004	sw	4(r29),r3
  648  00001688  afa40008	sw	8(r29),r4
  649  0000168c  83c20003	lb	r2,3(r30)
  650  00001690  20010000	addi	r1,r0,#0
  651  00001694  304300ff	andi	r3,r2,#0x00ff
  652  00001698  6c64002f	sgtui	r4,r3,#47
  653  0000169c  1080001c	beqz	r4,L7_LF2
  654  000016a0  54000000	nop; delay slot nop
  655  000016a4  304300ff	andi	r3,r2,#0x00ff
  656  000016a8  70640039	sleui	r4,r3,#57
  657  000016ac  1480005c	bnez	r4,L6_LF2
  658  000016b0  54000000	nop; delay slot nop
  659  000016b4  08000004	j	L7_LF2
  660  000016b8  54000000	nop; delay slot nop
  661  000016bc          	L7_LF2:
  662  000016bc  304300ff	andi	r3,r2,#0x00ff
  663  000016c0  6c640060	sgtui	r4,r3,#96
  664  000016c4  1080001c	beqz	r4,L8_LF2
  665  000016c8  54000000	nop; delay slot nop
  666  000016cc  304300ff	andi	r3,r2,#0x00ff
  667  000016d0  70640066	sleui	r4,r3,#102
  668  000016d4  14800034	bnez	r4,L6_LF2
  669  000016d8  54000000	nop; delay slot nop
  670  000016dc  08000004	j	L8_LF2
  671  000016e0  54000000	nop; delay slot nop
  672  000016e4          	L8_LF2:
  673  000016e4  304300ff	andi	r3,r2,#0x00ff
  674  000016e8  6c640040	sgtui	r4,r3,#64
  675  000016ec  10800020	beqz	r4,L5_LF2
  676  000016f0  54000000	nop; delay slot nop
  677  000016f4  304300ff	andi	r3,r2,#0x00ff
  678  000016f8  70640041	sleui	r4,r3,#65
  679  000016fc  1480000c	bnez	r4,L6_LF2
  680  00001700  54000000	nop; delay slot nop
  681  00001704  08000008	j	L5_LF2
  682  00001708  54000000	nop; delay slot nop
  683  0000170c          	L6_LF2:
  684  0000170c  20010001	addi	r1,r0,#1
  685  00001710          	L5_LF2:
  686  00001710  08000004	j	L4_LF2
  687  00001714  54000000	nop; delay slot nop
  688  00001718          	L4_LF2:
  689  00001718  8fa20000	lw	r2,0(r29)
  690  0000171c  8fa30004	lw	r3,4(r29)
  691  00001720  8fa40008	lw	r4,8(r29)
  692  00001724  8fdffff8	lw	r31,-8(r30)
  693  00001728  001ee820	add	r29,r0,r30
  694  0000172c  8fdefffc	lw	r30,-4(r30)
  695  00001730  4be00000	jr	r31
  696  00001734  54000000	nop
  697  00001738          	.endproc _isxdigit
  698  00001738          	.align 2
  699  00001738          	.proc _dstrcpy
  700  00001738          	.global _dstrcpy
  701  00001738          	_dstrcpy:
  702                      ;  Function 'dstrcpy'; 8 bytes of locals, 2 regs to save.
  703  00001738  afbefffc	sw	-4(r29),r30; push fp
  704  0000173c  001df020	add	r30,r0,r29; fp = sp
  705  00001740  afbffff8	sw	-8(r29),r31; push ret addr
  706  00001744  2fbd0018	subui	r29,r29,#24; alloc local storage
  707  00001748  afa20000	sw	0(r29),r2
  708  0000174c  afa30004	sw	4(r29),r3
  709  00001750  8fc10000	lw	r1,(r30)
  710  00001754  afc1fff4	sw	-12(r30),r1
  711  00001758          	L10_LF2:
  712  00001758  8fc10000	lw	r1,(r30)
  713  0000175c  20220001	addi	r2,r1,#1
  714  00001760  afc20000	sw	(r30),r2
  715  00001764  8fc20004	lw	r2,4(r30)
  716  00001768  20430001	addi	r3,r2,#1
  717  0000176c  afc30004	sw	4(r30),r3
  718  00001770  80420000	lb	r2,(r2)
  719  00001774  a0220000	sb	(r1),r2
  720  00001778  a3c2fff3	sb	-13(r30),r2
  721  0000177c          	L12_LF2:
  722  0000177c  93c1fff3	lbu	r1,-13(r30)
  723  00001780  64220000	snei	r2,r1,#0
  724  00001784  1440000c	bnez	r2,L13_LF2
  725  00001788  54000000	nop; delay slot nop
  726  0000178c  0800000c	j	L11_LF2
  727  00001790  54000000	nop; delay slot nop
  728  00001794          	L13_LF2:
  729  00001794  0bffffc0	j	L10_LF2
  730  00001798  54000000	nop; delay slot nop
  731  0000179c          	L11_LF2:
  732  0000179c  8fc1fff4	lw	r1,-12(r30)
  733  000017a0  08000004	j	L9_LF2
  734  000017a4  54000000	nop; delay slot nop
  735  000017a8          	L9_LF2:
  736  000017a8  8fa20000	lw	r2,0(r29)
  737  000017ac  8fa30004	lw	r3,4(r29)
  738  000017b0  8fdffff8	lw	r31,-8(r30)
  739  000017b4  001ee820	add	r29,r0,r30
  740  000017b8  8fdefffc	lw	r30,-4(r30)
  741  000017bc  4be00000	jr	r31
  742  000017c0  54000000	nop
  743  000017c4          	.endproc _dstrcpy
  744  000017c4          	.align 2
  745  000017c4          	.proc _dstrncpy
  746  000017c4          	.global _dstrncpy
  747  000017c4          	_dstrncpy:
  748                      ;  Function 'dstrncpy'; 8 bytes of locals, 2 regs to save.
  749  000017c4  afbefffc	sw	-4(r29),r30; push fp
  750  000017c8  001df020	add	r30,r0,r29; fp = sp
  751  000017cc  afbffff8	sw	-8(r29),r31; push ret addr
  752  000017d0  2fbd0018	subui	r29,r29,#24; alloc local storage
  753  000017d4  afa20000	sw	0(r29),r2
  754  000017d8  afa30004	sw	4(r29),r3
  755  000017dc  8fc10000	lw	r1,(r30)
  756  000017e0  afc1fff4	sw	-12(r30),r1
  757  000017e4          	L15_LF2:
  758  000017e4  8fc10008	lw	r1,8(r30)
  759  000017e8  2022ffff	addi	r2,r1,#-1
  760  000017ec  afc20008	sw	8(r30),r2
  761  000017f0  70210000	slei	r1,r1,#0
  762  000017f4  1020000c	beqz	r1,L18_LF2
  763  000017f8  54000000	nop; delay slot nop
  764  000017fc  08000048	j	L16_LF2
  765  00001800  54000000	nop; delay slot nop
  766  00001804          	L18_LF2:
  767  00001804  8fc10000	lw	r1,(r30)
  768  00001808  20220001	addi	r2,r1,#1
  769  0000180c  afc20000	sw	(r30),r2
  770  00001810  8fc20004	lw	r2,4(r30)
  771  00001814  20430001	addi	r3,r2,#1
  772  00001818  afc30004	sw	4(r30),r3
  773  0000181c  80420000	lb	r2,(r2)
  774  00001820  a0220000	sb	(r1),r2
  775  00001824  a3c2fff3	sb	-13(r30),r2
  776  00001828          	L17_LF2:
  777  00001828  93c1fff3	lbu	r1,-13(r30)
  778  0000182c  64220000	snei	r2,r1,#0
  779  00001830  1440000c	bnez	r2,L19_LF2
  780  00001834  54000000	nop; delay slot nop
  781  00001838  0800000c	j	L16_LF2
  782  0000183c  54000000	nop; delay slot nop
  783  00001840          	L19_LF2:
  784  00001840  0bffffa0	j	L15_LF2
  785  00001844  54000000	nop; delay slot nop
  786  00001848          	L16_LF2:
  787  00001848  8fc1fff4	lw	r1,-12(r30)
  788  0000184c  08000004	j	L14_LF2
  789  00001850  54000000	nop; delay slot nop
  790  00001854          	L14_LF2:
  791  00001854  8fa20000	lw	r2,0(r29)
  792  00001858  8fa30004	lw	r3,4(r29)
  793  0000185c  8fdffff8	lw	r31,-8(r30)
  794  00001860  001ee820	add	r29,r0,r30
  795  00001864  8fdefffc	lw	r30,-4(r30)
  796  00001868  4be00000	jr	r31
  797  0000186c  54000000	nop
  798  00001870          	.endproc _dstrncpy
  799  00001870          	.align 2
  800  00001870          	.proc _dstrcat
  801  00001870          	.global _dstrcat
  802  00001870          	_dstrcat:
  803                      ;  Function 'dstrcat'; 8 bytes of locals, 1 regs to save.
  804  00001870  afbefffc	sw	-4(r29),r30; push fp
  805  00001874  001df020	add	r30,r0,r29; fp = sp
  806  00001878  afbffff8	sw	-8(r29),r31; push ret addr
  807  0000187c  2fbd0018	subui	r29,r29,#24; alloc local storage
  808  00001880  afa20000	sw	0(r29),r2
  809  00001884  8fc10000	lw	r1,(r30)
  810  00001888  afc1fff4	sw	-12(r30),r1
  811  0000188c          	L21_LF2:
  812  0000188c  8fc10000	lw	r1,(r30)
  813  00001890  90220000	lbu	r2,(r1)
  814  00001894  64410000	snei	r1,r2,#0
  815  00001898  1420000c	bnez	r1,L23_LF2
  816  0000189c  54000000	nop; delay slot nop
  817  000018a0  0800001c	j	L22_LF2
  818  000018a4  54000000	nop; delay slot nop
  819  000018a8          	L23_LF2:
  820  000018a8  8fc20000	lw	r2,(r30)
  821  000018ac  20410001	addi	r1,r2,#1
  822  000018b0  00011020	add	r2,r0,r1
  823  000018b4  afc20000	sw	(r30),r2
  824  000018b8  0bffffd0	j	L21_LF2
  825  000018bc  54000000	nop; delay slot nop
  826  000018c0          	L22_LF2:
  827  000018c0  23bdfff8	addi	r29,r29,#-8
  828  000018c4  001d0820	add	r1,r0,r29
  829  000018c8  8fc20000	lw	r2,(r30)
  830  000018cc  ac220000	sw	(r1),r2
  831  000018d0  8fc20004	lw	r2,4(r30)
  832  000018d4  ac220004	sw	4(r1),r2
  833  000018d8  0ffffe5c	jal	_dstrcpy
  834  000018dc  54000000	nop; delay slot nop
  835  000018e0  23bd0008	addi	r29,r29,#8
  836  000018e4  8fc1fff4	lw	r1,-12(r30)
  837  000018e8  08000004	j	L20_LF2
  838  000018ec  54000000	nop; delay slot nop
  839  000018f0          	L20_LF2:
  840  000018f0  8fa20000	lw	r2,0(r29)
  841  000018f4  8fdffff8	lw	r31,-8(r30)
  842  000018f8  001ee820	add	r29,r0,r30
  843  000018fc  8fdefffc	lw	r30,-4(r30)
  844  00001900  4be00000	jr	r31
  845  00001904  54000000	nop
  846  00001908          	.endproc _dstrcat
  847  00001908          	.align 2
  848  00001908          	.proc _dstrncmp
  849  00001908          	.global _dstrncmp
  850  00001908          	_dstrncmp:
  851                      ;  Function 'dstrncmp'; 8 bytes of locals, 2 regs to save.
  852  00001908  afbefffc	sw	-4(r29),r30; push fp
  853  0000190c  001df020	add	r30,r0,r29; fp = sp
  854  00001910  afbffff8	sw	-8(r29),r31; push ret addr
  855  00001914  2fbd0018	subui	r29,r29,#24; alloc local storage
  856  00001918  afa20000	sw	0(r29),r2
  857  0000191c  afa30004	sw	4(r29),r3
  858  00001920  54000000	nop
  859  00001924  20010000	addi	r1,r0,#0
  860  00001928  afc1fff4	sw	-12(r30),r1
  861  0000192c          	L25_LF2:
  862  0000192c  8fc1fff4	lw	r1,-12(r30)
  863  00001930  8fc20008	lw	r2,8(r30)
  864  00001934  0022082a	slt	r1,r1,r2
  865  00001938  1420000c	bnez	r1,L28_LF2
  866  0000193c  54000000	nop; delay slot nop
  867  00001940  08000088	j	L26_LF2
  868  00001944  54000000	nop; delay slot nop
  869  00001948          	L28_LF2:
  870  00001948  8fc10004	lw	r1,4(r30)
  871  0000194c  90220000	lbu	r2,(r1)
  872  00001950  64410000	snei	r1,r2,#0
  873  00001954  14200018	bnez	r1,L29_LF2
  874  00001958  54000000	nop; delay slot nop
  875  0000195c  20010000	addi	r1,r0,#0
  876  00001960  080000d8	j	L24_LF2
  877  00001964  54000000	nop; delay slot nop
  878  00001968  08000028	j	L30_LF2
  879  0000196c  54000000	nop; delay slot nop
  880  00001970          	L29_LF2:
  881  00001970  8fc10000	lw	r1,(r30)
  882  00001974  8fc20004	lw	r2,4(r30)
  883  00001978  90210000	lbu	r1,(r1)
  884  0000197c  90420000	lbu	r2,(r2)
  885  00001980  00220829	sne	r1,r1,r2
  886  00001984  1020000c	beqz	r1,L30_LF2
  887  00001988  54000000	nop; delay slot nop
  888  0000198c  0800003c	j	L26_LF2
  889  00001990  54000000	nop; delay slot nop
  890  00001994          	L31_LF2:
  891  00001994          	L30_LF2:
  892  00001994  8fc20000	lw	r2,(r30)
  893  00001998  20410001	addi	r1,r2,#1
  894  0000199c  00011020	add	r2,r0,r1
  895  000019a0  afc20000	sw	(r30),r2
  896  000019a4  8fc20004	lw	r2,4(r30)
  897  000019a8  20410001	addi	r1,r2,#1
  898  000019ac  00011020	add	r2,r0,r1
  899  000019b0  afc20004	sw	4(r30),r2
  900  000019b4          	L27_LF2:
  901  000019b4  8fc2fff4	lw	r2,-12(r30)
  902  000019b8  20410001	addi	r1,r2,#1
  903  000019bc  00011020	add	r2,r0,r1
  904  000019c0  afc2fff4	sw	-12(r30),r2
  905  000019c4  0bffff64	j	L25_LF2
  906  000019c8  54000000	nop; delay slot nop
  907  000019cc          	L26_LF2:
  908  000019cc  8fc1fff4	lw	r1,-12(r30)
  909  000019d0  8fc20008	lw	r2,8(r30)
  910  000019d4  00220828	seq	r1,r1,r2
  911  000019d8  10200018	beqz	r1,L32_LF2
  912  000019dc  54000000	nop; delay slot nop
  913  000019e0  20010000	addi	r1,r0,#0
  914  000019e4  08000054	j	L24_LF2
  915  000019e8  54000000	nop; delay slot nop
  916  000019ec  0800004c	j	L33_LF2
  917  000019f0  54000000	nop; delay slot nop
  918  000019f4          	L32_LF2:
  919  000019f4  8fc20000	lw	r2,(r30)
  920  000019f8  90410000	lbu	r1,(r2)
  921  000019fc  8fc20004	lw	r2,4(r30)
  922  00001a00  90430000	lbu	r3,(r2)
  923  00001a04  00230822	sub	r1,r1,r3
  924  00001a08  74220000	sgei	r2,r1,#0
  925  00001a0c  10400020	beqz	r2,L34_LF2
  926  00001a10  54000000	nop; delay slot nop
  927  00001a14  8fc10000	lw	r1,(r30)
  928  00001a18  8fc20004	lw	r2,4(r30)
  929  00001a1c  90210000	lbu	r1,(r1)
  930  00001a20  90420000	lbu	r2,(r2)
  931  00001a24  00220829	sne	r1,r1,r2
  932  00001a28  08000008	j	L35_LF2
  933  00001a2c  54000000	nop; delay slot nop
  934  00001a30          	L34_LF2:
  935  00001a30  2001ffff	addi	r1,r0,#-1
  936  00001a34          	L35_LF2:
  937  00001a34  08000004	j	L24_LF2
  938  00001a38  54000000	nop; delay slot nop
  939  00001a3c          	L33_LF2:
  940  00001a3c          	L24_LF2:
  941  00001a3c  8fa20000	lw	r2,0(r29)
  942  00001a40  8fa30004	lw	r3,4(r29)
  943  00001a44  8fdffff8	lw	r31,-8(r30)
  944  00001a48  001ee820	add	r29,r0,r30
  945  00001a4c  8fdefffc	lw	r30,-4(r30)
  946  00001a50  4be00000	jr	r31
  947  00001a54  54000000	nop
  948  00001a58          	.endproc _dstrncmp
  949  00001a58          	.align 2
  950  00001a58          	.proc _dstrlen
  951  00001a58          	.global _dstrlen
  952  00001a58          	_dstrlen:
  953                      ;  Function 'dstrlen'; 8 bytes of locals, 1 regs to save.
  954  00001a58  afbefffc	sw	-4(r29),r30; push fp
  955  00001a5c  001df020	add	r30,r0,r29; fp = sp
  956  00001a60  afbffff8	sw	-8(r29),r31; push ret addr
  957  00001a64  2fbd0018	subui	r29,r29,#24; alloc local storage
  958  00001a68  afa20000	sw	0(r29),r2
  959  00001a6c  20010000	addi	r1,r0,#0
  960  00001a70  afc1fff4	sw	-12(r30),r1
  961  00001a74          	L37_LF2:
  962  00001a74  8fc10000	lw	r1,(r30)
  963  00001a78  20220001	addi	r2,r1,#1
  964  00001a7c  afc20000	sw	(r30),r2
  965  00001a80  90210000	lbu	r1,(r1)
  966  00001a84  64220000	snei	r2,r1,#0
  967  00001a88  1440000c	bnez	r2,L39_LF2
  968  00001a8c  54000000	nop; delay slot nop
  969  00001a90  0800001c	j	L38_LF2
  970  00001a94  54000000	nop; delay slot nop
  971  00001a98          	L39_LF2:
  972  00001a98  8fc2fff4	lw	r2,-12(r30)
  973  00001a9c  20410001	addi	r1,r2,#1
  974  00001aa0  00011020	add	r2,r0,r1
  975  00001aa4  afc2fff4	sw	-12(r30),r2
  976  00001aa8  0bffffc8	j	L37_LF2
  977  00001aac  54000000	nop; delay slot nop
  978  00001ab0          	L38_LF2:
  979  00001ab0  8fc1fff4	lw	r1,-12(r30)
  980  00001ab4  08000004	j	L36_LF2
  981  00001ab8  54000000	nop; delay slot nop
  982  00001abc          	L36_LF2:
  983  00001abc  8fa20000	lw	r2,0(r29)
  984  00001ac0  8fdffff8	lw	r31,-8(r30)
  985  00001ac4  001ee820	add	r29,r0,r30
  986  00001ac8  8fdefffc	lw	r30,-4(r30)
  987  00001acc  4be00000	jr	r31
  988  00001ad0  54000000	nop
  989  00001ad4          	.endproc _dstrlen
  990  00001ad4          	.align 2
  991  00001ad4          	.proc _dstrstr
  992  00001ad4          	.global _dstrstr
  993  00001ad4          	_dstrstr:
  994                      ;  Function 'dstrstr'; 8 bytes of locals, 1 regs to save.
  995  00001ad4  afbefffc	sw	-4(r29),r30; push fp
  996  00001ad8  001df020	add	r30,r0,r29; fp = sp
  997  00001adc  afbffff8	sw	-8(r29),r31; push ret addr
  998  00001ae0  2fbd0018	subui	r29,r29,#24; alloc local storage
  999  00001ae4  afa20000	sw	0(r29),r2
 1000  00001ae8  23bdfff8	addi	r29,r29,#-8
 1001  00001aec  001d0820	add	r1,r0,r29
 1002  00001af0  8fc20004	lw	r2,4(r30)
 1003  00001af4  ac220000	sw	(r1),r2
 1004  00001af8  0fffff5c	jal	_dstrlen
 1005  00001afc  54000000	nop; delay slot nop
 1006  00001b00  23bd0008	addi	r29,r29,#8
 1007  00001b04  afc1fff4	sw	-12(r30),r1
 1008  00001b08          	L41_LF2:
 1009  00001b08  8fc10000	lw	r1,(r30)
 1010  00001b0c  90220000	lbu	r2,(r1)
 1011  00001b10  64410000	snei	r1,r2,#0
 1012  00001b14  1420000c	bnez	r1,L43_LF2
 1013  00001b18  54000000	nop; delay slot nop
 1014  00001b1c  08000060	j	L42_LF2
 1015  00001b20  54000000	nop; delay slot nop
 1016  00001b24          	L43_LF2:
 1017  00001b24  23bdfff0	addi	r29,r29,#-16
 1018  00001b28  001d0820	add	r1,r0,r29
 1019  00001b2c  8fc20000	lw	r2,(r30)
 1020  00001b30  ac220000	sw	(r1),r2
 1021  00001b34  8fc20004	lw	r2,4(r30)
 1022  00001b38  ac220004	sw	4(r1),r2
 1023  00001b3c  8fc2fff4	lw	r2,-12(r30)
 1024  00001b40  ac220008	sw	8(r1),r2
 1025  00001b44  0ffffdc0	jal	_dstrncmp
 1026  00001b48  54000000	nop; delay slot nop
 1027  00001b4c  23bd0010	addi	r29,r29,#16
 1028  00001b50  64220000	snei	r2,r1,#0
 1029  00001b54  14400010	bnez	r2,L44_LF2
 1030  00001b58  54000000	nop; delay slot nop
 1031  00001b5c  8fc10000	lw	r1,(r30)
 1032  00001b60  08000028	j	L40_LF2
 1033  00001b64  54000000	nop; delay slot nop
 1034  00001b68          	L44_LF2:
 1035  00001b68  8fc20000	lw	r2,(r30)
 1036  00001b6c  20410001	addi	r1,r2,#1
 1037  00001b70  00011020	add	r2,r0,r1
 1038  00001b74  afc20000	sw	(r30),r2
 1039  00001b78  0bffff8c	j	L41_LF2
 1040  00001b7c  54000000	nop; delay slot nop
 1041  00001b80          	L42_LF2:
 1042  00001b80  20010000	addi	r1,r0,#0
 1043  00001b84  08000004	j	L40_LF2
 1044  00001b88  54000000	nop; delay slot nop
 1045  00001b8c          	L40_LF2:
 1046  00001b8c  8fa20000	lw	r2,0(r29)
 1047  00001b90  8fdffff8	lw	r31,-8(r30)
 1048  00001b94  001ee820	add	r29,r0,r30
 1049  00001b98  8fdefffc	lw	r30,-4(r30)
 1050  00001b9c  4be00000	jr	r31
 1051  00001ba0  54000000	nop
 1052  00001ba4          	.endproc _dstrstr
 1053  00001ba4          	.align 2
 1054  00001ba4          	.proc _dmindex
 1055  00001ba4          	.global _dmindex
 1056  00001ba4          	_dmindex:
 1057                      ;  Function 'dmindex'; 8 bytes of locals, 1 regs to save.
 1058  00001ba4  afbefffc	sw	-4(r29),r30; push fp
 1059  00001ba8  001df020	add	r30,r0,r29; fp = sp
 1060  00001bac  afbffff8	sw	-8(r29),r31; push ret addr
 1061  00001bb0  2fbd0018	subui	r29,r29,#24; alloc local storage
 1062  00001bb4  afa20000	sw	0(r29),r2
 1063  00001bb8  54000000	nop
 1064  00001bbc          	L46_LF2:
 1065  00001bbc  8fc10000	lw	r1,(r30)
 1066  00001bc0  90220000	lbu	r2,(r1)
 1067  00001bc4  64410000	snei	r1,r2,#0
 1068  00001bc8  1420000c	bnez	r1,L48_LF2
 1069  00001bcc  54000000	nop; delay slot nop
 1070  00001bd0  08000070	j	L47_LF2
 1071  00001bd4  54000000	nop; delay slot nop
 1072  00001bd8          	L48_LF2:
 1073  00001bd8  8fc10004	lw	r1,4(r30)
 1074  00001bdc  afc1fff4	sw	-12(r30),r1
 1075  00001be0          	L49_LF2:
 1076  00001be0  8fc1fff4	lw	r1,-12(r30)
 1077  00001be4  90220000	lbu	r2,(r1)
 1078  00001be8  64410000	snei	r1,r2,#0
 1079  00001bec  1420000c	bnez	r1,L52_LF2
 1080  00001bf0  54000000	nop; delay slot nop
 1081  00001bf4  08000044	j	L50_LF2
 1082  00001bf8  54000000	nop; delay slot nop
 1083  00001bfc          	L52_LF2:
 1084  00001bfc  8fc10000	lw	r1,(r30)
 1085  00001c00  8fc2fff4	lw	r2,-12(r30)
 1086  00001c04  90210000	lbu	r1,(r1)
 1087  00001c08  90420000	lbu	r2,(r2)
 1088  00001c0c  00220828	seq	r1,r1,r2
 1089  00001c10  10200010	beqz	r1,L51_LF2
 1090  00001c14  54000000	nop; delay slot nop
 1091  00001c18  8fc10000	lw	r1,(r30)
 1092  00001c1c  08000030	j	L45_LF2
 1093  00001c20  54000000	nop; delay slot nop
 1094  00001c24          	L53_LF2:
 1095  00001c24          	L51_LF2:
 1096  00001c24  8fc2fff4	lw	r2,-12(r30)
 1097  00001c28  20410001	addi	r1,r2,#1
 1098  00001c2c  00011020	add	r2,r0,r1
 1099  00001c30  afc2fff4	sw	-12(r30),r2
 1100  00001c34  0bffffa8	j	L49_LF2
 1101  00001c38  54000000	nop; delay slot nop
 1102  00001c3c          	L50_LF2:
 1103  00001c3c  0bffff7c	j	L46_LF2
 1104  00001c40  54000000	nop; delay slot nop
 1105  00001c44          	L47_LF2:
 1106  00001c44  20010000	addi	r1,r0,#0
 1107  00001c48  08000004	j	L45_LF2
 1108  00001c4c  54000000	nop; delay slot nop
 1109  00001c50          	L45_LF2:
 1110  00001c50  8fa20000	lw	r2,0(r29)
 1111  00001c54  8fdffff8	lw	r31,-8(r30)
 1112  00001c58  001ee820	add	r29,r0,r30
 1113  00001c5c  8fdefffc	lw	r30,-4(r30)
 1114  00001c60  4be00000	jr	r31
 1115  00001c64  54000000	nop
 1116  00001c68          	.endproc _dmindex
 1117  00001c68          	.align 2
 1118  00001c68          	.proc _dindex
 1119  00001c68          	.global _dindex
 1120  00001c68          	_dindex:
 1121                      ;  Function 'dindex'; 0 bytes of locals, 1 regs to save.
 1122  00001c68  afbefffc	sw	-4(r29),r30; push fp
 1123  00001c6c  001df020	add	r30,r0,r29; fp = sp
 1124  00001c70  afbffff8	sw	-8(r29),r31; push ret addr
 1125  00001c74  2fbd0010	subui	r29,r29,#16; alloc local storage
 1126  00001c78  afa20000	sw	0(r29),r2
 1127  00001c7c  54000000	nop
 1128  00001c80          	L55_LF2:
 1129  00001c80  8fc10000	lw	r1,(r30)
 1130  00001c84  90220000	lbu	r2,(r1)
 1131  00001c88  64410000	snei	r1,r2,#0
 1132  00001c8c  1420000c	bnez	r1,L57_LF2
 1133  00001c90  54000000	nop; delay slot nop
 1134  00001c94  08000040	j	L56_LF2
 1135  00001c98  54000000	nop; delay slot nop
 1136  00001c9c          	L57_LF2:
 1137  00001c9c  8fc10000	lw	r1,(r30)
 1138  00001ca0  90220000	lbu	r2,(r1)
 1139  00001ca4  8fc10004	lw	r1,4(r30)
 1140  00001ca8  00411028	seq	r2,r2,r1
 1141  00001cac  10400010	beqz	r2,L58_LF2
 1142  00001cb0  54000000	nop; delay slot nop
 1143  00001cb4  8fc10000	lw	r1,(r30)
 1144  00001cb8  08000028	j	L54_LF2
 1145  00001cbc  54000000	nop; delay slot nop
 1146  00001cc0          	L58_LF2:
 1147  00001cc0  8fc20000	lw	r2,(r30)
 1148  00001cc4  20410001	addi	r1,r2,#1
 1149  00001cc8  00011020	add	r2,r0,r1
 1150  00001ccc  afc20000	sw	(r30),r2
 1151  00001cd0  0bffffac	j	L55_LF2
 1152  00001cd4  54000000	nop; delay slot nop
 1153  00001cd8          	L56_LF2:
 1154  00001cd8  20010000	addi	r1,r0,#0
 1155  00001cdc  08000004	j	L54_LF2
 1156  00001ce0  54000000	nop; delay slot nop
 1157  00001ce4          	L54_LF2:
 1158  00001ce4  8fa20000	lw	r2,0(r29)
 1159  00001ce8  8fdffff8	lw	r31,-8(r30)
 1160  00001cec  001ee820	add	r29,r0,r30
 1161  00001cf0  8fdefffc	lw	r30,-4(r30)
 1162  00001cf4  4be00000	jr	r31
 1163  00001cf8  54000000	nop
 1164  00001cfc          	.endproc _dindex
 1165  00001cfc          	.align 2
 1166  00001cfc          	.proc _ditoa
 1167  00001cfc          	.global _ditoa
 1168  00001cfc          	_ditoa:
 1169                      ;  Function 'ditoa'; 8 bytes of locals, 2 regs to save.
 1170  00001cfc  afbefffc	sw	-4(r29),r30; push fp
 1171  00001d00  001df020	add	r30,r0,r29; fp = sp
 1172  00001d04  afbffff8	sw	-8(r29),r31; push ret addr
 1173  00001d08  2fbd0018	subui	r29,r29,#24; alloc local storage
 1174  00001d0c  afa20000	sw	0(r29),r2
 1175  00001d10  afa30004	sw	4(r29),r3
 1176  00001d14  8fc10000	lw	r1,(r30)
 1177  00001d18  68220000	slti	r2,r1,#0
 1178  00001d1c  1040002c	beqz	r2,L60_LF2
 1179  00001d20  54000000	nop; delay slot nop
 1180  00001d24  8fc10004	lw	r1,4(r30)
 1181  00001d28  20220001	addi	r2,r1,#1
 1182  00001d2c  afc20004	sw	4(r30),r2
 1183  00001d30  2002002d	addi	r2,r0,(#0x2d)&0xff
 1184  00001d34  a0220000	sb	(r1),r2
 1185  00001d38  8fc10000	lw	r1,(r30)
 1186  00001d3c  00011022	sub	r2,r0,r1
 1187  00001d40  afc20000	sw	(r30),r2
 1188  00001d44  08000118	j	L61_LF2
 1189  00001d48  54000000	nop; delay slot nop
 1190  00001d4c          	L60_LF2:
 1191  00001d4c  8fc10000	lw	r1,(r30)
 1192  00001d50  64220000	snei	r2,r1,#0
 1193  00001d54  14400020	bnez	r2,L62_LF2
 1194  00001d58  54000000	nop; delay slot nop
 1195  00001d5c  8fc10004	lw	r1,4(r30)
 1196  00001d60  20220001	addi	r2,r1,#1
 1197  00001d64  afc20004	sw	4(r30),r2
 1198  00001d68  20020030	addi	r2,r0,(#0x30)&0xff
 1199  00001d6c  a0220000	sb	(r1),r2
 1200  00001d70  080000ec	j	L61_LF2
 1201  00001d74  54000000	nop; delay slot nop
 1202  00001d78          	L62_LF2:
 1203  00001d78  20010001	addi	r1,r0,#1
 1204  00001d7c  afc1fff4	sw	-12(r30),r1
 1205  00001d80          	L64_LF2:
 1206  00001d80  8fc1fff4	lw	r1,-12(r30)
 1207  00001d84  8fc20000	lw	r2,(r30)
 1208  00001d88  0022082c	sle	r1,r1,r2
 1209  00001d8c  1420000c	bnez	r1,L66_LF2
 1210  00001d90  54000000	nop; delay slot nop
 1211  00001d94  08000024	j	L65_LF2
 1212  00001d98  54000000	nop; delay slot nop
 1213  00001d9c          	L67_LF2:
 1214  00001d9c          	L66_LF2:
 1215  00001d9c  8fc1fff4	lw	r1,-12(r30)
 1216  00001da0  00011820	add	r3,r0,r1
 1217  00001da4  50620002	slli	r2,r3,#0x2
 1218  00001da8  00411020	add	r2,r2,r1
 1219  00001dac  50410001	slli	r1,r2,#0x1
 1220  00001db0  afc1fff4	sw	-12(r30),r1
 1221  00001db4  0bffffc8	j	L64_LF2
 1222  00001db8  54000000	nop; delay slot nop
 1223  00001dbc          	L65_LF2:
 1224  00001dbc  54000000	nop
 1225  00001dc0          	L68_LF2:
 1226  00001dc0  8fc1fff4	lw	r1,-12(r30)
 1227  00001dc4  2002000a	addi	r2,r0,#10
 1228  00001dc8  00200035	movi2fp	f0,r1
 1229  00001dcc  00400835	movi2fp	f1,r2
 1230  00001dd0  0401000f	div	f0,f0,f1
 1231  00001dd4  00000834	movfp2i	r1,f0
 1232  00001dd8  afc1fff4	sw	-12(r30),r1
 1233  00001ddc  8fc10004	lw	r1,4(r30)
 1234  00001de0  20220001	addi	r2,r1,#1
 1235  00001de4  afc20004	sw	4(r30),r2
 1236  00001de8  8fc20000	lw	r2,(r30)
 1237  00001dec  8fc3fff4	lw	r3,-12(r30)
 1238  00001df0  00400035	movi2fp	f0,r2
 1239  00001df4  00600835	movi2fp	f1,r3
 1240  00001df8  0401000f	div	f0,f0,f1
 1241  00001dfc  00001034	movfp2i	r2,f0
 1242  00001e00  00021820	add	r3,r0,r2
 1243  00001e04  20620030	addi	r2,r3,#48
 1244  00001e08  a0220000	sb	(r1),r2
 1245  00001e0c  8fc10000	lw	r1,(r30)
 1246  00001e10  8fc3fff4	lw	r3,-12(r30)
 1247  00001e14  00200035	movi2fp	f0,r1
 1248  00001e18  00600835	movi2fp	f1,r3
 1249  00001e1c  0401000f	div	f0,f0,f1
 1250  00001e20  00001034	movfp2i	r2,f0
 1251  00001e24  8fc3fff4	lw	r3,-12(r30)
 1252  00001e28  00400035	movi2fp	f0,r2
 1253  00001e2c  00600835	movi2fp	f1,r3
 1254  00001e30  0401000e	mult	f0,f0,f1
 1255  00001e34  00001034	movfp2i	r2,f0
 1256  00001e38  00220822	sub	r1,r1,r2
 1257  00001e3c  afc10000	sw	(r30),r1
 1258  00001e40          	L70_LF2:
 1259  00001e40  8fc1fff4	lw	r1,-12(r30)
 1260  00001e44  6c220001	sgti	r2,r1,#1
 1261  00001e48  1440000c	bnez	r2,L71_LF2
 1262  00001e4c  54000000	nop; delay slot nop
 1263  00001e50  0800000c	j	L61_LF2
 1264  00001e54  54000000	nop; delay slot nop
 1265  00001e58          	L71_LF2:
 1266  00001e58  0bffff64	j	L68_LF2
 1267  00001e5c  54000000	nop; delay slot nop
 1268  00001e60          	L69_LF2:
 1269  00001e60          	L63_LF2:
 1270  00001e60          	L61_LF2:
 1271  00001e60  8fc10004	lw	r1,4(r30)
 1272  00001e64  20020000	addi	r2,r0,(#0x0)&0xff
 1273  00001e68  a0220000	sb	(r1),r2
 1274  00001e6c          	L59_LF2:
 1275  00001e6c  8fa20000	lw	r2,0(r29)
 1276  00001e70  8fa30004	lw	r3,4(r29)
 1277  00001e74  8fdffff8	lw	r31,-8(r30)
 1278  00001e78  001ee820	add	r29,r0,r30
 1279  00001e7c  8fdefffc	lw	r30,-4(r30)
 1280  00001e80  4be00000	jr	r31
 1281  00001e84  54000000	nop
 1282  00001e88          	.endproc _ditoa
 1283  00001e88          	.align 2
 1284  00001e88          	.proc _dstrtol
 1285  00001e88          	.global _dstrtol
 1286  00001e88          	_dstrtol:
 1287                      ;  Function 'dstrtol'; 16 bytes of locals, 1 regs to save.
 1288  00001e88  afbefffc	sw	-4(r29),r30; push fp
 1289  00001e8c  001df020	add	r30,r0,r29; fp = sp
 1290  00001e90  afbffff8	sw	-8(r29),r31; push ret addr
 1291  00001e94  2fbd0020	subui	r29,r29,#32; alloc local storage
 1292  00001e98  afa20000	sw	0(r29),r2
 1293  00001e9c  20010000	addi	r1,r0,#0
 1294  00001ea0  afc1fff4	sw	-12(r30),r1
 1295  00001ea4          	L73_LF2:
 1296  00001ea4  8fc10000	lw	r1,(r30)
 1297  00001ea8  90220000	lbu	r2,(r1)
 1298  00001eac  60410020	seqi	r1,r2,#32
 1299  00001eb0  14200034	bnez	r1,L75_LF2
 1300  00001eb4  54000000	nop; delay slot nop
 1301  00001eb8  8fc10000	lw	r1,(r30)
 1302  00001ebc  90220000	lbu	r2,(r1)
 1303  00001ec0  60410009	seqi	r1,r2,#9
 1304  00001ec4  14200020	bnez	r1,L75_LF2
 1305  00001ec8  54000000	nop; delay slot nop
 1306  00001ecc  8fc10000	lw	r1,(r30)
 1307  00001ed0  90220000	lbu	r2,(r1)
 1308  00001ed4  6041000a	seqi	r1,r2,#10
 1309  00001ed8  1420000c	bnez	r1,L75_LF2
 1310  00001edc  54000000	nop; delay slot nop
 1311  00001ee0  0800001c	j	L74_LF2
 1312  00001ee4  54000000	nop; delay slot nop
 1313  00001ee8          	L75_LF2:
 1314  00001ee8  8fc20000	lw	r2,(r30)
 1315  00001eec  20410001	addi	r1,r2,#1
 1316  00001ef0  00011020	add	r2,r0,r1
 1317  00001ef4  afc20000	sw	(r30),r2
 1318  00001ef8  0bffffa8	j	L73_LF2
 1319  00001efc  54000000	nop; delay slot nop
 1320  00001f00          	L74_LF2:
 1321  00001f00  8fc10004	lw	r1,4(r30)
 1322  00001f04  64220000	snei	r2,r1,#0
 1323  00001f08  10400010	beqz	r2,L76_LF2
 1324  00001f0c  54000000	nop; delay slot nop
 1325  00001f10  8fc10004	lw	r1,4(r30)
 1326  00001f14  8fc20000	lw	r2,(r30)
 1327  00001f18  ac220000	sw	(r1),r2
 1328  00001f1c          	L76_LF2:
 1329  00001f1c  8fc10000	lw	r1,(r30)
 1330  00001f20  90220000	lbu	r2,(r1)
 1331  00001f24  64410000	snei	r1,r2,#0
 1332  00001f28  14200010	bnez	r1,L77_LF2
 1333  00001f2c  54000000	nop; delay slot nop
 1334  00001f30  8fc1fff4	lw	r1,-12(r30)
 1335  00001f34  08000294	j	L72_LF2
 1336  00001f38  54000000	nop; delay slot nop
 1337  00001f3c          	L77_LF2:
 1338  00001f3c  8fc10000	lw	r1,(r30)
 1339  00001f40  90220000	lbu	r2,(r1)
 1340  00001f44  6041002d	seqi	r1,r2,#45
 1341  00001f48  10200024	beqz	r1,L78_LF2
 1342  00001f4c  54000000	nop; delay slot nop
 1343  00001f50  2001ffff	addi	r1,r0,#-1
 1344  00001f54  afc1ffec	sw	-20(r30),r1
 1345  00001f58  8fc20000	lw	r2,(r30)
 1346  00001f5c  20410001	addi	r1,r2,#1
 1347  00001f60  00011020	add	r2,r0,r1
 1348  00001f64  afc20000	sw	(r30),r2
 1349  00001f68  0800000c	j	L79_LF2
 1350  00001f6c  54000000	nop; delay slot nop
 1351  00001f70          	L78_LF2:
 1352  00001f70  20010001	addi	r1,r0,#1
 1353  00001f74  afc1ffec	sw	-20(r30),r1
 1354  00001f78          	L79_LF2:
 1355  00001f78  8fc10008	lw	r1,8(r30)
 1356  00001f7c  64220000	snei	r2,r1,#0
 1357  00001f80  14400090	bnez	r2,L80_LF2
 1358  00001f84  54000000	nop; delay slot nop
 1359  00001f88  8fc10000	lw	r1,(r30)
 1360  00001f8c  90220000	lbu	r2,(r1)
 1361  00001f90  60410030	seqi	r1,r2,#48
 1362  00001f94  10200074	beqz	r1,L81_LF2
 1363  00001f98  54000000	nop; delay slot nop
 1364  00001f9c  8fc20000	lw	r2,(r30)
 1365  00001fa0  20410001	addi	r1,r2,#1
 1366  00001fa4  00011020	add	r2,r0,r1
 1367  00001fa8  afc20000	sw	(r30),r2
 1368  00001fac  8fc10000	lw	r1,(r30)
 1369  00001fb0  90220000	lbu	r2,(r1)
 1370  00001fb4  60410078	seqi	r1,r2,#120
 1371  00001fb8  14200020	bnez	r1,L83_LF2
 1372  00001fbc  54000000	nop; delay slot nop
 1373  00001fc0  8fc10000	lw	r1,(r30)
 1374  00001fc4  90220000	lbu	r2,(r1)
 1375  00001fc8  60410058	seqi	r1,r2,#88
 1376  00001fcc  1420000c	bnez	r1,L83_LF2
 1377  00001fd0  54000000	nop; delay slot nop
 1378  00001fd4  08000024	j	L82_LF2
 1379  00001fd8  54000000	nop; delay slot nop
 1380  00001fdc          	L83_LF2:
 1381  00001fdc  20010010	addi	r1,r0,#16
 1382  00001fe0  afc10008	sw	8(r30),r1
 1383  00001fe4  8fc20000	lw	r2,(r30)
 1384  00001fe8  20410001	addi	r1,r2,#1
 1385  00001fec  00011020	add	r2,r0,r1
 1386  00001ff0  afc20000	sw	(r30),r2
 1387  00001ff4  0800000c	j	L84_LF2
 1388  00001ff8  54000000	nop; delay slot nop
 1389  00001ffc          	L82_LF2:
 1390  00001ffc  20010008	addi	r1,r0,#8
 1391  00002000  afc10008	sw	8(r30),r1
 1392  00002004          	L84_LF2:
 1393  00002004  0800000c	j	L80_LF2
 1394  00002008  54000000	nop; delay slot nop
 1395  0000200c          	L81_LF2:
 1396  0000200c  2001000a	addi	r1,r0,#10
 1397  00002010  afc10008	sw	8(r30),r1
 1398  00002014          	L85_LF2:
 1399  00002014          	L80_LF2:
 1400  00002014  8fc10008	lw	r1,8(r30)
 1401  00002018  70220000	slei	r2,r1,#0
 1402  0000201c  1440001c	bnez	r2,L87_LF2
 1403  00002020  54000000	nop; delay slot nop
 1404  00002024  8fc10008	lw	r1,8(r30)
 1405  00002028  6c220010	sgti	r2,r1,#16
 1406  0000202c  1440000c	bnez	r2,L87_LF2
 1407  00002030  54000000	nop; delay slot nop
 1408  00002034  08000010	j	L86_LF2
 1409  00002038  54000000	nop; delay slot nop
 1410  0000203c          	L87_LF2:
 1411  0000203c  8fc1fff4	lw	r1,-12(r30)
 1412  00002040  08000188	j	L72_LF2
 1413  00002044  54000000	nop; delay slot nop
 1414  00002048          	L86_LF2:
 1415  00002048  54000000	nop
 1416  0000204c          	L88_LF2:
 1417  0000204c  8fc10000	lw	r1,(r30)
 1418  00002050  90220000	lbu	r2,(r1)
 1419  00002054  6c41002f	sgtui	r1,r2,#47
 1420  00002058  10200030	beqz	r1,L91_LF2
 1421  0000205c  54000000	nop; delay slot nop
 1422  00002060  8fc10000	lw	r1,(r30)
 1423  00002064  90220000	lbu	r2,(r1)
 1424  00002068  70410039	sleui	r1,r2,#57
 1425  0000206c  1020001c	beqz	r1,L91_LF2
 1426  00002070  54000000	nop; delay slot nop
 1427  00002074  8fc10000	lw	r1,(r30)
 1428  00002078  90220000	lbu	r2,(r1)
 1429  0000207c  2041ffd0	addi	r1,r2,#-48
 1430  00002080  afc1fff0	sw	-16(r30),r1
 1431  00002084  0800008c	j	L92_LF2
 1432  00002088  54000000	nop; delay slot nop
 1433  0000208c          	L91_LF2:
 1434  0000208c  8fc10000	lw	r1,(r30)
 1435  00002090  90220000	lbu	r2,(r1)
 1436  00002094  6c410060	sgtui	r1,r2,#96
 1437  00002098  10200030	beqz	r1,L93_LF2
 1438  0000209c  54000000	nop; delay slot nop
 1439  000020a0  8fc10000	lw	r1,(r30)
 1440  000020a4  90220000	lbu	r2,(r1)
 1441  000020a8  7041007a	sleui	r1,r2,#122
 1442  000020ac  1020001c	beqz	r1,L93_LF2
 1443  000020b0  54000000	nop; delay slot nop
 1444  000020b4  8fc10000	lw	r1,(r30)
 1445  000020b8  90220000	lbu	r2,(r1)
 1446  000020bc  2041ffa9	addi	r1,r2,#-87
 1447  000020c0  afc1fff0	sw	-16(r30),r1
 1448  000020c4  0800004c	j	L92_LF2
 1449  000020c8  54000000	nop; delay slot nop
 1450  000020cc          	L93_LF2:
 1451  000020cc  8fc10000	lw	r1,(r30)
 1452  000020d0  90220000	lbu	r2,(r1)
 1453  000020d4  6c410040	sgtui	r1,r2,#64
 1454  000020d8  10200030	beqz	r1,L95_LF2
 1455  000020dc  54000000	nop; delay slot nop
 1456  000020e0  8fc10000	lw	r1,(r30)
 1457  000020e4  90220000	lbu	r2,(r1)
 1458  000020e8  7041005a	sleui	r1,r2,#90
 1459  000020ec  1020001c	beqz	r1,L95_LF2
 1460  000020f0  54000000	nop; delay slot nop
 1461  000020f4  8fc10000	lw	r1,(r30)
 1462  000020f8  90220000	lbu	r2,(r1)
 1463  000020fc  2041ffc9	addi	r1,r2,#-55
 1464  00002100  afc1fff0	sw	-16(r30),r1
 1465  00002104  0800000c	j	L92_LF2
 1466  00002108  54000000	nop; delay slot nop
 1467  0000210c          	L95_LF2:
 1468  0000210c  200103e8	addi	r1,r0,#1000
 1469  00002110  afc1fff0	sw	-16(r30),r1
 1470  00002114          	L96_LF2:
 1471  00002114          	L94_LF2:
 1472  00002114          	L92_LF2:
 1473  00002114  8fc1fff0	lw	r1,-16(r30)
 1474  00002118  8fc20008	lw	r2,8(r30)
 1475  0000211c  0022082a	slt	r1,r1,r2
 1476  00002120  10200040	beqz	r1,L90_LF2
 1477  00002124  54000000	nop; delay slot nop
 1478  00002128  8fc1fff4	lw	r1,-12(r30)
 1479  0000212c  8fc20008	lw	r2,8(r30)
 1480  00002130  00200035	movi2fp	f0,r1
 1481  00002134  00400835	movi2fp	f1,r2
 1482  00002138  0401000e	mult	f0,f0,f1
 1483  0000213c  00000834	movfp2i	r1,f0
 1484  00002140  afc1fff4	sw	-12(r30),r1
 1485  00002144  8fc1fff4	lw	r1,-12(r30)
 1486  00002148  8fc2fff0	lw	r2,-16(r30)
 1487  0000214c  00220820	add	r1,r1,r2
 1488  00002150  afc1fff4	sw	-12(r30),r1
 1489  00002154  8fc20000	lw	r2,(r30)
 1490  00002158  20410001	addi	r1,r2,#1
 1491  0000215c  00011020	add	r2,r0,r1
 1492  00002160  afc20000	sw	(r30),r2
 1493  00002164          	L97_LF2:
 1494  00002164          	L90_LF2:
 1495  00002164  8fc1fff0	lw	r1,-16(r30)
 1496  00002168  8fc20008	lw	r2,8(r30)
 1497  0000216c  0022082a	slt	r1,r1,r2
 1498  00002170  1420000c	bnez	r1,L98_LF2
 1499  00002174  54000000	nop; delay slot nop
 1500  00002178  0800000c	j	L89_LF2
 1501  0000217c  54000000	nop; delay slot nop
 1502  00002180          	L98_LF2:
 1503  00002180  0bfffec8	j	L88_LF2
 1504  00002184  54000000	nop; delay slot nop
 1505  00002188          	L89_LF2:
 1506  00002188  8fc10004	lw	r1,4(r30)
 1507  0000218c  64220000	snei	r2,r1,#0
 1508  00002190  10400010	beqz	r2,L99_LF2
 1509  00002194  54000000	nop; delay slot nop
 1510  00002198  8fc10004	lw	r1,4(r30)
 1511  0000219c  8fc20000	lw	r2,(r30)
 1512  000021a0  ac220000	sw	(r1),r2
 1513  000021a4          	L99_LF2:
 1514  000021a4  8fc1fff4	lw	r1,-12(r30)
 1515  000021a8  8fc2ffec	lw	r2,-20(r30)
 1516  000021ac  00200035	movi2fp	f0,r1
 1517  000021b0  00400835	movi2fp	f1,r2
 1518  000021b4  0401000e	mult	f0,f0,f1
 1519  000021b8  00000834	movfp2i	r1,f0
 1520  000021bc  afc1fff4	sw	-12(r30),r1
 1521  000021c0  8fc1fff4	lw	r1,-12(r30)
 1522  000021c4  08000004	j	L72_LF2
 1523  000021c8  54000000	nop; delay slot nop
 1524  000021cc          	L72_LF2:
 1525  000021cc  8fa20000	lw	r2,0(r29)
 1526  000021d0  8fdffff8	lw	r31,-8(r30)
 1527  000021d4  001ee820	add	r29,r0,r30
 1528  000021d8  8fdefffc	lw	r30,-4(r30)
 1529  000021dc  4be00000	jr	r31
 1530  000021e0  54000000	nop
 1531  000021e4          	.endproc _dstrtol
 1532  000021e4          	.align 2
 1533  000021e4          	.proc _bcopy
 1534  000021e4          	.global _bcopy
 1535  000021e4          	_bcopy:
 1536                      ;  Function 'bcopy'; 0 bytes of locals, 2 regs to save.
 1537  000021e4  afbefffc	sw	-4(r29),r30; push fp
 1538  000021e8  001df020	add	r30,r0,r29; fp = sp
 1539  000021ec  afbffff8	sw	-8(r29),r31; push ret addr
 1540  000021f0  2fbd0010	subui	r29,r29,#16; alloc local storage
 1541  000021f4  afa20000	sw	0(r29),r2
 1542  000021f8  afa30004	sw	4(r29),r3
 1543  000021fc  54000000	nop
 1544  00002200          	L101_LF2:
 1545  00002200  8fc10008	lw	r1,8(r30)
 1546  00002204  2022ffff	addi	r2,r1,#-1
 1547  00002208  afc20008	sw	8(r30),r2
 1548  0000220c  6c210000	sgti	r1,r1,#0
 1549  00002210  1420000c	bnez	r1,L103_LF2
 1550  00002214  54000000	nop; delay slot nop
 1551  00002218  0800002c	j	L102_LF2
 1552  0000221c  54000000	nop; delay slot nop
 1553  00002220          	L103_LF2:
 1554  00002220  8fc10004	lw	r1,4(r30)
 1555  00002224  20220001	addi	r2,r1,#1
 1556  00002228  afc20004	sw	4(r30),r2
 1557  0000222c  8fc20000	lw	r2,(r30)
 1558  00002230  20430001	addi	r3,r2,#1
 1559  00002234  afc30000	sw	(r30),r3
 1560  00002238  80420000	lb	r2,(r2)
 1561  0000223c  a0220000	sb	(r1),r2
 1562  00002240  0bffffbc	j	L101_LF2
 1563  00002244  54000000	nop; delay slot nop
 1564  00002248          	L102_LF2:
 1565  00002248          	L100_LF2:
 1566  00002248  8fa20000	lw	r2,0(r29)
 1567  0000224c  8fa30004	lw	r3,4(r29)
 1568  00002250  8fdffff8	lw	r31,-8(r30)
 1569  00002254  001ee820	add	r29,r0,r30
 1570  00002258  8fdefffc	lw	r30,-4(r30)
 1571  0000225c  4be00000	jr	r31
 1572  00002260  54000000	nop
 1573  00002264          	.endproc _bcopy
 1574  00002264          	.align 2
 1575  00002264          	.proc _bzero
 1576  00002264          	.global _bzero
 1577  00002264          	_bzero:
 1578                      ;  Function 'bzero'; 0 bytes of locals, 1 regs to save.
 1579  00002264  afbefffc	sw	-4(r29),r30; push fp
 1580  00002268  001df020	add	r30,r0,r29; fp = sp
 1581  0000226c  afbffff8	sw	-8(r29),r31; push ret addr
 1582  00002270  2fbd0010	subui	r29,r29,#16; alloc local storage
 1583  00002274  afa20000	sw	0(r29),r2
 1584  00002278  54000000	nop
 1585  0000227c          	L105_LF2:
 1586  0000227c  8fc10004	lw	r1,4(r30)
 1587  00002280  2022ffff	addi	r2,r1,#-1
 1588  00002284  afc20004	sw	4(r30),r2
 1589  00002288  6c210000	sgti	r1,r1,#0
 1590  0000228c  1420000c	bnez	r1,L107_LF2
 1591  00002290  54000000	nop; delay slot nop
 1592  00002294  08000020	j	L106_LF2
 1593  00002298  54000000	nop; delay slot nop
 1594  0000229c          	L107_LF2:
 1595  0000229c  8fc10000	lw	r1,(r30)
 1596  000022a0  20220001	addi	r2,r1,#1
 1597  000022a4  afc20000	sw	(r30),r2
 1598  000022a8  20020000	addi	r2,r0,(#0x0)&0xff
 1599  000022ac  a0220000	sb	(r1),r2
 1600  000022b0  0bffffc8	j	L105_LF2
 1601  000022b4  54000000	nop; delay slot nop
 1602  000022b8          	L106_LF2:
 1603  000022b8          	L104_LF2:
 1604  000022b8  8fa20000	lw	r2,0(r29)
 1605  000022bc  8fdffff8	lw	r31,-8(r30)
 1606  000022c0  001ee820	add	r29,r0,r30
 1607  000022c4  8fdefffc	lw	r30,-4(r30)
 1608  000022c8  4be00000	jr	r31
 1609  000022cc  54000000	nop
 1610  000022d0          	.endproc _bzero
 1611  000022d0          	.align 2
 1612  000022d0          	.proc _min
 1613  000022d0          	.global _min
 1614  000022d0          	_min:
 1615                      ;  Function 'min'; 0 bytes of locals, 2 regs to save.
 1616  000022d0  afbefffc	sw	-4(r29),r30; push fp
 1617  000022d4  001df020	add	r30,r0,r29; fp = sp
 1618  000022d8  afbffff8	sw	-8(r29),r31; push ret addr
 1619  000022dc  2fbd0010	subui	r29,r29,#16; alloc local storage
 1620  000022e0  afa20000	sw	0(r29),r2
 1621  000022e4  afa30004	sw	4(r29),r3
 1622  000022e8  8fc10000	lw	r1,(r30)
 1623  000022ec  8fc20004	lw	r2,4(r30)
 1624  000022f0  0022182c	sle	r3,r1,r2
 1625  000022f4  14600008	bnez	r3,L109_LF2
 1626  000022f8  54000000	nop; delay slot nop
 1627  000022fc  8fc10004	lw	r1,4(r30)
 1628  00002300          	L109_LF2:
 1629  00002300  08000004	j	L108_LF2
 1630  00002304  54000000	nop; delay slot nop
 1631  00002308          	L108_LF2:
 1632  00002308  8fa20000	lw	r2,0(r29)
 1633  0000230c  8fa30004	lw	r3,4(r29)
 1634  00002310  8fdffff8	lw	r31,-8(r30)
 1635  00002314  001ee820	add	r29,r0,r30
 1636  00002318  8fdefffc	lw	r30,-4(r30)
 1637  0000231c  4be00000	jr	r31
 1638  00002320  54000000	nop
 1639  00002324          	.endproc _min
 1640                      ;;; Ethan L. Miller, 1999.  Released to the public domain
 1641                      ;;;
 1642                      ;;; Most of the traps are called in files from libtraps.
 1645  00002324          	.align 2
 1646  00002324          	.proc _exit
 1647  00002324          	.global _exit
 1648  00002324          	_exit:
 1649  00002324  44000300	trap	#0x300
 1650  00002328  4be00000	jr	r31
 1651  0000232c  54000000	nop
 1652  00002330          	.endproc _exit
 1654                      ; for the benefit of gcc.
 1655  00002330          	.proc ___main
 1656  00002330          	.global ___main
 1657  00002330          	___main:
 1658  00002330  4be00000	jr	r31
 1659  00002334  54000000	nop
 1660  00002338          	.endproc ___main
 1661  00002338          	.text
 1662  00002338          	.global _etext
 1663  00002338          	_etext:
 1664  00002338          	.align 3
 1665  00002338          	.data
 1666  000031ae          	.global _edata
 1667  000031ae          	_edata:
