 line   address	contents
    1                      ; Linked by DLX-LD.
    2                      ; MemSize 24576
    3                      ; Data size: 148
    4                      ; Text size: 5428
    5                      ; Stack size: 8192
    6  00000000          	.text 0x1000
    7  00001000          	.data 0x3000
    8                      ; Compiled by GCC
    9  00003000          	.text
   10  00001000          	.align 2
   11  00001000          	.proc _isspace
   12  00001000          	.global _isspace
   13  00001000          	_isspace:
   14                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
   15  00001000  afbefffc	sw	-4(r29),r30; push fp
   16  00001004  001df020	add	r30,r0,r29; fp = sp
   17  00001008  afbffff8	sw	-8(r29),r31; push ret addr
   18  0000100c  2fbd0010	subui	r29,r29,#16; alloc local storage
   19  00001010  afa20000	sw	0(r29),r2
   20  00001014  83c20003	lb	r2,3(r30)
   21  00001018  201f0000	addi	r31,r0,#0
   22  0000101c  304100ff	andi	r1,r2,#0x00ff
   23  00001020  60210020	seqi	r1,r1,#32
   24  00001024  14200018	bnez	r1,L6_LF0
   25  00001028  54000000	nop; not filled.
   26  0000102c  2041fff7	addi	r1,r2,#-9
   27  00001030  302100ff	andi	r1,r1,#0x00ff
   28  00001034  70210001	sleui	r1,r1,#1
   29  00001038  10200008	beqz	r1,L5_LF0
   30  0000103c  54000000	nop; not filled.
   31  00001040          	L6_LF0:
   32  00001040  201f0001	addi	r31,r0,#1
   33  00001044          	L5_LF0:
   34  00001044  001f0820	add	r1,r0,r31
   35  00001048  8fa20000	lw	r2,0(r29)
   36  0000104c  8fdffff8	lw	r31,-8(r30)
   37  00001050  001ee820	add	r29,r0,r30
   38  00001054  8fdefffc	lw	r30,-4(r30)
   39  00001058  4be00000	jr	r31
   40  0000105c  54000000	nop
   41  00001060          	.endproc _isspace
   42  00001060          	.align 2
   43  00001060          	.proc _isxdigit
   44  00001060          	.global _isxdigit
   45  00001060          	_isxdigit:
   46                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
   47  00001060  afbefffc	sw	-4(r29),r30; push fp
   48  00001064  001df020	add	r30,r0,r29; fp = sp
   49  00001068  afbffff8	sw	-8(r29),r31; push ret addr
   50  0000106c  2fbd0010	subui	r29,r29,#16; alloc local storage
   51  00001070  afa20000	sw	0(r29),r2
   52  00001074  83df0003	lb	r31,3(r30)
   53  00001078  20020000	addi	r2,r0,#0
   54  0000107c  23e1ffd0	addi	r1,r31,#-48
   55  00001080  302100ff	andi	r1,r1,#0x00ff
   56  00001084  70210009	sleui	r1,r1,#9
   57  00001088  14200028	bnez	r1,L12_LF0
   58  0000108c  54000000	nop; not filled.
   59  00001090  23e1ff9f	addi	r1,r31,#-97
   60  00001094  302100ff	andi	r1,r1,#0x00ff
   61  00001098  70210005	sleui	r1,r1,#5
   62  0000109c  14200014	bnez	r1,L12_LF0
   63  000010a0  54000000	nop; not filled.
   64  000010a4  33e100ff	andi	r1,r31,#0x00ff
   65  000010a8  64210041	snei	r1,r1,#65
   66  000010ac  14200008	bnez	r1,L11_LF0
   67  000010b0  54000000	nop; not filled.
   68  000010b4          	L12_LF0:
   69  000010b4  20020001	addi	r2,r0,#1
   70  000010b8          	L11_LF0:
   71  000010b8  00020820	add	r1,r0,r2
   72  000010bc  8fa20000	lw	r2,0(r29)
   73  000010c0  8fdffff8	lw	r31,-8(r30)
   74  000010c4  001ee820	add	r29,r0,r30
   75  000010c8  8fdefffc	lw	r30,-4(r30)
   76  000010cc  4be00000	jr	r31
   77  000010d0  54000000	nop
   78  000010d4          	.endproc _isxdigit
   79  000010d4          	.data
   80  00003000          	.align 2
   81  00003000          	LC0_LF0:
   82  00003000  4572726f	.ascii "Error:The disk does not exist!\n\000"
   82  00003004  723a5468	
   82  00003008  65206469	
   82  0000300c  736b2064	
   82  00003010  6f657320	
   82  00003014  6e6f7420	
   82  00003018  65786973	
   82  0000301c  74210a00	
   83  00003020          	.align 2
   84  00003020          	LC1_LF0:
   85  00003020  66646973	.ascii "fdisk (%d): Formatted DFS disk for %d bytes.\n\000"
   85  00003024  6b202825	
   85  00003028  64293a20	
   85  0000302c  466f726d	
   85  00003030  61747465	
   85  00003034  64204446	
   85  00003038  53206469	
   85  0000303c  736b2066	
   85  00003040  6f722025	
   85  00003044  64206279	
   85  00003048  7465732e	
   85  0000304c  0a00    	
   86  0000304e          	.text
   87  000010d4          	.align 2
   88  000010d4          	.proc _main
   89  000010d4          	.global _main
   90  000010d4          	_main:
   91                      ;  Function 'main'; 616 bytes of locals, 0 regs to save.
   92  000010d4  afbefffc	sw	-4(r29),r30; push fp
   93  000010d8  001df020	add	r30,r0,r29; fp = sp
   94  000010dc  afbffff8	sw	-8(r29),r31; push ret addr
   95  000010e0  2fbd0270	subui	r29,r29,#624; alloc local storage
   96  000010e4  0c001444	jal	___main
   97  000010e8  54000000	nop; not filled.
   98  000010ec  2008ffff	addi	r8,r0,#-1
   99  000010f0  afc8fd94	sw	-620(r30),r8
  100  000010f4  0c000608	jal	_disk_size
  101  000010f8  54000000	nop; not filled.
  102  000010fc  3c020000	lhi	r2,((_disksize)>>16)&0xffff
  103  00001100  2442308c	addui	r2,r2,(_disksize)&0xffff
  104  00001104  ac410000	sw	(r2),r1
  105  00001108  0c000600	jal	_disk_blocksize
  106  0000110c  54000000	nop; not filled.
  107  00001110  3c030000	lhi	r3,((_diskblocksize)>>16)&0xffff
  108  00001114  24633088	addui	r3,r3,(_diskblocksize)&0xffff
  109  00001118  ac610000	sw	(r3),r1
  110  0000111c  3c030000	lhi	r3,((_num_filesystem_blocks)>>16)&0xffff
  111  00001120  24633090	addui	r3,r3,(_num_filesystem_blocks)&0xffff
  112  00001124  8c420000	lw	r2,(r2)
  113  00001128  74410000	sgei	r1,r2,#0
  114  0000112c  14200008	bnez	r1,L14_LF0
  115  00001130  54000000	nop; not filled.
  116  00001134  204201ff	addi	r2,r2,#511
  117  00001138          	L14_LF0:
  118  00001138  5c410009	srai	r1,r2,#0x9
  119  0000113c  ac610000	sw	(r3),r1
  120  00001140  0c0005e0	jal	_dfs_invalidate
  121  00001144  54000000	nop; not filled.
  122  00001148  3c010000	lhi	r1,((_sb)>>16)&0xffff
  123  0000114c  24213068	addui	r1,r1,(_sb)&0xffff
  124  00001150  20080200	addi	r8,r0,#512
  125  00001154  ac280004	sw	4(r1),r8
  126  00001158  8c630000	lw	r3,(r3)
  127  0000115c  ac230008	sw	8(r1),r3
  128  00001160  20080001	addi	r8,r0,#1
  129  00001164  ac28000c	sw	12(r1),r8
  130  00001168  200800c0	addi	r8,r0,#192
  131  0000116c  ac280010	sw	16(r1),r8
  132  00001170  20080025	addi	r8,r0,#37
  133  00001174  ac280014	sw	20(r1),r8
  134  00001178  20080400	addi	r8,r0,#1024
  135  0000117c  ac280018	sw	24(r1),r8
  136  00001180  2008002d	addi	r8,r0,#45
  137  00001184  ac28001c	sw	28(r1),r8
  138  00001188  23bdfff8	addi	r29,r29,#-8
  139  0000118c  23c3fd98	addi	r3,r30,#-616
  140  00001190  afa30000	sw	(r29),r3
  141  00001194  20080060	addi	r8,r0,#96
  142  00001198  afa80004	sw	4(r29),r8
  143  0000119c  0c00126c	jal	_bzero
  144  000011a0  54000000	nop; not filled.
  145  000011a4  23c2fdf8	addi	r2,r30,#-520
  146  000011a8  afa20000	sw	(r29),r2
  147  000011ac  20080200	addi	r8,r0,#512
  148  000011b0  afa80004	sw	4(r29),r8
  149  000011b4  0c001254	jal	_bzero
  150  000011b8  54000000	nop; not filled.
  151  000011bc  0c000558	jal	_disk_create
  152  000011c0  54000000	nop; not filled.
  153  000011c4  23bd0008	addi	r29,r29,#8
  154  000011c8  6021ffff	seqi	r1,r1,#-1
  155  000011cc  10200028	beqz	r1,L15_LF0
  156  000011d0  54000000	nop; not filled.
  157  000011d4  23bdfff8	addi	r29,r29,#-8
  158  000011d8  3c080000	lhi	r8,((LC0_LF0)>>16)&0xffff
  159  000011dc  25083000	addui	r8,r8,(LC0_LF0)&0xffff
  160  000011e0  afa80000	sw	(r29),r8
  161  000011e4  0c000404	jal	_Printf
  162  000011e8  54000000	nop; not filled.
  163  000011ec  0c000594	jal	_Exit
  164  000011f0  54000000	nop; not filled.
  165  000011f4  23bd0008	addi	r29,r29,#8
  166  000011f8          	L15_LF0:
  167  000011f8  20040000	addi	r4,r0,#0
  168  000011fc  00033020	add	r6,r0,r3
  169  00001200  00022820	add	r5,r0,r2
  170  00001204          	L19_LF0:
  171  00001204  20030000	addi	r3,r0,#0
  172  00001208  00051020	add	r2,r0,r5
  173  0000120c          	L23_LF0:
  174  0000120c  23bdfff0	addi	r29,r29,#-16
  175  00001210  afa60000	sw	(r29),r6
  176  00001214  afa20004	sw	4(r29),r2
  177  00001218  20080060	addi	r8,r0,#96
  178  0000121c  afa80008	sw	8(r29),r8
  179  00001220  0c001168	jal	_bcopy
  180  00001224  54000000	nop; not filled.
  181  00001228  23bd0010	addi	r29,r29,#16
  182  0000122c  20420060	addi	r2,r2,#96
  183  00001230  20630001	addi	r3,r3,#1
  184  00001234  70610004	sleui	r1,r3,#4
  185  00001238  1420ffd0	bnez	r1,L23_LF0
  186  0000123c  54000000	nop; not filled.
  187  00001240  23bdfff8	addi	r29,r29,#-8
  188  00001244  20820001	addi	r2,r4,#1
  189  00001248  afa20000	sw	(r29),r2
  190  0000124c  afa50004	sw	4(r29),r5
  191  00001250  0c0001f8	jal	_FdiskWriteBlock
  192  00001254  54000000	nop; not filled.
  193  00001258  23bd0008	addi	r29,r29,#8
  194  0000125c  00022020	add	r4,r0,r2
  195  00001260  70410023	slei	r1,r2,#35
  196  00001264  1420ff9c	bnez	r1,L19_LF0
  197  00001268  54000000	nop; not filled.
  198  0000126c  20040000	addi	r4,r0,#0
  199  00001270  23c7fd94	addi	r7,r30,#-620
  200  00001274  23c6fdf8	addi	r6,r30,#-520
  201  00001278  20050025	addi	r5,r0,#37
  202  0000127c          	L29_LF0:
  203  0000127c  20030000	addi	r3,r0,#0
  204  00001280  00061020	add	r2,r0,r6
  205  00001284          	L33_LF0:
  206  00001284  23bdfff0	addi	r29,r29,#-16
  207  00001288  afa70000	sw	(r29),r7
  208  0000128c  afa20004	sw	4(r29),r2
  209  00001290  20080004	addi	r8,r0,#4
  210  00001294  afa80008	sw	8(r29),r8
  211  00001298  0c0010f0	jal	_bcopy
  212  0000129c  54000000	nop; not filled.
  213  000012a0  23bd0010	addi	r29,r29,#16
  214  000012a4  20420004	addi	r2,r2,#4
  215  000012a8  20630001	addi	r3,r3,#1
  216  000012ac  7061007f	sleui	r1,r3,#127
  217  000012b0  1420ffd0	bnez	r1,L33_LF0
  218  000012b4  54000000	nop; not filled.
  219  000012b8  23bdfff8	addi	r29,r29,#-8
  220  000012bc  afa50000	sw	(r29),r5
  221  000012c0  afa60004	sw	4(r29),r6
  222  000012c4  0c000184	jal	_FdiskWriteBlock
  223  000012c8  54000000	nop; not filled.
  224  000012cc  23bd0008	addi	r29,r29,#8
  225  000012d0  20a50001	addi	r5,r5,#1
  226  000012d4  20840001	addi	r4,r4,#1
  227  000012d8  70810007	slei	r1,r4,#7
  228  000012dc  1420ff9c	bnez	r1,L29_LF0
  229  000012e0  54000000	nop; not filled.
  230  000012e4  23bdfff8	addi	r29,r29,#-8
  231  000012e8  23c3fdf8	addi	r3,r30,#-520
  232  000012ec  afa30000	sw	(r29),r3
  233  000012f0  20080200	addi	r8,r0,#512
  234  000012f4  afa80004	sw	4(r29),r8
  235  000012f8  0c001110	jal	_bzero
  236  000012fc  54000000	nop; not filled.
  237  00001300  20080000	addi	r8,r0,#0
  238  00001304  afc8fd94	sw	-620(r30),r8
  239  00001308  23bdfff8	addi	r29,r29,#-8
  240  0000130c  23c2fd94	addi	r2,r30,#-620
  241  00001310  afa20000	sw	(r29),r2
  242  00001314  afa30004	sw	4(r29),r3
  243  00001318  20080004	addi	r8,r0,#4
  244  0000131c  afa80008	sw	8(r29),r8
  245  00001320  0c001068	jal	_bcopy
  246  00001324  54000000	nop; not filled.
  247  00001328  2008e000	addi	r8,r0,#-8192
  248  0000132c  afc8fd94	sw	-620(r30),r8
  249  00001330  afa20000	sw	(r29),r2
  250  00001334  23c1fdfc	addi	r1,r30,#-516
  251  00001338  afa10004	sw	4(r29),r1
  252  0000133c  20080004	addi	r8,r0,#4
  253  00001340  afa80008	sw	8(r29),r8
  254  00001344  0c001044	jal	_bcopy
  255  00001348  54000000	nop; not filled.
  256  0000134c  2008ffff	addi	r8,r0,#-1
  257  00001350  afc8fd94	sw	-620(r30),r8
  258  00001354  23bd0010	addi	r29,r29,#16
  259  00001358  23c3fe00	addi	r3,r30,#-512
  260  0000135c  23c4fff4	addi	r4,r30,#-12
  261  00001360          	L39_LF0:
  262  00001360  23bdfff0	addi	r29,r29,#-16
  263  00001364  afa20000	sw	(r29),r2
  264  00001368  afa30004	sw	4(r29),r3
  265  0000136c  20080004	addi	r8,r0,#4
  266  00001370  afa80008	sw	8(r29),r8
  267  00001374  0c001014	jal	_bcopy
  268  00001378  54000000	nop; not filled.
  269  0000137c  23bd0010	addi	r29,r29,#16
  270  00001380  20630004	addi	r3,r3,#4
  271  00001384  0064082c	sleu	r1,r3,r4
  272  00001388  1420ffd4	bnez	r1,L39_LF0
  273  0000138c  54000000	nop; not filled.
  274  00001390  23bdfff8	addi	r29,r29,#-8
  275  00001394  20080025	addi	r8,r0,#37
  276  00001398  afa80000	sw	(r29),r8
  277  0000139c  23c2fdf8	addi	r2,r30,#-520
  278  000013a0  afa20004	sw	4(r29),r2
  279  000013a4  0c0000a4	jal	_FdiskWriteBlock
  280  000013a8  54000000	nop; not filled.
  281  000013ac  3c030000	lhi	r3,((_sb)>>16)&0xffff
  282  000013b0  24633068	addui	r3,r3,(_sb)&0xffff
  283  000013b4  20080001	addi	r8,r0,#1
  284  000013b8  ac680000	sw	(r3),r8
  285  000013bc  afa20000	sw	(r29),r2
  286  000013c0  20080200	addi	r8,r0,#512
  287  000013c4  afa80004	sw	4(r29),r8
  288  000013c8  0c001040	jal	_bzero
  289  000013cc  54000000	nop; not filled.
  290  000013d0  23bdfff8	addi	r29,r29,#-8
  291  000013d4  afa30000	sw	(r29),r3
  292  000013d8  3c010000	lhi	r1,((_diskblocksize)>>16)&0xffff
  293  000013dc  24213088	addui	r1,r1,(_diskblocksize)&0xffff
  294  000013e0  8c210000	lw	r1,(r1)
  295  000013e4  00410820	add	r1,r2,r1
  296  000013e8  afa10004	sw	4(r29),r1
  297  000013ec  20080020	addi	r8,r0,#32
  298  000013f0  afa80008	sw	8(r29),r8
  299  000013f4  0c000f94	jal	_bcopy
  300  000013f8  54000000	nop; not filled.
  301  000013fc  20080000	addi	r8,r0,#0
  302  00001400  afa80000	sw	(r29),r8
  303  00001404  afa20004	sw	4(r29),r2
  304  00001408  0c000040	jal	_FdiskWriteBlock
  305  0000140c  54000000	nop; not filled.
  306  00001410  0c0001e4	jal	_getpid
  307  00001414  54000000	nop; not filled.
  308  00001418  3c080000	lhi	r8,((LC1_LF0)>>16)&0xffff
  309  0000141c  25083020	addui	r8,r8,(LC1_LF0)&0xffff
  310  00001420  afa80000	sw	(r29),r8
  311  00001424  afa10004	sw	4(r29),r1
  312  00001428  3c010000	lhi	r1,((_disksize)>>16)&0xffff
  313  0000142c  2421308c	addui	r1,r1,(_disksize)&0xffff
  314  00001430  8c210000	lw	r1,(r1)
  315  00001434  afa10008	sw	8(r29),r1
  316  00001438  0c0001b0	jal	_Printf
  317  0000143c  54000000	nop; not filled.
  318  00001440  23bd0010	addi	r29,r29,#16
  319  00001444  0c0010d8	jal	_exit
  320  00001448  54000000	nop
  321  0000144c          	.endproc _main
  322  0000144c          	.data
  323  0000304e          	.align 2
  324  00003050          	LC2_LF0:
  325  00003050  43616e6e	.ascii "Cannot wite to disk\n\000"
  325  00003054  6f742077	
  325  00003058  69746520	
  325  0000305c  746f2064	
  325  00003060  69736b0a	
  325  00003064  00      	
  326  00003065          	.text
  327  0000144c          	.align 2
  328  0000144c          	.proc _FdiskWriteBlock
  329  0000144c          	.global _FdiskWriteBlock
  330  0000144c          	_FdiskWriteBlock:
  331                      ;  Function 'FdiskWriteBlock'; 0 bytes of locals, 8 regs to save.
  332  0000144c  afbefffc	sw	-4(r29),r30; push fp
  333  00001450  001df020	add	r30,r0,r29; fp = sp
  334  00001454  afbffff8	sw	-8(r29),r31; push ret addr
  335  00001458  2fbd0028	subui	r29,r29,#40; alloc local storage
  336  0000145c  afa20000	sw	0(r29),r2
  337  00001460  afa30004	sw	4(r29),r3
  338  00001464  afa40008	sw	8(r29),r4
  339  00001468  afa5000c	sw	12(r29),r5
  340  0000146c  afa60010	sw	16(r29),r6
  341  00001470  afa70014	sw	20(r29),r7
  342  00001474  afa80018	sw	24(r29),r8
  343  00001478  afa9001c	sw	28(r29),r9
  344  0000147c  8fc30000	lw	r3,(r30)
  345  00001480  8fc80004	lw	r8,4(r30)
  346  00001484  001d3820	add	r7,r0,r29
  347  00001488  3c060000	lhi	r6,((_diskblocksize)>>16)&0xffff
  348  0000148c  24c63088	addui	r6,r6,(_diskblocksize)&0xffff
  349  00001490  8cc20000	lw	r2,(r6)
  350  00001494  2041000e	addi	r1,r2,#14
  351  00001498  2009fff8	addi	r9,r0,#-8
  352  0000149c  00290824	and	r1,r1,r9
  353  000014a0  03a1e822	sub	r29,r29,r1
  354  000014a4  001d2820	add	r5,r0,r29
  355  000014a8  20010200	addi	r1,r0,#512
  356  000014ac  00200035	movi2fp	f0,r1
  357  000014b0  00400835	movi2fp	f1,r2
  358  000014b4  0401000f	div	f0,f0,f1
  359  000014b8  00002034	movfp2i	r4,f0
  360  000014bc  00800035	movi2fp	f0,r4
  361  000014c0  00600835	movi2fp	f1,r3
  362  000014c4  0401000e	mult	f0,f0,f1
  363  000014c8  00001034	movfp2i	r2,f0
  364  000014cc  20030000	addi	r3,r0,#0
  365  000014d0  0064082a	slt	r1,r3,r4
  366  000014d4  10200090	beqz	r1,L43_LF0
  367  000014d8  54000000	nop; not filled.
  368  000014dc          	L45_LF0:
  369  000014dc  23bdfff0	addi	r29,r29,#-16
  370  000014e0  8cc10000	lw	r1,(r6)
  371  000014e4  00600035	movi2fp	f0,r3
  372  000014e8  00200835	movi2fp	f1,r1
  373  000014ec  0401000e	mult	f0,f0,f1
  374  000014f0  00000834	movfp2i	r1,f0
  375  000014f4  01010820	add	r1,r8,r1
  376  000014f8  afa10000	sw	(r29),r1
  377  000014fc  afa50004	sw	4(r29),r5
  378  00001500  8cc90000	lw	r9,(r6)
  379  00001504  afa90008	sw	8(r29),r9
  380  00001508  0c000e80	jal	_bcopy
  381  0000150c  54000000	nop; not filled.
  382  00001510  afa20000	sw	(r29),r2
  383  00001514  afa50004	sw	4(r29),r5
  384  00001518  0c0001d8	jal	_disk_write_block
  385  0000151c  54000000	nop; not filled.
  386  00001520  23bd0010	addi	r29,r29,#16
  387  00001524  6021ffff	seqi	r1,r1,#-1
  388  00001528  10200028	beqz	r1,L44_LF0
  389  0000152c  54000000	nop; not filled.
  390  00001530  23bdfff8	addi	r29,r29,#-8
  391  00001534  3c090000	lhi	r9,((LC2_LF0)>>16)&0xffff
  392  00001538  25293050	addui	r9,r9,(LC2_LF0)&0xffff
  393  0000153c  afa90000	sw	(r29),r9
  394  00001540  0c0000a8	jal	_Printf
  395  00001544  54000000	nop; not filled.
  396  00001548  2001ffff	addi	r1,r0,#-1
  397  0000154c  0800001c	j	L48_LF0
  398  00001550  54000000	nop; not filled.
  399  00001554          	L44_LF0:
  400  00001554  20420001	addi	r2,r2,#1
  401  00001558  20630001	addi	r3,r3,#1
  402  0000155c  0064082a	slt	r1,r3,r4
  403  00001560  1420ff78	bnez	r1,L45_LF0
  404  00001564  54000000	nop; not filled.
  405  00001568          	L43_LF0:
  406  00001568  20010001	addi	r1,r0,#1
  407  0000156c          	L48_LF0:
  408  0000156c  0007e820	add	r29,r0,r7
  409  00001570  8fa20000	lw	r2,0(r29)
  410  00001574  8fa30004	lw	r3,4(r29)
  411  00001578  8fa40008	lw	r4,8(r29)
  412  0000157c  8fa5000c	lw	r5,12(r29)
  413  00001580  8fa60010	lw	r6,16(r29)
  414  00001584  8fa70014	lw	r7,20(r29)
  415  00001588  8fa80018	lw	r8,24(r29)
  416  0000158c  8fa9001c	lw	r9,28(r29)
  417  00001590  8fdffff8	lw	r31,-8(r30)
  418  00001594  001ee820	add	r29,r0,r30
  419  00001598  8fdefffc	lw	r30,-4(r30)
  420  0000159c  4be00000	jr	r31
  421  000015a0  54000000	nop
  422  000015a4          	.endproc _FdiskWriteBlock
  423  000015a4          	.data
  424  00003065          	.align 2
  425  00003068          	.global _sb
  426  00003068          	_sb:
  427  00003068          	.space 32
  428  00003088          	.align 2
  429  00003088          	.global _diskblocksize
  430  00003088          	_diskblocksize:
  431  00003088          	.space 4
  432  0000308c          	.align 2
  433  0000308c          	.global _disksize
  434  0000308c          	_disksize:
  435  0000308c          	.space 4
  436  00003090          	.align 2
  437  00003090          	.global _num_filesystem_blocks
  438  00003090          	_num_filesystem_blocks:
  439  00003090          	.space 4
  440                      ;;;
  441                      ;;; Stub functions for DLX traps.
  442                      ;;;
  443                      ;;; Ethan L. Miller, 1999.  Released to the public domain.
  444                      ;;;
  445                      ;;; The traps such as Open and Close
  446                      ;;; (note the capital letters) are for use by user programs.  The traps
  447                      ;;; with names such as open and close (lower case) are for use by the OS.
  448                      ;;;
  450  00003094          	.text
  451  000015a4          	.align 2
  453                      ;;; The following are the traps to be used by user-level programs
  454                      ;;;
  456  000015a4          	.align 2
  457  000015a4          	.proc _Open
  458  000015a4          	.global _Open
  459  000015a4          	_Open:
  460                      ;;; Note that trap #0x213 actually causes a trap vector in the OS of
  461                      ;;; 0x1213.  The same is true for other user traps.  Thus, a user trap
  462                      ;;; with trap #0x240 will result in a trap vector of 0x1240 in the OS.
  463  000015a4  44000213	trap	#0x213
  464  000015a8  4be00000	jr	r31
  465  000015ac  54000000	nop
  466  000015b0          	.endproc _Open
  468  000015b0          	.proc _Close
  469  000015b0          	.global _Close
  470  000015b0          	_Close:
  471  000015b0  44000214	trap	#0x214
  472  000015b4  4be00000	jr	r31
  473  000015b8  54000000	nop
  474  000015bc          	.endproc _Close
  476  000015bc          	.proc _Read
  477  000015bc          	.global _Read
  478  000015bc          	_Read:
  479  000015bc  44000210	trap	#0x210
  480  000015c0  4be00000	jr	r31
  481  000015c4  54000000	nop
  482  000015c8          	.endproc _Read
  484  000015c8          	.proc _Write
  485  000015c8          	.global _Write
  486  000015c8          	_Write:
  487  000015c8  44000211	trap	#0x211
  488  000015cc  4be00000	jr	r31
  489  000015d0  54000000	nop
  490  000015d4          	.endproc _Write
  492  000015d4          	.proc _Lseek
  493  000015d4          	.global _Lseek
  494  000015d4          	_Lseek:
  495  000015d4  44000212	trap	#0x212
  496  000015d8  4be00000	jr	r31
  497  000015dc  54000000	nop
  498  000015e0          	.endproc _Lseek
  500  000015e0          	.proc _Putchar
  501  000015e0          	.global _Putchar
  502  000015e0          	_Putchar:
  503  000015e0  44000280	trap	#0x280
  504  000015e4  4be00000	jr	r31
  505  000015e8  54000000	nop
  506  000015ec          	.endproc _Putchar
  508  000015ec          	.proc _Printf
  509  000015ec          	.global _Printf
  510  000015ec          	_Printf:
  511  000015ec  44000201	trap	#0x201
  512  000015f0  4be00000	jr	r31
  513  000015f4  54000000	nop
  514  000015f8          	.endproc _Printf
  516  000015f8          	.proc _getpid
  517  000015f8          	.global _getpid
  518  000015f8          	_getpid:
  519  000015f8  44000431	trap	#0x431
  520  000015fc  4be00000	jr	r31
  521  00001600  54000000	nop
  522  00001604          	.endproc _getpid
  524  00001604          	.proc _process_create
  525  00001604          	.global _process_create
  526  00001604          	_process_create:
  527  00001604  44000432	trap	#0x432
  528  00001608  4be00000	jr	r31
  529  0000160c  54000000	nop
  530  00001610          	.endproc _process_create
  532  00001610          	.proc _shmget
  533  00001610          	.global _shmget
  534  00001610          	_shmget:
  535  00001610  44000440	trap	#0x440
  536  00001614  4be00000	jr	r31
  537  00001618  54000000	nop
  538  0000161c          	.endproc _shmget
  540  0000161c          	.proc _shmat
  541  0000161c          	.global _shmat
  542  0000161c          	_shmat:
  543  0000161c  44000441	trap	#0x441
  544  00001620  4be00000	jr	r31
  545  00001624  54000000	nop
  546  00001628          	.endproc _shmat
  548  00001628          	.proc _sem_create
  549  00001628          	.global _sem_create
  550  00001628          	_sem_create:
  551  00001628  44000450	trap	#0x450
  552  0000162c  4be00000	jr	r31
  553  00001630  54000000	nop
  554  00001634          	.endproc _sem_create
  556  00001634          	.proc _sem_wait
  557  00001634          	.global _sem_wait
  558  00001634          	_sem_wait:
  559  00001634  44000451	trap	#0x451
  560  00001638  4be00000	jr	r31
  561  0000163c  54000000	nop
  562  00001640          	.endproc _sem_wait
  564  00001640          	.proc _sem_signal
  565  00001640          	.global _sem_signal
  566  00001640          	_sem_signal:
  567  00001640  44000452	trap	#0x452
  568  00001644  4be00000	jr	r31
  569  00001648  54000000	nop
  570  0000164c          	.endproc _sem_signal
  572  0000164c          	.proc _lock_create
  573  0000164c          	.global _lock_create
  574  0000164c          	_lock_create:
  575  0000164c  44000453	trap	#0x453
  576  00001650  4be00000	jr	r31
  577  00001654  54000000	nop
  578  00001658          	.endproc _lock_create
  580  00001658          	.proc _lock_acquire
  581  00001658          	.global _lock_acquire
  582  00001658          	_lock_acquire:
  583  00001658  44000454	trap	#0x454
  584  0000165c  4be00000	jr	r31
  585  00001660  54000000	nop
  586  00001664          	.endproc _lock_acquire
  588  00001664          	.proc _lock_release
  589  00001664          	.global _lock_release
  590  00001664          	_lock_release:
  591  00001664  44000455	trap	#0x455
  592  00001668  4be00000	jr	r31
  593  0000166c  54000000	nop
  594  00001670          	.endproc _lock_release
  596  00001670          	.proc _cond_create
  597  00001670          	.global _cond_create
  598  00001670          	_cond_create:
  599  00001670  44000456	trap	#0x456
  600  00001674  4be00000	jr	r31
  601  00001678  54000000	nop
  602  0000167c          	.endproc _cond_create
  604  0000167c          	.proc _cond_wait
  605  0000167c          	.global _cond_wait
  606  0000167c          	_cond_wait:
  607  0000167c  44000457	trap	#0x457
  608  00001680  4be00000	jr	r31
  609  00001684  54000000	nop
  610  00001688          	.endproc _cond_wait
  612  00001688          	.proc _cond_signal
  613  00001688          	.global _cond_signal
  614  00001688          	_cond_signal:
  615  00001688  44000458	trap	#0x458
  616  0000168c  4be00000	jr	r31
  617  00001690  54000000	nop
  618  00001694          	.endproc _cond_signal
  620  00001694          	.proc _cond_broadcast
  621  00001694          	.global _cond_broadcast
  622  00001694          	_cond_broadcast:
  623  00001694  44000459	trap	#0x459
  624  00001698  4be00000	jr	r31
  625  0000169c  54000000	nop
  626  000016a0          	.endproc _cond_broadcast
  628  000016a0          	.proc _mbox_create
  629  000016a0          	.global _mbox_create
  630  000016a0          	_mbox_create:
  631  000016a0  44000460	trap	#0x460
  632  000016a4  4be00000	jr	r31
  633  000016a8  54000000	nop
  634  000016ac          	.endproc _mbox_create
  636  000016ac          	.proc _mbox_open
  637  000016ac          	.global _mbox_open
  638  000016ac          	_mbox_open:
  639  000016ac  44000461	trap	#0x461
  640  000016b0  4be00000	jr	r31
  641  000016b4  54000000	nop
  642  000016b8          	.endproc _mbox_open
  644  000016b8          	.proc _mbox_close
  645  000016b8          	.global _mbox_close
  646  000016b8          	_mbox_close:
  647  000016b8  44000462	trap	#0x462
  648  000016bc  4be00000	jr	r31
  649  000016c0  54000000	nop
  650  000016c4          	.endproc _mbox_close
  652  000016c4          	.proc _mbox_send
  653  000016c4          	.global _mbox_send
  654  000016c4          	_mbox_send:
  655  000016c4  44000463	trap	#0x463
  656  000016c8  4be00000	jr	r31
  657  000016cc  54000000	nop
  658  000016d0          	.endproc _mbox_send
  660  000016d0          	.proc _mbox_recv
  661  000016d0          	.global _mbox_recv
  662  000016d0          	_mbox_recv:
  663  000016d0  44000464	trap	#0x464
  664  000016d4  4be00000	jr	r31
  665  000016d8  54000000	nop
  666  000016dc          	.endproc _mbox_recv
  668  000016dc          	.proc _sleep
  669  000016dc          	.global _sleep
  670  000016dc          	_sleep:
  671  000016dc  44000465	trap	#0x465
  672  000016e0  4be00000	jr	r31
  673  000016e4  54000000	nop
  674  000016e8          	.endproc _sleep
  676  000016e8          	.proc _yield
  677  000016e8          	.global _yield
  678  000016e8          	_yield:
  679  000016e8  44000466	trap	#0x466
  680  000016ec  4be00000	jr	r31
  681  000016f0  54000000	nop
  682  000016f4          	.endproc _yield
  684  000016f4          	.proc _disk_write_block
  685  000016f4          	.global _disk_write_block
  686  000016f4          	_disk_write_block:
  687  000016f4  44000467	trap	#0x467
  688  000016f8  4be00000	jr	r31
  689  000016fc  54000000	nop
  690  00001700          	.endproc _disk_write_block
  692  00001700          	.proc _disk_size
  693  00001700          	.global _disk_size
  694  00001700          	_disk_size:
  695  00001700  44000468	trap	#0x468
  696  00001704  4be00000	jr	r31
  697  00001708  54000000	nop
  698  0000170c          	.endproc _disk_size
  700  0000170c          	.proc _disk_blocksize
  701  0000170c          	.global _disk_blocksize
  702  0000170c          	_disk_blocksize:
  703  0000170c  44000469	trap	#0x469
  704  00001710  4be00000	jr	r31
  705  00001714  54000000	nop
  706  00001718          	.endproc _disk_blocksize
  708  00001718          	.proc _disk_create
  709  00001718          	.global _disk_create
  710  00001718          	_disk_create:
  711  00001718  44000470	trap	#0x470
  712  0000171c  4be00000	jr	r31
  713  00001720  54000000	nop
  714  00001724          	.endproc _disk_create
  716  00001724          	.proc _dfs_invalidate
  717  00001724          	.global _dfs_invalidate
  718  00001724          	_dfs_invalidate:
  719  00001724  44000471	trap	#0x471
  720  00001728  4be00000	jr	r31
  721  0000172c  54000000	nop
  722  00001730          	.endproc _dfs_invalidate
  724  00001730          	.proc _file_open
  725  00001730          	.global _file_open
  726  00001730          	_file_open:
  727  00001730  44000472	trap	#0x472
  728  00001734  4be00000	jr	r31
  729  00001738  54000000	nop
  730  0000173c          	.endproc _file_open
  732  0000173c          	.proc _file_close
  733  0000173c          	.global _file_close
  734  0000173c          	_file_close:
  735  0000173c  44000473	trap	#0x473
  736  00001740  4be00000	jr	r31
  737  00001744  54000000	nop
  738  00001748          	.endproc _file_close
  740  00001748          	.proc _file_delete
  741  00001748          	.global _file_delete
  742  00001748          	_file_delete:
  743  00001748  44000474	trap	#0x474
  744  0000174c  4be00000	jr	r31
  745  00001750  54000000	nop
  746  00001754          	.endproc _file_delete
  748  00001754          	.proc _file_read
  749  00001754          	.global _file_read
  750  00001754          	_file_read:
  751  00001754  44000475	trap	#0x475
  752  00001758  4be00000	jr	r31
  753  0000175c  54000000	nop
  754  00001760          	.endproc _file_read
  756  00001760          	.proc _file_write
  757  00001760          	.global _file_write
  758  00001760          	_file_write:
  759  00001760  44000476	trap	#0x476
  760  00001764  4be00000	jr	r31
  761  00001768  54000000	nop
  762  0000176c          	.endproc _file_write
  764  0000176c          	.proc _file_seek
  765  0000176c          	.global _file_seek
  766  0000176c          	_file_seek:
  767  0000176c  44000477	trap	#0x477
  768  00001770  4be00000	jr	r31
  769  00001774  54000000	nop
  770  00001778          	.endproc _file_seek
  772  00001778          	.proc _run_os_tests
  773  00001778          	.global _run_os_tests
  774  00001778          	_run_os_tests:
  775  00001778  440004ff	trap	#0x4FF
  776  0000177c  4be00000	jr	r31
  777  00001780  54000000	nop
  778  00001784          	.endproc _run_os_tests
  781  00001784          	.proc _Exit
  782  00001784          	.global _Exit
  783  00001784          	_Exit:
  784  00001784  44000500	trap	#0x500
  785  00001788  4be00000	jr	r31
  786  0000178c  54000000	nop
  787  00001790          	.endproc _Exit
  788                      ; Compiled by GCC
  790  00001790          	.align 2
  791  00001790          	.proc _isspace
  792  00001790          	.global _isspace
  793  00001790          	_isspace:
  794                      ;  Function 'isspace'; 0 bytes of locals, 3 regs to save.
  795  00001790  afbefffc	sw	-4(r29),r30; push fp
  796  00001794  001df020	add	r30,r0,r29; fp = sp
  797  00001798  afbffff8	sw	-8(r29),r31; push ret addr
  798  0000179c  2fbd0018	subui	r29,r29,#24; alloc local storage
  799  000017a0  afa20000	sw	0(r29),r2
  800  000017a4  afa30004	sw	4(r29),r3
  801  000017a8  afa40008	sw	8(r29),r4
  802  000017ac  83c20003	lb	r2,3(r30)
  803  000017b0  20010000	addi	r1,r0,#0
  804  000017b4  304300ff	andi	r3,r2,#0x00ff
  805  000017b8  60640020	seqi	r4,r3,#32
  806  000017bc  1480002c	bnez	r4,L3_LF2
  807  000017c0  54000000	nop; delay slot nop
  808  000017c4  304300ff	andi	r3,r2,#0x00ff
  809  000017c8  60640009	seqi	r4,r3,#9
  810  000017cc  1480001c	bnez	r4,L3_LF2
  811  000017d0  54000000	nop; delay slot nop
  812  000017d4  304300ff	andi	r3,r2,#0x00ff
  813  000017d8  6064000a	seqi	r4,r3,#10
  814  000017dc  1480000c	bnez	r4,L3_LF2
  815  000017e0  54000000	nop; delay slot nop
  816  000017e4  08000008	j	L2_LF2
  817  000017e8  54000000	nop; delay slot nop
  818  000017ec          	L3_LF2:
  819  000017ec  20010001	addi	r1,r0,#1
  820  000017f0          	L2_LF2:
  821  000017f0  08000004	j	L1_LF2
  822  000017f4  54000000	nop; delay slot nop
  823  000017f8          	L1_LF2:
  824  000017f8  8fa20000	lw	r2,0(r29)
  825  000017fc  8fa30004	lw	r3,4(r29)
  826  00001800  8fa40008	lw	r4,8(r29)
  827  00001804  8fdffff8	lw	r31,-8(r30)
  828  00001808  001ee820	add	r29,r0,r30
  829  0000180c  8fdefffc	lw	r30,-4(r30)
  830  00001810  4be00000	jr	r31
  831  00001814  54000000	nop
  832  00001818          	.endproc _isspace
  833  00001818          	.align 2
  834  00001818          	.proc _isxdigit
  835  00001818          	.global _isxdigit
  836  00001818          	_isxdigit:
  837                      ;  Function 'isxdigit'; 0 bytes of locals, 3 regs to save.
  838  00001818  afbefffc	sw	-4(r29),r30; push fp
  839  0000181c  001df020	add	r30,r0,r29; fp = sp
  840  00001820  afbffff8	sw	-8(r29),r31; push ret addr
  841  00001824  2fbd0018	subui	r29,r29,#24; alloc local storage
  842  00001828  afa20000	sw	0(r29),r2
  843  0000182c  afa30004	sw	4(r29),r3
  844  00001830  afa40008	sw	8(r29),r4
  845  00001834  83c20003	lb	r2,3(r30)
  846  00001838  20010000	addi	r1,r0,#0
  847  0000183c  304300ff	andi	r3,r2,#0x00ff
  848  00001840  6c64002f	sgtui	r4,r3,#47
  849  00001844  1080001c	beqz	r4,L7_LF2
  850  00001848  54000000	nop; delay slot nop
  851  0000184c  304300ff	andi	r3,r2,#0x00ff
  852  00001850  70640039	sleui	r4,r3,#57
  853  00001854  1480005c	bnez	r4,L6_LF2
  854  00001858  54000000	nop; delay slot nop
  855  0000185c  08000004	j	L7_LF2
  856  00001860  54000000	nop; delay slot nop
  857  00001864          	L7_LF2:
  858  00001864  304300ff	andi	r3,r2,#0x00ff
  859  00001868  6c640060	sgtui	r4,r3,#96
  860  0000186c  1080001c	beqz	r4,L8_LF2
  861  00001870  54000000	nop; delay slot nop
  862  00001874  304300ff	andi	r3,r2,#0x00ff
  863  00001878  70640066	sleui	r4,r3,#102
  864  0000187c  14800034	bnez	r4,L6_LF2
  865  00001880  54000000	nop; delay slot nop
  866  00001884  08000004	j	L8_LF2
  867  00001888  54000000	nop; delay slot nop
  868  0000188c          	L8_LF2:
  869  0000188c  304300ff	andi	r3,r2,#0x00ff
  870  00001890  6c640040	sgtui	r4,r3,#64
  871  00001894  10800020	beqz	r4,L5_LF2
  872  00001898  54000000	nop; delay slot nop
  873  0000189c  304300ff	andi	r3,r2,#0x00ff
  874  000018a0  70640041	sleui	r4,r3,#65
  875  000018a4  1480000c	bnez	r4,L6_LF2
  876  000018a8  54000000	nop; delay slot nop
  877  000018ac  08000008	j	L5_LF2
  878  000018b0  54000000	nop; delay slot nop
  879  000018b4          	L6_LF2:
  880  000018b4  20010001	addi	r1,r0,#1
  881  000018b8          	L5_LF2:
  882  000018b8  08000004	j	L4_LF2
  883  000018bc  54000000	nop; delay slot nop
  884  000018c0          	L4_LF2:
  885  000018c0  8fa20000	lw	r2,0(r29)
  886  000018c4  8fa30004	lw	r3,4(r29)
  887  000018c8  8fa40008	lw	r4,8(r29)
  888  000018cc  8fdffff8	lw	r31,-8(r30)
  889  000018d0  001ee820	add	r29,r0,r30
  890  000018d4  8fdefffc	lw	r30,-4(r30)
  891  000018d8  4be00000	jr	r31
  892  000018dc  54000000	nop
  893  000018e0          	.endproc _isxdigit
  894  000018e0          	.align 2
  895  000018e0          	.proc _dstrcpy
  896  000018e0          	.global _dstrcpy
  897  000018e0          	_dstrcpy:
  898                      ;  Function 'dstrcpy'; 8 bytes of locals, 2 regs to save.
  899  000018e0  afbefffc	sw	-4(r29),r30; push fp
  900  000018e4  001df020	add	r30,r0,r29; fp = sp
  901  000018e8  afbffff8	sw	-8(r29),r31; push ret addr
  902  000018ec  2fbd0018	subui	r29,r29,#24; alloc local storage
  903  000018f0  afa20000	sw	0(r29),r2
  904  000018f4  afa30004	sw	4(r29),r3
  905  000018f8  8fc10000	lw	r1,(r30)
  906  000018fc  afc1fff4	sw	-12(r30),r1
  907  00001900          	L10_LF2:
  908  00001900  8fc10000	lw	r1,(r30)
  909  00001904  20220001	addi	r2,r1,#1
  910  00001908  afc20000	sw	(r30),r2
  911  0000190c  8fc20004	lw	r2,4(r30)
  912  00001910  20430001	addi	r3,r2,#1
  913  00001914  afc30004	sw	4(r30),r3
  914  00001918  80420000	lb	r2,(r2)
  915  0000191c  a0220000	sb	(r1),r2
  916  00001920  a3c2fff3	sb	-13(r30),r2
  917  00001924          	L12_LF2:
  918  00001924  93c1fff3	lbu	r1,-13(r30)
  919  00001928  64220000	snei	r2,r1,#0
  920  0000192c  1440000c	bnez	r2,L13_LF2
  921  00001930  54000000	nop; delay slot nop
  922  00001934  0800000c	j	L11_LF2
  923  00001938  54000000	nop; delay slot nop
  924  0000193c          	L13_LF2:
  925  0000193c  0bffffc0	j	L10_LF2
  926  00001940  54000000	nop; delay slot nop
  927  00001944          	L11_LF2:
  928  00001944  8fc1fff4	lw	r1,-12(r30)
  929  00001948  08000004	j	L9_LF2
  930  0000194c  54000000	nop; delay slot nop
  931  00001950          	L9_LF2:
  932  00001950  8fa20000	lw	r2,0(r29)
  933  00001954  8fa30004	lw	r3,4(r29)
  934  00001958  8fdffff8	lw	r31,-8(r30)
  935  0000195c  001ee820	add	r29,r0,r30
  936  00001960  8fdefffc	lw	r30,-4(r30)
  937  00001964  4be00000	jr	r31
  938  00001968  54000000	nop
  939  0000196c          	.endproc _dstrcpy
  940  0000196c          	.align 2
  941  0000196c          	.proc _dstrncpy
  942  0000196c          	.global _dstrncpy
  943  0000196c          	_dstrncpy:
  944                      ;  Function 'dstrncpy'; 8 bytes of locals, 2 regs to save.
  945  0000196c  afbefffc	sw	-4(r29),r30; push fp
  946  00001970  001df020	add	r30,r0,r29; fp = sp
  947  00001974  afbffff8	sw	-8(r29),r31; push ret addr
  948  00001978  2fbd0018	subui	r29,r29,#24; alloc local storage
  949  0000197c  afa20000	sw	0(r29),r2
  950  00001980  afa30004	sw	4(r29),r3
  951  00001984  8fc10000	lw	r1,(r30)
  952  00001988  afc1fff4	sw	-12(r30),r1
  953  0000198c          	L15_LF2:
  954  0000198c  8fc10008	lw	r1,8(r30)
  955  00001990  2022ffff	addi	r2,r1,#-1
  956  00001994  afc20008	sw	8(r30),r2
  957  00001998  70210000	slei	r1,r1,#0
  958  0000199c  1020000c	beqz	r1,L18_LF2
  959  000019a0  54000000	nop; delay slot nop
  960  000019a4  08000048	j	L16_LF2
  961  000019a8  54000000	nop; delay slot nop
  962  000019ac          	L18_LF2:
  963  000019ac  8fc10000	lw	r1,(r30)
  964  000019b0  20220001	addi	r2,r1,#1
  965  000019b4  afc20000	sw	(r30),r2
  966  000019b8  8fc20004	lw	r2,4(r30)
  967  000019bc  20430001	addi	r3,r2,#1
  968  000019c0  afc30004	sw	4(r30),r3
  969  000019c4  80420000	lb	r2,(r2)
  970  000019c8  a0220000	sb	(r1),r2
  971  000019cc  a3c2fff3	sb	-13(r30),r2
  972  000019d0          	L17_LF2:
  973  000019d0  93c1fff3	lbu	r1,-13(r30)
  974  000019d4  64220000	snei	r2,r1,#0
  975  000019d8  1440000c	bnez	r2,L19_LF2
  976  000019dc  54000000	nop; delay slot nop
  977  000019e0  0800000c	j	L16_LF2
  978  000019e4  54000000	nop; delay slot nop
  979  000019e8          	L19_LF2:
  980  000019e8  0bffffa0	j	L15_LF2
  981  000019ec  54000000	nop; delay slot nop
  982  000019f0          	L16_LF2:
  983  000019f0  8fc1fff4	lw	r1,-12(r30)
  984  000019f4  08000004	j	L14_LF2
  985  000019f8  54000000	nop; delay slot nop
  986  000019fc          	L14_LF2:
  987  000019fc  8fa20000	lw	r2,0(r29)
  988  00001a00  8fa30004	lw	r3,4(r29)
  989  00001a04  8fdffff8	lw	r31,-8(r30)
  990  00001a08  001ee820	add	r29,r0,r30
  991  00001a0c  8fdefffc	lw	r30,-4(r30)
  992  00001a10  4be00000	jr	r31
  993  00001a14  54000000	nop
  994  00001a18          	.endproc _dstrncpy
  995  00001a18          	.align 2
  996  00001a18          	.proc _dstrcat
  997  00001a18          	.global _dstrcat
  998  00001a18          	_dstrcat:
  999                      ;  Function 'dstrcat'; 8 bytes of locals, 1 regs to save.
 1000  00001a18  afbefffc	sw	-4(r29),r30; push fp
 1001  00001a1c  001df020	add	r30,r0,r29; fp = sp
 1002  00001a20  afbffff8	sw	-8(r29),r31; push ret addr
 1003  00001a24  2fbd0018	subui	r29,r29,#24; alloc local storage
 1004  00001a28  afa20000	sw	0(r29),r2
 1005  00001a2c  8fc10000	lw	r1,(r30)
 1006  00001a30  afc1fff4	sw	-12(r30),r1
 1007  00001a34          	L21_LF2:
 1008  00001a34  8fc10000	lw	r1,(r30)
 1009  00001a38  90220000	lbu	r2,(r1)
 1010  00001a3c  64410000	snei	r1,r2,#0
 1011  00001a40  1420000c	bnez	r1,L23_LF2
 1012  00001a44  54000000	nop; delay slot nop
 1013  00001a48  0800001c	j	L22_LF2
 1014  00001a4c  54000000	nop; delay slot nop
 1015  00001a50          	L23_LF2:
 1016  00001a50  8fc20000	lw	r2,(r30)
 1017  00001a54  20410001	addi	r1,r2,#1
 1018  00001a58  00011020	add	r2,r0,r1
 1019  00001a5c  afc20000	sw	(r30),r2
 1020  00001a60  0bffffd0	j	L21_LF2
 1021  00001a64  54000000	nop; delay slot nop
 1022  00001a68          	L22_LF2:
 1023  00001a68  23bdfff8	addi	r29,r29,#-8
 1024  00001a6c  001d0820	add	r1,r0,r29
 1025  00001a70  8fc20000	lw	r2,(r30)
 1026  00001a74  ac220000	sw	(r1),r2
 1027  00001a78  8fc20004	lw	r2,4(r30)
 1028  00001a7c  ac220004	sw	4(r1),r2
 1029  00001a80  0ffffe5c	jal	_dstrcpy
 1030  00001a84  54000000	nop; delay slot nop
 1031  00001a88  23bd0008	addi	r29,r29,#8
 1032  00001a8c  8fc1fff4	lw	r1,-12(r30)
 1033  00001a90  08000004	j	L20_LF2
 1034  00001a94  54000000	nop; delay slot nop
 1035  00001a98          	L20_LF2:
 1036  00001a98  8fa20000	lw	r2,0(r29)
 1037  00001a9c  8fdffff8	lw	r31,-8(r30)
 1038  00001aa0  001ee820	add	r29,r0,r30
 1039  00001aa4  8fdefffc	lw	r30,-4(r30)
 1040  00001aa8  4be00000	jr	r31
 1041  00001aac  54000000	nop
 1042  00001ab0          	.endproc _dstrcat
 1043  00001ab0          	.align 2
 1044  00001ab0          	.proc _dstrncmp
 1045  00001ab0          	.global _dstrncmp
 1046  00001ab0          	_dstrncmp:
 1047                      ;  Function 'dstrncmp'; 8 bytes of locals, 2 regs to save.
 1048  00001ab0  afbefffc	sw	-4(r29),r30; push fp
 1049  00001ab4  001df020	add	r30,r0,r29; fp = sp
 1050  00001ab8  afbffff8	sw	-8(r29),r31; push ret addr
 1051  00001abc  2fbd0018	subui	r29,r29,#24; alloc local storage
 1052  00001ac0  afa20000	sw	0(r29),r2
 1053  00001ac4  afa30004	sw	4(r29),r3
 1054  00001ac8  54000000	nop
 1055  00001acc  20010000	addi	r1,r0,#0
 1056  00001ad0  afc1fff4	sw	-12(r30),r1
 1057  00001ad4          	L25_LF2:
 1058  00001ad4  8fc1fff4	lw	r1,-12(r30)
 1059  00001ad8  8fc20008	lw	r2,8(r30)
 1060  00001adc  0022082a	slt	r1,r1,r2
 1061  00001ae0  1420000c	bnez	r1,L28_LF2
 1062  00001ae4  54000000	nop; delay slot nop
 1063  00001ae8  08000088	j	L26_LF2
 1064  00001aec  54000000	nop; delay slot nop
 1065  00001af0          	L28_LF2:
 1066  00001af0  8fc10004	lw	r1,4(r30)
 1067  00001af4  90220000	lbu	r2,(r1)
 1068  00001af8  64410000	snei	r1,r2,#0
 1069  00001afc  14200018	bnez	r1,L29_LF2
 1070  00001b00  54000000	nop; delay slot nop
 1071  00001b04  20010000	addi	r1,r0,#0
 1072  00001b08  080000d8	j	L24_LF2
 1073  00001b0c  54000000	nop; delay slot nop
 1074  00001b10  08000028	j	L30_LF2
 1075  00001b14  54000000	nop; delay slot nop
 1076  00001b18          	L29_LF2:
 1077  00001b18  8fc10000	lw	r1,(r30)
 1078  00001b1c  8fc20004	lw	r2,4(r30)
 1079  00001b20  90210000	lbu	r1,(r1)
 1080  00001b24  90420000	lbu	r2,(r2)
 1081  00001b28  00220829	sne	r1,r1,r2
 1082  00001b2c  1020000c	beqz	r1,L30_LF2
 1083  00001b30  54000000	nop; delay slot nop
 1084  00001b34  0800003c	j	L26_LF2
 1085  00001b38  54000000	nop; delay slot nop
 1086  00001b3c          	L31_LF2:
 1087  00001b3c          	L30_LF2:
 1088  00001b3c  8fc20000	lw	r2,(r30)
 1089  00001b40  20410001	addi	r1,r2,#1
 1090  00001b44  00011020	add	r2,r0,r1
 1091  00001b48  afc20000	sw	(r30),r2
 1092  00001b4c  8fc20004	lw	r2,4(r30)
 1093  00001b50  20410001	addi	r1,r2,#1
 1094  00001b54  00011020	add	r2,r0,r1
 1095  00001b58  afc20004	sw	4(r30),r2
 1096  00001b5c          	L27_LF2:
 1097  00001b5c  8fc2fff4	lw	r2,-12(r30)
 1098  00001b60  20410001	addi	r1,r2,#1
 1099  00001b64  00011020	add	r2,r0,r1
 1100  00001b68  afc2fff4	sw	-12(r30),r2
 1101  00001b6c  0bffff64	j	L25_LF2
 1102  00001b70  54000000	nop; delay slot nop
 1103  00001b74          	L26_LF2:
 1104  00001b74  8fc1fff4	lw	r1,-12(r30)
 1105  00001b78  8fc20008	lw	r2,8(r30)
 1106  00001b7c  00220828	seq	r1,r1,r2
 1107  00001b80  10200018	beqz	r1,L32_LF2
 1108  00001b84  54000000	nop; delay slot nop
 1109  00001b88  20010000	addi	r1,r0,#0
 1110  00001b8c  08000054	j	L24_LF2
 1111  00001b90  54000000	nop; delay slot nop
 1112  00001b94  0800004c	j	L33_LF2
 1113  00001b98  54000000	nop; delay slot nop
 1114  00001b9c          	L32_LF2:
 1115  00001b9c  8fc20000	lw	r2,(r30)
 1116  00001ba0  90410000	lbu	r1,(r2)
 1117  00001ba4  8fc20004	lw	r2,4(r30)
 1118  00001ba8  90430000	lbu	r3,(r2)
 1119  00001bac  00230822	sub	r1,r1,r3
 1120  00001bb0  74220000	sgei	r2,r1,#0
 1121  00001bb4  10400020	beqz	r2,L34_LF2
 1122  00001bb8  54000000	nop; delay slot nop
 1123  00001bbc  8fc10000	lw	r1,(r30)
 1124  00001bc0  8fc20004	lw	r2,4(r30)
 1125  00001bc4  90210000	lbu	r1,(r1)
 1126  00001bc8  90420000	lbu	r2,(r2)
 1127  00001bcc  00220829	sne	r1,r1,r2
 1128  00001bd0  08000008	j	L35_LF2
 1129  00001bd4  54000000	nop; delay slot nop
 1130  00001bd8          	L34_LF2:
 1131  00001bd8  2001ffff	addi	r1,r0,#-1
 1132  00001bdc          	L35_LF2:
 1133  00001bdc  08000004	j	L24_LF2
 1134  00001be0  54000000	nop; delay slot nop
 1135  00001be4          	L33_LF2:
 1136  00001be4          	L24_LF2:
 1137  00001be4  8fa20000	lw	r2,0(r29)
 1138  00001be8  8fa30004	lw	r3,4(r29)
 1139  00001bec  8fdffff8	lw	r31,-8(r30)
 1140  00001bf0  001ee820	add	r29,r0,r30
 1141  00001bf4  8fdefffc	lw	r30,-4(r30)
 1142  00001bf8  4be00000	jr	r31
 1143  00001bfc  54000000	nop
 1144  00001c00          	.endproc _dstrncmp
 1145  00001c00          	.align 2
 1146  00001c00          	.proc _dstrlen
 1147  00001c00          	.global _dstrlen
 1148  00001c00          	_dstrlen:
 1149                      ;  Function 'dstrlen'; 8 bytes of locals, 1 regs to save.
 1150  00001c00  afbefffc	sw	-4(r29),r30; push fp
 1151  00001c04  001df020	add	r30,r0,r29; fp = sp
 1152  00001c08  afbffff8	sw	-8(r29),r31; push ret addr
 1153  00001c0c  2fbd0018	subui	r29,r29,#24; alloc local storage
 1154  00001c10  afa20000	sw	0(r29),r2
 1155  00001c14  20010000	addi	r1,r0,#0
 1156  00001c18  afc1fff4	sw	-12(r30),r1
 1157  00001c1c          	L37_LF2:
 1158  00001c1c  8fc10000	lw	r1,(r30)
 1159  00001c20  20220001	addi	r2,r1,#1
 1160  00001c24  afc20000	sw	(r30),r2
 1161  00001c28  90210000	lbu	r1,(r1)
 1162  00001c2c  64220000	snei	r2,r1,#0
 1163  00001c30  1440000c	bnez	r2,L39_LF2
 1164  00001c34  54000000	nop; delay slot nop
 1165  00001c38  0800001c	j	L38_LF2
 1166  00001c3c  54000000	nop; delay slot nop
 1167  00001c40          	L39_LF2:
 1168  00001c40  8fc2fff4	lw	r2,-12(r30)
 1169  00001c44  20410001	addi	r1,r2,#1
 1170  00001c48  00011020	add	r2,r0,r1
 1171  00001c4c  afc2fff4	sw	-12(r30),r2
 1172  00001c50  0bffffc8	j	L37_LF2
 1173  00001c54  54000000	nop; delay slot nop
 1174  00001c58          	L38_LF2:
 1175  00001c58  8fc1fff4	lw	r1,-12(r30)
 1176  00001c5c  08000004	j	L36_LF2
 1177  00001c60  54000000	nop; delay slot nop
 1178  00001c64          	L36_LF2:
 1179  00001c64  8fa20000	lw	r2,0(r29)
 1180  00001c68  8fdffff8	lw	r31,-8(r30)
 1181  00001c6c  001ee820	add	r29,r0,r30
 1182  00001c70  8fdefffc	lw	r30,-4(r30)
 1183  00001c74  4be00000	jr	r31
 1184  00001c78  54000000	nop
 1185  00001c7c          	.endproc _dstrlen
 1186  00001c7c          	.align 2
 1187  00001c7c          	.proc _dstrstr
 1188  00001c7c          	.global _dstrstr
 1189  00001c7c          	_dstrstr:
 1190                      ;  Function 'dstrstr'; 8 bytes of locals, 1 regs to save.
 1191  00001c7c  afbefffc	sw	-4(r29),r30; push fp
 1192  00001c80  001df020	add	r30,r0,r29; fp = sp
 1193  00001c84  afbffff8	sw	-8(r29),r31; push ret addr
 1194  00001c88  2fbd0018	subui	r29,r29,#24; alloc local storage
 1195  00001c8c  afa20000	sw	0(r29),r2
 1196  00001c90  23bdfff8	addi	r29,r29,#-8
 1197  00001c94  001d0820	add	r1,r0,r29
 1198  00001c98  8fc20004	lw	r2,4(r30)
 1199  00001c9c  ac220000	sw	(r1),r2
 1200  00001ca0  0fffff5c	jal	_dstrlen
 1201  00001ca4  54000000	nop; delay slot nop
 1202  00001ca8  23bd0008	addi	r29,r29,#8
 1203  00001cac  afc1fff4	sw	-12(r30),r1
 1204  00001cb0          	L41_LF2:
 1205  00001cb0  8fc10000	lw	r1,(r30)
 1206  00001cb4  90220000	lbu	r2,(r1)
 1207  00001cb8  64410000	snei	r1,r2,#0
 1208  00001cbc  1420000c	bnez	r1,L43_LF2
 1209  00001cc0  54000000	nop; delay slot nop
 1210  00001cc4  08000060	j	L42_LF2
 1211  00001cc8  54000000	nop; delay slot nop
 1212  00001ccc          	L43_LF2:
 1213  00001ccc  23bdfff0	addi	r29,r29,#-16
 1214  00001cd0  001d0820	add	r1,r0,r29
 1215  00001cd4  8fc20000	lw	r2,(r30)
 1216  00001cd8  ac220000	sw	(r1),r2
 1217  00001cdc  8fc20004	lw	r2,4(r30)
 1218  00001ce0  ac220004	sw	4(r1),r2
 1219  00001ce4  8fc2fff4	lw	r2,-12(r30)
 1220  00001ce8  ac220008	sw	8(r1),r2
 1221  00001cec  0ffffdc0	jal	_dstrncmp
 1222  00001cf0  54000000	nop; delay slot nop
 1223  00001cf4  23bd0010	addi	r29,r29,#16
 1224  00001cf8  64220000	snei	r2,r1,#0
 1225  00001cfc  14400010	bnez	r2,L44_LF2
 1226  00001d00  54000000	nop; delay slot nop
 1227  00001d04  8fc10000	lw	r1,(r30)
 1228  00001d08  08000028	j	L40_LF2
 1229  00001d0c  54000000	nop; delay slot nop
 1230  00001d10          	L44_LF2:
 1231  00001d10  8fc20000	lw	r2,(r30)
 1232  00001d14  20410001	addi	r1,r2,#1
 1233  00001d18  00011020	add	r2,r0,r1
 1234  00001d1c  afc20000	sw	(r30),r2
 1235  00001d20  0bffff8c	j	L41_LF2
 1236  00001d24  54000000	nop; delay slot nop
 1237  00001d28          	L42_LF2:
 1238  00001d28  20010000	addi	r1,r0,#0
 1239  00001d2c  08000004	j	L40_LF2
 1240  00001d30  54000000	nop; delay slot nop
 1241  00001d34          	L40_LF2:
 1242  00001d34  8fa20000	lw	r2,0(r29)
 1243  00001d38  8fdffff8	lw	r31,-8(r30)
 1244  00001d3c  001ee820	add	r29,r0,r30
 1245  00001d40  8fdefffc	lw	r30,-4(r30)
 1246  00001d44  4be00000	jr	r31
 1247  00001d48  54000000	nop
 1248  00001d4c          	.endproc _dstrstr
 1249  00001d4c          	.align 2
 1250  00001d4c          	.proc _dmindex
 1251  00001d4c          	.global _dmindex
 1252  00001d4c          	_dmindex:
 1253                      ;  Function 'dmindex'; 8 bytes of locals, 1 regs to save.
 1254  00001d4c  afbefffc	sw	-4(r29),r30; push fp
 1255  00001d50  001df020	add	r30,r0,r29; fp = sp
 1256  00001d54  afbffff8	sw	-8(r29),r31; push ret addr
 1257  00001d58  2fbd0018	subui	r29,r29,#24; alloc local storage
 1258  00001d5c  afa20000	sw	0(r29),r2
 1259  00001d60  54000000	nop
 1260  00001d64          	L46_LF2:
 1261  00001d64  8fc10000	lw	r1,(r30)
 1262  00001d68  90220000	lbu	r2,(r1)
 1263  00001d6c  64410000	snei	r1,r2,#0
 1264  00001d70  1420000c	bnez	r1,L48_LF2
 1265  00001d74  54000000	nop; delay slot nop
 1266  00001d78  08000070	j	L47_LF2
 1267  00001d7c  54000000	nop; delay slot nop
 1268  00001d80          	L48_LF2:
 1269  00001d80  8fc10004	lw	r1,4(r30)
 1270  00001d84  afc1fff4	sw	-12(r30),r1
 1271  00001d88          	L49_LF2:
 1272  00001d88  8fc1fff4	lw	r1,-12(r30)
 1273  00001d8c  90220000	lbu	r2,(r1)
 1274  00001d90  64410000	snei	r1,r2,#0
 1275  00001d94  1420000c	bnez	r1,L52_LF2
 1276  00001d98  54000000	nop; delay slot nop
 1277  00001d9c  08000044	j	L50_LF2
 1278  00001da0  54000000	nop; delay slot nop
 1279  00001da4          	L52_LF2:
 1280  00001da4  8fc10000	lw	r1,(r30)
 1281  00001da8  8fc2fff4	lw	r2,-12(r30)
 1282  00001dac  90210000	lbu	r1,(r1)
 1283  00001db0  90420000	lbu	r2,(r2)
 1284  00001db4  00220828	seq	r1,r1,r2
 1285  00001db8  10200010	beqz	r1,L51_LF2
 1286  00001dbc  54000000	nop; delay slot nop
 1287  00001dc0  8fc10000	lw	r1,(r30)
 1288  00001dc4  08000030	j	L45_LF2
 1289  00001dc8  54000000	nop; delay slot nop
 1290  00001dcc          	L53_LF2:
 1291  00001dcc          	L51_LF2:
 1292  00001dcc  8fc2fff4	lw	r2,-12(r30)
 1293  00001dd0  20410001	addi	r1,r2,#1
 1294  00001dd4  00011020	add	r2,r0,r1
 1295  00001dd8  afc2fff4	sw	-12(r30),r2
 1296  00001ddc  0bffffa8	j	L49_LF2
 1297  00001de0  54000000	nop; delay slot nop
 1298  00001de4          	L50_LF2:
 1299  00001de4  0bffff7c	j	L46_LF2
 1300  00001de8  54000000	nop; delay slot nop
 1301  00001dec          	L47_LF2:
 1302  00001dec  20010000	addi	r1,r0,#0
 1303  00001df0  08000004	j	L45_LF2
 1304  00001df4  54000000	nop; delay slot nop
 1305  00001df8          	L45_LF2:
 1306  00001df8  8fa20000	lw	r2,0(r29)
 1307  00001dfc  8fdffff8	lw	r31,-8(r30)
 1308  00001e00  001ee820	add	r29,r0,r30
 1309  00001e04  8fdefffc	lw	r30,-4(r30)
 1310  00001e08  4be00000	jr	r31
 1311  00001e0c  54000000	nop
 1312  00001e10          	.endproc _dmindex
 1313  00001e10          	.align 2
 1314  00001e10          	.proc _dindex
 1315  00001e10          	.global _dindex
 1316  00001e10          	_dindex:
 1317                      ;  Function 'dindex'; 0 bytes of locals, 1 regs to save.
 1318  00001e10  afbefffc	sw	-4(r29),r30; push fp
 1319  00001e14  001df020	add	r30,r0,r29; fp = sp
 1320  00001e18  afbffff8	sw	-8(r29),r31; push ret addr
 1321  00001e1c  2fbd0010	subui	r29,r29,#16; alloc local storage
 1322  00001e20  afa20000	sw	0(r29),r2
 1323  00001e24  54000000	nop
 1324  00001e28          	L55_LF2:
 1325  00001e28  8fc10000	lw	r1,(r30)
 1326  00001e2c  90220000	lbu	r2,(r1)
 1327  00001e30  64410000	snei	r1,r2,#0
 1328  00001e34  1420000c	bnez	r1,L57_LF2
 1329  00001e38  54000000	nop; delay slot nop
 1330  00001e3c  08000040	j	L56_LF2
 1331  00001e40  54000000	nop; delay slot nop
 1332  00001e44          	L57_LF2:
 1333  00001e44  8fc10000	lw	r1,(r30)
 1334  00001e48  90220000	lbu	r2,(r1)
 1335  00001e4c  8fc10004	lw	r1,4(r30)
 1336  00001e50  00411028	seq	r2,r2,r1
 1337  00001e54  10400010	beqz	r2,L58_LF2
 1338  00001e58  54000000	nop; delay slot nop
 1339  00001e5c  8fc10000	lw	r1,(r30)
 1340  00001e60  08000028	j	L54_LF2
 1341  00001e64  54000000	nop; delay slot nop
 1342  00001e68          	L58_LF2:
 1343  00001e68  8fc20000	lw	r2,(r30)
 1344  00001e6c  20410001	addi	r1,r2,#1
 1345  00001e70  00011020	add	r2,r0,r1
 1346  00001e74  afc20000	sw	(r30),r2
 1347  00001e78  0bffffac	j	L55_LF2
 1348  00001e7c  54000000	nop; delay slot nop
 1349  00001e80          	L56_LF2:
 1350  00001e80  20010000	addi	r1,r0,#0
 1351  00001e84  08000004	j	L54_LF2
 1352  00001e88  54000000	nop; delay slot nop
 1353  00001e8c          	L54_LF2:
 1354  00001e8c  8fa20000	lw	r2,0(r29)
 1355  00001e90  8fdffff8	lw	r31,-8(r30)
 1356  00001e94  001ee820	add	r29,r0,r30
 1357  00001e98  8fdefffc	lw	r30,-4(r30)
 1358  00001e9c  4be00000	jr	r31
 1359  00001ea0  54000000	nop
 1360  00001ea4          	.endproc _dindex
 1361  00001ea4          	.align 2
 1362  00001ea4          	.proc _ditoa
 1363  00001ea4          	.global _ditoa
 1364  00001ea4          	_ditoa:
 1365                      ;  Function 'ditoa'; 8 bytes of locals, 2 regs to save.
 1366  00001ea4  afbefffc	sw	-4(r29),r30; push fp
 1367  00001ea8  001df020	add	r30,r0,r29; fp = sp
 1368  00001eac  afbffff8	sw	-8(r29),r31; push ret addr
 1369  00001eb0  2fbd0018	subui	r29,r29,#24; alloc local storage
 1370  00001eb4  afa20000	sw	0(r29),r2
 1371  00001eb8  afa30004	sw	4(r29),r3
 1372  00001ebc  8fc10000	lw	r1,(r30)
 1373  00001ec0  68220000	slti	r2,r1,#0
 1374  00001ec4  1040002c	beqz	r2,L60_LF2
 1375  00001ec8  54000000	nop; delay slot nop
 1376  00001ecc  8fc10004	lw	r1,4(r30)
 1377  00001ed0  20220001	addi	r2,r1,#1
 1378  00001ed4  afc20004	sw	4(r30),r2
 1379  00001ed8  2002002d	addi	r2,r0,(#0x2d)&0xff
 1380  00001edc  a0220000	sb	(r1),r2
 1381  00001ee0  8fc10000	lw	r1,(r30)
 1382  00001ee4  00011022	sub	r2,r0,r1
 1383  00001ee8  afc20000	sw	(r30),r2
 1384  00001eec  08000118	j	L61_LF2
 1385  00001ef0  54000000	nop; delay slot nop
 1386  00001ef4          	L60_LF2:
 1387  00001ef4  8fc10000	lw	r1,(r30)
 1388  00001ef8  64220000	snei	r2,r1,#0
 1389  00001efc  14400020	bnez	r2,L62_LF2
 1390  00001f00  54000000	nop; delay slot nop
 1391  00001f04  8fc10004	lw	r1,4(r30)
 1392  00001f08  20220001	addi	r2,r1,#1
 1393  00001f0c  afc20004	sw	4(r30),r2
 1394  00001f10  20020030	addi	r2,r0,(#0x30)&0xff
 1395  00001f14  a0220000	sb	(r1),r2
 1396  00001f18  080000ec	j	L61_LF2
 1397  00001f1c  54000000	nop; delay slot nop
 1398  00001f20          	L62_LF2:
 1399  00001f20  20010001	addi	r1,r0,#1
 1400  00001f24  afc1fff4	sw	-12(r30),r1
 1401  00001f28          	L64_LF2:
 1402  00001f28  8fc1fff4	lw	r1,-12(r30)
 1403  00001f2c  8fc20000	lw	r2,(r30)
 1404  00001f30  0022082c	sle	r1,r1,r2
 1405  00001f34  1420000c	bnez	r1,L66_LF2
 1406  00001f38  54000000	nop; delay slot nop
 1407  00001f3c  08000024	j	L65_LF2
 1408  00001f40  54000000	nop; delay slot nop
 1409  00001f44          	L67_LF2:
 1410  00001f44          	L66_LF2:
 1411  00001f44  8fc1fff4	lw	r1,-12(r30)
 1412  00001f48  00011820	add	r3,r0,r1
 1413  00001f4c  50620002	slli	r2,r3,#0x2
 1414  00001f50  00411020	add	r2,r2,r1
 1415  00001f54  50410001	slli	r1,r2,#0x1
 1416  00001f58  afc1fff4	sw	-12(r30),r1
 1417  00001f5c  0bffffc8	j	L64_LF2
 1418  00001f60  54000000	nop; delay slot nop
 1419  00001f64          	L65_LF2:
 1420  00001f64  54000000	nop
 1421  00001f68          	L68_LF2:
 1422  00001f68  8fc1fff4	lw	r1,-12(r30)
 1423  00001f6c  2002000a	addi	r2,r0,#10
 1424  00001f70  00200035	movi2fp	f0,r1
 1425  00001f74  00400835	movi2fp	f1,r2
 1426  00001f78  0401000f	div	f0,f0,f1
 1427  00001f7c  00000834	movfp2i	r1,f0
 1428  00001f80  afc1fff4	sw	-12(r30),r1
 1429  00001f84  8fc10004	lw	r1,4(r30)
 1430  00001f88  20220001	addi	r2,r1,#1
 1431  00001f8c  afc20004	sw	4(r30),r2
 1432  00001f90  8fc20000	lw	r2,(r30)
 1433  00001f94  8fc3fff4	lw	r3,-12(r30)
 1434  00001f98  00400035	movi2fp	f0,r2
 1435  00001f9c  00600835	movi2fp	f1,r3
 1436  00001fa0  0401000f	div	f0,f0,f1
 1437  00001fa4  00001034	movfp2i	r2,f0
 1438  00001fa8  00021820	add	r3,r0,r2
 1439  00001fac  20620030	addi	r2,r3,#48
 1440  00001fb0  a0220000	sb	(r1),r2
 1441  00001fb4  8fc10000	lw	r1,(r30)
 1442  00001fb8  8fc3fff4	lw	r3,-12(r30)
 1443  00001fbc  00200035	movi2fp	f0,r1
 1444  00001fc0  00600835	movi2fp	f1,r3
 1445  00001fc4  0401000f	div	f0,f0,f1
 1446  00001fc8  00001034	movfp2i	r2,f0
 1447  00001fcc  8fc3fff4	lw	r3,-12(r30)
 1448  00001fd0  00400035	movi2fp	f0,r2
 1449  00001fd4  00600835	movi2fp	f1,r3
 1450  00001fd8  0401000e	mult	f0,f0,f1
 1451  00001fdc  00001034	movfp2i	r2,f0
 1452  00001fe0  00220822	sub	r1,r1,r2
 1453  00001fe4  afc10000	sw	(r30),r1
 1454  00001fe8          	L70_LF2:
 1455  00001fe8  8fc1fff4	lw	r1,-12(r30)
 1456  00001fec  6c220001	sgti	r2,r1,#1
 1457  00001ff0  1440000c	bnez	r2,L71_LF2
 1458  00001ff4  54000000	nop; delay slot nop
 1459  00001ff8  0800000c	j	L61_LF2
 1460  00001ffc  54000000	nop; delay slot nop
 1461  00002000          	L71_LF2:
 1462  00002000  0bffff64	j	L68_LF2
 1463  00002004  54000000	nop; delay slot nop
 1464  00002008          	L69_LF2:
 1465  00002008          	L63_LF2:
 1466  00002008          	L61_LF2:
 1467  00002008  8fc10004	lw	r1,4(r30)
 1468  0000200c  20020000	addi	r2,r0,(#0x0)&0xff
 1469  00002010  a0220000	sb	(r1),r2
 1470  00002014          	L59_LF2:
 1471  00002014  8fa20000	lw	r2,0(r29)
 1472  00002018  8fa30004	lw	r3,4(r29)
 1473  0000201c  8fdffff8	lw	r31,-8(r30)
 1474  00002020  001ee820	add	r29,r0,r30
 1475  00002024  8fdefffc	lw	r30,-4(r30)
 1476  00002028  4be00000	jr	r31
 1477  0000202c  54000000	nop
 1478  00002030          	.endproc _ditoa
 1479  00002030          	.align 2
 1480  00002030          	.proc _dstrtol
 1481  00002030          	.global _dstrtol
 1482  00002030          	_dstrtol:
 1483                      ;  Function 'dstrtol'; 16 bytes of locals, 1 regs to save.
 1484  00002030  afbefffc	sw	-4(r29),r30; push fp
 1485  00002034  001df020	add	r30,r0,r29; fp = sp
 1486  00002038  afbffff8	sw	-8(r29),r31; push ret addr
 1487  0000203c  2fbd0020	subui	r29,r29,#32; alloc local storage
 1488  00002040  afa20000	sw	0(r29),r2
 1489  00002044  20010000	addi	r1,r0,#0
 1490  00002048  afc1fff4	sw	-12(r30),r1
 1491  0000204c          	L73_LF2:
 1492  0000204c  8fc10000	lw	r1,(r30)
 1493  00002050  90220000	lbu	r2,(r1)
 1494  00002054  60410020	seqi	r1,r2,#32
 1495  00002058  14200034	bnez	r1,L75_LF2
 1496  0000205c  54000000	nop; delay slot nop
 1497  00002060  8fc10000	lw	r1,(r30)
 1498  00002064  90220000	lbu	r2,(r1)
 1499  00002068  60410009	seqi	r1,r2,#9
 1500  0000206c  14200020	bnez	r1,L75_LF2
 1501  00002070  54000000	nop; delay slot nop
 1502  00002074  8fc10000	lw	r1,(r30)
 1503  00002078  90220000	lbu	r2,(r1)
 1504  0000207c  6041000a	seqi	r1,r2,#10
 1505  00002080  1420000c	bnez	r1,L75_LF2
 1506  00002084  54000000	nop; delay slot nop
 1507  00002088  0800001c	j	L74_LF2
 1508  0000208c  54000000	nop; delay slot nop
 1509  00002090          	L75_LF2:
 1510  00002090  8fc20000	lw	r2,(r30)
 1511  00002094  20410001	addi	r1,r2,#1
 1512  00002098  00011020	add	r2,r0,r1
 1513  0000209c  afc20000	sw	(r30),r2
 1514  000020a0  0bffffa8	j	L73_LF2
 1515  000020a4  54000000	nop; delay slot nop
 1516  000020a8          	L74_LF2:
 1517  000020a8  8fc10004	lw	r1,4(r30)
 1518  000020ac  64220000	snei	r2,r1,#0
 1519  000020b0  10400010	beqz	r2,L76_LF2
 1520  000020b4  54000000	nop; delay slot nop
 1521  000020b8  8fc10004	lw	r1,4(r30)
 1522  000020bc  8fc20000	lw	r2,(r30)
 1523  000020c0  ac220000	sw	(r1),r2
 1524  000020c4          	L76_LF2:
 1525  000020c4  8fc10000	lw	r1,(r30)
 1526  000020c8  90220000	lbu	r2,(r1)
 1527  000020cc  64410000	snei	r1,r2,#0
 1528  000020d0  14200010	bnez	r1,L77_LF2
 1529  000020d4  54000000	nop; delay slot nop
 1530  000020d8  8fc1fff4	lw	r1,-12(r30)
 1531  000020dc  08000294	j	L72_LF2
 1532  000020e0  54000000	nop; delay slot nop
 1533  000020e4          	L77_LF2:
 1534  000020e4  8fc10000	lw	r1,(r30)
 1535  000020e8  90220000	lbu	r2,(r1)
 1536  000020ec  6041002d	seqi	r1,r2,#45
 1537  000020f0  10200024	beqz	r1,L78_LF2
 1538  000020f4  54000000	nop; delay slot nop
 1539  000020f8  2001ffff	addi	r1,r0,#-1
 1540  000020fc  afc1ffec	sw	-20(r30),r1
 1541  00002100  8fc20000	lw	r2,(r30)
 1542  00002104  20410001	addi	r1,r2,#1
 1543  00002108  00011020	add	r2,r0,r1
 1544  0000210c  afc20000	sw	(r30),r2
 1545  00002110  0800000c	j	L79_LF2
 1546  00002114  54000000	nop; delay slot nop
 1547  00002118          	L78_LF2:
 1548  00002118  20010001	addi	r1,r0,#1
 1549  0000211c  afc1ffec	sw	-20(r30),r1
 1550  00002120          	L79_LF2:
 1551  00002120  8fc10008	lw	r1,8(r30)
 1552  00002124  64220000	snei	r2,r1,#0
 1553  00002128  14400090	bnez	r2,L80_LF2
 1554  0000212c  54000000	nop; delay slot nop
 1555  00002130  8fc10000	lw	r1,(r30)
 1556  00002134  90220000	lbu	r2,(r1)
 1557  00002138  60410030	seqi	r1,r2,#48
 1558  0000213c  10200074	beqz	r1,L81_LF2
 1559  00002140  54000000	nop; delay slot nop
 1560  00002144  8fc20000	lw	r2,(r30)
 1561  00002148  20410001	addi	r1,r2,#1
 1562  0000214c  00011020	add	r2,r0,r1
 1563  00002150  afc20000	sw	(r30),r2
 1564  00002154  8fc10000	lw	r1,(r30)
 1565  00002158  90220000	lbu	r2,(r1)
 1566  0000215c  60410078	seqi	r1,r2,#120
 1567  00002160  14200020	bnez	r1,L83_LF2
 1568  00002164  54000000	nop; delay slot nop
 1569  00002168  8fc10000	lw	r1,(r30)
 1570  0000216c  90220000	lbu	r2,(r1)
 1571  00002170  60410058	seqi	r1,r2,#88
 1572  00002174  1420000c	bnez	r1,L83_LF2
 1573  00002178  54000000	nop; delay slot nop
 1574  0000217c  08000024	j	L82_LF2
 1575  00002180  54000000	nop; delay slot nop
 1576  00002184          	L83_LF2:
 1577  00002184  20010010	addi	r1,r0,#16
 1578  00002188  afc10008	sw	8(r30),r1
 1579  0000218c  8fc20000	lw	r2,(r30)
 1580  00002190  20410001	addi	r1,r2,#1
 1581  00002194  00011020	add	r2,r0,r1
 1582  00002198  afc20000	sw	(r30),r2
 1583  0000219c  0800000c	j	L84_LF2
 1584  000021a0  54000000	nop; delay slot nop
 1585  000021a4          	L82_LF2:
 1586  000021a4  20010008	addi	r1,r0,#8
 1587  000021a8  afc10008	sw	8(r30),r1
 1588  000021ac          	L84_LF2:
 1589  000021ac  0800000c	j	L80_LF2
 1590  000021b0  54000000	nop; delay slot nop
 1591  000021b4          	L81_LF2:
 1592  000021b4  2001000a	addi	r1,r0,#10
 1593  000021b8  afc10008	sw	8(r30),r1
 1594  000021bc          	L85_LF2:
 1595  000021bc          	L80_LF2:
 1596  000021bc  8fc10008	lw	r1,8(r30)
 1597  000021c0  70220000	slei	r2,r1,#0
 1598  000021c4  1440001c	bnez	r2,L87_LF2
 1599  000021c8  54000000	nop; delay slot nop
 1600  000021cc  8fc10008	lw	r1,8(r30)
 1601  000021d0  6c220010	sgti	r2,r1,#16
 1602  000021d4  1440000c	bnez	r2,L87_LF2
 1603  000021d8  54000000	nop; delay slot nop
 1604  000021dc  08000010	j	L86_LF2
 1605  000021e0  54000000	nop; delay slot nop
 1606  000021e4          	L87_LF2:
 1607  000021e4  8fc1fff4	lw	r1,-12(r30)
 1608  000021e8  08000188	j	L72_LF2
 1609  000021ec  54000000	nop; delay slot nop
 1610  000021f0          	L86_LF2:
 1611  000021f0  54000000	nop
 1612  000021f4          	L88_LF2:
 1613  000021f4  8fc10000	lw	r1,(r30)
 1614  000021f8  90220000	lbu	r2,(r1)
 1615  000021fc  6c41002f	sgtui	r1,r2,#47
 1616  00002200  10200030	beqz	r1,L91_LF2
 1617  00002204  54000000	nop; delay slot nop
 1618  00002208  8fc10000	lw	r1,(r30)
 1619  0000220c  90220000	lbu	r2,(r1)
 1620  00002210  70410039	sleui	r1,r2,#57
 1621  00002214  1020001c	beqz	r1,L91_LF2
 1622  00002218  54000000	nop; delay slot nop
 1623  0000221c  8fc10000	lw	r1,(r30)
 1624  00002220  90220000	lbu	r2,(r1)
 1625  00002224  2041ffd0	addi	r1,r2,#-48
 1626  00002228  afc1fff0	sw	-16(r30),r1
 1627  0000222c  0800008c	j	L92_LF2
 1628  00002230  54000000	nop; delay slot nop
 1629  00002234          	L91_LF2:
 1630  00002234  8fc10000	lw	r1,(r30)
 1631  00002238  90220000	lbu	r2,(r1)
 1632  0000223c  6c410060	sgtui	r1,r2,#96
 1633  00002240  10200030	beqz	r1,L93_LF2
 1634  00002244  54000000	nop; delay slot nop
 1635  00002248  8fc10000	lw	r1,(r30)
 1636  0000224c  90220000	lbu	r2,(r1)
 1637  00002250  7041007a	sleui	r1,r2,#122
 1638  00002254  1020001c	beqz	r1,L93_LF2
 1639  00002258  54000000	nop; delay slot nop
 1640  0000225c  8fc10000	lw	r1,(r30)
 1641  00002260  90220000	lbu	r2,(r1)
 1642  00002264  2041ffa9	addi	r1,r2,#-87
 1643  00002268  afc1fff0	sw	-16(r30),r1
 1644  0000226c  0800004c	j	L92_LF2
 1645  00002270  54000000	nop; delay slot nop
 1646  00002274          	L93_LF2:
 1647  00002274  8fc10000	lw	r1,(r30)
 1648  00002278  90220000	lbu	r2,(r1)
 1649  0000227c  6c410040	sgtui	r1,r2,#64
 1650  00002280  10200030	beqz	r1,L95_LF2
 1651  00002284  54000000	nop; delay slot nop
 1652  00002288  8fc10000	lw	r1,(r30)
 1653  0000228c  90220000	lbu	r2,(r1)
 1654  00002290  7041005a	sleui	r1,r2,#90
 1655  00002294  1020001c	beqz	r1,L95_LF2
 1656  00002298  54000000	nop; delay slot nop
 1657  0000229c  8fc10000	lw	r1,(r30)
 1658  000022a0  90220000	lbu	r2,(r1)
 1659  000022a4  2041ffc9	addi	r1,r2,#-55
 1660  000022a8  afc1fff0	sw	-16(r30),r1
 1661  000022ac  0800000c	j	L92_LF2
 1662  000022b0  54000000	nop; delay slot nop
 1663  000022b4          	L95_LF2:
 1664  000022b4  200103e8	addi	r1,r0,#1000
 1665  000022b8  afc1fff0	sw	-16(r30),r1
 1666  000022bc          	L96_LF2:
 1667  000022bc          	L94_LF2:
 1668  000022bc          	L92_LF2:
 1669  000022bc  8fc1fff0	lw	r1,-16(r30)
 1670  000022c0  8fc20008	lw	r2,8(r30)
 1671  000022c4  0022082a	slt	r1,r1,r2
 1672  000022c8  10200040	beqz	r1,L90_LF2
 1673  000022cc  54000000	nop; delay slot nop
 1674  000022d0  8fc1fff4	lw	r1,-12(r30)
 1675  000022d4  8fc20008	lw	r2,8(r30)
 1676  000022d8  00200035	movi2fp	f0,r1
 1677  000022dc  00400835	movi2fp	f1,r2
 1678  000022e0  0401000e	mult	f0,f0,f1
 1679  000022e4  00000834	movfp2i	r1,f0
 1680  000022e8  afc1fff4	sw	-12(r30),r1
 1681  000022ec  8fc1fff4	lw	r1,-12(r30)
 1682  000022f0  8fc2fff0	lw	r2,-16(r30)
 1683  000022f4  00220820	add	r1,r1,r2
 1684  000022f8  afc1fff4	sw	-12(r30),r1
 1685  000022fc  8fc20000	lw	r2,(r30)
 1686  00002300  20410001	addi	r1,r2,#1
 1687  00002304  00011020	add	r2,r0,r1
 1688  00002308  afc20000	sw	(r30),r2
 1689  0000230c          	L97_LF2:
 1690  0000230c          	L90_LF2:
 1691  0000230c  8fc1fff0	lw	r1,-16(r30)
 1692  00002310  8fc20008	lw	r2,8(r30)
 1693  00002314  0022082a	slt	r1,r1,r2
 1694  00002318  1420000c	bnez	r1,L98_LF2
 1695  0000231c  54000000	nop; delay slot nop
 1696  00002320  0800000c	j	L89_LF2
 1697  00002324  54000000	nop; delay slot nop
 1698  00002328          	L98_LF2:
 1699  00002328  0bfffec8	j	L88_LF2
 1700  0000232c  54000000	nop; delay slot nop
 1701  00002330          	L89_LF2:
 1702  00002330  8fc10004	lw	r1,4(r30)
 1703  00002334  64220000	snei	r2,r1,#0
 1704  00002338  10400010	beqz	r2,L99_LF2
 1705  0000233c  54000000	nop; delay slot nop
 1706  00002340  8fc10004	lw	r1,4(r30)
 1707  00002344  8fc20000	lw	r2,(r30)
 1708  00002348  ac220000	sw	(r1),r2
 1709  0000234c          	L99_LF2:
 1710  0000234c  8fc1fff4	lw	r1,-12(r30)
 1711  00002350  8fc2ffec	lw	r2,-20(r30)
 1712  00002354  00200035	movi2fp	f0,r1
 1713  00002358  00400835	movi2fp	f1,r2
 1714  0000235c  0401000e	mult	f0,f0,f1
 1715  00002360  00000834	movfp2i	r1,f0
 1716  00002364  afc1fff4	sw	-12(r30),r1
 1717  00002368  8fc1fff4	lw	r1,-12(r30)
 1718  0000236c  08000004	j	L72_LF2
 1719  00002370  54000000	nop; delay slot nop
 1720  00002374          	L72_LF2:
 1721  00002374  8fa20000	lw	r2,0(r29)
 1722  00002378  8fdffff8	lw	r31,-8(r30)
 1723  0000237c  001ee820	add	r29,r0,r30
 1724  00002380  8fdefffc	lw	r30,-4(r30)
 1725  00002384  4be00000	jr	r31
 1726  00002388  54000000	nop
 1727  0000238c          	.endproc _dstrtol
 1728  0000238c          	.align 2
 1729  0000238c          	.proc _bcopy
 1730  0000238c          	.global _bcopy
 1731  0000238c          	_bcopy:
 1732                      ;  Function 'bcopy'; 0 bytes of locals, 2 regs to save.
 1733  0000238c  afbefffc	sw	-4(r29),r30; push fp
 1734  00002390  001df020	add	r30,r0,r29; fp = sp
 1735  00002394  afbffff8	sw	-8(r29),r31; push ret addr
 1736  00002398  2fbd0010	subui	r29,r29,#16; alloc local storage
 1737  0000239c  afa20000	sw	0(r29),r2
 1738  000023a0  afa30004	sw	4(r29),r3
 1739  000023a4  54000000	nop
 1740  000023a8          	L101_LF2:
 1741  000023a8  8fc10008	lw	r1,8(r30)
 1742  000023ac  2022ffff	addi	r2,r1,#-1
 1743  000023b0  afc20008	sw	8(r30),r2
 1744  000023b4  6c210000	sgti	r1,r1,#0
 1745  000023b8  1420000c	bnez	r1,L103_LF2
 1746  000023bc  54000000	nop; delay slot nop
 1747  000023c0  0800002c	j	L102_LF2
 1748  000023c4  54000000	nop; delay slot nop
 1749  000023c8          	L103_LF2:
 1750  000023c8  8fc10004	lw	r1,4(r30)
 1751  000023cc  20220001	addi	r2,r1,#1
 1752  000023d0  afc20004	sw	4(r30),r2
 1753  000023d4  8fc20000	lw	r2,(r30)
 1754  000023d8  20430001	addi	r3,r2,#1
 1755  000023dc  afc30000	sw	(r30),r3
 1756  000023e0  80420000	lb	r2,(r2)
 1757  000023e4  a0220000	sb	(r1),r2
 1758  000023e8  0bffffbc	j	L101_LF2
 1759  000023ec  54000000	nop; delay slot nop
 1760  000023f0          	L102_LF2:
 1761  000023f0          	L100_LF2:
 1762  000023f0  8fa20000	lw	r2,0(r29)
 1763  000023f4  8fa30004	lw	r3,4(r29)
 1764  000023f8  8fdffff8	lw	r31,-8(r30)
 1765  000023fc  001ee820	add	r29,r0,r30
 1766  00002400  8fdefffc	lw	r30,-4(r30)
 1767  00002404  4be00000	jr	r31
 1768  00002408  54000000	nop
 1769  0000240c          	.endproc _bcopy
 1770  0000240c          	.align 2
 1771  0000240c          	.proc _bzero
 1772  0000240c          	.global _bzero
 1773  0000240c          	_bzero:
 1774                      ;  Function 'bzero'; 0 bytes of locals, 1 regs to save.
 1775  0000240c  afbefffc	sw	-4(r29),r30; push fp
 1776  00002410  001df020	add	r30,r0,r29; fp = sp
 1777  00002414  afbffff8	sw	-8(r29),r31; push ret addr
 1778  00002418  2fbd0010	subui	r29,r29,#16; alloc local storage
 1779  0000241c  afa20000	sw	0(r29),r2
 1780  00002420  54000000	nop
 1781  00002424          	L105_LF2:
 1782  00002424  8fc10004	lw	r1,4(r30)
 1783  00002428  2022ffff	addi	r2,r1,#-1
 1784  0000242c  afc20004	sw	4(r30),r2
 1785  00002430  6c210000	sgti	r1,r1,#0
 1786  00002434  1420000c	bnez	r1,L107_LF2
 1787  00002438  54000000	nop; delay slot nop
 1788  0000243c  08000020	j	L106_LF2
 1789  00002440  54000000	nop; delay slot nop
 1790  00002444          	L107_LF2:
 1791  00002444  8fc10000	lw	r1,(r30)
 1792  00002448  20220001	addi	r2,r1,#1
 1793  0000244c  afc20000	sw	(r30),r2
 1794  00002450  20020000	addi	r2,r0,(#0x0)&0xff
 1795  00002454  a0220000	sb	(r1),r2
 1796  00002458  0bffffc8	j	L105_LF2
 1797  0000245c  54000000	nop; delay slot nop
 1798  00002460          	L106_LF2:
 1799  00002460          	L104_LF2:
 1800  00002460  8fa20000	lw	r2,0(r29)
 1801  00002464  8fdffff8	lw	r31,-8(r30)
 1802  00002468  001ee820	add	r29,r0,r30
 1803  0000246c  8fdefffc	lw	r30,-4(r30)
 1804  00002470  4be00000	jr	r31
 1805  00002474  54000000	nop
 1806  00002478          	.endproc _bzero
 1807  00002478          	.align 2
 1808  00002478          	.proc _min
 1809  00002478          	.global _min
 1810  00002478          	_min:
 1811                      ;  Function 'min'; 0 bytes of locals, 2 regs to save.
 1812  00002478  afbefffc	sw	-4(r29),r30; push fp
 1813  0000247c  001df020	add	r30,r0,r29; fp = sp
 1814  00002480  afbffff8	sw	-8(r29),r31; push ret addr
 1815  00002484  2fbd0010	subui	r29,r29,#16; alloc local storage
 1816  00002488  afa20000	sw	0(r29),r2
 1817  0000248c  afa30004	sw	4(r29),r3
 1818  00002490  8fc10000	lw	r1,(r30)
 1819  00002494  8fc20004	lw	r2,4(r30)
 1820  00002498  0022182c	sle	r3,r1,r2
 1821  0000249c  14600008	bnez	r3,L109_LF2
 1822  000024a0  54000000	nop; delay slot nop
 1823  000024a4  8fc10004	lw	r1,4(r30)
 1824  000024a8          	L109_LF2:
 1825  000024a8  08000004	j	L108_LF2
 1826  000024ac  54000000	nop; delay slot nop
 1827  000024b0          	L108_LF2:
 1828  000024b0  8fa20000	lw	r2,0(r29)
 1829  000024b4  8fa30004	lw	r3,4(r29)
 1830  000024b8  8fdffff8	lw	r31,-8(r30)
 1831  000024bc  001ee820	add	r29,r0,r30
 1832  000024c0  8fdefffc	lw	r30,-4(r30)
 1833  000024c4  4be00000	jr	r31
 1834  000024c8  54000000	nop
 1835  000024cc          	.endproc _min
 1836  000024cc          	.align 2
 1837  000024cc          	.proc _max
 1838  000024cc          	.global _max
 1839  000024cc          	_max:
 1840                      ;  Function 'max'; 0 bytes of locals, 2 regs to save.
 1841  000024cc  afbefffc	sw	-4(r29),r30; push fp
 1842  000024d0  001df020	add	r30,r0,r29; fp = sp
 1843  000024d4  afbffff8	sw	-8(r29),r31; push ret addr
 1844  000024d8  2fbd0010	subui	r29,r29,#16; alloc local storage
 1845  000024dc  afa20000	sw	0(r29),r2
 1846  000024e0  afa30004	sw	4(r29),r3
 1847  000024e4  8fc10000	lw	r1,(r30)
 1848  000024e8  8fc20004	lw	r2,4(r30)
 1849  000024ec  0022182d	sge	r3,r1,r2
 1850  000024f0  14600008	bnez	r3,L111_LF2
 1851  000024f4  54000000	nop; delay slot nop
 1852  000024f8  8fc10004	lw	r1,4(r30)
 1853  000024fc          	L111_LF2:
 1854  000024fc  08000004	j	L110_LF2
 1855  00002500  54000000	nop; delay slot nop
 1856  00002504          	L110_LF2:
 1857  00002504  8fa20000	lw	r2,0(r29)
 1858  00002508  8fa30004	lw	r3,4(r29)
 1859  0000250c  8fdffff8	lw	r31,-8(r30)
 1860  00002510  001ee820	add	r29,r0,r30
 1861  00002514  8fdefffc	lw	r30,-4(r30)
 1862  00002518  4be00000	jr	r31
 1863  0000251c  54000000	nop
 1864  00002520          	.endproc _max
 1865                      ;;; Ethan L. Miller, 1999.  Released to the public domain
 1866                      ;;;
 1867                      ;;; Most of the traps are called in files from libtraps.
 1870  00002520          	.align 2
 1871  00002520          	.proc _exit
 1872  00002520          	.global _exit
 1873  00002520          	_exit:
 1874  00002520  44000300	trap	#0x300
 1875  00002524  4be00000	jr	r31
 1876  00002528  54000000	nop
 1877  0000252c          	.endproc _exit
 1879                      ; for the benefit of gcc.
 1880  0000252c          	.proc ___main
 1881  0000252c          	.global ___main
 1882  0000252c          	___main:
 1883  0000252c  4be00000	jr	r31
 1884  00002530  54000000	nop
 1885  00002534          	.endproc ___main
 1886  00002534          	.text
 1887  00002534          	.global _etext
 1888  00002534          	_etext:
 1889  00002534          	.align 3
 1890  00002538          	.data
 1891  00003094          	.global _edata
 1892  00003094          	_edata:
